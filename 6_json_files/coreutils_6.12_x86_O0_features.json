{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    rax ; __gmon_start__"], ["call~rax"]], [1, 0, 2, 1, 0, 4, 1, 1, 0, 1, 0.0, ["sub     rsp, 8; _init", "mov     rax, cs:__gmon_start___ptr", "test    rax, rax", "jz      short loc_1532"], ["sub~rsp,0", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 3, 1, 7, 0.0, 1, 2], "succs": [[2], [0, 2], []], "fname": "init_proc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0.0, ["push    cs:qword_20CDE0", "jmp     cs:qword_20CDE8"], ["push~<TAG>", "jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 58, 2, 0.0, 2, 0], "succs": [[]], "fname": "sub_1540", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__uflow_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__uflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getenv_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__snprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 6, 1, 0.0, 1, 0], "succs": [[]], "fname": "__snprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:free_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 37, 1, 0.0, 1, 0], "succs": [[]], "fname": "free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:abort_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__errno_location_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 41, 1, 0.0, 1, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:_exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fpending_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iconv_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "iconv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:write_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "write", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:textdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fclose_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:bindtextdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:stpcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "stpcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dcgettext_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 27, 1, 0.0, 1, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_get_mb_cur_max_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 22, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strlen_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 36, 1, 0.0, 1, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__stack_chk_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 17, 1, 0.0, 1, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getopt_long_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbrtowc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 20, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__assert_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 14, 1, 0.0, 1, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fscanf_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fscanf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:ioctl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "ioctl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strnlen_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strnlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:close_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "memchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:read_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "read", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fputs_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 6, 1, 0.0, 1, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:calloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 17, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswalnum_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswalnum", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:malloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 19, 1, 0.0, 1, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:nl_langinfo_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:ungetc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "ungetc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:realloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 16, 1, 0.0, 1, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:setlocale_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__printf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iconv_close_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "iconv_close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswspace_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswspace", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memmove_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:error_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 16, 1, 0.0, 1, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:open_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fopen_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fopen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_atexit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getpagesize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getpagesize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fwrite_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strdup_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "strdup", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbsinit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 39, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswprint_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_b_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iconv_open_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "iconv_open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__sprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__sprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_finalize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[2, 0, 0, 1, 1, 6, 0, 1, 0, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5825; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, assertion; \"iter->cur.wc == 0\"", "sub     rsp, 8", "mov     edx, 0ABh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "sub~rsp,0", "mov~edx,0", "call~FOO"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 6, 0.0, 3, 1], "succs": [[]], "fname": "mbuiter_multi_next", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[2, 0, 0, 1, 1, 6, 0, 1, 0, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5806; \"mbiter_multi_next\"", "lea     rsi, aMbiterH; \"mbiter.h\"", "lea     rdi, assertion; \"iter->cur.wc == 0\"", "sub     rsp, 8", "mov     edx, 0A2h; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "sub~rsp,0", "mov~edx,0", "call~FOO"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 6, 0.0, 3, 1], "succs": [[]], "fname": "mbiter_multi_next", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[2, 0, 0, 1, 1, 6, 0, 1, 0, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5704; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, assertion; \"iter->cur.wc == 0\"", "sub     rsp, 8", "mov     edx, 0ABh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "sub~rsp,0", "mov~edx,0", "call~FOO"]]], "func_feature": [1, 0, 1, 0, 1, 0, 2, 6, 0.0, 3, 1], "succs": [[]], "fname": "mbuiter_multi_next_0", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 102, 0, 0, 2, 0, 1, 0, 0, 0.002696078431372549, ["mov     ebp, cs:input_desc", "jmp     loc_1EF2"], ["mov~ebp,<TAG>", "jmp~FOO"]], [1, 0, 102, 0, 1, 7, 0, 2, 17, 13, 0.013725490196078431, ["mov     r15, [rsp+188h+dest]", "mov     rdx, r14; count", "mov     edi, 1; fd", "mov     rsi, r15; buf", "call    full_write", "cmp     r14, rax", "jnz     loc_22B4"], ["mov~r15,[rsp+0]", "mov~rdx,r14", "mov~edi,0", "mov~rsi,r15", "call~FOO", "cmp~r14,rax", "jnz~FOO"]], [2, 0, 102, 2, 0, 4, 0, 1, 26, 11, 0.002696078431372549, ["add     r14d, 0FFFFFF80h", "add     r15, 3", "mov     [r15-1], r14b", "jmp     loc_1F7D"], ["add~r14d,0", "add~r15,0", "mov~[r15-1]+0],r14b", "jmp~FOO"]], [1, 0, 102, 0, 0, 2, 0, 1, 25, 12, 0.013725490196078431, ["cmp     r14b, 0FFh", "jz      loc_2190"], ["cmp~r14b,0", "jz~FOO"]], [0, 0, 2, 0, 1, 4, 2, 1, 10, -1, 0.007026143790849673, ["xor     edi, edi; fd", "call    _close", "test    eax, eax", "jns     loc_1E00"], ["xor~edi,edi", "call~FOO", "test~eax,eax", "jns~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 9, -1, 0.02091503267973856, ["cmp     [rsp+188h+have_read_stdin], 0", "jnz     loc_24A9"], ["cmp~[rsp+0],0", "jnz~FOO"]], [7, 0, 136, 1, 5, 33, 2, 5, 0, 17, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "xor     r12d, r12d", "push    rbp", "push    rbx", "mov     rbx, argv_0", "sub     rsp, 158h", "mov     [rsp+188h+argc], edi", "mov     [rsp+188h+argv], argv_0", "mov     rax, fs:28h", "mov     [rsp+188h+var_40], rax", "xor     eax, eax", "call    _getpagesize", "mov     ebp, eax", "mov     rax, [argv_0]", "lea     rsi, aUsageSOptionFi+1Dh; locale", "mov     edi, 6; category", "mov     cs:program_name, rax", "call    _setlocale", "lea     rsi, dirname; \"/usr/local/share/locale\"", "lea     rdi, domainname; \"coreutils\"", "call    _bindtextdomain", "lea     rdi, domainname; \"coreutils\"", "call    _textdomain", "lea     rdi, close_stdout", "call    atexit", "mov     [rsp+188h+show_nonprinting], 0", "mov     [rsp+188h+show_ends], 0", "mov     [rsp+188h+squeeze_blank], 0", "mov     [rsp+188h+number_nonblank], 0", "mov     [rsp+188h+number], 0"], ["push~r15", "push~r14", "push~r13", "push~r12", "xor~r12d,r12d", "push~rbp", "push~rbx", "mov~rbx,argv_0", "sub~rsp,0", "mov~[rsp+0],edi", "mov~[rsp+0],argv_0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~ebp,eax", "mov~rax,<TAG>", "lea~rsi,<TAG>", "mov~edi,0", "mov~<TAG>,rax", "call~FOO", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [0, 0, 102, 0, 0, 3, 0, 1, 16, 8, 0.08254357298474946, ["movzx   r14d, byte ptr [rbp+0]", "mov     rbp, rdx", "jmp     loc_1F32"], ["movzx~r14d,[yte ptr [rbp+0]", "mov~rbp,rdx", "jmp~FOO"]], [2, 0, 102, 0, 0, 3, 0, 1, 15, 9, 0.08434095860566448, ["cmp     [rsp+188h+squeeze_blank], 0", "mov     r13d, 2", "jnz     loc_2205"], ["cmp~[rsp+0],0", "mov~r13d,0", "jnz~FOO"]], [1, 0, 0, 0, 1, 4, 1, 1, 10, -1, 0.0, ["movzx   edi, [rsp+188h+ok]", "xor     edi, 1", "movzx   edi, dil; status", "call    _exit"], ["movzx~edi,[rsp+0]", "xor~edi,0", "movzx~edi,dil", "call~FOO"]], [2, 0, 1, 0, 3, 12, 2, 4, 11, -1, 0.0, ["lea     rsi, aClosingStandar; \"closing standard input\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     outsize, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rdx, rbx; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_1E00"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~outsize,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rbx", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 102, 0, 2, 13, 4, 3, 12, 16, 0.003594771241830065, ["mov     rbp, cs:infile", "lea     rsi, aSInputFileIsOu; \"%s: input file is output file\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     [rsp+188h+ok], 0", "jmp     contin"], ["mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbp", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 102, 0, 0, 2, 1, 1, 11, 9, 0.009477124183006535, ["test    ebp, ebp", "jz      loc_1CE3"], ["test~ebp,ebp", "jz~FOO"]], [1, 0, 102, 0, 0, 2, 0, 1, 23, 7, 0.08205337690631809, ["cmp     r14b, 0Ah", "jz      short loc_2060"], ["cmp~r14b,0", "jz~FOO"]], [1, 0, 102, 0, 0, 2, 0, 1, 22, 8, 0.09275599128540304, ["cmp     r14b, 9", "jnz     short loc_2010"], ["cmp~r14b,0", "jnz~FOO"]], [0, 0, 102, 0, 0, 2, 1, 1, 23, 8, 0.0071623093681917206, ["test    al, al", "jz      short loc_2010"], ["test~al,al", "jz~FOO"]], [2, 0, 102, 0, 1, 6, 0, 2, 15, 2, 0.028921568627450978, ["call    ___errno_location", "mov     ecx, [rax]", "cmp     ecx, 5Fh ; '_'", "setz    sil", "cmp     ecx, 26h ; '&'", "ja      short loc_223F"], ["call~FOO", "mov~ecx,<TAG>", "cmp~ecx,0", "setz~sil", "cmp~ecx,0", "ja~FOO"]], [1, 0, 102, 0, 1, 7, 2, 2, 14, 3, 0.06655773420479302, ["mov     rdx, [rsp+188h+var_128]", "xor     eax, eax", "mov     esi, 541Bh; request", "mov     edi, ebp; fd", "call    _ioctl", "test    eax, eax", "js      short loc_2212"], ["mov~rdx,[rsp+0]", "xor~eax,eax", "mov~esi,0", "mov~edi,ebp", "call~FOO", "test~eax,eax", "js~FOO"]], [3, 0, 102, 2, 0, 5, 0, 1, 24, 11, 0.0010620915032679738, ["add     r14d, 40h ; '@'", "mov     byte ptr [r15], 5Eh ; '^'", "add     r15, 2", "mov     [r15-1], r14b", "jmp     loc_1F7D"], ["add~r14d,0", "mov~<TAG>,0", "add~r15,0", "mov~[r15-1]+0],r14b", "jmp~FOO"]], [1, 0, 102, 0, 1, 6, 0, 2, 16, 19, 0.006862745098039216, ["mov     rsi, [rsp+188h+dest]; buf", "mov     rdx, r15; count", "mov     edi, 1; fd", "call    full_write", "cmp     r15, rax", "jz      loc_2347"], ["mov~rsi,[rsp+0]", "mov~rdx,r15", "mov~edi,0", "call~FOO", "cmp~r15,rax", "jz~FOO"]], [0, 0, 102, 1, 2, 10, 2, 3, 15, 19, 0.12276688453159042, ["call    ___errno_location", "mov     rcx, cs:infile", "mov     esi, [rax]; errnum", "lea     rdx, format+4; format", "xor     edi, edi; status", "mov     rbp, rax", "xor     eax, eax", "call    _error", "sub     r15, [rsp+188h+dest]", "jnz     loc_2418"], ["call~FOO", "mov~rcx,<TAG>", "mov~esi,<TAG>", "lea~rdx,<TAG>", "xor~edi,edi", "mov~rbp,rax", "xor~eax,eax", "call~FOO", "sub~r15,[rsp+0]", "jnz~FOO"]], [2, 0, 103, 0, 0, 14, 1, 1, 4, 13, 0.1570806100217865, ["movsxd  rax, ebp", "movsxd  rcx, cs:optind@@GLIBC_2_2_5", "mov     [rsp+188h+have_read_stdin], 0", "mov     [rsp+188h+var_118], rax", "movzx   eax, [rsp+188h+number]", "lea     rdx, asc_A83F; \"-\"", "or      al, [rsp+188h+show_ends]", "cmp     [rsp+188h+argc], ecx", "mov     [rsp+188h+ok], 1", "mov     [rsp+188h+var_138], rcx", "mov     [rsp+188h+var_101], al", "lea     rax, asc_A83F; \"-\"", "mov     cs:infile, rax", "jle     short loc_1C4D"], ["movsxd~rax,ebp", "movsxd~rcx,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],rax", "movzx~eax,[rsp+0]", "lea~rdx,<TAG>", "or~al,[rsp+0]", "cmp~[rsp+0],ecx", "mov~[rsp+0],0", "mov~[rsp+0],rcx", "mov~[rsp+0],al", "lea~rax,<TAG>", "mov~<TAG>,rax", "jle~FOO"]], [4, 1, 105, 0, 0, 11, 1, 1, 3, 14, 0.14869281045751634, ["mov     rbx, [rsp+188h+stat_buf.st_blksize]", "mov     rax, 1FFFFFFFFFFFFFFFh", "mov     [rsp+188h+check_redirection], 0", "lea     rdx, [rbx-1]", "cmp     rdx, rax", "mov     eax, 200h", "cmova   rbx, rax", "mov     eax, [rsp+188h+stat_buf.st_mode]", "and     eax, 0F000h", "cmp     eax, 8000h", "jnz     short loc_1BE3"], ["mov~rbx,[rsp+0]", "mov~rax,0", "mov~[rsp+0],0", "lea~rdx,[rbx-1]+0]", "cmp~rdx,rax", "mov~eax,<STR>", "cmova~rbx,rax", "mov~eax,[rsp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [1, 0, 104, 0, 0, 5, 0, 0, 4, 14, 0.0, ["mov     rax, [rsp+188h+stat_buf.st_dev]", "mov     [rsp+188h+check_redirection], 1", "mov     [rsp+188h+var_F8], rax", "mov     out_dev_0, [rsp+188h+stat_buf.st_ino]", "mov     [rsp+188h+out_ino], rax"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~out_dev_0,[rsp+0]", "mov~[rsp+0],rax"]], [1, 0, 136, 0, 1, 8, 1, 2, 1, 16, 0.16122004357298475, ["mov     rsi, [rsp+188h+argv]; argv", "mov     edi, [rsp+188h+argc]; argc", "lea     rcx, long_options_6418; longopts", "lea     rdx, shortopts; \"benstuvAET\"", "xor     r8d, r8d; longind", "call    _getopt_long", "cmp     eax, 0FFFFFFFFh", "jz      loc_1B53"], ["mov~rsi,[rsp+0]", "mov~edi,[rsp+0]", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "xor~r8d,r8d", "call~FOO", "cmp~eax,0", "jz~FOO"]], [1, 0, 136, 0, 0, 2, 0, 1, 6, 17, 0.011328976034858388, ["cmp     eax, 75h ; 'u'", "jz      short loc_1A0F"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 136, 0, 0, 2, 0, 1, 9, 17, 0.00724400871459695, ["mov     [rsp+188h+show_nonprinting], 1", "jmp     short loc_1A0F"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 136, 0, 0, 2, 0, 1, 4, 17, 0.024019607843137253, ["mov     [rsp+188h+number], 1", "jmp     loc_1A0F"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 136, 0, 0, 2, 0, 1, 7, 17, 0.03877995642701525, ["mov     [rsp+188h+show_ends], 1", "jmp     loc_1A0F"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 136, 0, 0, 2, 0, 1, 8, 17, 0.00724400871459695, ["mov     r12d, 1", "jmp     loc_1A0F"], ["mov~r12d,0", "jmp~FOO"]], [2, 0, 136, 0, 0, 3, 0, 1, 8, 17, 0.007135076252723312, ["mov     r12d, 1", "mov     [rsp+188h+show_nonprinting], 1", "jmp     loc_1A0F"], ["mov~r12d,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 136, 0, 0, 2, 0, 1, 5, 17, 0.012690631808278867, ["mov     [rsp+188h+squeeze_blank], 1", "jmp     loc_1A0F"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 102, 0, 0, 1, 0, 0, 5, 14, 0.0015795206971677559, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 136, 0, 0, 2, 0, 1, 2, 19, 0.026143790849673203, ["cmp     eax, 62h ; 'b'", "jz      loc_1B46"], ["cmp~eax,0", "jz~FOO"]], [2, 0, 102, 0, 0, 6, 1, 0, 16, 2, 0.0, ["mov     rdx, 4002480000h", "shr     rdx, cl", "mov     rcx, rdx", "not     rcx", "and     ecx, 1", "mov     [rsp+188h+var_13E], cl"], ["mov~rdx,0", "shr~rdx,cl", "mov~rcx,rdx", "not~rcx", "and~ecx,0", "mov~[rsp+0],cl"]], [2, 0, 102, 1, 0, 4, 0, 1, 24, 11, 0.0051742919389978215, ["mov     esi, 3F5Eh", "add     r15, 2", "mov     [r15-2], si", "jmp     loc_1F7D"], ["mov~esi,0", "add~r15,0", "mov~[r15-2]+0],si", "jmp~FOO"]], [1, 0, 102, 0, 0, 2, 0, 1, 23, 12, 0.04084967320261438, ["cmp     r14b, 7Fh", "jz      short loc_2030"], ["cmp~r14b,0", "jz~FOO"]], [0, 0, 136, 0, 0, 1, 0, 1, 3, 19, 0.024128540305010892, ["jle     short loc_1A70"], ["jle~FOO"]], [1, 0, 136, 0, 0, 2, 0, 1, 4, 18, 0.016249092229484383, ["cmp     eax, 73h ; 's'", "jz      loc_1B2F"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 102, 0, 0, 4, 0, 0, 6, 13, 0.20108932461873638, ["mov     rax, [rsp+188h+argv]", "mov     rcx, [rsp+188h+var_138]", "mov     rdx, [rax+rcx*8]", "mov     cs:infile, rdx"], ["mov~rax,[rsp+0]", "mov~rcx,[rsp+0]", "mov~rdx,<TAG>", "mov~<TAG>,rdx"]], [1, 0, 102, 1, 0, 4, 0, 1, 8, 14, 0.22325708061002178, ["add     [rsp+188h+var_138], 1", "mov     rax, [rsp+188h+var_138]", "cmp     [rsp+188h+argc], eax", "jg      loc_1C38"], ["add~[rsp+0],0", "mov~rax,[rsp+0]", "cmp~[rsp+0],eax", "jg~FOO"]], [1, 0, 102, 0, 0, 4, 2, 1, 16, 1, 0.026089324618736382, ["movzx   edx, [rsp+188h+var_13E]", "xor     edx, 1", "or      dl, sil", "jz      loc_251A"], ["movzx~edx,[rsp+0]", "xor~edx,0", "or~dl,sil", "jz~FOO"]], [0, 0, 136, 0, 0, 1, 0, 1, 5, 18, 0.008405954974582425, ["jle     short loc_1A90"], ["jle~FOO"]], [0, 0, 136, 0, 0, 1, 0, 1, 7, 18, 0.003594771241830065, ["jl      loc_1B1F"], ["jl~FOO"]], [1, 0, 102, 0, 0, 2, 0, 1, 17, 13, 0.010784313725490196, ["mov     [rsp+188h+var_13E], 0", "jmp     loc_21BF"], ["mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 102, 0, 2, 10, 2, 3, 17, 19, 0.0, ["lea     rsi, msgid; \"write error\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     esi, [rbp+0]; errnum", "mov     rdx, rax; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_2347"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~esi,[rbp+0]", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [3, 0, 102, 2, 0, 5, 0, 1, 25, 11, 0.00528322440087146, ["sub     r14d, 40h ; '@'", "mov     byte ptr [r15+2], 5Eh ; '^'", "add     r15, 4", "mov     [r15-1], r14b", "jmp     loc_1F7D"], ["sub~r14d,0", "mov~[yte ptr [r15+0],0", "add~r15,0", "mov~[r15-1]+0],r14b", "jmp~FOO"]], [1, 1, 102, 0, 0, 4, 0, 0, 24, 12, 0.027342047930283223, ["mov     ecx, 2D4Dh", "cmp     r14b, 9Fh", "mov     [r15], cx", "jbe     short loc_2048"], ["mov~ecx,<STR>", "cmp~r14b,0", "mov~<TAG>,cx", "jbe~FOO"]], [1, 0, 136, 0, 0, 2, 0, 1, 8, 18, 0.00130718954248366, ["cmp     eax, 76h ; 'v'", "jnz     loc_1B3C"], ["cmp~eax,0", "jnz~FOO"]], [2, 0, 102, 0, 0, 8, 1, 1, 5, 12, 0.3592047930283224, ["lea     rdi, asc_A83F; \"-\"", "mov     ecx, 2", "mov     rsi, rdx", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     loc_225A"], ["lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,rdx", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [0, 0, 102, 0, 0, 3, 0, 1, 22, 6, 0.1261437908496732, ["cmp     [rsp+188h+var_178], r15", "mov     r13d, [rsp+188h+c]", "ja      loc_1ECB"], ["cmp~[rsp+0],r15", "mov~r13d,[rsp+0]", "ja~FOO"]], [1, 0, 102, 0, 0, 2, 0, 1, 21, 7, 0.05846949891067538, ["cmp     r14b, 0Ah", "jz      loc_2060"], ["cmp~r14b,0", "jz~FOO"]], [0, 0, 102, 0, 1, 7, 3, 1, 6, 11, 0.180718954248366, ["xor     esi, esi; oflag", "xor     eax, eax", "mov     rdi, rdx; file", "call    _open", "test    eax, eax", "mov     cs:input_desc, eax", "jns     loc_1C7D"], ["xor~esi,esi", "xor~eax,eax", "mov~rdi,rdx", "call~FOO", "test~eax,eax", "mov~<TAG>,eax", "jns~FOO"]], [2, 0, 102, 0, 3, 12, 2, 4, 14, 20, 0.0, ["mov     rsi, r15; msgid", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     r14, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rdx, r14; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_1D6A"], ["mov~rsi,r15", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~r14,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,r14", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 102, 0, 1, 6, 0, 2, 13, 20, 0.006971677559912854, ["mov     rdx, rax; count", "mov     rsi, rbp; buf", "mov     edi, 1; fd", "call    full_write", "cmp     r14, rax", "jnz     loc_2395"], ["mov~rdx,rax", "mov~rsi,rbp", "mov~edi,0", "call~FOO", "cmp~r14,rax", "jnz~FOO"]], [1, 0, 102, 0, 1, 6, 0, 2, 17, 19, 0.006862745098039216, ["mov     rsi, [rsp+188h+dest]; buf", "mov     rdx, r15; count", "mov     edi, 1; fd", "call    full_write", "cmp     r15, rax", "jz      loc_2383"], ["mov~rsi,[rsp+0]", "mov~rdx,r15", "mov~edi,0", "call~FOO", "cmp~r15,rax", "jz~FOO"]], [0, 0, 102, 1, 0, 2, 0, 1, 16, 19, 0.022167755991285402, ["sub     r15, [rsp+188h+dest]", "jnz     loc_245D"], ["sub~r15,[rsp+0]", "jnz~FOO"]], [1, 0, 136, 0, 0, 2, 0, 1, 4, 20, 0.012726942628903412, ["cmp     eax, 41h ; 'A'", "jz      short loc_1AA8"], ["cmp~eax,0", "jz~FOO"]], [2, 0, 102, 0, 0, 2, 0, 0, 6, 11, 0.17015250544662308, ["mov     cs:input_desc, 0", "mov     [rsp+188h+have_read_stdin], 1"], ["mov~<TAG>,0", "mov~[rsp+0],0"]], [1, 0, 102, 0, 3, 19, 3, 4, 17, 0, 0.006971677559912854, ["mov     rdi, cs:infile; name", "mov     byte ptr [rsp+188h+var_180], dl", "mov     [rsp+188h+var_178], rax", "call    quote", "lea     rsi, aCannotDoIoctlO; \"cannot do ioctl on %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbp, rax", "call    _dcgettext", "mov     r9, [rsp+188h+var_178]", "mov     rdx, rax; format", "mov     rcx, rbp", "xor     edi, edi; status", "xor     eax, eax", "mov     esi, [r9]; errnum", "call    _error", "mov     cs:newlines2, r13d", "movzx   r10d, byte ptr [rsp+188h+var_180]", "jmp     loc_2351"], ["mov~rdi,<TAG>", "mov~[yte ptr [rsp+0],dl", "mov~[rsp+0],rax", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbp,rax", "call~FOO", "mov~r9,[rsp+0]", "mov~rdx,rax", "mov~rcx,rbp", "xor~edi,edi", "xor~eax,eax", "mov~esi,<TAG>", "call~FOO", "mov~<TAG>,r13d", "movzx~r10d,[yte ptr [rsp+0]", "jmp~FOO"]], [0, 0, 102, 0, 0, 3, 0, 0, 12, 8, 0.026960784313725488, ["mov     r14, [rsp+188h+dest]", "mov     [rsp+188h+var_148], rbp", "nop     word ptr [rax+rax+00h]"], ["mov~r14,[rsp+0]", "mov~[rsp+0],rbp", "nop~[ord ptr [rax+0]"]], [0, 0, 102, 0, 0, 2, 0, 0, 11, 6, 0.3202614379084967, ["cmp     [rsp+188h+var_178], r15", "jbe     loc_2070"], ["cmp~[rsp+0],r15", "jbe~FOO"]], [1, 0, 102, 7, 2, 40, 3, 2, 10, 7, 0.25354030501089325, ["mov     r14, [rsp+188h+insize]", "mov     r15, [rsp+188h+var_118]", "mov     rdi, r14", "add     rdi, r15; n", "call    xmalloc", "mov     r13, rax", "mov     [rsp+188h+inbuf], rax", "lea     inbuf_0, [outsize+r15+12h]", "lea     rdi, [rax+r14*4]; n", "call    xmalloc", "mov     rcx, rax", "mov     [rsp+188h+outbuf], rax", "xor     edx, edx", "add     rcx, rbp", "add     rbp, inbuf_0", "mov     r13d, cs:newlines2", "mov     outbuf_0, rcx", "div     r15", "mov     rax, rbp", "sub     rcx, rdx", "xor     edx, edx", "div     r15", "lea     rdi, [rcx+outsize]", "mov     [rsp+188h+dest], rcx", "mov     r15, rcx", "movzx   ecx, [rsp+188h+var_106]", "mov     [rsp+188h+var_178], rdi", "sub     rbp, rdx", "mov     [rsp+188h+var_13E], cl", "mov     rax, rbp", "mov     [rsp+188h+buf], rbp", "lea     rbp, [rbp+1]", "mov     [rsp+188h+var_180], rax", "movzx   eax, [rsp+188h+number_nonblank]", "mov     [rsp+188h+var_130], rbp", "xor     eax, 1", "mov     [rsp+188h+var_107], al", "lea     rax, [rsp+188h+var_DC]", "mov     [rsp+188h+var_128], rax", "nop"], ["mov~r14,[rsp+0]", "mov~r15,[rsp+0]", "mov~rdi,r14", "add~rdi,r15", "call~FOO", "mov~r13,rax", "mov~[rsp+0],rax", "lea~inbuf_0,[outsize+0]", "lea~rdi,<TAG>", "call~FOO", "mov~rcx,rax", "mov~[rsp+0],rax", "xor~edx,edx", "add~rcx,rbp", "add~rbp,inbuf_0", "mov~r13d,<TAG>", "mov~outbuf_0,rcx", "div~,r15", "mov~rax,rbp", "sub~rcx,rdx", "xor~edx,edx", "div~,r15", "lea~rdi,<TAG>", "mov~[rsp+0],rcx", "mov~r15,rcx", "movzx~ecx,[rsp+0]", "mov~[rsp+0],rdi", "sub~rbp,rdx", "mov~[rsp+0],cl", "mov~rax,rbp", "mov~[rsp+0],rbp", "lea~rbp,[rbp+0]", "mov~[rsp+0],rax", "movzx~eax,[rsp+0]", "mov~[rsp+0],rbp", "xor~eax,0", "mov~[rsp+0],al", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "nop"]], [0, 0, 102, 0, 0, 8, 3, 1, 9, 8, 0.31214596949891066, ["movzx   eax, [rsp+188h+show_nonprinting]", "mov     r15, [rsp+188h+var_118]", "lea     rbp, [r15-1]", "or      eax, r12d", "or      al, [rsp+188h+squeeze_blank]", "or      al, [rsp+188h+var_101]", "mov     [rsp+188h+var_106], al", "jnz     loc_1E14"], ["movzx~eax,[rsp+0]", "mov~r15,[rsp+0]", "lea~rbp,[r15-1]+0]", "or~eax,r12d", "or~al,[rsp+0]", "or~al,[rsp+0]", "mov~[rsp+0],al", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 6, -1, 0.004212055192447348, ["cmp     eax, 0FFFFFF7Dh", "jz      short loc_1AD2"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 136, 0, 0, 1, 0, 1, 5, 19, 0.012754175744371822, ["jg      short loc_1ABD"], ["jg~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 7, -1, 0.0017066085693536674, ["cmp     eax, 0FFFFFF7Eh", "jnz     loc_1B3C"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 0, 0, 1, 2, 1, 1, 8, -1, 0.0, ["xor     edi, edi; status", "call    usage"], ["xor~edi,edi", "call~FOO"]], [1, 0, 136, 0, 0, 2, 0, 1, 6, 19, 0.0019244734931009445, ["cmp     eax, 65h ; 'e'", "jz      short loc_1AAE"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 102, 0, 1, 7, 1, 2, 7, 10, 0.34389978213507627, ["mov     ebp, cs:input_desc", "mov     rdx, [rsp+188h+out_dev]; stat_buf", "mov     edi, 1; ver", "mov     esi, ebp; fildes", "call    ___fxstat", "test    eax, eax", "js      loc_22F0"], ["mov~ebp,<TAG>", "mov~rdx,[rsp+0]", "mov~edi,0", "mov~esi,ebp", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 136, 0, 0, 2, 0, 1, 7, 18, 0.004157588961510529, ["cmp     eax, 6Eh ; 'n'", "jnz     loc_1B3C"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 102, 0, 2, 9, 2, 3, 7, 15, 0.014651416122004357, ["call    ___errno_location", "mov     rcx, cs:infile", "mov     esi, [rax]; errnum", "lea     rdx, format+4; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     [rsp+188h+ok], 0", "jmp     loc_1DDD"], ["call~FOO", "mov~rcx,<TAG>", "mov~esi,<TAG>", "lea~rdx,<TAG>", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 102, 0, 0, 1, 0, 1, 11, 16, 0.005010893246187364, ["jmp     short loc_2274"], ["jmp~FOO"]], [1, 0, 136, 0, 0, 2, 0, 1, 7, 18, 0.0015432098765432098, ["cmp     eax, 54h ; 'T'", "jnz     short loc_1B3C"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 136, 0, 0, 2, 0, 1, 6, 18, 0.013335148874364561, ["cmp     eax, 45h ; 'E'", "jz      short loc_1AB3"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 136, 0, 0, 2, 0, 1, 3, 18, 0.006862745098039216, ["mov     [rsp+188h+number_nonblank], 1", "jmp     loc_1A9E"], ["mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 102, 0, 3, 12, 2, 4, 18, 19, 0.0, ["lea     rsi, msgid; \"write error\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rbp, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rdx, rbp; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_2383"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rbp,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rbp", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 136, 0, 0, 1, 0, 0, 5, 19, 0.004820261437908497, ["mov     r12d, 1"], ["mov~r12d,0"]], [0, 0, 102, 0, 1, 4, 1, 1, 10, 15, 0.01181917211328976, ["mov     edi, cs:input_desc; fd", "call    _close", "test    eax, eax", "jns     loc_1DDD"], ["mov~edi,<TAG>", "call~FOO", "test~eax,eax", "jns~FOO"]], [2, 0, 102, 0, 0, 8, 1, 1, 9, 15, 0.21786492374727667, ["mov     rsi, cs:infile", "lea     rdi, asc_A83F; \"-\"", "mov     ecx, 2", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     loc_229F"], ["mov~rsi,<TAG>", "lea~rdi,<TAG>", "mov~ecx,0", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [1, 0, 136, 0, 0, 1, 0, 0, 6, 18, 0.014787581699346405, ["mov     [rsp+188h+show_nonprinting], 1"], ["mov~[rsp+0],0"]], [1, 0, 102, 0, 0, 2, 0, 1, 13, 18, 0.00522875816993464, ["mov     [rsp+188h+var_106], 1", "jmp     loc_1DA2"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 102, 0, 0, 2, 1, 1, 12, 19, 0.02053376906318083, ["test    rax, rax", "jz      loc_236B"], ["test~rax,rax", "jz~FOO"]], [2, 0, 102, 0, 3, 11, 2, 3, 14, 7, 0.0, ["lea     rsi, msgid; \"write error\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbp, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rdx, rbp; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rbp,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rbp", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 102, 0, 1, 6, 0, 2, 13, 7, 0.025708061002178647, ["mov     rdx, outsize; count", "mov     rsi, r14; buf", "mov     edi, 1; fd", "call    full_write", "cmp     outsize, rax", "jz      short loc_20C1"], ["mov~rdx,outsize", "mov~rsi,r14", "mov~edi,0", "call~FOO", "cmp~outsize,rax", "jz~FOO"]], [1, 0, 102, 0, 0, 2, 0, 1, 17, 7, 0.23393246187363834, ["cmp     r14b, 0Ah", "jz      short loc_1EC0"], ["cmp~r14b,0", "jz~FOO"]], [2, 1, 102, 0, 0, 9, 0, 1, 8, 9, 0.32832244008714595, ["mov     rcx, [rsp+188h+stat_buf.st_blksize]", "mov     rax, 1FFFFFFFFFFFFFFFh", "lea     rdx, [rcx-1]", "cmp     rdx, rax", "mov     eax, 200h", "cmovbe  rax, rcx", "cmp     [rsp+188h+check_redirection], 0", "mov     [rsp+188h+insize], rax", "jz      short loc_1CE3"], ["mov~rcx,[rsp+0]", "mov~rax,0", "lea~rdx,[rcx-1]+0]", "cmp~rdx,rax", "mov~eax,<STR>", "cmovbe~rax,rcx", "cmp~[rsp+0],0", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 102, 2, 0, 5, 0, 0, 14, 6, 0.02287581699346405, ["add     r14, outsize", "mov     r8, r15", "sub     r8, r14", "cmp     outsize, r8", "jbe     short loc_2080"], ["add~r14,outsize", "mov~r8,r15", "sub~r8,r14", "cmp~outsize,r8", "jbe~FOO"]], [0, 0, 102, 0, 0, 2, 0, 0, 12, 5, 0.41661220043572983, ["cmp     rbp, [rsp+188h+var_180]", "jbe     loc_2100"], ["cmp~rbp,[rsp+0]", "jbe~FOO"]], [0, 0, 102, 0, 0, 3, 0, 1, 9, 9, 0.021241830065359478, ["mov     insize_0, [rsp+188h+var_F8]", "cmp     [rsp+188h+stat_buf.st_dev], rax", "jz      loc_23C2"], ["mov~insize_0,[rsp+0]", "cmp~[rsp+0],rax", "jz~FOO"]], [2, 0, 102, 0, 3, 14, 2, 4, 18, 12, 0.002696078431372549, ["lea     rsi, msgid; \"write error\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbp, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rdx, rbp; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "mov     ebp, cs:input_desc", "mov     r15, [rsp+188h+dest]", "jmp     loc_1EF2"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rbp,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rbp", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~ebp,<TAG>", "mov~r15,[rsp+0]", "jmp~FOO"]], [2, 0, 102, 0, 0, 4, 0, 1, 13, 4, 0.22930283224400871, ["cmp     [rsp+188h+var_13E], 0", "mov     [rsp+188h+var_DC], 0", "mov     ebp, cs:input_desc", "jnz     loc_21A8"], ["cmp~[rsp+0],0", "mov~[rsp+0],0", "mov~ebp,<TAG>", "jnz~FOO"]], [0, 0, 102, 0, 1, 11, 0, 2, 15, 5, 0.021296296296296296, ["mov     r15, [rsp+188h+dest]", "mov     rdx, r8; n", "mov     rsi, r14; src", "mov     rbp, [rsp+188h+var_148]", "mov     [rsp+188h+var_148], r8", "mov     rdi, r15; dest", "call    _memmove", "cmp     rbp, [rsp+188h+var_180]", "mov     r8, [rsp+188h+var_148]", "lea     r15, [r15+r8]", "ja      loc_1ED6"], ["mov~r15,[rsp+0]", "mov~rdx,r8", "mov~rsi,r14", "mov~rbp,[rsp+0]", "mov~[rsp+0],r8", "mov~rdi,r15", "call~FOO", "cmp~rbp,[rsp+0]", "mov~r8,[rsp+0]", "lea~r15,<TAG>", "ja~FOO"]], [1, 0, 102, 0, 1, 6, 0, 2, 14, 11, 0.19983660130718953, ["mov     rdx, [rsp+188h+insize]; count", "mov     rsi, [rsp+188h+buf]; buf", "mov     edi, ebp; fd", "call    safe_read", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      loc_231B"], ["mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~edi,ebp", "call~FOO", "cmp~rax,0", "jz~FOO"]], [0, 0, 102, 0, 0, 3, 1, 1, 15, 12, 0.045588235294117645, ["mov     edi, [rsp+188h+var_DC]", "test    edi, edi", "jz      loc_1EF2"], ["mov~edi,[rsp+0]", "test~edi,edi", "jz~FOO"]], [0, 0, 102, 1, 0, 3, 0, 1, 16, 12, 0.020479302832244008, ["mov     r14, r15", "sub     r14, [rsp+188h+dest]", "jz      loc_1EF2"], ["mov~r14,r15", "sub~r14,[rsp+0]", "jz~FOO"]], [0, 0, 102, 0, 0, 3, 0, 1, 10, 9, 0.015359477124183006, ["mov     rax, [rsp+188h+out_ino]", "cmp     [rsp+188h+stat_buf.st_ino], rax", "jnz     loc_1CE3"], ["mov~rax,[rsp+0]", "cmp~[rsp+0],rax", "jnz~FOO"]], [1, 0, 102, 1, 0, 4, 1, 1, 13, 11, 0.20577342047930283, ["add     r13d, 1", "lea     rdx, [rbp+1]", "test    r13d, r13d", "jle     short loc_2160"], ["add~r13d,0", "lea~rdx,[rbp+0]", "test~r13d,r13d", "jle~FOO"]], [0, 0, 102, 0, 0, 2, 1, 1, 15, 10, 0.06873638344226579, ["test    rax, rax", "jz      loc_2378"], ["test~rax,rax", "jz~FOO"]], [1, 0, 102, 0, 0, 2, 0, 1, 14, 10, 0.10639978213507625, ["cmp     r13d, 1", "jz      short loc_2127"], ["cmp~r13d,0", "jz~FOO"]], [2, 0, 106, 0, 3, 12, 2, 4, 3, 15, 0.0, ["lea     rsi, aStandardOutput; \"standard output\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     argv_0, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rdx, rbx; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_1B7E"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~argv_0,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rbx", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 107, 0, 1, 9, 1, 2, 2, 15, 0.13986928104575164, ["mov     [rsp+188h+c], eax", "lea     c_0, [rsp+188h+stat_buf]", "mov     esi, 1; fildes", "mov     edi, 1; ver", "mov     rdx, rax; stat_buf", "mov     [rsp+188h+out_dev], rax", "call    ___fxstat", "test    eax, eax", "js      loc_24E9"], ["mov~[rsp+0],eax", "lea~c_0,[rsp+0]", "mov~esi,0", "mov~edi,0", "mov~rdx,rax", "mov~[rsp+0],rax", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 102, 0, 2, 9, 2, 3, 8, 16, 0.00724400871459695, ["call    ___errno_location", "mov     rcx, cs:infile", "mov     esi, [rax]; errnum", "lea     rdx, format+4; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     [rsp+188h+ok], 0", "jmp     contin"], ["call~FOO", "mov~rcx,<TAG>", "mov~esi,<TAG>", "lea~rdx,<TAG>", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 0, 1, 3, 15, 2, 3, 7, -1, 0.0, ["lea     rsi, name_utf8; \"Torbj\"", "lea     rdi, name_ascii; \"Torbjorn Granlund\"", "call    proper_name_utf8", "sub     rsp, 8", "mov     rdi, cs:__bss_start; stream", "lea     r9, aRichardMStallm; \"Richard M. Stallman\"", "push    0", "lea     rcx, version; \"6.12\"", "lea     rdx, package; \"GNU \"", "lea     rsi, command_name; \"cat\"", "mov     r8, rax", "xor     eax, eax", "call    version_etc", "xor     edi, edi; status", "call    _exit"], ["lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "sub~rsp,0", "mov~rdi,<TAG>", "lea~r9,<TAG>", "push~0", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~r8,rax", "xor~eax,eax", "call~FOO", "xor~edi,edi", "call~FOO"]], [1, 0, 102, 1, 0, 6, 0, 0, 16, 9, 0.038235294117647055, ["mov     rsi, [rsp+188h+buf]", "mov     rbp, [rsp+188h+var_130]", "add     rax, rsi", "mov     [rsp+188h+var_180], rax", "mov     byte ptr [rax], 0Ah", "mov     rax, rsi"], ["mov~rsi,[rsp+0]", "mov~rbp,[rsp+0]", "add~rax,rsi", "mov~[rsp+0],rax", "mov~<TAG>,0", "mov~rax,rsi"]], [0, 0, 102, 0, 0, 1, 0, 0, 16, 8, 0.14730392156862746, ["movzx   r14d, byte ptr [rax]"], ["movzx~r14d,<TAG>"]], [1, 0, 102, 0, 0, 5, 0, 1, 15, 9, 0.10498366013071896, ["mov     byte ptr [r15], 0Ah", "mov     r15, rax", "mov     rax, rbp", "mov     rbp, rdx", "jmp     loc_1F2E"], ["mov~<TAG>,0", "mov~r15,rax", "mov~rax,rbp", "mov~rbp,rdx", "jmp~FOO"]], [1, 0, 102, 0, 0, 2, 0, 1, 15, 11, 0.014106753812636165, ["cmp     [rsp+188h+var_107], 0", "jz      short loc_2160"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 102, 0, 0, 2, 1, 1, 18, 10, 0.16437908496732026, ["test    r13d, r13d", "js      short loc_1F5B"], ["test~r13d,r13d", "js~FOO"]], [1, 0, 0, 0, 1, 2, 0, 1, 8, -1, 0.0, ["mov     edi, 1; status", "call    usage"], ["mov~edi,0", "call~FOO"]], [1, 0, 102, 0, 0, 2, 0, 1, 19, 10, 0.006862745098039216, ["cmp     [rsp+188h+number], 0", "jz      short loc_1F5B"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 102, 0, 0, 2, 0, 1, 16, 11, 0.006862745098039216, ["cmp     [rsp+188h+number], 0", "jz      short loc_2160"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 102, 0, 1, 7, 0, 2, 11, 19, 0.05991285403050109, ["mov     edi, cs:input_desc; fd", "mov     rdx, insize_0; count", "mov     rsi, rbp; buf", "call    safe_read", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     r14, rax", "jnz     short loc_1D48"], ["mov~edi,<TAG>", "mov~rdx,insize_0", "mov~rsi,rbp", "call~FOO", "cmp~rax,0", "mov~r14,rax", "jnz~FOO"]], [0, 0, 102, 0, 2, 5, 0, 2, 20, 10, 0.0, ["call    next_line_num", "mov     rsi, cs:line_num_print; src", "mov     rdi, r15; dest", "call    _stpcpy", "mov     r15, rax"], ["call~FOO", "mov~rsi,<TAG>", "mov~rdi,r15", "call~FOO", "mov~r15,rax"]], [0, 0, 102, 0, 2, 8, 0, 2, 17, 11, 0.0, ["mov     [rsp+188h+var_148], rdx", "call    next_line_num", "mov     rsi, cs:line_num_print; src", "mov     rdi, r15; dest", "call    _stpcpy", "mov     rdx, [rsp+188h+var_148]", "mov     r15, rax", "nop     dword ptr [rax+00000000h]"], ["mov~[rsp+0],rdx", "call~FOO", "mov~rsi,<TAG>", "mov~rdi,r15", "call~FOO", "mov~rdx,[rsp+0]", "mov~r15,rax", "nop~[word ptr [rax+0]"]], [1, 0, 102, 0, 0, 2, 0, 1, 19, 9, 0.16013071895424835, ["cmp     [rsp+188h+show_nonprinting], 0", "jz      short loc_1FBC"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 102, 0, 1, 4, 1, 2, 17, 17, 0.15299564270152505, ["mov     rdi, [rsp+188h+outbuf]; ptr", "and     [rsp+188h+ok], r10b", "call    _free", "jmp     loc_1DB1"], ["mov~rdi,[rsp+0]", "and~[rsp+0],r10b", "call~FOO", "jmp~FOO"]], [0, 0, 102, 0, 0, 3, 0, 1, 17, 18, 0.017919389978213508, ["mov     cs:newlines2, r13d", "movzx   r10d, [rsp+188h+var_106]", "jmp     short loc_2351"], ["mov~<TAG>,r13d", "movzx~r10d,[rsp+0]", "jmp~FOO"]], [0, 0, 102, 0, 0, 2, 1, 0, 16, 18, 0.11851851851851851, ["mov     cs:newlines2, r13d", "xor     r10d, r10d"], ["mov~<TAG>,r13d", "xor~r10d,r10d"]], [1, 0, 102, 0, 0, 3, 1, 1, 20, 10, 0.09673202614379085, ["mov     eax, r12d", "xor     eax, 1", "jmp     short loc_1F86"], ["mov~eax,r12d", "xor~eax,0", "jmp~FOO"]], [1, 0, 102, 0, 0, 3, 0, 1, 14, 10, 0.10781590413943355, ["cmp     [rsp+188h+show_ends], 0", "lea     rax, [r15+1]", "jz      short loc_2179"], ["cmp~[rsp+0],0", "lea~rax,[r15+0]", "jz~FOO"]], [1, 0, 102, 0, 0, 2, 0, 1, 22, 12, 0.06040305010893246, ["cmp     r14b, 7Eh ; '~'", "ja      short loc_1FD8"], ["cmp~r14b,0", "ja~FOO"]], [1, 0, 102, 0, 0, 2, 0, 1, 21, 9, 0.16149237472766884, ["cmp     r14b, 1Fh", "ja      short loc_1F70"], ["cmp~r14b,0", "ja~FOO"]], [1, 0, 102, 0, 0, 4, 0, 0, 15, 10, 0.0, ["lea     rsi, [r15+2]", "mov     byte ptr [r15], 24h ; '$'", "mov     r15, rax", "mov     rax, rsi"], ["lea~rsi,[r15+0]", "mov~<TAG>,0", "mov~r15,rax", "mov~rax,rsi"]], [1, 0, 102, 1, 0, 2, 0, 0, 23, 11, 0.011220043572984749, ["mov     [r15], r14b", "add     r15, 1"], ["mov~<TAG>,r14b", "add~r15,0"]], [1, 0, 102, 1, 0, 2, 0, 0, 24, 10, 0.06067538126361655, ["add     rbp, 1", "movzx   r14d, byte ptr [rbp-1]"], ["add~rbp,0", "movzx~r14d,[yte ptr [rbp-1]+0]"]], [2, 0, 102, 1, 0, 3, 0, 1, 24, 11, 0.0009531590413943355, ["mov     byte ptr [r15], 9", "add     r15, 1", "jmp     short loc_1F7D"], ["mov~<TAG>,0", "add~r15,0", "jmp~FOO"]], [2, 0, 102, 1, 0, 4, 0, 1, 26, 11, 0.002696078431372549, ["mov     edx, 3F5Eh", "add     r15, 4", "mov     [r15-2], dx", "jmp     loc_1F7D"], ["mov~edx,0", "add~r15,0", "mov~[r15-2]+0],dx", "jmp~FOO"]], [0, 0, 102, 3, 1, 14, 1, 2, 10, 20, 0.050272331154684095, ["mov     rax, [rsp+188h+insize]", "cmp     outsize, rax", "mov     r13, rax", "cmovnb  r13, outsize", "lea     rdi, [insize_0+rbp+0]; n", "call    xmalloc", "add     rbp, rax", "mov     [rsp+188h+inbuf], rax", "xor     edx, edx", "mov     inbuf_0, rbp", "div     r15", "lea     r15, msgid; \"write error\"", "sub     rbp, rdx", "jmp     short loc_1D6A"], ["mov~rax,[rsp+0]", "cmp~outsize,rax", "mov~r13,rax", "cmovnb~r13,outsize", "lea~rdi,[insize_0+0]", "call~FOO", "add~rbp,rax", "mov~[rsp+0],rax", "xor~edx,edx", "mov~inbuf_0,rbp", "div~,r15", "lea~r15,<TAG>", "sub~rbp,rdx", "jmp~FOO"]], [0, 0, 102, 0, 2, 7, 2, 2, 12, 18, 0.03104575163398693, ["call    ___errno_location", "mov     rcx, cs:infile", "mov     esi, [rax]; errnum", "lea     rdx, format+4; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["call~FOO", "mov~rcx,<TAG>", "mov~esi,<TAG>", "lea~rdx,<TAG>", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [0, 0, 102, 0, 0, 2, 1, 1, 21, 8, 0.010212418300653595, ["test    r12b, r12b", "jz      short loc_1FC2"], ["test~r12b,r12b", "jz~FOO"]], [1, 0, 102, 0, 0, 2, 0, 1, 20, 8, 0.07167755991285403, ["cmp     r14b, 9", "jz      short loc_1FA0"], ["cmp~r14b,0", "jz~FOO"]], [0, 0, 102, 0, 0, 2, 1, 0, 13, 17, 0.04035947712418301, ["movzx   ecx, [rsp+188h+var_106]", "and     [rsp+188h+ok], cl"], ["movzx~ecx,[rsp+0]", "and~[rsp+0],cl"]], [2, 0, 102, 1, 0, 3, 0, 0, 22, 10, 0.003458605664488017, ["mov     eax, 495Eh", "add     r15, 2", "mov     [r15-2], ax"], ["mov~eax,0", "add~r15,0", "mov~[r15-2]+0],ax"]], [0, 0, 102, 0, 1, 2, 0, 1, 14, 16, 0.1974400871459695, ["mov     rdi, [rsp+188h+inbuf]; ptr", "call    _free"], ["mov~rdi,[rsp+0]", "call~FOO"]], [1, 0, 102, 1, 0, 2, 0, 0, 23, 9, 0.011111111111111112, ["add     rbp, 1", "movzx   r14d, byte ptr [rbp-1]"], ["add~rbp,0", "movzx~r14d,[yte ptr [rbp-1]+0]"]], [1, 0, 102, 1, 0, 3, 0, 1, 22, 10, 0.003567538126361656, ["mov     [r15], r14b", "add     r15, 1", "jmp     short loc_1FB3"], ["mov~<TAG>,r14b", "add~r15,0", "jmp~FOO"]]], "func_feature": [69, 72, 171, 13, 137, 208, 0, 675, 0.06145, 27, 34], "succs": [[93], [0, 90], [125], [2, 127], [9, 10], [9, 4], [24], [85], [107, 7], [], [9], [79], [11, 63], [18, 50], [13, 15], [13, 126], [41, 34], [16, 94], [125], [45, 118], [19, 118], [32, 49], [21, 23], [21], [33, 101], [24, 43], [24], [24], [24], [24], [24], [24], [39], [75, 37], [41], [125], [35, 47], [57, 38], [42, 31], [49], [5, 39], [59, 44], [25, 68], [48, 30], [94], [118], [125], [3, 46], [26, 109], [58, 52], [88, 60], [136, 50], [69, 71], [112], [112, 53], [76, 117], [117, 55], [65, 77], [69], [116], [84], [88, 60], [61], [128, 62], [66, 103], [64, 74], [67, 109], [], [80, 70], [102, 86], [27, 109], [40], [71], [29, 109], [73, 28], [27], [117], [80], [72, 40], [40, 78], [28], [132], [81, 54], [87], [83, 87], [108, 61], [89, 63], [84, 92], [97, 91], [96, 63], [93], [17, 93], [97, 91], [98, 20], [93, 95], [1, 93], [12, 63], [120, 99], [104, 56], [8, 107], [22], [100, 22], [79], [], [105], [85], [105], [120, 111], [115, 110], [], [113, 115], [120, 114], [129, 82], [115], [120], [131, 119], [134], [116], [116], [122], [106, 123], [36, 124], [121, 14], [106], [125], [122], [125], [125], [112], [132], [51, 133], [130, 51], [134], [135], [79], [131], [135]], "fname": "main", "n_num": 137}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[1, 0, 0, 0, 1, 12, 2, 1, 0, 0, 0.0, ["xor     ebp, ebp", "mov     r9, rdx; rtld_fini", "pop     rsi; argc", "mov     rdx, rsp; ubp_av", "and     rsp, 0FFFFFFFFFFFFFFF0h", "push    rax", "push    rsp; stack_end", "lea     r8, __libc_csu_fini; fini", "lea     rcx, __libc_csu_init; init", "lea     rdi, main; main", "call    cs:__libc_start_main_ptr", "hlt"], ["xor~ebp,ebp", "mov~r9,rdx", "pop~rsi", "mov~rdx,rsp", "and~rsp,0", "push~rax", "push~rsp", "lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "call~<TAG>", "hlt"]]], "func_feature": [1, 2, 1, 0, 1, 0, 0, 12, 0.0, 4, 0], "succs": [[]], "fname": "_start", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_deregisterTMCloneTable_ptr", "test    rax, rax", "jz      short loc_25D0"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 6, 0, 1, 0, 1, 0.0, ["lea     rdi, __bss_start", "push    rbp", "lea     rax, __bss_start", "cmp     rax, rdi", "mov     rbp, rsp", "jz      short loc_25D0"], ["lea~rdi,<TAG>", "push~rbp", "lea~rax,<TAG>", "cmp~rax,rdi", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, -1, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 13, 0.04167, 2, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "deregister_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [3, 0, 3, 2, 0, 11, 0, 1, 0, 0, 0.0, ["lea     rdi, __bss_start", "lea     rsi, __bss_start", "push    rbp", "sub     rsi, rdi", "mov     rbp, rsp", "sar     rsi, 3", "mov     rax, rsi", "shr     rax, 3Fh", "add     rsi, rax", "sar     rsi, 1", "jz      short loc_2620"], ["lea~rdi,<TAG>", "lea~rsi,<TAG>", "push~rbp", "sub~rsi,rdi", "mov~rbp,rsp", "sar~rsi,0", "mov~rax,rsi", "shr~rax,0", "add~rsi,rax", "sar~rsi,0", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_registerTMCloneTable_ptr", "test    rax, rax", "jz      short loc_2620"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, 0, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 18, 0.04167, 2, 2], "succs": [[], [0, 2], [0, 3], []], "fname": "register_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[1, 0, 0, 0, 1, 4, 0, 1, 0, 0, 0.0, ["call    deregister_tm_clones", "mov     cs:completed_7698, 1", "pop     rbp", "retn"], ["call~FOO", "mov~<TAG>,0", "pop~rbp", "retn"]], [1, 0, 2, 0, 0, 4, 0, 1, 1, -1, 0.16666666666666666, ["cmp     cs:__cxa_finalize_ptr, 0", "push    rbp", "mov     rbp, rsp", "jz      short loc_2653"], ["cmp~<TAG>,0", "push~rbp", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     rdi, cs:__dso_handle", "call    __cxa_finalize"], ["mov~rdi,<TAG>", "call~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     cs:completed_7698, 0", "jnz     short locret_2668"], ["cmp~<TAG>,0", "jnz~FOO"]]], "func_feature": [2, 0, 4, 0, 5, 5, 0, 13, 0.03333, 3, 0], "succs": [[], [0, 2], [0], [], [1, 3]], "fname": "__do_global_dtors_aux", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "pop     rbp", "jmp     register_tm_clones"], ["push~rbp", "mov~rbp,rsp", "pop~rbp", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "frame_dummy", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 2, 0, 0, 3, 0, 0, 5, -1, 0.16666666666666666, ["mov     rax, cs:line_num_print", "cmp     rax, rdx", "jbe     short locret_26E2"], ["mov~rax,<TAG>", "cmp~rax,rdx", "jbe~FOO"]], [1, 0, 1, 1, 0, 2, 0, 0, 6, -1, 0.0, ["sub     rax, 1", "mov     cs:line_num_print, rax"], ["sub~rax,0", "mov~<TAG>,rax"]], [1, 0, 9, 0, 0, 3, 0, 1, 1, 3, 0.125, ["movzx   edx, byte ptr [endp]", "cmp     dl, 38h ; '8'", "jg      short loc_2690"], ["movzx~edx,<TAG>", "cmp~dl,0", "jg~FOO"]], [0, 0, 9, 0, 0, 3, 0, 1, 0, 4, 0.0, ["mov     rcx, cs:line_num_start", "lea     rax, line_buf+11h; \"0\\t\"", "jmp     short loc_269D"], ["mov~rcx,<TAG>", "lea~rax,<TAG>", "jmp~FOO"]], [2, 0, 9, 1, 0, 4, 0, 1, 2, 2, 0.16666666666666666, ["sub     endp, 1", "mov     byte ptr [endp+1], 30h ; '0'", "cmp     rcx, endp", "ja      short loc_26B0"], ["sub~endp,0", "mov~[yte ptr [endp+0],0", "cmp~rcx,endp", "ja~FOO"]], [1, 0, 3, 0, 0, 3, 0, 0, 4, -1, 0.08333333333333333, ["lea     rdx, [rcx-1]", "mov     byte ptr [rcx-1], 31h ; '1'", "mov     cs:line_num_start, rdx"], ["lea~rdx,[rcx-1]+0]", "mov~[yte ptr [rcx-1]+0],0", "mov~<TAG>,rdx"]], [0, 0, 5, 0, 0, 3, 0, 0, 3, 1, 0.20833333333333331, ["lea     endp, line_buf; \"                 0\\t\"", "cmp     rcx, rax", "jbe     short loc_26E8"], ["lea~endp,<TAG>", "cmp~rcx,rax", "jbe~FOO"]], [1, 0, 0, 1, 0, 3, 0, 0, 2, -1, 0.0, ["add     edx, 1", "mov     [endp], dl", "retn"], ["add~edx,0", "mov~<TAG>,dl", "retn"]], [1, 0, 3, 0, 0, 3, 0, 1, 4, 0, 0.08333333333333333, ["mov     byte ptr cs:line_buf, 3Eh ; '>'; \"                 0\\t\"", "mov     rdx, rcx", "jmp     short loc_26CB"], ["mov~<TAG>,0", "mov~rdx,rcx", "jmp~FOO"]]], "func_feature": [0, 0, 4, 0, 10, 12, 2, 28, 0.08333, 4, 3], "succs": [[], [0, 2], [0], [8, 5], [3], [3, 7], [1], [9, 6], [], [1]], "fname": "next_line_num", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 1, 2, 0, 1, 0, 0, 0.0, ["mov     edi, ebx; status", "call    _exit"], ["mov~edi,ebx", "call~FOO"]], [10, 0, 1, 0, 16, 69, 11, 17, 1, 0, 0.08333333333333333, ["lea     rsi, aUsageSOptionFi; \"Usage: %s [OPTION] [FILE]...\\n\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, rbp", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     rbp, cs:__bss_start", "lea     rsi, aConcatenateFil; \"Concatenate FILE(s), or standard input,\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:__bss_start", "lea     rsi, aTEquivalentToV; \"  -t                       equivalent t\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:__bss_start", "lea     rsi, aHelpDisplayThi; \"      --help     display this help and \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:__bss_start", "lea     rsi, aVersionOutputV; \"      --version  output version informa\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:__bss_start", "lea     rsi, aWithNoFileOrWh; \"\\nWith no FILE, or when FILE is -, read\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:program_name", "lea     rsi, aExamplesSFGOut; \"\\nExamples:\\n  %s f - g  Output f's con\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rbp", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "lea     rsi, aReportBugsToS; \"\\nReport bugs to <%s>.\\n\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, aBugCoreutilsGn; \"bug-coreutils@gnu.org\"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_273F"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rdx,rbp", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rbp", "mov~rdx,rbp", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 1, 0, 2, 9, 2, 2, 1, -1, 0.08333333333333333, ["lea     rsi, aTrySHelpForMor; \"Try `%s --help' for more information.\\n\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     rcx, rbp", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rdi,<TAG>", "mov~rdx,rax", "mov~rcx,rbp", "mov~esi,0", "xor~eax,eax", "call~FOO"]], [2, 0, 3, 1, 0, 8, 1, 1, 0, 1, 0.0, ["push    rbp", "push    rbx", "mov     edx, 5; category", "mov     ebx, edi", "sub     rsp, 8", "test    edi, edi", "mov     rbp, cs:program_name", "jz      short loc_2746"], ["push~rbp", "push~rbx", "mov~edx,0", "mov~ebx,edi", "sub~rsp,0", "test~edi,edi", "mov~rbp,<TAG>", "jz~FOO"]]], "func_feature": [19, 14, 21, 0, 4, 4, 2, 88, 0.04167, 13, 1], "succs": [[], [0], [0], [1, 2]], "fname": "usage", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[1, 0, 5, 0, 1, 6, 0, 2, 0, 0, 0.21428571428571427, ["mov     rdx, count; count", "mov     rsi, ptr; buf", "mov     edi, r13d; fd", "call    safe_write", "cmp     n_rw, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_28A0"], ["mov~rdx,count", "mov~rsi,ptr", "mov~edi,r13d", "call~FOO", "cmp~n_rw,0", "jnz~FOO"]], [0, 0, 5, 0, 0, 5, 1, 1, 1, -1, 0.09523809523809523, ["mov     r13d, edi", "mov     rbp, ptr", "mov     rbx, count", "xor     r12d, r12d", "jmp     short loc_28B0"], ["mov~r13d,edi", "mov~rbp,ptr", "mov~rbx,count", "xor~r12d,r12d", "jmp~FOO"]], [0, 0, 5, 3, 0, 4, 0, 1, 4, -1, 0.047619047619047616, ["add     total, n_rw", "add     ptr, n_rw", "sub     rbx, n_rw", "jz      short loc_28C4"], ["add~total,n_rw", "add~ptr,n_rw", "sub~rbx,n_rw", "jz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 3, -1, 0.16666666666666666, ["test    n_rw, n_rw", "jz      short loc_28D8"], ["test~n_rw,n_rw", "jz~FOO"]], [1, 0, 7, 1, 0, 7, 1, 1, 0, 1, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "test    count, count", "jz      short loc_28F1"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "test~count,count", "jz~FOO"]], [2, 0, 0, 1, 1, 9, 0, 1, 4, -1, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 1Ch", "add     rsp, 8", "mov     rax, total", "pop     count", "pop     ptr", "pop     total", "pop     fd", "retn"], ["call~FOO", "mov~<TAG>,0", "add~rsp,0", "mov~rax,total", "pop~count", "pop~ptr", "pop~total", "pop~fd", "retn"]], [1, 0, 0, 1, 0, 7, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "mov     rax, r12", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "mov~rax,r12", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [0, 0, 1, 0, 0, 2, 1, 1, 1, 0, 0.023809523809523808, ["xor     r12d, r12d", "jmp     short loc_28C4"], ["xor~r12d,r12d", "jmp~FOO"]]], "func_feature": [2, 4, 8, 0, 8, 10, 5, 42, 0.06845, 0, 6], "succs": [[3, 6], [0], [0, 6], [2, 5], [1, 7], [], [], [6]], "fname": "full_write", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[1, 0, 0, 1, 0, 8, 0, 0, 0, 0, 0.0, ["add     rsp, 0A8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     found", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~found", "retn"]], [0, 0, 2, 0, 1, 6, 1, 2, 3, -1, 0.016094573422589374, ["mov     rdi, [rsp+0D8h+tsub]; ptr", "call    _free", "mov     rbx, [rsp+0D8h+var_40]", "xor     rbx, fs:28h", "mov     eax, r15d", "jnz     loc_31FE"], ["mov~rdi,<TAG>", "call~FOO", "mov~rbx,[rsp+0]", "xor~rbx,<TAG>", "mov~eax,r15d", "jnz~FOO"]], [6, 0, 119, 0, 0, 10, 0, 1, 7, 6, 0.3882637800883065, ["mov     rax, [rsp+0D8h+tsub]", "mov     [rsp+0D8h+string_iter.cur.ptr], tsub_in_string", "mov     [rsp+0D8h+string_iter.in_shift], 0", "mov     qword ptr [rbx+4], 0", "mov     [rsp+0D8h+string_iter.next_done], 0", "mov     [rsp+0D8h+tsub_iter.in_shift], 0", "mov     [rsp+0D8h+tsub_iter.cur.ptr], rax", "mov     qword ptr [r12+4], 0", "mov     [rsp+0D8h+tsub_iter.next_done], 0", "jmp     short loc_2C7D"], ["mov~rax,<TAG>", "mov~[rsp+0],tsub_in_string", "mov~[rsp+0],0", "mov~[word ptr [rbx+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[word ptr [r12+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 6, 7, 0.31231306081754734, ["mov     r15d, 1", "jmp     loc_2BD5"], ["mov~r15d,0", "jmp~FOO"]], [0, 0, 119, 0, 1, 4, 1, 1, 10, 7, 0.06704885343968095, ["mov     edi, edx; wc", "call    _iswalnum", "test    eax, eax", "setz    r15b"], ["mov~edi,edx", "call~FOO", "test~eax,eax", "setz~r15b"]], [1, 0, 119, 0, 0, 3, 0, 1, 13, 9, 0.275388121350235, ["cmp     [rsp+0D8h+string_iter.cur.wc_valid], 0", "mov     edx, [rsp+0D8h+string_iter.cur.wc]", "jz      loc_2DE2"], ["cmp~[rsp+0],0", "mov~edx,[rsp+0]", "jz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 12, 6, 0.3958481697763851, ["cmp     [rsp+0D8h+string_iter.next_done], 0", "jnz     loc_3000"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 119, 0, 0, 1, 0, 1, 14, 9, 0.006836632958268052, ["jmp     loc_2DDE"], ["jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 12, 5, 0.10700042728955989, ["cmp     [rsp+0D8h+string_iter.in_shift], 0", "jnz     loc_2E86"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 11, 6, 0.16639367611451358, ["cmp     [rsp+0D8h+string_iter.next_done], 0", "jz      loc_2C10"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 119, 0, 3, 12, 0, 4, 14, 4, 0.09706594502207662, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+0D8h+string_iter.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+0D8h+string_iter.cur.ptr]; s", "lea     rcx, [rbx+4]; p", "mov     rdx, rax; n", "mov     rdi, r14; iter", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+0D8h+string_iter.cur.bytes], rax", "jz      loc_313C"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rcx,[rbx+0]", "mov~rdx,rax", "mov~rdi,r14", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 13, 5, 0.11305369605469305, ["cmp     [rsp+0D8h+string_iter.in_shift], 0", "jnz     loc_302A"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 119, 0, 0, 1, 0, 0, 16, 5, 0.009186725537672696, ["mov     [rsp+0D8h+string_iter.in_shift], 1"], ["mov~[rsp+0],0"]], [1, 0, 0, 0, 1, 5, 0, 1, 10, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5825; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, aIterCurPtr0; \"*iter->cur.ptr == '\\\\0'\"", "mov     edx, 0AAh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [2, 0, 119, 0, 0, 4, 0, 1, 9, 1, 0.013388406209941603, ["mov     r15, [rsp+0D8h+string_iter.cur.ptr]", "mov     [rsp+0D8h+string_iter.cur.bytes], 1", "cmp     byte ptr [r15], 0", "jnz     loc_3203"], ["mov~r15,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 119, 0, 0, 4, 0, 1, 12, 1, 0.01103831363053696, ["mov     rax, [rsp+0D8h+tsub_iter.cur.ptr]", "mov     [rsp+0D8h+tsub_iter.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_3203"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 119, 0, 0, 4, 0, 1, 16, 1, 0.009827659877510326, ["mov     rax, [rsp+0D8h+string_iter.cur.ptr]", "mov     [rsp+0D8h+string_iter.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_3203"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 119, 0, 0, 4, 0, 1, 21, 1, 0.010468594217347955, ["mov     rax, [rsp+0D8h+string_iter.cur.ptr]", "mov     [rsp+0D8h+string_iter.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_3203"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 119, 0, 0, 4, 0, 1, 17, 1, 0.009329155390969946, ["mov     rax, [rsp+0D8h+string_iter.cur.ptr]", "mov     [rsp+0D8h+string_iter.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_3203"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 119, 0, 1, 4, 1, 2, 15, 6, 0.009151118074348383, ["lea     rdi, [rbx+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_31DF"], ["lea~rdi,[rbx+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 119, 0, 0, 8, 1, 0, 14, 7, 0.02617148554336989, ["mov     rcx, [rsp+0D8h+string_iter.cur.ptr]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_3014"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [3, 0, 119, 0, 0, 6, 0, 0, 4, 6, 0.3903290129611166, ["cmp     string, tsub_in_string", "mov     [rsp+0D8h+string_iter.cur.ptr], string", "mov     [rsp+0D8h+string_iter.in_shift], 0", "mov     qword ptr [rbx+4], 0", "mov     [rsp+0D8h+string_iter.next_done], 0", "jb      short loc_2A97"], ["cmp~string,tsub_in_string", "mov~[rsp+0],string", "mov~[rsp+0],0", "mov~[word ptr [rbx+0],0", "mov~[rsp+0],0", "jb~FOO"]], [1, 0, 119, 0, 1, 3, 0, 2, 3, 7, 0.451502634952286, ["call    ___ctype_get_mb_cur_max", "cmp     rax, 1", "ja      loc_2A08"], ["call~FOO", "cmp~rax,0", "ja~FOO"]], [0, 0, 119, 0, 0, 1, 0, 1, 5, 8, 0.2433414043583535, ["jmp     loc_2FB0"], ["jmp~FOO"]], [5, 0, 119, 0, 0, 12, 1, 0, 16, 6, 0.38698191140863125, ["mov     [rsp+0D8h+string_iter.cur.ptr], tsub_in_string", "mov     [rsp+0D8h+string_iter.in_shift], 0", "lea     r15, [rbx+4]", "mov     qword ptr [rbx+4], 0", "mov     [rsp+0D8h+string_iter.next_done], 0", "movzx   edx, byte ptr [tsub_in_string+0]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_30A8"], ["mov~[rsp+0],tsub_in_string", "mov~[rsp+0],0", "lea~r15,[rbx+0]", "mov~[word ptr [rbx+0],0", "mov~[rsp+0],0", "movzx~edx,[yte ptr [tsub_in_string+0]", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [0, 0, 119, 0, 1, 4, 1, 2, 15, 7, 0.1460974220196553, ["mov     edi, edx; wc", "call    _iswalnum", "test    eax, eax", "jnz     short loc_2DFD"], ["mov~edi,edx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 119, 0, 0, 2, 1, 1, 15, 7, 0.25042728955989174, ["test    r15b, r15b", "jnz     loc_29CE"], ["test~r15b,r15b", "jnz~FOO"]], [2, 0, 119, 0, 0, 8, 1, 0, 13, 7, 0.0245335422304515, ["mov     rcx, [rsp+0D8h+string_iter.cur.ptr]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_2E70"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 19, 11, 0.014955134596211365, ["mov     [rsp+0D8h+string_iter.cur.bytes], 1", "jmp     loc_2E59"], ["mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 119, 0, 3, 13, 0, 4, 18, 4, 0.07869249394673124, ["mov     [rsp+0D8h+string_iter.in_shift], 1", "call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+0D8h+string_iter.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+0D8h+string_iter.cur.ptr]; s", "mov     rcx, r15; p", "mov     rdx, rax; n", "mov     rdi, r14; pwc", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+0D8h+string_iter.cur.bytes], rax", "jz      short loc_3158"], ["mov~[rsp+0],0", "call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "mov~rcx,r15", "mov~rdx,rax", "mov~rdi,r14", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [3, 0, 119, 0, 0, 5, 0, 0, 17, 12, 0.2998860561173622, ["mov     [rsp+0D8h+string_iter.cur.bytes], 1", "movsx   eax, byte ptr [tsub_in_string+0]", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 1", "mov     [rsp+0D8h+string_iter.next_done], 1", "mov     [rsp+0D8h+string_iter.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,[yte ptr [tsub_in_string+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [3, 0, 119, 0, 0, 5, 0, 0, 14, 8, 0.007406352371457057, ["mov     [rsp+0D8h+string_iter.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 1", "mov     [rsp+0D8h+string_iter.next_done], 1", "mov     [rsp+0D8h+string_iter.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [0, 0, 119, 0, 0, 3, 1, 1, 18, 11, 0.3496652898447514, ["mov     eax, [rsp+0D8h+string_iter.cur.wc]", "test    eax, eax", "jz      loc_29CB"], ["mov~eax,[rsp+0]", "test~eax,eax", "jz~FOO"]], [2, 0, 119, 0, 0, 3, 0, 1, 22, 12, 0.016237003275886626, ["mov     [rsp+0D8h+string_iter.in_shift], 0", "mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_2E4D"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 22, 12, 0.016237003275886626, ["mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_2E4D"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 119, 0, 0, 3, 1, 1, 14, 7, 0.0747044580544082, ["mov     edi, [rsp+0D8h+string_iter.cur.wc]", "test    edi, edi", "jz      loc_31DA"], ["mov~edi,[rsp+0]", "test~edi,edi", "jz~FOO"]], [0, 0, 119, 0, 0, 1, 0, 1, 13, 8, 0.008759435977780942, ["jmp     loc_2C53"], ["jmp~FOO"]], [2, 0, 119, 0, 0, 3, 0, 1, 17, 8, 0.016415040592508187, ["mov     [rsp+0D8h+string_iter.in_shift], 0", "mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_2C53"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 17, 8, 0.016415040592508187, ["mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_2C53"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 119, 1, 0, 3, 0, 1, 19, 10, 0.3809998575701467, ["mov     r15, [rsp+0D8h+string_iter.cur.bytes]", "add     r15, tsub_in_string", "jmp     loc_2950"], ["mov~r15,[rsp+0]", "add~r15,tsub_in_string", "jmp~FOO"]], [0, 0, 119, 0, 1, 4, 0, 2, 20, 11, 0.007691212078051559, ["mov     rdi, [rsp+0D8h+string_iter.cur.ptr]; s", "call    _strlen", "mov     [rsp+0D8h+string_iter.cur.bytes], rax", "jmp     loc_2E59"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 15, 3, 0.06281156530408773, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_31B8"], ["cmp~rax,0", "jz~FOO"]], [3, 0, 119, 0, 0, 5, 0, 0, 7, 9, 0.025352513886910694, ["mov     [rsp+0D8h+string_iter.cur.bytes], 1", "movsx   edx, byte ptr [r15]", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 1", "mov     [rsp+0D8h+string_iter.next_done], 1", "mov     [rsp+0D8h+string_iter.cur.wc], edx"], ["mov~[rsp+0],0", "movsx~edx,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],edx"]], [2, 0, 119, 0, 0, 8, 1, 0, 6, 7, 0.044651759008688216, ["mov     r15, [rsp+0D8h+string_iter.cur.ptr]", "movzx   edx, byte ptr [r15]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_2B38"], ["mov~r15,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [0, 0, 119, 0, 0, 2, 1, 1, 8, 8, 0.08367753881213502, ["test    edx, edx", "jz      loc_31DA"], ["test~edx,edx", "jz~FOO"]], [2, 0, 119, 0, 0, 3, 0, 1, 11, 9, 0.02050989887480416, ["mov     [rsp+0D8h+string_iter.in_shift], 0", "mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_2A6A"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 11, 9, 0.02050989887480416, ["mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_2A6A"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 119, 0, 0, 1, 0, 0, 9, 7, 0.07911978350662298, ["mov     r15, [rsp+0D8h+string_iter.cur.ptr]"], ["mov~r15,[rsp+0]"]], [0, 0, 119, 0, 0, 1, 0, 1, 7, 12, 0.0002492522432701894, ["jmp     loc_29B6"], ["jmp~FOO"]], [1, 0, 119, 0, 1, 6, 1, 2, 6, 11, 0.0351089588377724, ["mov     byte ptr [rsp+0D8h+var_CC], dl", "call    ___ctype_b_loc", "movzx   edx, byte ptr [rsp+0D8h+var_CC]", "mov     rax, [rax]", "test    byte ptr [rax+rdx*2], 8", "jnz     loc_29BB"], ["mov~[yte ptr [rsp+0],dl", "call~FOO", "movzx~edx,[yte ptr [rsp+0]", "mov~rax,<TAG>", "test~<TAG>,0", "jnz~FOO"]], [2, 0, 119, 2, 0, 6, 0, 0, 13, 6, 0.16963395527702604, ["mov     rax, [rsp+0D8h+string_iter.cur.bytes]", "add     [rsp+0D8h+string_iter.cur.ptr], rax", "mov     rax, [rsp+0D8h+tsub_iter.cur.bytes]", "add     [rsp+0D8h+tsub_iter.cur.ptr], rax", "mov     [rsp+0D8h+string_iter.next_done], 0", "mov     [rsp+0D8h+tsub_iter.next_done], 0"], ["mov~rax,[rsp+0]", "add~[rsp+0],rax", "mov~rax,[rsp+0]", "add~[rsp+0],rax", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [1, 0, 119, 0, 0, 2, 0, 1, 12, 7, 0.05198689645349665, ["cmp     [rsp+0D8h+string_iter.cur.wc_valid], 0", "jz      short loc_2C5F"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 119, 0, 0, 3, 0, 1, 14, 7, 0.029198119925936475, ["mov     [rsp+0D8h+string_iter.cur.bytes], 1", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 0", "jmp     loc_2C5F"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 1, 5, 0, 2, 15, 7, 0.0076199971514029335, ["mov     rdi, [rsp+0D8h+string_iter.cur.ptr]; s", "call    _strlen", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 0", "mov     [rsp+0D8h+string_iter.cur.bytes], rax", "jmp     loc_2C5F"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 119, 0, 1, 4, 1, 2, 14, 6, 0.009720837487537387, ["lea     rdi, [rbx+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_31DF"], ["lea~rdi,[rbx+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 119, 0, 0, 1, 0, 0, 15, 5, 0.00911551061102407, ["mov     [rsp+0D8h+string_iter.in_shift], 1"], ["mov~[rsp+0],0"]], [1, 0, 119, 0, 0, 2, 0, 1, 8, 5, 0.5667996011964107, ["cmp     [rsp+0D8h+tsub_iter.in_shift], 0", "jnz     short loc_2CF7"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 119, 0, 0, 2, 1, 1, 16, 2, 0.04778521578122774, ["test    rax, rax", "jz      loc_3166"], ["test~rax,rax", "jz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 7, 3, 0.06708446090300527, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_2B78"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 119, 0, 3, 12, 0, 4, 6, 4, 0.12298817832217632, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+0D8h+string_iter.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+0D8h+string_iter.cur.ptr]; s", "lea     rcx, [rbx+4]; p", "mov     rdx, rax; n", "mov     rdi, r14; pwc", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+0D8h+string_iter.cur.bytes], rax", "jz      loc_2B58"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rcx,[rbx+0]", "mov~rdx,rax", "mov~rdi,r14", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 119, 1, 0, 7, 0, 0, 8, 6, 0.15239994302805868, ["mov     rax, [rsp+0D8h+string_iter.cur.bytes]", "movzx   ecx, [rsp+0D8h+string_iter.cur.wc_valid]", "mov     [rsp+0D8h+string_iter.next_done], 0", "add     rax, r15", "cmp     rax, tsub_in_string", "mov     [rsp+0D8h+string_iter.cur.ptr], rax", "jnb     loc_2BC0"], ["mov~rax,[rsp+0]", "movzx~ecx,[rsp+0]", "mov~[rsp+0],0", "add~rax,r15", "cmp~rax,tsub_in_string", "mov~[rsp+0],rax", "jnb~FOO"]], [2, 0, 119, 0, 0, 5, 0, 1, 7, 7, 0.048497365047714, ["mov     [rsp+0D8h+string_iter.cur.bytes], 1", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 0", "mov     edx, [rsp+0D8h+string_iter.cur.wc]", "mov     r15, [rsp+0D8h+string_iter.cur.ptr]", "jmp     loc_2A77"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~edx,[rsp+0]", "mov~r15,[rsp+0]", "jmp~FOO"]], [1, 0, 119, 0, 1, 7, 0, 2, 8, 7, 0.007477567298105683, ["mov     r15, [rsp+0D8h+string_iter.cur.ptr]", "mov     rdi, r15; s", "call    _strlen", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 0", "mov     [rsp+0D8h+string_iter.cur.bytes], rax", "mov     edx, [rsp+0D8h+string_iter.cur.wc]", "jmp     loc_2A77"], ["mov~r15,[rsp+0]", "mov~rdi,r15", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~edx,[rsp+0]", "jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 5, 5, 0.15745620282011108, ["cmp     [rsp+0D8h+string_iter.in_shift], 0", "jz      short loc_2A30"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 119, 0, 0, 3, 0, 1, 19, 9, 0.020331861558182594, ["mov     [rsp+0D8h+string_iter.in_shift], 0", "mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_2DDE"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 1, 7, 1, 2, 18, 10, 0.048070075487822245, ["lea     rdi, [rbx+4]; ps", "mov     [rsp+0D8h+var_CC], edx", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "mov     edx, [rsp+0D8h+var_CC]", "jz      loc_319A"], ["lea~rdi,[rbx+0]", "mov~[rsp+0],edx", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "mov~edx,[rsp+0]", "jz~FOO"]], [0, 0, 119, 0, 0, 1, 0, 0, 17, 11, 0.031049708018800738, ["mov     edx, [rsp+0D8h+string_iter.cur.wc]"], ["mov~edx,[rsp+0]"]], [0, 0, 119, 0, 1, 4, 1, 2, 17, 5, 0.07968950291981199, ["mov     rdi, r15; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_31DF"], ["mov~rdi,r15", "call~FOO", "test~eax,eax", "jz~FOO"]], [3, 0, 119, 0, 0, 5, 0, 0, 10, 8, 0.3371314627545933, ["mov     [rsp+0D8h+tsub_iter.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rsp+0D8h+tsub_iter.cur.wc_valid], 1", "mov     [rsp+0D8h+tsub_iter.next_done], 1", "mov     [rsp+0D8h+tsub_iter.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [2, 0, 119, 0, 0, 8, 1, 0, 9, 7, 0.35493519441674976, ["mov     rcx, [rsp+0D8h+tsub_iter.cur.ptr]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     short loc_2CE0"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [1, 0, 119, 0, 3, 12, 0, 4, 13, 4, 0.09257940464321321, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+0D8h+string_iter.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+0D8h+string_iter.cur.ptr]; s", "lea     rcx, [rbx+4]; p", "mov     rdx, rax; n", "mov     rdi, r14; pwc", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+0D8h+string_iter.cur.bytes], rax", "jz      short loc_2F30"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rcx,[rbx+0]", "mov~rdx,rax", "mov~rdi,r14", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 14, 3, 0.05597493234581968, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_2F80"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 119, 0, 0, 3, 1, 1, 11, 7, 0.3688221051132317, ["mov     ecx, [rsp+0D8h+tsub_iter.cur.wc]", "test    ecx, ecx", "jz      loc_2D90"], ["mov~ecx,[rsp+0]", "test~ecx,ecx", "jz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 13, 8, 0.022788776527560176, ["mov     [rsp+0D8h+tsub_iter.next_done], 1", "jmp     loc_2CB8"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 119, 0, 0, 2, 1, 1, 15, 2, 0.04094858282295969, ["test    rax, rax", "jnz     short loc_2EEB"], ["test~rax,rax", "jnz~FOO"]], [2, 0, 119, 0, 0, 5, 1, 1, 13, 7, 0.03952428428998718, ["mov     ecx, [rsp+0D8h+tsub_iter.cur.wc]", "mov     [rsp+0D8h+tsub_iter.in_shift], 0", "mov     [rsp+0D8h+tsub_iter.next_done], 1", "test    ecx, ecx", "jnz     loc_2CC4"], ["mov~ecx,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "test~ecx,ecx", "jnz~FOO"]], [3, 0, 119, 0, 0, 4, 0, 1, 10, 7, 0.1335279874661729, ["mov     [rsp+0D8h+tsub_iter.cur.bytes], 1", "mov     [rsp+0D8h+tsub_iter.cur.wc_valid], 0", "mov     [rsp+0D8h+tsub_iter.next_done], 1", "jmp     loc_2CC4"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 119, 0, 1, 6, 0, 2, 11, 7, 0.0020652328728101407, ["mov     rdi, [rsp+0D8h+tsub_iter.cur.ptr]; s", "call    _strlen", "mov     [rsp+0D8h+tsub_iter.cur.wc_valid], 0", "mov     [rsp+0D8h+tsub_iter.cur.bytes], rax", "mov     [rsp+0D8h+tsub_iter.next_done], 1", "jmp     loc_2CC4"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 8, 5, 0.009186725537672696, ["mov     [rsp+0D8h+string_iter.in_shift], 1", "jmp     loc_2A9E"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 119, 0, 0, 2, 1, 1, 8, 2, 0.052200541233442525, ["test    rax, rax", "jnz     loc_2BB0"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 119, 0, 0, 3, 1, 1, 17, 10, 0.009222333000997009, ["mov     r8d, [rsp+0D8h+string_iter.cur.wc]", "test    r8d, r8d", "jnz     loc_3189"], ["mov~r8d,[rsp+0]", "test~r8d,r8d", "jnz~FOO"]], [0, 0, 119, 0, 1, 4, 1, 2, 10, 6, 0.01039737929069933, ["lea     rdi, [r12+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_31DF"], ["lea~rdi,[r12+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 19, 3, 0.056331006979062806, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_31A4"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 119, 0, 0, 1, 0, 0, 11, 5, 0.009186725537672696, ["mov     [rsp+0D8h+tsub_iter.in_shift], 1"], ["mov~[rsp+0],0"]], [0, 0, 119, 0, 0, 2, 1, 1, 20, 2, 0.041233442529554194, ["test    rax, rax", "jnz     short loc_311B"], ["test~rax,rax", "jnz~FOO"]], [1, 0, 119, 0, 1, 5, 1, 2, 16, 9, 0.04023643355647343, ["lea     rdi, [rbx+4]; ps", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      loc_2FA0"], ["lea~rdi,[rbx+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 119, 0, 0, 3, 1, 1, 10, 11, 0.010967098703888335, ["mov     edx, [rsp+0D8h+string_iter.cur.wc]", "test    edx, edx", "jnz     loc_3189"], ["mov~edx,[rsp+0]", "test~edx,edx", "jnz~FOO"]], [0, 0, 119, 0, 0, 3, 1, 1, 22, 14, 0.009542800170915824, ["mov     edx, [rsp+0D8h+string_iter.cur.wc]", "test    edx, edx", "jnz     short loc_3189"], ["mov~edx,[rsp+0]", "test~edx,edx", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 9, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 119, 0, 1, 7, 1, 2, 10, 10, 0.048426150121065374, ["lea     rdi, [rbx+4]; ps", "mov     [rsp+0D8h+var_CC], edx", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "mov     edx, [rsp+0D8h+var_CC]", "jz      short loc_2BA0"], ["lea~rdi,[rbx+0]", "mov~[rsp+0],edx", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "mov~edx,[rsp+0]", "jz~FOO"]], [0, 0, 119, 0, 0, 2, 0, 1, 9, 11, 0.031405782652043863, ["mov     edx, [rsp+0D8h+string_iter.cur.wc]", "jmp     loc_2B0A"], ["mov~edx,[rsp+0]", "jmp~FOO"]], [1, 0, 119, 0, 3, 12, 0, 4, 9, 4, 0.22204814129041445, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+0D8h+tsub_iter.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+0D8h+tsub_iter.cur.ptr]; s", "lea     rcx, [r12+4]; p", "lea     rdi, [r12+24h]; pwc", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+0D8h+tsub_iter.cur.bytes], rax", "jz      loc_2F10"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rcx,[r12+0]", "lea~rdi,[r12+0]", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 119, 0, 1, 5, 1, 2, 21, 13, 0.03988035892323031, ["lea     rdi, [rbx+4]; ps", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      short loc_3190"], ["lea~rdi,[rbx+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 10, 3, 0.0811138014527845, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_2F48"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 119, 0, 0, 2, 1, 1, 11, 2, 0.0716422162085173, ["test    rax, rax", "jnz     short loc_2D61"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 119, 0, 1, 4, 1, 2, 7, 6, 0.011892892750320466, ["lea     rdi, [rbx+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_31DF"], ["lea~rdi,[rbx+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 119, 1, 1, 20, 1, 1, 0, 10, 0.0, ["push    r15", "push    r14", "mov     r15, string", "push    r13", "push    r12", "mov     string, sub; s", "push    rbp", "push    rbx", "mov     esi, 2; how", "lea     r13, is_basic_table", "sub     rsp, 0A8h", "lea     rbx, [rsp+0D8h+string_iter]", "lea     r12, [rsp+0D8h+tsub_iter]", "mov     rax, fs:28h", "mov     [rsp+0D8h+var_40], rax", "xor     eax, eax", "lea     r14, [rbx+24h]", "call    trim2", "mov     [rsp+0D8h+tsub], rax", "nop     dword ptr [rax]"], ["push~r15", "push~r14", "mov~r15,string", "push~r13", "push~r12", "mov~string,sub", "push~rbp", "push~rbx", "mov~esi,0", "lea~r13,<TAG>", "sub~rsp,0", "lea~rbx,[rsp+0]", "lea~r12,[rsp+0]", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~r14,[rbx+0]", "call~FOO", "mov~<TAG>,rax", "nop~<TAG>"]], [3, 0, 119, 0, 0, 5, 0, 1, 15, 9, 0.02684802734653183, ["mov     [rsp+0D8h+string_iter.cur.bytes], 1", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 0", "mov     edx, [rsp+0D8h+string_iter.cur.wc]", "mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_2DE2"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~edx,[rsp+0]", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 1, 9, 0.3899729383278735, ["cmp     byte ptr [string], 0", "jz      short loc_29CB"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 119, 0, 0, 3, 1, 1, 18, 11, 0.009008688221051131, ["mov     edx, [rsp+0D8h+string_iter.cur.wc]", "test    edx, edx", "jz      loc_3076"], ["mov~edx,[rsp+0]", "test~edx,edx", "jz~FOO"]], [0, 0, 119, 0, 0, 3, 1, 1, 13, 9, 0.009827659877510326, ["mov     esi, [rsp+0D8h+tsub_iter.cur.wc]", "test    esi, esi", "jnz     loc_3189"], ["mov~esi,[rsp+0]", "test~esi,esi", "jnz~FOO"]], [0, 0, 119, 0, 1, 6, 1, 2, 2, 8, 0.4512889901723401, ["mov     rsi, [rsp+0D8h+tsub]; needle", "mov     rdi, string; haystack", "call    mbsstr", "test    rax, rax", "mov     rbp, rax", "jz      short loc_29CB"], ["mov~rsi,<TAG>", "mov~rdi,string", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jz~FOO"]], [1, 0, 119, 0, 0, 3, 0, 1, 8, 9, 0.05497792337273892, ["lea     r15, [tsub_in_string+1]", "cmp     byte ptr [string], 0", "jnz     short loc_2956"], ["lea~r15,[tsub_in_string+0]", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 119, 0, 1, 5, 1, 2, 12, 8, 0.06971941318900442, ["lea     rdi, [r12+4]; ps", "mov     [rsp+0D8h+tsub_iter.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      loc_2F70"], ["lea~rdi,[r12+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 119, 0, 0, 2, 0, 0, 4, 13, 0.05376726961971229, ["cmp     string, tsub_in_string", "jnb     loc_2FC0"], ["cmp~string,tsub_in_string", "jnb~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 11, -1, 0.0, ["call    mbuiter_multi_next"], ["call~FOO"]], [0, 0, 119, 0, 0, 1, 0, 0, 14, 7, 0.027773821392963964, ["xchg    ax, ax"], ["xchg~ax,ax"]], [1, 0, 119, 0, 0, 2, 0, 1, 19, 9, 0.020331861558182594, ["mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_2DDE"], ["mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 119, 0, 2, 12, 3, 3, 5, 12, 0.030586810995584655, ["call    ___ctype_b_loc", "movzx   edx, byte ptr [tsub_in_string-1]", "mov     rax, [rax]", "mov     rdi, [rsp+0D8h+tsub]; s", "movzx   r15d, word ptr [rax+rdx*2]", "call    _strlen", "movzx   edx, byte ptr [tsub_in_string+rax+0]", "shr     r15w, 3", "xor     r15d, 1", "and     r15d, 1", "test    dl, dl", "jnz     loc_2FDC"], ["call~FOO", "movzx~edx,[yte ptr [tsub_in_string-1]+0]", "mov~rax,<TAG>", "mov~rdi,<TAG>", "movzx~r15d,<TAG>", "call~FOO", "movzx~edx,[yte ptr [tsub_in_string+0]", "shr~r15w,0", "xor~r15d,0", "and~r15d,0", "test~dl,dl", "jnz~FOO"]], [0, 0, 119, 0, 0, 2, 1, 1, 9, 8, 0.13502350092579404, ["test    cl, cl", "jz      loc_2FB0"], ["test~cl,cl", "jz~FOO"]], [0, 0, 119, 0, 0, 2, 1, 1, 6, 11, 0.02026064663153394, ["test    r15b, r15b", "jnz     short loc_29CE"], ["test~r15b,r15b", "jnz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 7, 10, 0.05536960546930637, ["cmp     byte ptr [tsub_in_string+0], 0", "jz      short loc_29CB"], ["cmp~[yte ptr [tsub_in_string+0],0", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 1, 0, 2, -1, 0.004379717988890471, ["xor     r15d, r15d"], ["xor~r15d,r15d"]], [2, 0, 119, 0, 1, 7, 0, 2, 16, 9, 0.0076199971514029335, ["mov     rdi, [rsp+0D8h+string_iter.cur.ptr]; s", "call    _strlen", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 0", "mov     [rsp+0D8h+string_iter.cur.bytes], rax", "mov     edx, [rsp+0D8h+string_iter.cur.wc]", "mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_2DE2"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~edx,[rsp+0]", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 1, 6, 1, 2, 5, 12, 0.015774106252670547, ["mov     rdi, [rsp+0D8h+tsub]; s", "mov     r15d, 1", "call    _strlen", "movzx   edx, byte ptr [tsub_in_string+rax+0]", "test    dl, dl", "jz      loc_29CE"], ["mov~rdi,<TAG>", "mov~r15d,0", "call~FOO", "movzx~edx,[yte ptr [tsub_in_string+0]", "test~dl,dl", "jz~FOO"]], [3, 0, 119, 0, 0, 5, 0, 0, 15, 9, 0.00961401509756445, ["mov     [rsp+0D8h+string_iter.cur.bytes], 1", "movsx   edx, byte ptr [rcx]", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 1", "mov     [rsp+0D8h+string_iter.next_done], 1", "mov     [rsp+0D8h+string_iter.cur.wc], edx"], ["mov~[rsp+0],0", "movsx~edx,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],edx"]], [0, 0, 119, 0, 0, 2, 1, 1, 15, 8, 0.08282295969235151, ["test    edx, edx", "jz      short loc_2DF4"], ["test~edx,edx", "jz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 14, 8, 0.31398661159379004, ["cmp     [rsp+0D8h+string_iter.cur.wc_valid], 0", "jz      short loc_2DF4"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 8, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5825; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, aMbsinitIterSta; \"mbsinit (&iter->state)\"", "mov     edx, 8Eh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [45, 45, 136, 2, 120, 185, 4, 493, 0.09347, 6, 6], "succs": [[], [0, 119], [56], [2], [2], [117, 7], [11, 5], [116], [27, 70], [8, 51], [41, 97], [10, 20], [10], [], [13, 86], [100, 13], [80, 13], [13, 87], [99, 13], [12, 118], [115, 19], [63, 23], [104, 21], [3], [67, 30], [24, 26], [24, 1], [54, 31], [39], [82, 28], [32], [35], [112, 39], [32], [32], [88, 50], [35], [35], [35], [98], [39], [57, 113], [44], [42, 95], [88, 47], [44], [44], [60], [110], [48, 111], [56], [50, 36], [50], [50], [118, 55], [70], [91, 69], [66, 18], [62, 79], [58, 61], [109, 63], [60], [60], [43, 59], [116], [64, 107], [65], [29, 118], [72], [81, 68], [52, 71], [74, 53], [9, 6], [72], [16, 85], [9, 106], [9], [9], [59], [90, 14], [105, 85], [83, 118], [40, 84], [91], [17, 92], [37, 38], [89, 105], [105, 92], [], [45, 46], [89], [76, 93], [33, 34], [77, 94], [103, 15], [118, 78], [98], [117], [112, 101], [65, 105], [105, 103], [112, 22], [112, 101], [73, 75], [114, 108], [], [6], [116], [49, 110], [3, 4], [1, 111], [112, 102], [1], [117], [1, 49], [116], [26, 117], [25, 26], [], []], "fname": "mbsstr_trimmed_wordbounded", "n_num": 120}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0.0, ["mov     rax, translation", "pop     translation", "pop     name", "pop     r12", "retn"], ["mov~rax,translation", "pop~translation", "pop~name", "pop~r12", "retn"]], [1, 0, 3, 0, 1, 11, 1, 2, 0, 2, 0.0, ["push    r12", "push    rbp", "mov     rsi, name; msgid", "push    rbx", "mov     rbp, name", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "cmp     name, rax", "mov     rbx, rax", "jz      short loc_325D"], ["push~r12", "push~rbp", "mov~rsi,name", "push~rbx", "mov~rbp,name", "mov~edx,0", "xor~edi,edi", "call~FOO", "cmp~name,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 1, 1, 0.16666666666666666, ["mov     rsi, name; sub", "mov     rdi, translation; string", "call    mbsstr_trimmed_wordbounded", "test    al, al", "jz      short loc_3268"], ["mov~rsi,name", "mov~rdi,translation", "call~FOO", "test~al,al", "jz~FOO"]], [2, 0, 0, 0, 4, 22, 1, 4, 2, 0, 0.0, ["mov     rdi, translation; s", "call    _strlen", "mov     rdi, name; s", "mov     r12, rax", "call    _strlen", "lea     rdi, [r12+rax+4]; n", "call    xmalloc", "lea     rcx, aSS; \"%s (%s)\"", "mov     r12, rax", "mov     r9, name", "mov     r8, translation", "mov     rdi, result", "mov     translation, r12", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     esi, 1", "xor     eax, eax", "call    ___sprintf_chk", "mov     rax, result", "pop     result", "pop     name", "pop     r12", "retn"], ["mov~rdi,translation", "call~FOO", "mov~rdi,name", "mov~r12,rax", "call~FOO", "lea~rdi,[r12+0]", "call~FOO", "lea~rcx,<TAG>", "mov~r12,rax", "mov~r9,name", "mov~r8,translation", "mov~rdi,result", "mov~translation,r12", "mov~rdx,0", "mov~esi,0", "xor~eax,eax", "call~FOO", "mov~rax,result", "pop~result", "pop~name", "pop~r12", "retn"]]], "func_feature": [6, 3, 8, 0, 4, 4, 0, 43, 0.04167, 1, 0], "succs": [[], [0, 2], [0, 3], []], "fname": "proper_name", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 11, 0, 1, 7, 1, 2, 0, 0, 0.008152173913043478, ["mov     rsi, name_converted; sub", "mov     rdi, translation; string", "mov     [rsp+48h+sub], rdx", "call    mbsstr_trimmed_wordbounded", "test    al, al", "mov     rdx, [rsp+48h+sub]", "jnz     short loc_333A"], ["mov~rsi,name_converted", "mov~rdi,translation", "mov~<TAG>,rdx", "call~FOO", "test~al,al", "mov~rdx,<TAG>", "jnz~FOO"]], [0, 0, 12, 0, 0, 2, 1, 1, 4, -1, 0.07608695652173914, ["test    name_converted, name_converted", "jz      short loc_338C"], ["test~name_converted,name_converted", "jz~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 3, 2, 0.058876811594202896, ["test    alloc_name_converted, alloc_name_converted", "jz      short loc_3416"], ["test~alloc_name_converted,alloc_name_converted", "jz~FOO"]], [0, 0, 20, 0, 0, 3, 0, 1, 2, 3, 0.14492753623188406, ["cmp     name_ascii, translation", "mov     [rsp+48h+sub], name_converted_translit", "jz      loc_3408"], ["cmp~name_ascii,translation", "mov~<TAG>,name_converted_translit", "jz~FOO"]], [0, 0, 10, 0, 0, 2, 1, 1, 5, -1, 0.07336956521739131, ["test    rdx, rdx", "jz      short loc_33A0"], ["test~rdx,rdx", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 4, 1, 0.010869565217391304, ["cmp     alloc_name_converted, name", "jnz     loc_34E0"], ["cmp~alloc_name_converted,name", "jnz~FOO"]], [0, 0, 22, 0, 0, 6, 3, 1, 1, 4, 0.01992753623188406, ["xor     r15d, r15d", "xor     r14d, r14d", "test    name_utf8, name_utf8", "mov     rdx, name_utf8", "mov     locale_code, name_converted_translit", "jz      loc_34C7"], ["xor~r15d,r15d", "xor~r14d,r14d", "test~name_utf8,name_utf8", "mov~rdx,name_utf8", "mov~locale_code,name_converted_translit", "jz~FOO"]], [2, 0, 24, 1, 3, 21, 2, 4, 0, 5, 0.0, ["push    r15", "push    r14", "mov     edx, 5; category", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbp, name_ascii", "mov     rbx, name_utf8", "mov     name_utf8, name_ascii; msgid", "xor     edi, edi; domainname", "sub     rsp, 18h", "call    _dcgettext", "mov     r13, rax", "call    locale_charset", "lea     rsi, from_codeset; \"UTF-8\"", "mov     rdi, rax; s1", "mov     r12, rax", "call    c_strcasecmp", "test    eax, eax", "jnz     loc_3430"], ["push~r15", "push~r14", "mov~edx,0", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbp,name_ascii", "mov~rbx,name_utf8", "mov~name_utf8,name_ascii", "xor~edi,edi", "sub~rsp,0", "call~FOO", "mov~r13,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~r12,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 4, -1, 0.05344202898550725, ["test    alloc_name_converted_translit, alloc_name_converted_translit", "jz      loc_3357"], ["test~alloc_name_converted_translit,alloc_name_converted_translit", "jz~FOO"]], [0, 0, 5, 0, 1, 3, 0, 2, 5, 0, 0.0, ["mov     rdi, alloc_name_converted; ptr", "call    _free", "jmp     loc_3416"], ["mov~rdi,alloc_name_converted", "call~FOO", "jmp~FOO"]], [0, 0, 9, 0, 1, 5, 1, 2, 6, -1, 0.006038647342995169, ["mov     rsi, rdx; sub", "mov     rdi, translation; string", "call    mbsstr_trimmed_wordbounded", "test    al, al", "jnz     short loc_333A"], ["mov~rsi,rdx", "mov~rdi,translation", "call~FOO", "test~al,al", "jnz~FOO"]], [2, 1, 22, 1, 6, 36, 1, 7, 1, 4, 0.01992753623188406, ["lea     rsi, from_codeset; \"UTF-8\"", "mov     rdx, locale_code; to_codeset", "mov     rdi, name_utf8; src", "call    xstr_iconv", "mov     rdi, locale_code; s", "mov     r14, rax", "call    _strlen", "lea     rdi, [rax+0Bh]; n", "mov     r15, rax", "call    xmalloc", "mov     rdx, len; n", "mov     rsi, locale_code; src", "mov     rdi, locale_code_translit; dest", "call    _memcpy", "add     len, rax", "mov     rcx, rax", "mov     rax, 4C534E4152542F2Fh", "mov     [r15], rax", "lea     rsi, from_codeset; \"UTF-8\"", "mov     eax, 5449h", "mov     rdx, rcx; to_codeset", "mov     rdi, name_utf8; src", "mov     [r15+8], ax", "mov     byte ptr [r15+0Ah], 0", "mov     [rsp+48h+ptr], rcx", "mov     name_utf8, name_converted", "call    xstr_iconv", "mov     rcx, [rsp+48h+ptr]", "mov     [rsp+48h+sub], rax", "mov     locale_code, rbx", "mov     rdi, rcx; ptr", "call    _free", "mov     rdx, [rsp+48h+sub]", "test    rbx, rbx", "mov     r15, rdx", "jnz     loc_331A"], ["lea~rsi,<TAG>", "mov~rdx,locale_code", "mov~rdi,name_utf8", "call~FOO", "mov~rdi,locale_code", "mov~r14,rax", "call~FOO", "lea~rdi,[rax+0]", "mov~r15,rax", "call~FOO", "mov~rdx,len", "mov~rsi,locale_code", "mov~rdi,locale_code_translit", "call~FOO", "add~len,rax", "mov~rcx,rax", "mov~rax,0", "mov~<TAG>,rax", "lea~rsi,<TAG>", "mov~eax,<STR>", "mov~rdx,rcx", "mov~rdi,name_utf8", "mov~[r15+0],ax", "mov~[yte ptr [r15+0],0", "mov~[rsp+0],rcx", "mov~name_utf8,name_converted", "call~FOO", "mov~rcx,[rsp+0]", "mov~<TAG>,rax", "mov~locale_code,rbx", "mov~rdi,rcx", "call~FOO", "mov~rdx,<TAG>", "test~rbx,rbx", "mov~r15,rdx", "jnz~FOO"]], [0, 0, 21, 0, 0, 4, 1, 1, 2, 4, 0.0, ["test    name_converted_translit, name_converted_translit", "mov     r12, name_ascii", "cmovnz  r12, name_converted_translit", "jmp     loc_331A"], ["test~name_converted_translit,name_converted_translit", "mov~r12,name_ascii", "cmovnz~r12,name_converted_translit", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 5, -1, 0.028079710144927536, ["cmp     alloc_name_converted_translit, name", "jnz     loc_334F"], ["cmp~alloc_name_converted_translit,name", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 6, -1, 0.0009057971014492754, ["jmp     loc_3357"], ["jmp~FOO"]], [0, 0, 13, 0, 1, 6, 1, 2, 3, -1, 0.10416666666666667, ["mov     rsi, name_ascii; sub", "mov     rdi, translation; string", "call    mbsstr_trimmed_wordbounded", "test    al, al", "mov     rdx, [rsp+48h+sub]", "jz      short loc_3370"], ["mov~rsi,name_ascii", "mov~rdi,translation", "call~FOO", "test~al,al", "mov~rdx,<TAG>", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 4, -1, 0.05404589371980676, ["test    alloc_name_converted, alloc_name_converted", "jz      short loc_3347"], ["test~alloc_name_converted,alloc_name_converted", "jz~FOO"]], [0, 0, 3, 0, 1, 2, 0, 1, 5, -1, 0.0, ["mov     rdi, alloc_name_converted; ptr", "call    _free"], ["mov~rdi,alloc_name_converted", "call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 5, -1, 0.02506038647342995, ["test    alloc_name_converted_translit, alloc_name_converted_translit", "mov     name, translation", "jz      short loc_3357"], ["test~alloc_name_converted_translit,alloc_name_converted_translit", "mov~name,translation", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 6, -1, 0.004227053140096618, ["mov     rdi, alloc_name_converted_translit; ptr", "call    _free"], ["mov~rdi,alloc_name_converted_translit", "call~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 7, -1, 0.033816425120772944, ["test    alloc_name_converted_translit, alloc_name_converted_translit", "mov     name, result", "jnz     loc_334F"], ["test~alloc_name_converted_translit,alloc_name_converted_translit", "mov~name,result", "jnz~FOO"]], [2, 0, 5, 0, 4, 18, 2, 5, 6, -1, 0.059178743961352656, ["mov     rdi, translation; s", "call    _strlen", "mov     rdi, name; s", "mov     name_converted, rax", "call    _strlen", "lea     rdi, [rbx+rax+4]; n", "call    xmalloc", "lea     rcx, aSS; \"%s (%s)\"", "mov     rdi, rax", "mov     rbx, rax", "mov     r9, name", "xor     eax, eax", "mov     r8, translation", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     esi, 1", "call    ___sprintf_chk", "test    alloc_name_converted, alloc_name_converted", "jz      short loc_33F0"], ["mov~rdi,translation", "call~FOO", "mov~rdi,name", "mov~name_converted,rax", "call~FOO", "lea~rdi,[rbx+0]", "call~FOO", "lea~rcx,<TAG>", "mov~rdi,rax", "mov~rbx,rax", "mov~r9,name", "xor~eax,eax", "mov~r8,translation", "mov~rdx,0", "mov~esi,0", "call~FOO", "test~alloc_name_converted,alloc_name_converted", "jz~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 5, -1, 0.0, ["add     rsp, 18h", "mov     rax, r12", "pop     rbx", "pop     name_ascii", "pop     r12", "pop     translation", "pop     alloc_name_converted", "pop     alloc_name_converted_translit", "retn"], ["add~rsp,0", "mov~rax,r12", "pop~rbx", "pop~name_ascii", "pop~r12", "pop~translation", "pop~alloc_name_converted", "pop~alloc_name_converted_translit", "retn"]], [0, 0, 1, 0, 0, 1, 0, 1, 8, -1, 0.003321256038647343, ["jmp     loc_3357"], ["jmp~FOO"]], [0, 0, 4, 0, 1, 2, 0, 1, 7, -1, 0.0, ["mov     rdi, alloc_name_converted; ptr", "call    _free"], ["mov~rdi,alloc_name_converted", "call~FOO"]]], "func_feature": [20, 19, 41, 0, 25, 41, 1, 146, 0.03138, 2, 3], "succs": [[16, 4], [0, 4], [8, 5], [2, 15], [10, 21], [8, 9], [3, 12], [11, 6], [13, 22], [8], [16, 21], [3, 12], [3], [19, 14], [22], [16, 1], [17, 18], [18], [19, 22], [22], [19, 23], [24, 20], [], [22], [20]], "fname": "proper_name_utf8", "n_num": 25}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[3, 0, 0, 4, 1, 18, 2, 1, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rdx, maxlen; n", "mov     rbx, maxlen", "xor     esi, esi; c", "mov     rbp, string", "sub     rsp, 8", "call    _memchr", "mov     rdx, end", "sub     rdx, string", "add     rdx, 1", "test    end, end", "mov     end, maxlen", "cmovnz  rax, rdx", "add     rsp, 8", "pop     maxlen", "pop     string", "retn"], ["push~rbp", "push~rbx", "mov~rdx,maxlen", "mov~rbx,maxlen", "xor~esi,esi", "mov~rbp,string", "sub~rsp,0", "call~FOO", "mov~rdx,end", "sub~rdx,string", "add~rdx,0", "test~end,end", "mov~end,maxlen", "cmovnz~rax,rdx", "add~rsp,0", "pop~maxlen", "pop~string", "retn"]]], "func_feature": [1, 2, 1, 0, 1, 0, 17, 18, 0.0, 0, 4], "succs": [[]], "fname": "strnlen1", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[1, 0, 57, 0, 1, 5, 1, 2, 0, 0, 0.0367965367965368, ["lea     rdi, [rbp+0Ch]; ps", "mov     [rsp+0A8h+i.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      loc_3B00"], ["lea~rdi,[rbp+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 57, 0, 0, 2, 1, 1, 10, 2, 0.02614052614052614, ["test    rax, rax", "jnz     short loc_3803"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 57, 0, 0, 3, 1, 1, 12, 10, 0.012071262071262072, ["mov     edx, [rsp+0A8h+i.cur.wc]", "test    edx, edx", "jnz     loc_3B3B"], ["mov~edx,[rsp+0]", "test~edx,edx", "jnz~FOO"]], [2, 0, 34, 0, 0, 3, 0, 1, 11, 7, 0.06943056943056942, ["cmp     [rsp+0A8h+i.cur.wc_valid], 0", "mov     r15d, 1", "jz      short loc_3617"], ["cmp~[rsp+0],0", "mov~r15d,0", "jz~FOO"]], [1, 0, 34, 0, 0, 3, 1, 1, 10, 8, 0.1351981351981352, ["test    r15d, r15d", "mov     [rsp+0A8h+i.next_done], 1", "jz      loc_35F8"], ["test~r15d,r15d", "mov~[rsp+0],0", "jz~FOO"]], [0, 0, 34, 0, 0, 2, 0, 1, 12, 9, 0.024142524142524144, ["mov     r13, [rsp+0A8h+i.cur.bytes]", "jmp     loc_367C"], ["mov~r13,[rsp+0]", "jmp~FOO"]], [3, 0, 34, 0, 0, 6, 0, 1, 9, 9, 0.050865800865800864, ["mov     [rsp+0A8h+i.cur.bytes], 1", "mov     [rsp+0A8h+i.cur.wc_valid], 0", "mov     r13d, 1", "mov     r12, [rsp+0A8h+i.cur.ptr]", "mov     r14, [rsp+0A8h+i.limit]", "jmp     loc_367C"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r13d,0", "mov~r12,[rsp+0]", "mov~r14,[rsp+0]", "jmp~FOO"]], [1, 0, 34, 1, 0, 6, 0, 1, 10, 9, 0.003996003996003996, ["mov     r14, [rsp+0A8h+i.limit]", "mov     [rsp+0A8h+i.cur.wc_valid], 0", "mov     r13, r14", "sub     r13, r12", "mov     [rsp+0A8h+i.cur.bytes], r13", "jmp     loc_367C"], ["mov~r14,[rsp+0]", "mov~[rsp+0],0", "mov~r13,r14", "sub~r13,r12", "mov~[rsp+0],r13", "jmp~FOO"]], [3, 0, 34, 0, 0, 7, 0, 0, 9, 9, 0.043373293373293376, ["mov     [rsp+0A8h+i.cur.bytes], 1", "movsx   eax, byte ptr [rsi]", "mov     r13d, 1", "mov     r12, [rsp+0A8h+i.cur.ptr]", "mov     r14, [rsp+0A8h+i.limit]", "mov     [rsp+0A8h+i.cur.wc_valid], 1", "mov     [rsp+0A8h+i.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~r13d,0", "mov~r12,[rsp+0]", "mov~r14,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [3, 0, 7, 1, 0, 12, 1, 1, 5, -1, 0.008907758907758908, ["mov     ecx, eax", "shr     ecx, 10h", "test    eax, 8080h", "cmovz   eax, ecx", "lea     rcx, [rdx+2]", "mov     esi, eax", "cmovz   rdx, rcx", "add     sil, al", "sbb     rdx, 3", "lea     rbp, [rdx-1]", "cmp     d, p", "ja      loc_3840"], ["mov~ecx,eax", "shr~ecx,0", "test~eax,0", "cmovz~eax,ecx", "lea~rcx,[rdx+0]", "mov~esi,eax", "cmovz~rdx,rcx", "add~sil,al", "sbb~rdx,0", "lea~rbp,[rdx-1]+0]", "cmp~d,p", "ja~FOO"]], [2, 0, 9, 1, 0, 7, 2, 1, 4, -1, 0.009407259407259408, ["mov     ecx, [rdx]", "add     rdx, 4", "lea     eax, [rcx-1010101h]", "not     ecx", "and     eax, ecx", "and     eax, 80808080h", "jz      short loc_38C9"], ["mov~ecx,<TAG>", "add~rdx,0", "lea~eax,[rcx-1010101h]+0]", "not~ecx", "and~eax,ecx", "and~eax,0", "jz~FOO"]], [0, 1, 13, 0, 0, 2, 1, 1, 5, -1, 0.002664002664002664, ["test    byte ptr [rax+rbp*2+1], 20h", "jnz     short loc_3890"], ["test~[yte ptr [rax+0],<STR>", "jnz~FOO"]], [0, 0, 13, 0, 1, 4, 0, 2, 4, -1, 0.001332001332001332, ["call    ___ctype_b_loc", "mov     r13, p", "mov     rax, [rax]", "jmp     short loc_389E"], ["call~FOO", "mov~r13,p", "mov~rax,<TAG>", "jmp~FOO"]], [1, 0, 13, 1, 0, 4, 1, 1, 6, -1, 0.0, ["add     p, 1", "movzx   ebp, byte ptr [p+0]", "test    bpl, bpl", "jz      short loc_38A5"], ["add~p,0", "movzx~ebp,[yte ptr [p+0]", "test~bpl,bpl", "jz~FOO"]], [0, 0, 57, 0, 1, 6, 1, 2, 9, 6, 0.008574758574758574, ["mov     rdi, r13; ps", "mov     [rsp+0A8h+var_98], rdx", "call    _mbsinit", "test    eax, eax", "mov     rdx, [rsp+0A8h+var_98]", "jz      loc_3B1C"], ["mov~rdi,r13", "mov~[rsp+0],rdx", "call~FOO", "test~eax,eax", "mov~rdx,[rsp+0]", "jz~FOO"]], [2, 0, 57, 0, 0, 7, 1, 0, 8, 7, 0.015734265734265736, ["movzx   ecx, byte ptr [r15]", "mov     eax, ecx", "shr     al, 5", "and     eax, 7", "mov     eax, [r14+rax*4]", "bt      eax, ecx", "jnb     loc_3A18"], ["movzx~ecx,<TAG>", "mov~eax,ecx", "shr~al,0", "and~eax,0", "mov~eax,<TAG>", "bt~eax,ecx", "jnb~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 78, 1, 1, 14, 2, 2, 0, 12, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12d, esi", "push    rbp", "push    rbx", "sub     rsp, 78h", "mov     rax, fs:28h", "mov     [rsp+0A8h+var_40], rax", "xor     eax, eax", "call    _strdup", "test    d, d", "jz      loc_3B17"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12d,esi", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~d,d", "jz~FOO"]], [0, 0, 15, 0, 0, 3, 1, 1, 3, -1, 0.00308025308025308, ["movzx   ebp, byte ptr [p]", "test    bpl, bpl", "jz      loc_3B0A"], ["movzx~ebp,<TAG>", "test~bpl,bpl", "jz~FOO"]], [1, 0, 34, 0, 1, 9, 1, 2, 13, 7, 0.0, ["mov     edi, [rsp+0A8h+i.cur.wc]; wc", "call    _iswspace", "mov     rsi, [rsp+0A8h+r]", "test    eax, eax", "mov     eax, 2", "cmovnz  r15d, eax", "cmovnz  rsi, r12", "mov     [rsp+0A8h+r], rsi", "jmp     loc_3617"], ["mov~edi,[rsp+0]", "call~FOO", "mov~rsi,[rsp+0]", "test~eax,eax", "mov~eax,0", "cmovnz~r15d,eax", "cmovnz~rsi,r12", "mov~[rsp+0],rsi", "jmp~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 12, 7, 0.013486513486513486, ["cmp     [rsp+0A8h+i.cur.wc_valid], 0", "jz      loc_3617"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 11, 8, 0.052947052947052944, ["cmp     r15d, 1", "jz      loc_39E0"], ["cmp~r15d,0", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 8, -1, 0.0004995004995004995, ["jmp     loc_3840"], ["jmp~FOO"]], [0, 1, 6, 0, 0, 3, 1, 1, 7, -1, 0.004995004995004995, ["movzx   eax, byte ptr [p+0]", "test    byte ptr [rdx+rax*2+1], 20h", "jnz     short loc_3918"], ["movzx~eax,[yte ptr [p+0]", "test~[yte ptr [rdx+0],<STR>", "jnz~FOO"]], [0, 0, 34, 0, 1, 5, 2, 1, 12, 7, 0.0, ["mov     edi, [rsp+0A8h+i.cur.wc]; wc", "xor     r15d, r15d", "call    _iswspace", "test    eax, eax", "setz    r15b"], ["mov~edi,[rsp+0]", "xor~r15d,r15d", "call~FOO", "test~eax,eax", "setz~r15b"]], [0, 0, 34, 0, 0, 2, 1, 1, 10, 2, 0.05427905427905428, ["test    rax, rax", "jnz     short loc_39B7"], ["test~rax,rax", "jnz~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 9, 3, 0.07109557109557109, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "mov     r12, [rsp+0A8h+i.cur.ptr]", "jz      loc_3AC0"], ["cmp~rax,0", "mov~r12,[rsp+0]", "jz~FOO"]], [2, 0, 37, 1, 0, 7, 2, 1, 4, 8, 0.13994338994338995, ["mov     ecx, [rdx]", "add     rdx, 4", "lea     eax, [rcx-1010101h]", "not     ecx", "and     eax, ecx", "and     eax, 80808080h", "jz      short loc_3582"], ["mov~ecx,<TAG>", "add~rdx,0", "lea~eax,[rcx-1010101h]+0]", "not~ecx", "and~eax,ecx", "and~eax,0", "jz~FOO"]], [0, 0, 37, 0, 0, 2, 0, 0, 3, 9, 0.1382783882783883, ["mov     [rsp+0A8h+i.cur.ptr], d", "mov     rdx, d"], ["mov~[rsp+0],d", "mov~rdx,d"]], [1, 0, 34, 0, 0, 2, 0, 1, 12, 8, 0.02664002664002664, ["cmp     r15d, 2", "jnz     loc_3AB0"], ["cmp~r15d,0", "jnz~FOO"]], [0, 0, 57, 0, 1, 4, 1, 2, 10, 7, 0.07309357309357309, ["mov     edi, [rsp+0A8h+i.cur.wc]; wc", "call    _iswspace", "test    eax, eax", "jz      loc_3A80"], ["mov~edi,[rsp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 57, 0, 0, 3, 0, 1, 12, 8, 0.019563769563769564, ["mov     [rsp+0A8h+i.in_shift], 0", "mov     [rsp+0A8h+i.next_done], 1", "jmp     loc_3779"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 57, 0, 0, 2, 0, 1, 12, 8, 0.019563769563769564, ["mov     [rsp+0A8h+i.next_done], 1", "jmp     loc_3779"], ["mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 57, 0, 0, 6, 0, 0, 9, 8, 0.00949050949050949, ["mov     [rsp+0A8h+i.cur.bytes], 1", "movsx   eax, byte ptr [r15]", "mov     r15, [rsp+0A8h+i.cur.ptr]", "mov     [rsp+0A8h+i.cur.wc_valid], 1", "mov     [rsp+0A8h+i.next_done], 1", "mov     [rsp+0A8h+i.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~r15,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [1, 0, 39, 0, 2, 8, 0, 3, 6, 11, 0.12737262737262736, ["mov     rdi, r15; s", "call    _strlen", "lea     rdx, [rax+1]; n", "mov     rsi, r15; src", "mov     rdi, d; dest", "call    _memmove", "cmp     r12d, 1", "jz      loc_3840"], ["mov~rdi,r15", "call~FOO", "lea~rdx,[rax+0]", "mov~rsi,r15", "mov~rdi,d", "call~FOO", "cmp~r12d,0", "jz~FOO"]], [6, 0, 58, 1, 0, 16, 1, 0, 5, 7, 0.030053280053280052, ["mov     ecx, eax", "mov     [rsp+0A8h+i.in_shift], 0", "mov     qword ptr [rsp+0A8h+i.state.__count], 0", "shr     ecx, 10h", "test    eax, 8080h", "mov     [rsp+0A8h+i.next_done], 0", "cmovz   eax, ecx", "lea     rcx, [rdx+2]", "mov     r15, d", "mov     esi, eax", "cmovz   rdx, rcx", "add     sil, al", "sbb     rdx, 3", "cmp     rdx, d", "mov     [rsp+0A8h+i.limit], rdx", "jbe     loc_3A80"], ["mov~ecx,eax", "mov~[rsp+0],0", "mov~[word ptr [rsp+0],0", "shr~ecx,0", "test~eax,0", "mov~[rsp+0],0", "cmovz~eax,ecx", "lea~rcx,[rdx+0]", "mov~r15,d", "mov~esi,eax", "cmovz~rdx,rcx", "add~sil,al", "sbb~rdx,0", "cmp~rdx,d", "mov~[rsp+0],rdx", "jbe~FOO"]], [1, 0, 57, 1, 0, 6, 0, 0, 11, 6, 0.023476523476523476, ["add     r15, [rsp+0A8h+i.cur.bytes]", "mov     rdx, [rsp+0A8h+i.limit]", "mov     [rsp+0A8h+i.next_done], 0", "cmp     r15, rdx", "mov     [rsp+0A8h+i.cur.ptr], r15", "jnb     loc_3A80"], ["add~r15,[rsp+0]", "mov~rdx,[rsp+0]", "mov~[rsp+0],0", "cmp~r15,rdx", "mov~[rsp+0],r15", "jnb~FOO"]], [2, 0, 40, 1, 0, 6, 0, 1, 10, 12, 0.00616050616050616, ["mov     rax, [rsp+0A8h+i.limit]", "mov     [rsp+0A8h+i.cur.wc_valid], 0", "mov     [rsp+0A8h+i.next_done], 1", "sub     rax, r15", "mov     [rsp+0A8h+i.cur.bytes], rax", "jmp     short loc_3A80"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "sub~rax,r15", "mov~[rsp+0],rax", "jmp~FOO"]], [3, 0, 40, 0, 0, 4, 0, 0, 9, 12, 0.030802530802530804, ["mov     r15, [rsp+0A8h+i.cur.ptr]", "mov     [rsp+0A8h+i.cur.bytes], 1", "mov     [rsp+0A8h+i.cur.wc_valid], 0", "mov     [rsp+0A8h+i.next_done], 1"], ["mov~r15,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [1, 0, 34, 0, 0, 2, 0, 1, 13, 8, 0.008991008991008992, ["cmp     [rsp+0A8h+i.cur.wc_valid], 0", "jz      loc_3AB0"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 34, 0, 0, 3, 0, 1, 11, 1, 0.020313020313020312, ["mov     [rsp+0A8h+i.cur.bytes], 1", "cmp     byte ptr [r12], 0", "jnz     loc_3B40"], ["mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 34, 0, 0, 5, 0, 0, 12, 6, 0.09856809856809856, ["lea     rsi, [r12+r13]", "mov     [rsp+0A8h+i.next_done], 0", "cmp     rsi, r14", "mov     [rsp+0A8h+i.cur.ptr], rsi", "jnb     loc_3830"], ["lea~rsi,<TAG>", "mov~[rsp+0],0", "cmp~rsi,r14", "mov~[rsp+0],rsi", "jnb~FOO"]], [1, 0, 34, 0, 1, 6, 1, 2, 14, 7, 0.002580752580752581, ["mov     edi, [rsp+0A8h+i.cur.wc]; wc", "call    _iswspace", "test    eax, eax", "mov     eax, 1", "cmovz   r15d, eax", "jmp     loc_3617"], ["mov~edi,[rsp+0]", "call~FOO", "test~eax,eax", "mov~eax,0", "cmovz~r15d,eax", "jmp~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 13, 7, 0.007575757575757576, ["mov     r15d, 1", "jmp     loc_3617"], ["mov~r15d,0", "jmp~FOO"]], [1, 0, 57, 0, 0, 2, 0, 1, 7, 5, 0.051864801864801864, ["cmp     [rsp+0A8h+i.in_shift], 0", "jz      short loc_3740"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 57, 0, 0, 4, 0, 1, 6, 6, 0.019230769230769232, ["lea     rbp, [rsp+0A8h+i]", "lea     r14, is_basic_table", "lea     r13, [rbp+0Ch]", "jmp     short loc_37A7"], ["lea~rbp,[rsp+0]", "lea~r14,<TAG>", "lea~r13,[rbp+0]", "jmp~FOO"]], [0, 0, 6, 0, 1, 3, 0, 2, 6, -1, 0.005994005994005994, ["call    ___ctype_b_loc", "mov     rdx, [rax]", "jmp     short loc_3929"], ["call~FOO", "mov~rdx,<TAG>", "jmp~FOO"]], [2, 0, 6, 1, 0, 4, 0, 1, 8, -1, 0.0004995004995004995, ["mov     byte ptr [p+0], 0", "sub     p, 1", "cmp     d, p", "ja      loc_3840"], ["mov~[yte ptr [p+0],0", "sub~p,0", "cmp~d,p", "ja~FOO"]], [0, 0, 34, 0, 0, 3, 1, 1, 12, 11, 0.01073926073926074, ["mov     eax, [rsp+0A8h+i.cur.wc]", "test    eax, eax", "jnz     loc_3B3B"], ["mov~eax,[rsp+0]", "test~eax,eax", "jnz~FOO"]], [1, 0, 57, 0, 0, 3, 0, 1, 9, 3, 0.030136530136530136, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "mov     r15, [rsp+0A8h+i.cur.ptr]", "jz      loc_3AE0"], ["cmp~rax,0", "mov~r15,[rsp+0]", "jz~FOO"]], [1, 0, 57, 1, 1, 8, 0, 2, 8, 4, 0.058774558774558776, ["lea     rcx, [rbp+0Ch]; p", "lea     rdi, [rbp+2Ch]; iter", "sub     rdx, r15; n", "mov     rsi, r15; s", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+0A8h+i.cur.bytes], rax", "jz      loc_3A68"], ["lea~rcx,[rbp+0]", "lea~rdi,[rbp+0]", "sub~rdx,r15", "mov~rsi,r15", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 7, 5, 0.2078754578754579, ["cmp     [rsp+0A8h+i.in_shift], 0", "jnz     loc_3961"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 6, 6, 0.13944388944388944, ["lea     rbp, [rsp+0A8h+i]", "lea     rax, [rbp+0Ch]", "mov     [rsp+0A8h+ps], rax", "jmp     short loc_362E"], ["lea~rbp,[rsp+0]", "lea~rax,[rbp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 13, -1, 0.022810522810522812, ["cmp     r15d, 2", "jnz     short loc_3840"], ["cmp~r15d,0", "jnz~FOO"]], [1, 0, 34, 1, 1, 8, 0, 2, 8, 4, 0.13478188478188477, ["lea     rcx, [rbp+0Ch]; p", "mov     rdx, r14", "lea     rdi, [rbp+2Ch]; pwc", "sub     rdx, rsi; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+0A8h+i.cur.bytes], rax", "jz      loc_3A40"], ["lea~rcx,[rbp+0]", "mov~rdx,r14", "lea~rdi,[rbp+0]", "sub~rdx,rsi", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 13, -1, 0.0, ["call    mbiter_multi_next"], ["call~FOO"]], [1, 0, 3, 0, 0, 3, 0, 0, 14, -1, 0.0, ["mov     rax, [rsp+0A8h+r]", "mov     byte ptr [rax], 0", "xchg    ax, ax"], ["mov~rax,[rsp+0]", "mov~<TAG>,0", "xchg~ax,ax"]], [1, 0, 10, 0, 2, 8, 0, 3, 5, -1, 0.008907758907758908, ["mov     rdi, p; s", "call    _strlen", "lea     rdx, [rax+1]; n", "mov     rsi, p; src", "mov     rdi, d; dest", "call    _memmove", "cmp     r12d, 1", "jz      loc_3840"], ["mov~rdi,p", "call~FOO", "lea~rdx,[rax+0]", "mov~rsi,p", "mov~rdi,d", "call~FOO", "cmp~r12d,0", "jz~FOO"]], [0, 0, 11, 0, 0, 2, 0, 1, 4, -1, 0.002913752913752914, ["mov     r13, p", "jmp     loc_38A5"], ["mov~r13,p", "jmp~FOO"]], [0, 0, 16, 0, 0, 2, 1, 1, 2, -1, 0.004995004995004995, ["test    r12d, r12d", "jz      short loc_38C6"], ["test~r12d,r12d", "jz~FOO"]], [1, 0, 76, 0, 1, 4, 0, 1, 1, 11, 0.012654012654012654, ["mov     rbx, d", "call    ___ctype_get_mb_cur_max", "cmp     rax, 1", "jbe     loc_3870"], ["mov~rbx,d", "call~FOO", "cmp~rax,0", "jbe~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 10, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5806; \"mbiter_multi_next\"", "lea     rsi, aMbiterH; \"mbiter.h\"", "lea     rdi, aMbsinitIterSta; \"mbsinit (&iter->state)\"", "mov     edx, 86h; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 34, 0, 1, 5, 1, 2, 9, 6, 0.016733266733266732, ["mov     rdi, [rsp+0A8h+ps]; ps", "mov     [rsp+0A8h+var_98], rsi", "call    _mbsinit", "test    eax, eax", "jz      loc_3B1C"], ["mov~rdi,[rsp+0]", "mov~[rsp+0],rsi", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 3, -1, 0.009573759573759574, ["mov     rdx, d"], ["mov~rdx,d"]], [0, 0, 38, 0, 0, 1, 0, 1, 7, 10, 0.11871461871461872, ["jmp     loc_357A"], ["jmp~FOO"]], [1, 0, 57, 0, 0, 2, 0, 1, 10, 5, 0.010989010989010988, ["mov     [rsp+0A8h+i.in_shift], 1", "jmp     loc_37AE"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 34, 0, 1, 6, 1, 2, 11, 10, 0.03146853146853147, ["lea     rdi, [rbp+0Ch]; ps", "mov     [rsp+0A8h+i.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "mov     r14, [rsp+0A8h+i.limit]", "jz      short loc_39D3"], ["lea~rdi,[rbp+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "mov~r14,[rsp+0]", "jz~FOO"]], [0, 0, 60, 0, 0, 2, 0, 0, 3, 9, 0.011738261738261738, ["mov     [rsp+0A8h+i.cur.ptr], d", "mov     rdx, d"], ["mov~[rsp+0],d", "mov~rdx,d"]], [0, 0, 61, 0, 0, 2, 1, 1, 2, 10, 0.019647019647019648, ["test    r12d, r12d", "jnz     loc_36C8"], ["test~r12d,r12d", "jnz~FOO"]], [2, 0, 34, 0, 0, 8, 1, 0, 8, 7, 0.07292707292707293, ["movzx   ecx, byte ptr [rsi]", "lea     rdi, is_basic_table", "mov     eax, ecx", "shr     al, 5", "and     eax, 7", "mov     eax, [rdi+rax*4]", "bt      eax, ecx", "jnb     loc_3940"], ["movzx~ecx,<TAG>", "lea~rdi,<TAG>", "mov~eax,ecx", "shr~al,0", "and~eax,0", "mov~eax,<TAG>", "bt~eax,ecx", "jnb~FOO"]], [2, 0, 60, 1, 0, 7, 2, 1, 4, 8, 0.021062271062271064, ["mov     ecx, [rdx]", "add     rdx, 4", "lea     eax, [rcx-1010101h]", "not     ecx", "and     eax, ecx", "and     eax, 80808080h", "jz      short loc_36D0"], ["mov~ecx,<TAG>", "add~rdx,0", "lea~eax,[rcx-1010101h]+0]", "not~ecx", "and~eax,ecx", "and~eax,0", "jz~FOO"]], [1, 0, 34, 0, 0, 1, 0, 0, 12, 10, 0.0, ["mov     [rsp+0A8h+i.in_shift], 0"], ["mov~[rsp+0],0"]], [1, 0, 0, 0, 1, 5, 0, 1, 12, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5806; \"mbiter_multi_next\"", "lea     rsi, aMbiterH; \"mbiter.h\"", "lea     rdi, aIterCurPtr0; \"*iter->cur.ptr == '\\\\0'\"", "mov     edx, 0A1h; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [2, 0, 57, 0, 0, 3, 0, 1, 11, 1, 0.009657009657009656, ["mov     [rsp+0A8h+i.cur.bytes], 1", "cmp     byte ptr [r15], 0", "jnz     loc_3B40"], ["mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [6, 0, 35, 1, 0, 18, 2, 0, 5, 7, 0.14127539127539127, ["mov     ecx, eax", "mov     [rsp+0A8h+i.in_shift], 0", "mov     qword ptr [rsp+0A8h+i.state.__count], 0", "shr     ecx, 10h", "test    eax, 8080h", "mov     [rsp+0A8h+i.next_done], 0", "cmovz   eax, ecx", "lea     rcx, [rdx+2]", "mov     esi, eax", "cmovz   rdx, rcx", "add     sil, al", "mov     rsi, d", "sbb     rdx, 3", "xor     r15d, r15d", "cmp     rdx, d", "mov     r14, rdx", "mov     [rsp+0A8h+i.limit], rdx", "jbe     loc_3840"], ["mov~ecx,eax", "mov~[rsp+0],0", "mov~[word ptr [rsp+0],0", "shr~ecx,0", "test~eax,0", "mov~[rsp+0],0", "cmovz~eax,ecx", "lea~rcx,[rdx+0]", "mov~esi,eax", "cmovz~rdx,rcx", "add~sil,al", "mov~rsi,d", "sbb~rdx,0", "xor~r15d,r15d", "cmp~rdx,d", "mov~r14,rdx", "mov~[rsp+0],rdx", "jbe~FOO"]], [1, 0, 34, 0, 0, 2, 0, 0, 10, 5, 0.00715950715950716, ["mov     rsi, [rsp+0A8h+var_98]; s", "mov     [rsp+0A8h+i.in_shift], 1"], ["mov~rsi,[rsp+0]", "mov~[rsp+0],0"]], [1, 0, 0, 1, 0, 8, 0, 0, 7, -1, 0.0, ["add     rsp, 78h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 6, -1, 0.023976023976023976, ["mov     rax, d", "mov     d, [rsp+0A8h+var_40]", "xor     d, fs:28h", "jnz     loc_3B12"], ["mov~rax,d", "mov~d,[rsp+0]", "xor~d,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 7, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [23, 35, 79, 2, 79, 119, 1, 352, 0.03339, 6, 15], "succs": [[32, 31], [0, 73], [0, 55], [24, 41], [3, 21], [4], [4], [4], [4], [77, 46], [9, 10], [57, 13], [11], [57, 11], [65, 61], [33, 14], [], [16, 60], [58, 12], [41], [41, 19], [20, 29], [77], [22, 47], [41], [40, 66], [25, 7], [74, 27], [27], [43, 39], [34, 36], [30], [30], [30], [64, 77], [34, 45], [34, 44], [34], [34], [42, 43], [48, 72], [51, 53], [41], [41], [50, 15], [44], [23], [77, 23], [66, 55], [1, 37], [49, 38], [69, 54], [51], [56, 77], [26, 6], [], [77], [77, 63], [57], [18, 63], [59, 68], [], [75, 61], [10], [28], [50], [5, 71], [70], [67, 28], [8, 62], [35, 70], [5], [], [72, 2], [52, 77], [54], [], [76, 78], []], "fname": "trim2", "n_num": 79}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    _abort; jumptable 0000000000003C50 case 0"], ["call~FOO"]], [0, 0, 13, 1, 0, 4, 0, 1, 7, -1, 0.18115942028985507, ["lea     rdx, off_ABF8", "movsxd  rax, dword ptr [rdx+n_authors*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 9, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 2, 9, 2, 3, 8, -1, 0.07608695652173914, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, authors; args", "mov     rsi, rax; format", "mov     rdi, stream; fp", "call    rpl_vfprintf", "mov     rax, [rsp+38h+var_20]", "xor     rax, fs:28h", "jnz     loc_3D86"], ["xor~edi,edi", "call~FOO", "mov~rdx,authors", "mov~rsi,rax", "mov~rdi,stream", "call~FOO", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 0, 3, 0, 0, 3, 0, 0, 8, -1, 0.0006038647342995169, ["lea     rsi, aWrittenBySSSSS; jumptable 0000000000003C50 case 8", "mov     edx, 5; category", "nop     dword ptr [rax+00h]"], ["lea~rsi,<TAG>", "mov~edx,0", "nop~[word ptr [rax+0]"]], [0, 1, 24, 1, 0, 16, 2, 0, 0, 2, 0.0, ["push    r12", "push    rbp", "mov     r12, authors", "push    rbx", "mov     rbp, stream", "xor     ebx, ebx", "sub     rsp, 20h", "mov     rax, fs:28h", "mov     [rsp+38h+var_20], rax", "xor     eax, eax", "movdqu  xmm0, xmmword ptr [authors]", "movups  xmmword ptr [rsp+38h+tmp_authors.gp_offset], xmm0", "mov     rax, [authors+10h]", "mov     [rsp+38h+tmp_authors.reg_save_area], rax", "mov     authors, rax", "nop     dword ptr [rax]"], ["push~r12", "push~rbp", "mov~r12,authors", "push~rbx", "mov~rbp,stream", "xor~ebx,ebx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movdqu~xmm0,<TAG>", "movups~<TAG>,xmm0", "mov~rax,[authors+0]", "mov~[rsp+0],rax", "mov~authors,rax", "nop~<TAG>"]], [0, 0, 24, 0, 0, 4, 0, 1, 2, 0, 0.05615942028985507, ["mov     rdi, [rsp+38h+tmp_authors.overflow_arg_area]", "lea     rax, [rdi+8]", "mov     [rsp+38h+tmp_authors.overflow_arg_area], rax", "jmp     loc_3BAF"], ["mov~rdi,[rsp+0]", "lea~rax,[rdi+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 24, 0, 0, 3, 0, 1, 1, 1, 0.08876811594202899, ["mov     eax, [rsp+38h+tmp_authors.gp_offset]", "cmp     eax, 2Fh ; '/'", "ja      loc_3D8B"], ["mov~eax,<TAG>", "cmp~eax,0", "ja~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 0000000000003C50 case 4", "lea     rsi, aWrittenBySSSAn; \"Written by %s, %s, %s,\\nand %s.\\n\"", "jmp     loc_3C90"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 24, 1, 0, 2, 0, 1, 4, 2, 0.012681159420289856, ["add     n_authors, 1", "jmp     short loc_3B98"], ["add~n_authors,0", "jmp~FOO"]], [1, 0, 24, 2, 0, 4, 0, 0, 2, 4, 0.05615942028985507, ["mov     edi, eax", "add     eax, 8", "add     rdi, r8", "mov     [rsp+38h+tmp_authors.gp_offset], eax"], ["mov~edi,eax", "add~eax,0", "add~rdi,r8", "mov~<TAG>,eax"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 0000000000003C50 case 9", "lea     rsi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "jmp     short loc_3C90"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 0000000000003C50 case 1", "lea     rsi, aWrittenByS; \"Written by %s.\\n\"", "jmp     short loc_3C90"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 0000000000003C50 case 2", "lea     rsi, aWrittenBySAndS; \"Written by %s and %s.\\n\"", "jmp     short loc_3C90"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 0000000000003C50 case 3", "lea     rsi, aWrittenBySSAnd; \"Written by %s, %s, and %s.\\n\"", "jmp     short loc_3C90"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 0000000000003C50 case 5", "lea     rsi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "jmp     loc_3C90"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 0000000000003C50 case 6", "lea     rsi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "jmp     loc_3C90"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 0000000000003C50 case 7", "lea     rsi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "jmp     loc_3C90"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 7, -1, 0.05434782608695652, ["mov     edx, 5; jumptable 0000000000003C50 default case", "lea     rsi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "jmp     loc_3C90"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 24, 0, 0, 2, 0, 1, 3, 3, 0.18659420289855072, ["cmp     qword ptr [rdi], 0", "jz      short loc_3BC0"], ["cmp~<TAG>,0", "jz~FOO"]], [5, 0, 15, 0, 4, 20, 3, 5, 6, -1, 0.24456521739130435, ["lea     rsi, aC; \"(C)\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     rcx, rax", "mov     r8d, 7D8h", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rsi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, stream; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "cmp     n_authors, 9; switch 10 cases", "ja      loc_3D70; jumptable 0000000000003C50 default case"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8d,0", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,stream", "mov~rdi,rax", "call~FOO", "cmp~n_authors,0", "ja~FOO"]], [1, 0, 16, 0, 1, 8, 1, 2, 5, -1, 0.10144927536231885, ["mov     r8, version", "mov     version, package", "lea     package, aSS_0; \"%s %s\\n\"", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_3BE8"], ["mov~r8,version", "mov~version,package", "lea~package,<TAG>", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 16, 0, 1, 8, 1, 1, 5, -1, 0.10144927536231885, ["mov     r8, package", "lea     package, aSSS; \"%s (%s) %s\\n\"", "mov     r9, version", "mov     rdi, stream", "mov     version, command_name", "xor     eax, eax", "mov     esi, 1", "call    ___fprintf_chk"], ["mov~r8,package", "lea~package,<TAG>", "mov~r9,version", "mov~rdi,stream", "mov~version,command_name", "xor~eax,eax", "mov~esi,0", "call~FOO"]], [0, 1, 0, 1, 0, 5, 0, 0, 9, -1, 0.0, ["add     rsp, 20h", "pop     n_authors", "pop     stream", "pop     authors", "retn"], ["add~rsp,<STR>", "pop~n_authors", "pop~stream", "pop~authors", "retn"]], [0, 0, 18, 0, 0, 2, 1, 1, 4, -1, 0.1956521739130435, ["test    command_name, command_name", "jz      loc_3C58"], ["test~command_name,command_name", "jz~FOO"]]], "func_feature": [10, 10, 28, 1, 25, 36, 1, 119, 0.05442, 17, 6], "succs": [[], [0, 4, 8, 11, 12, 13, 14, 15, 16, 17], [], [2, 23], [3], [7], [19], [10, 6], [3], [7], [19], [3], [3], [3], [3], [3], [3], [3], [3], [24, 9], [1, 18], [20], [20], [], [21, 22]], "fname": "version_etc_va", "n_num": 25}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[1, 1, 2, 0, 1, 14, 2, 2, 0, 0, 0.3333333333333333, ["mov     rax, fs:28h", "mov     [rsp+0D8h+var_C0], rax", "xor     eax, eax", "lea     rax, [rsp+0D8h+arg_0]", "mov     r8, rsp; authors", "mov     [rsp+0D8h+authors.overflow_arg_area], rax", "lea     rax, [rsp+0D8h+var_B8]", "mov     [rsp+0D8h+authors.gp_offset], 20h ; ' '", "mov     [rsp+0D8h+authors.fp_offset], 30h ; '0'", "mov     [rsp+0D8h+authors.reg_save_area], rax", "call    version_etc_va", "mov     rax, [rsp+0D8h+var_C0]", "xor     rax, fs:28h", "jnz     short loc_3E42"], ["mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "mov~r8,rsp", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~<TAG>,<STR>", "mov~[rsp+0],0", "mov~[rsp+0],rax", "call~FOO", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 0, 4, 1, 0, 5, 1, 1, 0, 2, 0.0, ["sub     rsp, 0D8h", "test    al, al", "mov     [rsp+0D8h+var_98], r8", "mov     [rsp+0D8h+var_90], r9", "jz      short loc_3DEC"], ["sub~rsp,0", "test~al,al", "mov~[rsp+0],r8", "mov~[rsp+0],r9", "jz~FOO"]], [0, 0, 3, 0, 0, 8, 0, 0, 1, 2, 0.0, ["movaps  [rsp+0D8h+var_88], xmm0", "movaps  [rsp+0D8h+var_78], xmm1", "movaps  [rsp+0D8h+var_68], xmm2", "movaps  [rsp+0D8h+var_58], xmm3", "movaps  [rsp+0D8h+var_48], xmm4", "movaps  [rsp+0D8h+var_38], xmm5", "movaps  [rsp+0D8h+var_28], xmm6", "movaps  [rsp+0D8h+var_18], xmm7"], ["movaps~[rsp+0],xmm0", "movaps~[rsp+0],xmm1", "movaps~[rsp+0],xmm2", "movaps~[rsp+0],xmm3", "movaps~[rsp+0],xmm4", "movaps~[rsp+0],xmm5", "movaps~[rsp+0],xmm6", "movaps~[rsp+0],xmm7"]], [1, 0, 0, 1, 0, 2, 0, 0, 2, -1, 0.0, ["add     rsp, 0D8h", "retn"], ["add~rsp,0", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 3, 4, 12, 5, 5, 1, 30, 0.06667, 1, 2], "succs": [[3, 4], [0, 2], [0], [], []], "fname": "version_etc", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[2, 0, 0, 1, 3, 12, 3, 3, 0, 0, 0.0, ["lea     rsi, aMemoryExhauste; \"memory exhausted\"", "sub     rsp, 8", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     edi, cs:exit_failure; status", "lea     rdx, format+4; format", "mov     rcx, rax", "xor     esi, esi; errnum", "xor     eax, eax", "call    _error", "call    _abort"], ["lea~rsi,<TAG>", "sub~rsp,0", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~edi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "xor~esi,esi", "xor~eax,eax", "call~FOO", "call~FOO"]]], "func_feature": [3, 3, 3, 0, 1, 0, 8, 12, 0.0, 3, 1], "succs": [[]], "fname": "xalloc_die", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[1, 0, 2, 0, 1, 3, 0, 2, 0, 0, 0.16666666666666666, ["call    ___errno_location", "cmp     dword ptr [rax], 0Ch", "jnz     short loc_3E9C"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "call    mem_cd_iconv", "test    eax, eax", "mov     ebx, eax", "js      short loc_3EA0"], ["push~rbx", "call~FOO", "test~eax,eax", "mov~ebx,eax", "js~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 1, -1, 0.0, ["mov     eax, ebx", "pop     retval", "retn"], ["mov~eax,ebx", "pop~retval", "retn"]]], "func_feature": [3, 1, 5, 0, 4, 4, 0, 12, 0.04167, 0, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "xmem_cd_iconv", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[1, 0, 2, 0, 1, 3, 0, 2, 0, 0, 0.16666666666666666, ["call    ___errno_location", "cmp     dword ptr [rax], 0Ch", "jnz     short loc_3EBE"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "call    str_cd_iconv", "test    rax, rax", "mov     rbx, rax", "jz      short loc_3EC8"], ["push~rbx", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 1, -1, 0.0, ["mov     rax, result", "pop     result", "retn"], ["mov~rax,result", "pop~result", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [3, 1, 5, 0, 4, 4, 0, 12, 0.04167, 0, 0], "succs": [[2, 3], [0, 2], [], []], "fname": "xstr_cd_iconv", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[1, 0, 2, 0, 1, 3, 0, 2, 0, 0, 0.16666666666666666, ["call    ___errno_location", "cmp     dword ptr [rax], 0Ch", "jnz     short loc_3EEE"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "call    str_iconv", "test    rax, rax", "mov     rbx, rax", "jz      short loc_3EF8"], ["push~rbx", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 1, -1, 0.0, ["mov     rax, result", "pop     result", "retn"], ["mov~rax,result", "pop~result", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [3, 1, 5, 0, 4, 4, 2, 12, 0.04167, 0, 0], "succs": [[2, 3], [0, 2], [], []], "fname": "xstr_iconv", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:file_name, file", "retn"], ["mov~<TAG>,file", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 2, 0, 1, 4, 1, 2, 0, 0, 0.06666666666666667, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jnz     short loc_3F93"], ["mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 6, 0, 1, 7, 1, 2, 0, 2, 0.0, ["mov     rdi, cs:__bss_start; stream", "push    r12", "push    rbp", "push    rbx", "call    close_stream", "test    eax, eax", "jnz     short loc_3F49"], ["mov~rdi,<TAG>", "push~r12", "push~rbp", "push~rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["pop     rbx", "pop     rbp", "pop     r12", "retn"], ["pop~rbx", "pop~rbp", "pop~r12", "retn"]], [0, 0, 1, 0, 2, 9, 2, 2, 2, -1, 0.016666666666666666, ["mov     rdi, r12; arg", "call    quotearg_colon", "mov     esi, [rbx]; errnum", "lea     rdx, format; \"%s: %s\"", "mov     rcx, rax", "mov     r8, write_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rdi,r12", "call~FOO", "mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8,write_error", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [1, 0, 3, 0, 2, 10, 2, 3, 1, 1, 0.06666666666666667, ["lea     rsi, msgid; \"write error\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     r12, cs:file_name", "mov     rbp, rax", "call    ___errno_location", "mov     rbx, rax", "test    r12, r12", "jz      short loc_3F9E"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~r12,<TAG>", "mov~rbp,rax", "call~FOO", "mov~rbx,rax", "test~r12,r12", "jz~FOO"]], [0, 0, 1, 0, 1, 7, 2, 2, 2, 0, 0.016666666666666666, ["mov     esi, [rax]; errnum", "lea     rdx, format+4; format", "mov     rcx, write_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     short loc_3F93"], ["mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,write_error", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     edi, cs:exit_failure; status", "call    __exit"], ["mov~edi,<TAG>", "call~FOO"]]], "func_feature": [8, 8, 12, 0, 7, 8, 0, 43, 0.02381, 7, 0], "succs": [[2, 6], [0, 4], [], [6], [3, 5], [6], []], "fname": "close_stdout", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     rdx, name; arg", "mov     esi, 6; s", "jmp     quotearg_n_style"], ["mov~rdx,name", "mov~esi,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "quote_n", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[1, 0, 1, 0, 0, 4, 1, 1, 0, 0, 0.0, ["mov     rdx, name; arg", "mov     esi, 6; s", "xor     edi, edi; n", "jmp     quotearg_n_style"], ["mov~rdx,name", "mov~esi,0", "xor~edi,edi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 1, 4, 0.0, 0, 0], "succs": [[1], []], "fname": "quote", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[2, 0, 159, 0, 0, 3, 0, 1, 0, 0, 0.0017825311942959003, ["mov     ebp, 5Ch ; '\\'", "mov     eax, 5Ch ; '\\'", "jmp     c_and_shell_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 9, -1, 0.018788453797941466, ["test    r11b, r11b; jumptable 0000000000004148 case 92", "jz      loc_47F8"], ["test~r11b,r11b", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.013469610718187568, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jz      loc_47F8"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 11, -1, 0.00575489237728327, ["test    r11b, r11b; jumptable 0000000000004708 case 92", "jz      short loc_47F8"], ["test~r11b,r11b", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 12, -1, 0.004834876277001514, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jz      short loc_47F8"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 159, 1, 0, 3, 0, 0, 21, -1, 0.03944569029958024, ["add     rbx, 4", "mov     r15, i_0", "nop     dword ptr [rax+rax+00h]"], ["add~rbx,0", "mov~r15,i_0", "nop~[word ptr [rax+0]"]], [0, 0, 159, 0, 0, 3, 0, 0, 20, -1, 0.04002070036225634, ["lea     len, [rbx+3]", "cmp     r8, len", "jbe     short loc_41FC"], ["lea~len,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 21, -1, 0.0, ["mov     rdi, [rsp+0C8h+buffer]", "mov     byte ptr [rdi+rbx+3], 3Fh ; '?'"], ["mov~rdi,<TAG>", "mov~[yte ptr [rdi+0],0"]], [1, 0, 3, 0, 0, 3, 0, 1, 9, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx], 0", "jmp     loc_4412"], ["mov~rax,<TAG>", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 8, -1, 0.007575757575757576, ["cmp     rbx, r14", "jnb     loc_4412"], ["cmp~rbx,r14", "jnb~FOO"]], [1, 0, 159, 1, 0, 4, 0, 1, 16, -1, 0.007029498016215284, ["add     m, 1", "lea     rdx, [r15+m]", "cmp     r13, rdx", "ja      short loc_4AB8"], ["add~m,0", "lea~rdx,<TAG>", "cmp~r13,rdx", "ja~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 15, -1, 0.014346501063768616, ["cmp     byte ptr [rsi], 0", "jnz     short loc_4ABF"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 17, -1, 0.0, ["cmp     byte ptr [r14+m], 0", "jz      short loc_4ACC"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 9, -1, 0.17992671816201256, ["test    r11b, r11b; jumptable 0000000000004148 cases 37,43-58,65-90,93,95,97-122", "jz      loc_42DD"], ["test~r11b,r11b", "jz~FOO"]], [0, 0, 159, 1, 0, 5, 0, 1, 8, -1, 0.32742875579687775, ["lea     rcx, off_ACC0", "movzx   edx, bpl", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movzx~edx,bpl", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [1, 0, 159, 0, 0, 4, 0, 0, 12, -1, 0.06225442278573208, ["lea     rax, [i_0+2]", "mov     ebp, 3Fh ; '?'", "cmp     rax, argsize_0", "jnb     loc_4208; jumptable 0000000000004148 cases 37,43-58,65-90,93,95,97-122"], ["lea~rax,[i_0+0]", "mov~ebp,0", "cmp~rax,argsize_0", "jnb~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 13, -1, 0.055867019339505115, ["cmp     byte ptr [arg_0+i_0+1], 3Fh ; '?'", "jnz     short loc_4208; jumptable 0000000000004148 cases 37,43-58,65-90,93,95,97-122"], ["cmp~[yte ptr [arg_0+0],0", "jnz~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 10, -1, 0.008998907480880915, ["test    al, al", "jnz     loc_4208; jumptable 0000000000004148 cases 37,43-58,65-90,93,95,97-122"], ["test~al,al", "jnz~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 9, -1, 0.0004743833017077799, ["test    i_0, i_0; jumptable 0000000000004148 cases 35,126", "jnz     loc_4208; jumptable 0000000000004148 cases 37,43-58,65-90,93,95,97-122"], ["test~i_0,i_0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 9, -1, 0.009962049335863378, ["cmp     [rsp+0C8h+quoting_style], 2; jumptable 0000000000004148 cases 32-34,36,38,40-42,59-62,91,94,96,124", "jnz     loc_4208; jumptable 0000000000004148 cases 37,43-58,65-90,93,95,97-122"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.005333218331320799, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jz      loc_4208; jumptable 0000000000004148 cases 37,43-58,65-90,93,95,97-122"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.03817587641117054, ["cmp     [rsp+0C8h+quoting_style], 2; jumptable 0000000000004148 case 39", "mov     ebp, 27h ; '''", "jnz     loc_4208; jumptable 0000000000004148 cases 37,43-58,65-90,93,95,97-122"], ["cmp~[rsp+0],0", "mov~ebp,0", "jnz~FOO"]], [2, 0, 159, 1, 0, 3, 0, 1, 14, -1, 0.030849289862572595, ["add     rbx, 3", "mov     ebp, 27h ; '''", "jmp     loc_4208; jumptable 0000000000004148 cases 37,43-58,65-90,93,95,97-122"], ["add~rbx,0", "mov~ebp,0", "jmp~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 10, -1, 0.07923638663676615, ["test    r12b, r12b", "jz      loc_4208; jumptable 0000000000004148 cases 37,43-58,65-90,93,95,97-122"], ["test~r12b,r12b", "jz~FOO"]], [0, 0, 159, 1, 0, 5, 0, 1, 10, -1, 0.03691199516626467, ["lea     rcx, off_AEBC", "movzx   edx, bpl", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movzx~edx,bpl", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.022502060452724588, ["mov     ebp, 3Fh ; '?'", "jmp     loc_4208; jumptable 0000000000004148 cases 37,43-58,65-90,93,95,97-122"], ["mov~ebp,0", "jmp~FOO"]], [3, 0, 3, 1, 1, 13, 1, 1, 8, -1, 0.013153355183715715, ["sub     rsp, 8", "mov     rdx, arg_0; arg", "mov     rcx, argsize_0; argsize", "push    0; quote_these_too", "mov     r9d, [rsp+0D8h+flags]", "mov     rsi, r14; buffersize", "mov     r8d, [rsp+0D8h+quoting_style]; quoting_style", "mov     rdi, [rsp+0D8h+buffer]; buffer", "and     r9d, 0FFFFFFFDh; flags", "call    quotearg_buffer_restyled", "mov     rbx, len", "pop     len", "pop     rdx"], ["sub~rsp,0", "mov~rdx,arg_0", "mov~rcx,argsize_0", "push~0", "mov~r9d,[rsp+0]", "mov~rsi,r14", "mov~r8d,[rsp+0]", "mov~rdi,[rsp+0]", "and~r9d,0", "call~FOO", "mov~rbx,len", "pop~len", "pop~rdx"]], [0, 0, 13, 0, 0, 2, 1, 1, 7, -1, 0.0030906790868840206, ["test    rbx, rbx", "jz      force_outer_quoting_style"], ["test~rbx,rbx", "jz~FOO"]], [0, 0, 4, 0, 0, 4, 0, 1, 20, -1, 0.0008625150940141453, ["mov     r13, arg_0", "mov     printable, [rsp+0C8h+argsize]", "mov     arg_0, [rsp+0C8h+var_80]", "jmp     force_outer_quoting_style"], ["mov~r13,arg_0", "mov~printable,[rsp+0]", "mov~arg_0,[rsp+0]", "jmp~FOO"]], [0, 0, 4, 0, 0, 3, 0, 0, 11, -1, 0.013857742510493935, ["mov     r12, argsize_0", "mov     r14, r8", "mov     argsize_0, arg_0"], ["mov~r12,argsize_0", "mov~r14,r8", "mov~argsize_0,arg_0"]], [0, 0, 159, 0, 0, 14, 0, 0, 14, -1, 0.027686734517854063, ["mov     rdi, r13", "mov     r13, [rsp+0C8h+argsize]", "mov     rsi, rbp", "mov     bytes, m", "mov     r9, arg_0", "mov     bytes, [rsp+0C8h+i]", "mov     r10, [rsp+0C8h+var_78]", "movzx   r11d, [rsp+0C8h+var_6A]", "cmp     rdi, r13", "movzx   ebp, [rsp+0C8h+c]", "mov     rbx, [rsp+0C8h+var_68]", "mov     r8, [rsp+0C8h+var_80]", "mov     arg_0, [rsp+0C8h+var_60]", "jnb     short loc_4ACC"], ["mov~rdi,r13", "mov~r13,[rsp+0]", "mov~rsi,rbp", "mov~bytes,m", "mov~r9,arg_0", "mov~bytes,[rsp+0]", "mov~r10,[rsp+0]", "movzx~r11d,[rsp+0]", "cmp~rdi,r13", "movzx~ebp,[rsp+0]", "mov~rbx,[rsp+0]", "mov~r8,[rsp+0]", "mov~arg_0,[rsp+0]", "jnb~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.14407963250467998, ["cmp     [rsp+0C8h+var_B8], 0", "jz      short loc_4253"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 159, 0, 0, 1, 0, 1, 11, -1, 0.001466275659824047, ["jmp     loc_4211"], ["jmp~FOO"]], [2, 0, 159, 1, 0, 5, 0, 0, 12, -1, 0.04125697199700995, ["lea     rax, [i_0+1]", "add     rbx, 1", "mov     ebp, 30h ; '0'", "cmp     rax, argsize_0", "jnb     loc_4211"], ["lea~rax,[i_0+0]", "add~rbx,0", "mov~ebp,0", "cmp~rax,argsize_0", "jnb~FOO"]], [2, 0, 159, 1, 0, 4, 0, 1, 13, -1, 0.023719165085388995, ["movzx   eax, byte ptr [arg_0+i_0+1]", "sub     eax, 30h ; '0'", "cmp     al, 9", "ja      loc_4211"], ["movzx~eax,[yte ptr [arg_0+0]", "sub~eax,0", "cmp~al,0", "ja~FOO"]], [1, 0, 159, 0, 0, 3, 0, 1, 16, -1, 0.017882812949226612, ["lea     rbx, [rdx+3]", "mov     ebp, 30h ; '0'", "jmp     loc_4211"], ["lea~rbx,[rdx+0]", "mov~ebp,0", "jmp~FOO"]], [2, 0, 160, 0, 0, 6, 3, 1, 2, -1, 0.002300040250704387, ["mov     [rsp+0C8h+elide_outer_quotes], 0; jumptable 0000000000004058 case 0", "xor     ebp, ebp", "xor     r11d, r11d", "mov     [rsp+0C8h+quote_string], 0", "xor     ebx, ebx", "jmp     loc_4078"], ["mov~[rsp+0],0", "xor~ebp,ebp", "xor~r11d,r11d", "mov~[rsp+0],0", "xor~ebx,ebx", "jmp~FOO"]], [0, 0, 185, 1, 0, 6, 0, 1, 1, -1, 0.0053188430797538955, ["lea     rcx, off_ACA0", "mov     edx, r15d", "mov     ebp, ebx", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "mov~edx,r15d", "mov~ebp,ebx", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [0, 0, 159, 0, 0, 2, 0, 0, 12, -1, 0.4664481628428498, ["cmp     rbx, r8", "jnb     short loc_4264"], ["cmp~rbx,r8", "jnb~FOO"]], [0, 0, 159, 0, 0, 1, 0, 1, 15, -1, 0.13409234661606578, ["jmp     store_c"], ["jmp~FOO"]], [2, 0, 159, 1, 0, 3, 0, 1, 12, -1, 0.020892032277231517, ["add     i_0, 1", "mov     ebp, 5Ch ; '\\'", "jmp     store_c"], ["add~i_0,0", "mov~ebp,0", "jmp~FOO"]], [1, 0, 159, 1, 0, 1, 0, 0, 11, -1, 0.3026661299906082, ["add     i_0, 1"], ["add~i_0,0"]], [0, 0, 159, 0, 0, 4, 0, 0, 17, -1, 0.019377839112184464, ["lea     rcx, [arg_0+r15]", "lea     bytes, [arg_0+r13+1]", "lea     r8, [rcx+r13]", "nop     dword ptr [rax]"], ["lea~rcx,<TAG>", "lea~bytes,[arg_0+0]", "lea~r8,<TAG>", "nop~<TAG>"]], [1, 0, 159, 0, 0, 2, 0, 1, 16, -1, 0.023949169110459433, ["cmp     bytes, 1", "jz      short loc_4937"], ["cmp~bytes,0", "jz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 9, -1, 0.010580185153240182, ["mov     rsi, [rsp+0C8h+var_40]", "xor     rsi, fs:28h", "mov     rax, rbx", "jnz     loc_4B17"], ["mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "mov~rax,rbx", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 13, -1, 0.0706112356966247, ["cmp     bytes, 0FFFFFFFFFFFFFFFEh", "jz      loc_4A71"], ["cmp~bytes,0", "jz~FOO"]], [2, 0, 159, 0, 0, 5, 0, 1, 9, -1, 0.10643436260134553, ["lea     rax, [rsp+0C8h+mbstate]", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "mov     qword ptr [rsp+0C8h+mbstate.__count], 0", "mov     [rsp+0C8h+p], rax", "jnz     short loc_4863"], ["lea~rax,[rsp+0]", "cmp~argsize_0,0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],rax", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 8, -1, 0.1785981254671957, ["cmp     [rsp+0C8h+var_88], 1; jumptable 0000000000004148 default case", "jnz     loc_4810"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 12, -1, 0.07972514519004083, ["cmp     bytes, 0FFFFFFFFFFFFFFFFh", "jz      loc_4A3F"], ["cmp~bytes,0", "jz~FOO"]], [1, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.03972954447337754, ["movzx   ebp, byte ptr [r14]", "cmp     bpl, 7Eh ; '~'; switch 127 cases", "ja      loc_4460; jumptable 0000000000004148 default case"], ["movzx~ebp,<TAG>", "cmp~bpl,0", "ja~FOO"]], [3, 0, 159, 1, 0, 10, 2, 1, 11, -1, 0.014894038423450209, ["mov     eax, ebp", "mov     rsi, [rsp+0C8h+var_B8]", "mov     ecx, ebp", "shr     al, 5", "and     ecx, 1Fh", "mov     edx, 1", "movzx   eax, al", "shl     edx, cl", "test    [rsi+rax*4], edx", "jz      short loc_4253"], ["mov~eax,ebp", "mov~rsi,[rsp+0]", "mov~ecx,ebp", "shr~al,0", "and~ecx,0", "mov~edx,0", "movzx~eax,al", "shl~edx,cl", "test~<TAG>,edx", "jz~FOO"]], [3, 0, 160, 0, 0, 7, 1, 1, 4, -1, 0.002300040250704387, ["lea     rax, aIterCurPtr0+15h; \"'\"", "mov     [rsp+0C8h+elide_outer_quotes], 0", "xor     ebp, ebp", "mov     r11d, 1", "mov     ebx, 1", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_4078"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "xor~ebp,ebp", "mov~r11d,0", "mov~ebx,0", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 162, 0, 0, 2, 1, 1, 3, -1, 0.00017250301880282904, ["test    buffersize, buffersize", "jz      loc_4A1C"], ["test~buffersize,buffersize", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 12, -1, 0.04687290360914649, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_43DD"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.010489461343351278, ["mov     ebp, eax", "jmp     store_escape"], ["mov~ebp,eax", "jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.00083695909122854, ["mov     ebp, 66h ; 'f'; jumptable 0000000000004708 case 12", "jmp     store_escape"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.00083695909122854, ["mov     ebp, 76h ; 'v'; jumptable 0000000000004708 case 11", "jmp     store_escape"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.00083695909122854, ["mov     ebp, 62h ; 'b'; jumptable 0000000000004708 case 8", "jmp     store_escape"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.00083695909122854, ["mov     ebp, 61h ; 'a'; jumptable 0000000000004708 case 7", "jmp     store_escape"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 10, -1, 0.0, ["add     rsp, 98h", "pop     rbx", "pop     rbp", "pop     argsize_0", "pop     arg_0", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~argsize_0", "pop~arg_0", "pop~r14", "pop~r15", "retn"]], [3, 0, 187, 1, 1, 25, 2, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r15d, r8d", "push    r13", "push    r12", "mov     r14, buffersize", "push    rbp", "push    rbx", "mov     ebx, r9d", "mov     r13, arg_0", "mov     r12, argsize_0", "and     ebx, 2", "sub     rsp, 98h", "mov     rax, [rsp+0C8h+quote_these_too]", "mov     [rsp+0C8h+buffer], buffer_0", "mov     [rsp+0C8h+quoting_style], r8d", "mov     [rsp+0C8h+flags], r9d", "mov     [rsp+0C8h+var_B8], rax", "mov     rax, fs:28h", "mov     [rsp+0C8h+var_40], rax", "xor     eax, eax", "call    ___ctype_get_mb_cur_max", "cmp     r15d, 7; switch 8 cases", "mov     [rsp+0C8h+var_88], rax", "ja      loc_4B1C; jumptable 0000000000004058 default case"], ["push~r15", "push~r14", "mov~r15d,r8d", "push~r13", "push~r12", "mov~r14,buffersize", "push~rbp", "push~rbx", "mov~ebx,r9d", "mov~r13,arg_0", "mov~r12,argsize_0", "and~ebx,0", "sub~rsp,0", "mov~rax,[rsp+0]", "mov~<TAG>,buffer_0", "mov~[rsp+0],r8d", "mov~[rsp+0],r9d", "mov~[rsp+0],rax", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "cmp~r15d,0", "mov~[rsp+0],rax", "ja~FOO"]], [3, 0, 160, 0, 0, 8, 2, 1, 2, -1, 0.002300040250704387, ["lea     rax, aIterCurPtr0+15h; jumptable 0000000000004058 case 1", "mov     [rsp+0C8h+elide_outer_quotes], 1", "xor     ebp, ebp", "mov     r11d, 1", "xor     ebx, ebx", "mov     [rsp+0C8h+quoting_style], 2", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_4078"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "xor~ebp,ebp", "mov~r11d,0", "xor~ebx,ebx", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.08334291683437792, ["mov     eax, [rsp+0C8h+quoting_style]; jumptable 0000000000004148 case 63", "cmp     eax, 2", "jz      loc_47E0"], ["mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 9, -1, 0.06287255860310889, ["test    r11b, r11b; jumptable 0000000000004148 case 0", "jnz     loc_4710; jumptable 0000000000004708 case 0"], ["test~r11b,r11b", "jnz~FOO"]], [0, 0, 159, 0, 0, 2, 0, 0, 13, -1, 0.03956069231211547, ["cmp     rbx, r8", "jnb     short loc_424F"], ["cmp~rbx,r8", "jnb~FOO"]], [0, 0, 164, 0, 0, 2, 1, 1, 2, -1, 0.00023000402507043874, ["test    ebx, ebx; jumptable 0000000000004058 case 2", "jnz     loc_4AD4"], ["test~ebx,ebx", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 14, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx], 5Ch ; '\\'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [1, 0, 159, 1, 0, 1, 0, 0, 14, -1, 0.038985682249439366, ["add     rbx, 1"], ["add~rbx,0"]], [1, 0, 159, 0, 0, 3, 2, 1, 10, -1, 0.01578402622045886, ["xor     ebp, ebp", "test    byte ptr [rsp+0C8h+flags], 1", "jz      loc_42DD"], ["xor~ebp,ebp", "test~[yte ptr [rsp+0],0", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.13253981944684026, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jz      loc_4253"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 159, 1, 0, 2, 0, 1, 11, -1, 0.014864010120177103, ["add     i_0, 1", "jmp     loc_4090"], ["add~i_0,0", "jmp~FOO"]], [0, 0, 166, 0, 0, 3, 2, 1, 4, -1, 0.01943534011845207, ["xor     ebx, ebx", "test    ebp, ebp", "jnz     short loc_45E5"], ["xor~ebx,ebx", "test~ebp,ebp", "jnz~FOO"]], [1, 0, 168, 0, 1, 9, 1, 2, 3, -1, 0.010120177103099303, ["lea     rsi, aIterCurPtr0+15h; msgid", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, rax", "mov     [rsp+0C8h+quote_string], rax", "lea     rax, aIterCurPtr0+15h; \"'\"", "cmp     rsi, rax", "jnz     short loc_45B6"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,rax", "mov~[rsp+0],rax", "lea~rax,<TAG>", "cmp~rsi,rax", "jnz~FOO"]], [0, 0, 167, 0, 0, 4, 1, 0, 4, -1, 0.0, ["lea     rax, asc_AC67; \"\\\"\"", "test    bl, bl", "cmovz   rax, rsi", "mov     [rsp+0C8h+quote_string], rax"], ["lea~rax,<TAG>", "test~bl,bl", "cmovz~rax,rsi", "mov~[rsp+0],rax"]], [0, 0, 159, 0, 1, 11, 0, 1, 10, -1, 0.0, ["mov     rdi, arg_0; s", "mov     [rsp+0C8h+var_80], r8", "mov     byte ptr [rsp+0C8h+arg], r11b", "mov     [rsp+0C8h+i], r10", "mov     [rsp+0C8h+argsize], arg_0", "call    _strlen", "movzx   r11d, byte ptr [rsp+0C8h+arg]", "mov     r8, [rsp+0C8h+var_80]", "mov     argsize_0, rax", "mov     r10, [rsp+0C8h+i]", "mov     r9, [rsp+0C8h+argsize]"], ["mov~rdi,arg_0", "mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[rsp+0],r10", "mov~[rsp+0],arg_0", "call~FOO", "movzx~r11d,[yte ptr [rsp+0]", "mov~r8,[rsp+0]", "mov~argsize_0,rax", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]"]], [2, 0, 160, 0, 0, 7, 2, 1, 3, -1, 0.004600080501408774, ["lea     rax, aIterCurPtr0+15h; \"'\"", "mov     [rsp+0C8h+elide_outer_quotes], 1", "xor     ebp, ebp", "mov     r11d, 1", "xor     ebx, ebx", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_4078"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "xor~ebp,ebp", "mov~r11d,0", "xor~ebx,ebx", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 159, 0, 0, 2, 0, 0, 13, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     [rax+rbx], bpl"], ["mov~rax,<TAG>", "mov~<TAG>,bpl"]], [1, 0, 159, 0, 0, 3, 0, 1, 7, -1, 0.5060843822703411, ["movzx   ebp, byte ptr [r14]", "cmp     bpl, 7Eh ; '~'; switch 127 cases", "ja      loc_4460; jumptable 0000000000004148 default case"], ["movzx~ebp,<TAG>", "cmp~bpl,0", "ja~FOO"]], [1, 0, 159, 1, 0, 2, 0, 1, 13, -1, 0.46587315278017366, ["add     rbx, 1", "jmp     loc_4090"], ["add~rbx,0", "jmp~FOO"]], [0, 0, 159, 0, 0, 11, 0, 1, 13, -1, 0.0039963199355988735, ["movzx   r11d, [rsp+0C8h+var_6A]", "mov     bytes, m", "mov     bytes, [rsp+0C8h+i]", "mov     r10, [rsp+0C8h+var_78]", "movzx   ebp, [rsp+0C8h+c]", "mov     r9, arg_0", "mov     m, [rsp+0C8h+var_68]", "mov     r8, [rsp+0C8h+var_80]", "mov     r13, [rsp+0C8h+argsize]", "mov     r12d, r11d", "jmp     loc_4991"], ["movzx~r11d,[rsp+0]", "mov~bytes,m", "mov~bytes,[rsp+0]", "mov~r10,[rsp+0]", "movzx~ebp,[rsp+0]", "mov~r9,arg_0", "mov~m,[rsp+0]", "mov~r8,[rsp+0]", "mov~r13,[rsp+0]", "mov~r12d,r11d", "jmp~FOO"]], [3, 0, 160, 0, 0, 7, 1, 1, 3, -1, 0.004600080501408774, ["lea     rax, asc_AC67; \"\\\"\"", "mov     [rsp+0C8h+elide_outer_quotes], 1", "mov     ebp, 1", "mov     r11d, 1", "xor     ebx, ebx", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_4078"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~ebp,0", "mov~r11d,0", "xor~ebx,ebx", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 164, 0, 0, 2, 1, 1, 2, -1, 0.00023000402507043874, ["test    ebx, ebx; jumptable 0000000000004058 case 3", "jnz     loc_4AF4"], ["test~ebx,ebx", "jnz~FOO"]], [3, 0, 160, 0, 0, 6, 2, 0, 2, -1, 0.002300040250704387, ["mov     [rsp+0C8h+elide_outer_quotes], 0; jumptable 0000000000004058 case 5", "mov     ebp, 1", "xor     r11d, r11d", "mov     [rsp+0C8h+quote_string], 0", "xor     ebx, ebx", "nop     word ptr [rax+rax+00h]"], ["mov~[rsp+0],0", "mov~ebp,0", "xor~r11d,r11d", "mov~[rsp+0],0", "xor~ebx,ebx", "nop~[ord ptr [rax+0]"]], [0, 0, 8, 1, 0, 3, 0, 0, 10, -1, 0.015007762635846128, ["mov     rcx, [rsp+0C8h+buffer]", "sub     rax, rbx", "nop"], ["mov~rcx,<TAG>", "sub~rax,rbx", "nop"]], [0, 0, 9, 0, 0, 3, 1, 1, 9, -1, 0.019895348168592952, ["movzx   edx, byte ptr [rax]", "test    dl, dl", "jz      short loc_49F4"], ["movzx~edx,<TAG>", "test~dl,dl", "jz~FOO"]], [4, 0, 160, 0, 0, 8, 0, 1, 4, -1, 0.002300040250704387, ["mov     rax, [rsp+0C8h+buffer]", "mov     [rsp+0C8h+elide_outer_quotes], 0", "mov     r11d, 1", "mov     ebx, 1", "mov     byte ptr [rax], 27h ; '''", "lea     rax, aIterCurPtr0+15h; \"'\"", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_4078"], ["mov~rax,<TAG>", "mov~[rsp+0],0", "mov~r11d,0", "mov~ebx,0", "mov~<TAG>,0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "jmp~FOO"]], [2, 0, 159, 0, 0, 4, 0, 1, 9, -1, 0.009573917543557013, ["cmp     argsize_0, 1; jumptable 0000000000004148 cases 123,125", "setnz   al", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_4285"], ["cmp~argsize_0,0", "setnz~al", "cmp~argsize_0,0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 10, -1, 0.0, ["cmp     byte ptr [arg_0+1], 0", "setnz   al"], ["cmp~[yte ptr [arg_0+0],0", "setnz~al"]], [1, 0, 159, 1, 0, 3, 0, 1, 19, -1, 0.013023977919613594, ["add     rax, 1", "cmp     r8, rax", "jnz     short loc_4908"], ["add~rax,0", "cmp~r8,rax", "jnz~FOO"]], [1, 0, 159, 0, 0, 4, 0, 1, 18, -1, 0.019320338105916855, ["movzx   edi, byte ptr [rax]", "lea     ecx, [rdi-5Bh]", "cmp     cl, 21h ; '!'", "ja      short loc_492E"], ["movzx~edi,<TAG>", "lea~ecx,[rdi-5Bh]+0]", "cmp~cl,0", "ja~FOO"]], [2, 0, 159, 1, 0, 5, 1, 1, 19, -1, 0.00557759760795814, ["mov     edx, 1", "mov     rdi, 20000002Bh", "shl     rdx, cl", "test    rdx, rdi", "jnz     loc_4A0A"], ["mov~edx,0", "mov~rdi,0", "shl~rdx,cl", "test~rdx,rdi", "jnz~FOO"]], [0, 0, 162, 0, 0, 2, 1, 1, 3, -1, 0.00017250301880282904, ["test    buffersize, buffersize", "jz      short loc_4692"], ["test~buffersize,buffersize", "jz~FOO"]], [0, 0, 159, 0, 0, 7, 1, 0, 3, -1, 0.12342590995342416, ["mov     r10, quote_string_len", "mov     r9, arg_0", "xor     r15d, r15d", "mov     r11d, ebp", "mov     r8, buffersize", "mov     arg_0, argsize_0", "nop     word ptr [rax+rax+00h]"], ["mov~r10,quote_string_len", "mov~r9,arg_0", "xor~r15d,r15d", "mov~r11d,ebp", "mov~r8,buffersize", "mov~arg_0,argsize_0", "nop~[ord ptr [rax+0]"]], [1, 0, 160, 0, 1, 7, 1, 2, 5, -1, 0.046000805014087744, ["mov     rdi, [rsp+0C8h+quote_string]; s", "test    ebp, ebp", "mov     ebp, 1", "setnz   [rsp+0C8h+elide_outer_quotes]", "call    _strlen", "mov     r11, rax", "jmp     loc_4078"], ["mov~rdi,[rsp+0]", "test~ebp,ebp", "mov~ebp,0", "setnz~[rsp+0]", "call~FOO", "mov~r11,rax", "jmp~FOO"]], [4, 0, 160, 0, 0, 7, 0, 1, 4, -1, 0.009200161002817548, ["lea     rax, asc_AC67; \"\\\"\"", "mov     [rsp+0C8h+elide_outer_quotes], 0", "mov     ebp, 1", "mov     r11d, 1", "mov     ebx, 1", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_4078"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~ebp,0", "mov~r11d,0", "mov~ebx,0", "mov~[rsp+0],rax", "jmp~FOO"]], [4, 0, 160, 0, 0, 8, 1, 1, 2, -1, 0.002300040250704387, ["lea     rax, asc_AC67; jumptable 0000000000004058 case 4", "mov     [rsp+0C8h+elide_outer_quotes], 1", "mov     ebp, 1", "mov     r11d, 1", "xor     ebx, ebx", "mov     [rsp+0C8h+quoting_style], 3", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_4078"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~ebp,0", "mov~r11d,0", "xor~ebx,ebx", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 165, 0, 0, 3, 1, 1, 5, -1, 0.0008050140877465356, ["movzx   eax, byte ptr [quote_string_0]", "test    al, al", "jz      short loc_45E5"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 161, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax], 22h ; '\"'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [0, 0, 159, 0, 0, 13, 1, 0, 10, -1, 0.10585935253866943, ["lea     rax, [rsp+0C8h+w]", "xor     edi, edi", "mov     [rsp+0C8h+var_60], r14", "mov     [rsp+0C8h+var_68], rbx", "mov     [rsp+0C8h+i], i_0", "mov     rbx, rdi", "mov     [rsp+0C8h+arg], rax", "mov     [rsp+0C8h+var_78], r10", "mov     r14, arg_0", "mov     [rsp+0C8h+var_6A], r11b", "mov     [rsp+0C8h+c], bpl", "mov     [rsp+0C8h+var_80], r8", "mov     [rsp+0C8h+argsize], r13"], ["lea~rax,[rsp+0]", "xor~edi,edi", "mov~[rsp+0],r14", "mov~[rsp+0],rbx", "mov~[rsp+0],i_0", "mov~rbx,rdi", "mov~[rsp+0],rax", "mov~[rsp+0],r10", "mov~r14,arg_0", "mov~[rsp+0],r11b", "mov~[rsp+0],bpl", "mov~[rsp+0],r8", "mov~[rsp+0],r13"]], [1, 0, 159, 0, 0, 4, 0, 1, 4, -1, 0.6129894773158531, ["cmp     argsize_0, i_0", "setnz   r12b", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_40A6"], ["cmp~argsize_0,i_0", "setnz~r12b", "cmp~argsize_0,0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 5, -1, 0.0, ["cmp     byte ptr [arg_0+i_0], 0", "setnz   r12b"], ["cmp~<TAG>,0", "setnz~r12b"]], [0, 0, 159, 0, 0, 2, 1, 1, 5, -1, 0.6124144672531769, ["test    r12b, r12b", "jz      loc_49A0"], ["test~r12b,r12b", "jz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 11, -1, 0.000646886320510609, ["jmp     loc_43DD"], ["jmp~FOO"]], [1, 0, 14, 0, 0, 7, 1, 1, 6, -1, 0.0534184348226094, ["cmp     [rsp+0C8h+quoting_style], 2", "mov     r12, argsize_0", "mov     r14, r8", "mov     argsize_0, arg_0", "setz    al", "test    [rsp+0C8h+elide_outer_quotes], al", "jz      short loc_49C0"], ["cmp~[rsp+0],0", "mov~r12,argsize_0", "mov~r14,r8", "mov~argsize_0,arg_0", "setz~al", "test~[rsp+0],al", "jz~FOO"]], [0, 0, 159, 0, 0, 1, 0, 1, 16, -1, 0.0022281639928698753, ["jmp     short loc_4ACC"], ["jmp~FOO"]], [0, 0, 11, 0, 0, 3, 1, 1, 7, -1, 0.041185095739175434, ["mov     rax, [rsp+0C8h+quote_string]", "test    rax, rax", "jz      short loc_49F4"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [3, 0, 159, 0, 1, 16, 2, 1, 9, -1, 0.06704617330803289, ["mov     [rsp+0C8h+arg], arg_0", "mov     [rsp+0C8h+i], r8", "mov     byte ptr [rsp+0C8h+argsize], r11b", "mov     [rsp+0C8h+p], r10", "call    ___ctype_b_loc", "mov     rcx, [rax]", "movzx   edx, bpl", "movzx   r11d, byte ptr [rsp+0C8h+argsize]", "mov     r10, [rsp+0C8h+p]", "mov     r8, [rsp+0C8h+i]", "mov     eax, 1", "mov     r9, [rsp+0C8h+arg]", "movzx   r12d, word ptr [rcx+rdx*2]", "shr     r12w, 0Eh", "xor     r12d, 1", "and     r12d, r11d"], ["mov~[rsp+0],arg_0", "mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[rsp+0],r10", "call~FOO", "mov~rcx,<TAG>", "movzx~edx,bpl", "movzx~r11d,[yte ptr [rsp+0]", "mov~r10,[rsp+0]", "mov~r8,[rsp+0]", "mov~eax,0", "mov~r9,[rsp+0]", "movzx~r12d,<TAG>", "shr~r12w,0", "xor~r12d,0", "and~r12d,r11d"]], [0, 0, 159, 0, 0, 3, 1, 1, 6, -1, 0.5538496923696165, ["test    r10, r10", "lea     r14, [arg_0+i_0]", "jz      short loc_4128"], ["test~r10,r10", "lea~r14,<TAG>", "jz~FOO"]], [0, 0, 159, 0, 0, 1, 0, 1, 14, -1, 0.007935138864930136, ["jmp     loc_44B7"], ["jmp~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 7, -1, 0.06937336681169706, ["test    r11b, r11b", "jz      short loc_4128"], ["test~r11b,r11b", "jz~FOO"]], [2, 0, 159, 0, 0, 2, 0, 0, 9, -1, 0.003104369802662029, ["mov     ebp, 9; jumptable 0000000000004148 case 9", "mov     eax, 74h ; 't'"], ["mov~ebp,0", "mov~eax,0"]], [0, 0, 8, 0, 0, 2, 0, 0, 11, -1, 0.010235179115634523, ["cmp     r14, len", "jbe     short loc_49E8"], ["cmp~r14,len", "jbe~FOO"]], [1, 0, 8, 1, 0, 4, 1, 1, 12, -1, 0.0004600080501408775, ["add     len, 1", "movzx   edx, byte ptr [rax+len]", "test    dl, dl", "jnz     short loc_49E0"], ["add~len,0", "movzx~edx,<TAG>", "test~dl,dl", "jnz~FOO"]], [0, 0, 159, 0, 0, 1, 0, 0, 11, -1, 0.05712724972687022, ["mov     r12d, r11d"], ["mov~r12d,r11d"]], [0, 0, 159, 0, 0, 3, 0, 1, 8, -1, 0.06536267162453128, ["lea     rax, [i_0+r10]", "cmp     rax, argsize_0", "ja      loc_46E8"], ["lea~rax,<TAG>", "cmp~rax,argsize_0", "ja~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.024435874056367417, ["cmp     [rsp+0C8h+quoting_style], 2", "jnz     short c_escape"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.003104369802662029, ["mov     ebp, 0Dh; jumptable 0000000000004148 case 13", "mov     eax, 72h ; 'r'", "jmp     short c_and_shell_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.003104369802662029, ["mov     ebp, 0Ah; jumptable 0000000000004148 case 10", "mov     eax, 6Eh ; 'n'", "jmp     short c_and_shell_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 159, 1, 1, 12, 1, 2, 11, -1, 0.10873440285204991, ["mov     rax, [rsp+0C8h+i]", "mov     rdx, [rsp+0C8h+argsize]", "mov     rcx, [rsp+0C8h+p]; p", "mov     rdi, [rsp+0C8h+arg]; pwc", "lea     r13, [rax+m]", "lea     rbp, [arg_0+r13]", "sub     rdx, r13; n", "mov     rsi, rbp; s", "call    _mbrtowc", "test    rax, rax", "mov     r15, rax", "jz      loc_4960"], ["mov~rax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rcx,[rsp+0]", "mov~rdi,[rsp+0]", "lea~r13,<TAG>", "lea~rbp,<TAG>", "sub~rdx,r13", "mov~rsi,rbp", "call~FOO", "test~rax,rax", "mov~r15,rax", "jz~FOO"]], [1, 0, 159, 1, 2, 10, 2, 3, 15, -1, 0.030073026277959866, ["mov     edi, [rsp+0C8h+w]; wc", "call    _iswprint", "mov     rdi, [rsp+0C8h+p]; ps", "test    eax, eax", "mov     eax, 0", "cmovz   r12d, eax", "add     m, bytes", "call    _mbsinit", "test    eax, eax", "jz      loc_489D"], ["mov~edi,[rsp+0]", "call~FOO", "mov~rdi,[rsp+0]", "test~eax,eax", "mov~eax,0", "cmovz~r12d,eax", "add~m,bytes", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.0010062676096831695, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_43DD"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 159, 0, 0, 2, 0, 1, 15, -1, 0.02624920936116382, ["mov     r12d, r11d", "jmp     loc_4991"], ["mov~r12d,r11d", "jmp~FOO"]], [0, 0, 159, 1, 0, 5, 0, 1, 12, -1, 0.14300500258754528, ["mov     rdx, rax", "movzx   esi, [rsp+0C8h+elide_outer_quotes]", "mov     rcx, [rsp+0C8h+buffer]", "add     rdx, r15", "jmp     short loc_44EA"], ["mov~rdx,rax", "movzx~esi,[rsp+0]", "mov~rcx,<TAG>", "add~rdx,r15", "jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 13, -1, 0.0943879017882813, ["cmp     m, 1", "ja      loc_44C3"], ["cmp~m,0", "ja~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 10, -1, 0.0465971041397986, ["test    r11b, r11b", "jnz     loc_4388"], ["test~r11b,r11b", "jnz~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.0034195072620119985, ["mov     ebp, 7; jumptable 0000000000004148 case 7", "mov     eax, 61h ; 'a'", "jmp     c_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.0034195072620119985, ["mov     ebp, 0Ch; jumptable 0000000000004148 case 12", "mov     eax, 66h ; 'f'", "jmp     c_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.0034195072620119985, ["mov     ebp, 0Bh; jumptable 0000000000004148 case 11", "mov     eax, 76h ; 'v'", "jmp     c_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 159, 0, 0, 2, 0, 0, 15, -1, 0.012017710309930424, ["cmp     rbx, r8", "jnb     short loc_44E1"], ["cmp~rbx,r8", "jnb~FOO"]], [1, 0, 159, 1, 0, 3, 0, 0, 14, -1, 0.15122764648381348, ["add     i_0, 1", "cmp     r15, ilim", "jb      short loc_44D8"], ["add~i_0,0", "cmp~r15,ilim", "jb~FOO"]], [0, 0, 159, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     [rcx+rbx], bpl"], ["mov~<TAG>,bpl"]], [2, 0, 159, 0, 0, 4, 1, 1, 9, -1, 0.011019223590381077, ["test    r11b, r11b; jumptable 0000000000004148 case 8", "mov     ebp, 8", "mov     eax, 62h ; 'b'", "jz      loc_42DD"], ["test~r11b,r11b", "mov~ebp,0", "mov~eax,0", "jz~FOO"]], [1, 0, 159, 1, 0, 2, 0, 0, 16, -1, 0.011442700247254326, ["movzx   ebp, byte ptr [arg_0+r15]", "add     rbx, 1"], ["movzx~ebp,<TAG>", "add~rbx,0"]], [1, 0, 159, 0, 0, 2, 0, 1, 14, -1, 0.03780691162095337, ["cmp     [rsp+0C8h+quoting_style], 2", "jnz     short loc_4937"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 13, -1, 0.15870277729860274, ["test    r12b, r12b", "jz      short loc_4538"], ["test~r12b,r12b", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 1, 1, 11, -1, 0.06460238054165948, ["test    byte ptr [rsp+0C8h+flags], 4", "jz      loc_47EB"], ["test~[yte ptr [rsp+0],0", "jz~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 14, -1, 0.03774941061468576, ["test    sil, sil", "jnz     loc_43DD"], ["test~sil,sil", "jnz~FOO"]], [0, 0, 164, 0, 0, 2, 0, 0, 7, -1, 0.005175090564084871, ["cmp     buffersize, rbx", "jbe     short loc_45D8"], ["cmp~buffersize,rbx", "jbe~FOO"]], [1, 0, 164, 1, 0, 4, 1, 1, 8, -1, 0.01391524351676154, ["add     rbx, 1", "movzx   eax, byte ptr [r15+len]", "test    al, al", "jnz     short loc_45D0"], ["add~rbx,0", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [0, 0, 164, 0, 0, 2, 0, 0, 6, -1, 0.0006900120752113162, ["mov     rdx, [rsp+0C8h+buffer]", "nop     dword ptr [rax+rax+00000000h]"], ["mov~rdx,<TAG>", "nop~[word ptr [rax+0]"]], [1, 0, 159, 0, 0, 2, 0, 1, 15, -1, 0.028491748605600598, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jz      short loc_4937"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 159, 0, 0, 2, 0, 0, 15, -1, 0.03257432005060089, ["cmp     rbx, r8", "jnb     short loc_4501"], ["cmp~rbx,r8", "jnb~FOO"]], [1, 0, 159, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     byte ptr [rcx+rbx], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [0, 0, 159, 0, 1, 14, 1, 2, 9, -1, 0.020515537593336457, ["mov     rsi, [rsp+0C8h+quote_string]; s2", "mov     rdx, r10; n", "mov     rdi, r14; s1", "mov     [rsp+0C8h+arg], arg_0", "mov     [rsp+0C8h+i], r8", "mov     byte ptr [rsp+0C8h+argsize], r11b", "mov     [rsp+0C8h+p], r10", "call    _memcmp", "test    eax, eax", "mov     r10, [rsp+0C8h+p]", "movzx   r11d, byte ptr [rsp+0C8h+argsize]", "mov     r8, [rsp+0C8h+i]", "mov     r9, [rsp+0C8h+arg]", "jnz     short loc_4128"], ["mov~rsi,[rsp+0]", "mov~rdx,r10", "mov~rdi,r14", "mov~[rsp+0],arg_0", "mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[rsp+0],r10", "call~FOO", "test~eax,eax", "mov~r10,[rsp+0]", "movzx~r11d,[yte ptr [rsp+0]", "mov~r8,[rsp+0]", "mov~r9,[rsp+0]", "jnz~FOO"]], [0, 0, 159, 0, 0, 3, 0, 0, 16, -1, 0.03199930998792479, ["lea     rax, [rbx+1]", "cmp     r8, len", "jbe     short loc_4516"], ["lea~rax,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.01507963889368064, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_43DD"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 159, 1, 0, 4, 0, 0, 17, -1, 0.0, ["mov     eax, ebp", "shr     al, 6", "add     eax, 30h ; '0'", "mov     [rcx+rbx+1], al"], ["mov~eax,ebp", "shr~al,0", "add~eax,0", "mov~[rcx+0],al"]], [0, 0, 159, 0, 0, 2, 0, 0, 11, -1, 0.01388649301362774, ["cmp     rbx, r8", "jnb     short loc_411F"], ["cmp~rbx,r8", "jnb~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 10, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 159, 0, 0, 3, 0, 1, 10, -1, 0.043264715465853996, ["cmp     [rsp+0C8h+elide_outer_quotes], 0; jumptable 0000000000004708 case 0", "mov     rdx, rbx", "jnz     loc_43DD"], ["cmp~[rsp+0],0", "mov~rdx,rbx", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 12, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx], 5Ch ; '\\'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort; jumptable 0000000000004058 default case"], ["call~FOO"]], [0, 0, 159, 0, 0, 3, 0, 0, 17, -1, 0.03142429992524869, ["lea     rax, [rbx+2]", "cmp     r8, len", "jbe     short loc_452E"], ["lea~rax,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [0, 0, 159, 0, 0, 2, 0, 0, 11, -1, 0.041831982059686044, ["cmp     r8, rbx", "jbe     short loc_472B"], ["cmp~r8,rbx", "jbe~FOO"]], [1, 0, 159, 1, 0, 2, 0, 0, 12, -1, 0.013311482950951645, ["add     rbx, 1", "nop     dword ptr [rax+rax+00h]"], ["add~rbx,0", "nop~[word ptr [rax+0]"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.033719548425430776, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_43DD"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 12, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx], 5Ch ; '\\'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [3, 0, 159, 1, 0, 5, 1, 0, 18, -1, 0.0, ["mov     eax, ebp", "shr     al, 3", "and     eax, 7", "add     eax, 30h ; '0'", "mov     [rcx+rbx+2], al"], ["mov~eax,ebp", "shr~al,0", "and~eax,0", "add~eax,0", "mov~[rcx+0],al"]], [0, 0, 8, 0, 0, 1, 0, 0, 12, -1, 0.0, ["mov     [rcx+len], dl"], ["mov~<TAG>,dl"]], [0, 0, 159, 0, 0, 2, 0, 0, 11, -1, 0.03257432005060089, ["cmp     r8, rbx", "jbe     short loc_4338"], ["cmp~r8,rbx", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 12, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx], 27h ; '''"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [3, 0, 159, 2, 0, 3, 1, 0, 18, -1, 0.030849289862572588, ["and     ebp, 7", "add     rbx, 3", "add     ebp, 30h ; '0'"], ["and~ebp,0", "add~rbx,0", "add~ebp,0"]], [0, 0, 159, 0, 0, 3, 0, 0, 12, -1, 0.03199930998792479, ["lea     rax, [rbx+1]", "cmp     r8, len", "jbe     short loc_434A"], ["lea~rax,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 13, -1, 0.0, ["mov     len, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx+1], 5Ch ; '\\'"], ["mov~len,<TAG>", "mov~[yte ptr [rax+0],0"]], [0, 0, 159, 0, 0, 3, 0, 0, 13, -1, 0.03142429992524869, ["lea     rax, [rbx+2]", "cmp     r8, len", "jbe     short loc_435C"], ["lea~rax,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [0, 0, 164, 0, 0, 1, 0, 0, 8, -1, 0.0, ["mov     [rdx+rbx], al"], ["mov~<TAG>,al"]], [0, 0, 159, 0, 0, 2, 0, 0, 14, -1, 0.019032833074578807, ["cmp     r8, len", "jbe     short loc_475F"], ["cmp~r8,len", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 14, -1, 0.0, ["mov     len, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx+2], 27h ; '''"], ["mov~len,<TAG>", "mov~[yte ptr [rax+0],0"]], [1, 0, 159, 0, 0, 2, 0, 0, 15, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+len], 30h ; '0'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.004969045291625936, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_43DD"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.07325628198493474, ["cmp     eax, 3", "jnz     loc_47EB"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 159, 0, 0, 3, 0, 0, 15, -1, 0.01845782301190271, ["lea     rax, [rdx+2]", "cmp     r8, len", "jbe     short loc_4771"], ["lea~rax,[rdx+0]", "cmp~r8,len", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 16, -1, 0.0, ["mov     len, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rdx+2], 30h ; '0'"], ["mov~len,<TAG>", "mov~[yte ptr [rax+0],0"]], [2, 0, 170, 0, 1, 10, 1, 2, 2, -1, 0.0005750100626760969, ["lea     rsi, asc_AC69; jumptable 0000000000004058 cases 6,7", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "cmp     [rsp+0C8h+quoting_style], 7", "mov     quoting_style_0, rax", "lea     rax, asc_AC69; \"`\"", "setz    bl", "cmp     r15, rax", "jnz     short loc_457D"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "cmp~[rsp+0],0", "mov~quoting_style_0,rax", "lea~rax,<TAG>", "setz~bl", "cmp~r15,rax", "jnz~FOO"]], [0, 0, 169, 0, 0, 3, 1, 0, 3, -1, 0.0, ["lea     rax, asc_AC67; \"\\\"\"", "test    bl, bl", "cmovnz  r15, rax"], ["lea~rax,<TAG>", "test~bl,bl", "cmovnz~r15,rax"]], [0, 0, 159, 0, 0, 1, 0, 0, 10, -1, 0.002245528384048306, ["nop     dword ptr [esc+esc+00h]"], ["nop~[word ptr [esc+0]"]], [1, 0, 159, 0, 0, 11, 2, 0, 12, -1, 0.05534471853257432, ["movzx   r11d, [rsp+0C8h+var_6A]", "movzx   ebp, [rsp+0C8h+c]", "mov     rax, m", "mov     bytes, [rsp+0C8h+i]", "mov     r10, [rsp+0C8h+var_78]", "xor     r12d, 1", "mov     m, [rsp+0C8h+var_68]", "mov     r8, [rsp+0C8h+var_80]", "mov     r9, arg_0", "mov     r13, [rsp+0C8h+argsize]", "and     r12d, r11d"], ["movzx~r11d,[rsp+0]", "movzx~ebp,[rsp+0]", "mov~rax,m", "mov~bytes,[rsp+0]", "mov~r10,[rsp+0]", "xor~r12d,0", "mov~m,[rsp+0]", "mov~r8,[rsp+0]", "mov~r9,arg_0", "mov~r13,[rsp+0]", "and~r12d,r11d"]], [1, 0, 159, 0, 0, 3, 0, 1, 14, -1, 0.051554443869434384, ["movzx   ebp, byte ptr [arg_0+rax]", "cmp     bpl, 3Eh ; '>'", "ja      loc_47EB"], ["movzx~ebp,<TAG>", "cmp~bpl,0", "ja~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 11, -1, 0.012779598642976252, ["test    r10, r10", "jnz     loc_479C"], ["test~r10,r10", "jnz~FOO"]], [1, 0, 159, 0, 0, 3, 0, 0, 15, -1, 0.04712686638682844, ["mov     rdi, 7000A38200000000h", "bt      rdi, rbp", "jnb     loc_47EB"], ["mov~rdi,0", "bt~rdi,rbp", "jnb~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 16, -1, 0.0427280394073563, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_43DD"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 159, 0, 0, 2, 0, 0, 17, -1, 0.04174573055028463, ["cmp     r8, rbx", "jbe     short loc_41C6"], ["cmp~r8,rbx", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 18, -1, 0.0, ["mov     rdi, [rsp+0C8h+buffer]", "mov     byte ptr [rdi+rbx], 3Fh ; '?'"], ["mov~rdi,<TAG>", "mov~<TAG>,0"]], [1, 0, 10, 0, 0, 2, 0, 1, 8, -1, 0.024725432695072165, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     short loc_49F4"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 159, 0, 0, 3, 0, 0, 18, -1, 0.04117072048760854, ["lea     rdx, [rbx+1]", "cmp     r8, len", "jbe     short loc_41D8"], ["lea~rdx,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 19, -1, 0.0, ["mov     rdi, [rsp+0C8h+buffer]", "mov     byte ptr [rdi+rbx+1], 22h ; '\"'"], ["mov~rdi,<TAG>", "mov~[yte ptr [rdi+0],0"]], [0, 0, 159, 0, 0, 3, 0, 0, 19, -1, 0.04059571042493244, ["lea     len, [rbx+2]", "cmp     r8, len", "jbe     short loc_41EA"], ["lea~len,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 20, -1, 0.0, ["mov     rdi, [rsp+0C8h+buffer]", "mov     byte ptr [rdi+rbx+2], 22h ; '\"'"], ["mov~rdi,<TAG>", "mov~[yte ptr [rdi+0],0"]]], "func_feature": [13, 67, 129, 7, 188, 323, 6, 671, 0.04616, 7, 32], "succs": [[115], [0, 2], [0, 178], [0, 4], [0, 40], [13], [5, 7], [5], [44], [8, 44], [121, 12], [104, 10], [121, 10], [69, 31], [1, 126, 131, 13, 110, 47, 18, 19, 116, 117, 86, 127, 21, 125, 62, 63], [16, 13], [177, 13], [18, 13], [19, 13], [20, 13], [13, 102], [155, 13], [13], [113, 13], [3, 13, 110, 47, 18, 19, 116, 149, 86, 55, 56, 57, 58, 21, 62, 117], [13], [44], [105, 26], [26], [26], [121, 11], [41, 50], [31], [34, 31], [166, 31], [31], [92], [65, 36, 173, 81, 82, 61, 95], [76, 78], [38], [38], [38], [89], [42, 119], [59, 148], [133, 30], [74, 98], [106, 46], [45, 79], [24, 47], [41, 53], [92], [51, 85], [64, 29], [53], [53], [53], [53], [53], [], [37, 151], [92], [169, 170], [68, 149], [66, 67], [75, 52], [67], [41], [69, 70], [32, 41], [99], [96, 93], [73, 71], [71], [98], [92], [78], [14, 47], [99], [123], [92], [80, 91], [92], [111], [9, 83], [92], [17, 87], [17], [89, 119], [88, 90], [88, 28], [97, 94], [99], [92], [92], [92], [139, 93], [94], [118], [100, 101], [101], [107, 103], [29], [105, 27], [121], [9, 183], [23], [109, 77], [23], [114, 77], [115], [112, 158], [9, 111], [122], [49, 143], [120, 124], [115], [115], [48, 176], [176, 118], [124, 29], [123], [134], [122, 108], [69, 54], [124], [124], [124], [130, 132], [128, 39], [132], [69, 175], [134], [140, 119], [136, 129], [25, 15], [141, 29], [138, 165], [137, 93], [137], [43, 119], [144, 142], [144], [145, 77], [152, 146], [147, 29], [152], [154, 150], [], [153, 29], [154], [], [161, 157], [33, 156], [77], [29, 159], [33], [161], [112], [160, 162], [162], [129], [163, 164], [164], [22, 167], [138], [168, 171], [22], [171], [25, 29], [25, 135], [35, 172], [35], [72, 174], [72], [54], [123], [25, 179], [40, 29], [25, 180], [181, 29], [184, 182], [184], [9, 84], [185, 186], [186], [187, 6], [6]], "fname": "quotearg_buffer_restyled", "n_num": 188}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    _abort"], ["call~FOO"]], [0, 1, 11, 1, 1, 18, 1, 2, 0, 0, 0.0, ["push    r15", "push    r14", "movsxd  r15, edi", "push    r13", "push    r12", "mov     r14, argsize", "push    rbp", "push    rbx", "mov     rbp, options", "sub     rsp, 28h", "mov     [rsp+58h+arg], arg_0", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "test    r15d, r15d", "mov     rbx, cs:slotvec_0", "mov     [rsp+58h+e], eax", "js      loc_4CC3"], ["push~r15", "push~r14", "movsxd~r15,edi", "push~r13", "push~r12", "mov~r14,argsize", "push~rbp", "push~rbx", "mov~rbp,options", "sub~rsp,<STR>", "mov~[rsp+0],arg_0", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "test~r15d,r15d", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "js~FOO"]], [0, 0, 6, 0, 1, 6, 0, 1, 3, 0, 0.03636363636363636, ["mov     rdi, sv; p", "mov     [rsp+58h+size], n1", "call    xrealloc", "mov     rdx, [rsp+58h+size]", "mov     sv, rax", "mov     cs:slotvec_0, sv"], ["mov~rdi,sv", "mov~[rsp+0],n1", "call~FOO", "mov~rdx,[rsp+0]", "mov~sv,rax", "mov~<TAG>,sv"]], [1, 0, 8, 1, 0, 7, 0, 1, 2, 0, 0.05454545454545454, ["lea     edx, [n0+1]", "lea     e_0, slotvec0", "mov     rsi, rdx", "mov     r12, rdx", "shl     rsi, 4; n", "cmp     sv, rax", "jz      loc_4C98"], ["lea~edx,[n0+0]", "lea~e_0,<TAG>", "mov~rsi,rdx", "mov~r12,rdx", "shl~rsi,0", "cmp~sv,rax", "jz~FOO"]], [2, 0, 5, 4, 1, 8, 1, 1, 4, 0, 0.13636363636363635, ["mov     edi, cs:nslots", "xor     esi, esi; c", "sub     rdx, rdi", "shl     rdi, 4", "shl     rdx, 4; n", "add     rdi, rbx; s", "call    _memset", "mov     cs:nslots, r12d"], ["mov~edi,<TAG>", "xor~esi,esi", "sub~rdx,rdi", "shl~rdi,0", "shl~rdx,0", "add~rdi,rbx", "call~FOO", "mov~<TAG>,r12d"]], [0, 0, 6, 0, 1, 9, 1, 2, 3, 0, 0.03636363636363636, ["xor     edi, edi; p", "mov     [rsp+58h+size], n1", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     sv, rax", "mov     cs:slotvec_0, sv", "mov     rdx, [rsp+58h+size]", "movups  xmmword ptr [sv], xmm0", "jmp     loc_4BAD"], ["xor~edi,edi", "mov~[rsp+0],n1", "call~FOO", "movdqa~xmm0,<TAG>", "mov~sv,rax", "mov~<TAG>,sv", "mov~rdx,[rsp+0]", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 1, 0, 0.08181818181818182, ["cmp     cs:nslots, r15d", "ja      short loc_4BCF"], ["cmp~<TAG>,r15d", "ja~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 3, 0, 0.12727272727272726, ["lea     rsi, [qsize+1]", "lea     qsize, slot0", "cmp     val, rax", "mov     [rbx], size_0", "jz      short loc_4C41"], ["lea~rsi,[qsize+0]", "lea~qsize,<TAG>", "cmp~val,rax", "mov~<TAG>,size_0", "jz~FOO"]], [3, 0, 4, 3, 1, 23, 1, 2, 2, 0, 0.21818181818181817, ["mov     eax, [options+4]", "shl     n0, 4", "sub     rsp, 8", "add     sv, r15", "lea     r15, [options+8]", "mov     r8d, [options+0]; quoting_style", "mov     r11, [rbx]", "mov     r12, [rbx+8]", "mov     rcx, argsize; argsize", "or      eax, 1", "mov     [rsp+60h+flags], eax", "push    r15; quote_these_too", "mov     r9d, eax; flags", "mov     rdx, [rsp+68h+arg]; arg", "mov     rsi, size_0; buffersize", "mov     rdi, val; buffer", "mov     [rsp+68h+size], size_0", "call    quotearg_buffer_restyled", "pop     rcx", "pop     rsi", "mov     r11, [rsp+58h+size]", "cmp     r11, qsize", "ja      short loc_4C7B"], ["mov~eax,[options+0]", "shl~n0,0", "sub~rsp,0", "add~sv,r15", "lea~r15,[options+0]", "mov~r8d,[options+0]", "mov~r11,<TAG>", "mov~r12,[rbx+0]", "mov~rcx,argsize", "or~eax,0", "mov~[rsp+0],eax", "push~r15", "mov~r9d,eax", "mov~rdx,[rsp+0]", "mov~rsi,size_0", "mov~rdi,val", "mov~[rsp+0],size_0", "call~FOO", "pop~rcx", "pop~rsi", "mov~r11,[rsp+0]", "cmp~r11,qsize", "ja~FOO"]], [0, 1, 0, 1, 0, 11, 0, 0, 3, 0, 0.0, ["mov     eax, [rsp+58h+e]", "mov     [r13+0], eax", "add     rsp, 28h", "mov     rax, val", "pop     rbx", "pop     options", "pop     val", "pop     r13", "pop     argsize", "pop     r15", "retn"], ["mov~eax,[rsp+0]", "mov~[r13+0],eax", "add~rsp,<STR>", "mov~rax,val", "pop~rbx", "pop~options", "pop~val", "pop~r13", "pop~argsize", "pop~r15", "retn"]], [1, 0, 1, 1, 2, 16, 0, 2, 4, 0, 0.01818181818181818, ["mov     rdi, rsi; n", "mov     [rsp+58h+size], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, [options+0]; quoting_style", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rcx, argsize; argsize", "mov     rdx, [rsp+68h+arg]; arg", "mov     rsi, [rsp+68h+size]; buffersize", "mov     rdi, rax; buffer", "mov     val, rax", "call    quotearg_buffer_restyled", "pop     rax", "pop     rdx"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,[options+0]", "push~r15", "mov~r9d,[rsp+0]", "mov~rcx,argsize", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~val,rax", "call~FOO", "pop~rax", "pop~rdx"]], [0, 0, 2, 0, 1, 4, 0, 1, 4, 0, 0.0, ["mov     rdi, val; ptr", "mov     [rsp+58h+size], size_0", "call    _free", "mov     rsi, [rsp+58h+size]"], ["mov~rdi,val", "mov~[rsp+0],size_0", "call~FOO", "mov~rsi,[rsp+0]"]]], "func_feature": [9, 4, 15, 0, 12, 15, 7, 110, 0.05909, 4, 11], "succs": [[], [0, 6], [4], [2, 5], [8], [4], [8, 3], [10, 11], [9, 7], [], [9], [10]], "fname": "quotearg_n_options", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 1, 0, 0, 2, 18, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, o", "call    ___errno_location", "mov     r12d, [p]", "mov     rbp, p", "lea     p, default_quoting_options", "test    o, o", "mov     esi, 28h ; '('; s", "cmovz   o, p", "mov     rdi, rbx; p", "call    xmemdup", "mov     [rbp+0], r12d", "pop     rbx", "pop     rbp", "pop     e", "retn"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,o", "call~FOO", "mov~r12d,<TAG>", "mov~rbp,p", "lea~p,<TAG>", "test~o,o", "mov~esi,<STR>", "cmovz~o,p", "mov~rdi,rbx", "call~FOO", "mov~[rbp+0],r12d", "pop~rbx", "pop~rbp", "pop~e", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 0, 18, 0.0, 1, 0], "succs": [[]], "fname": "clone_quoting_options", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "mov     eax, [rdi]", "retn"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "mov~eax,<TAG>", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 1, 0], "succs": [[]], "fname": "get_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "mov     [rdi], esi", "retn"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "mov~<TAG>,esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[4, 0, 0, 1, 0, 19, 6, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    p, p", "mov     ecx, esi", "cmovz   p, rax", "mov     eax, esi", "and     ecx, 1Fh", "shr     al, 5", "movzx   eax, al", "lea     p, [p+rax*4+8]", "mov     esi, [p]", "mov     eax, esi", "shr     eax, cl", "xor     edx, eax", "and     eax, 1", "and     edx, 1", "shl     edx, cl", "xor     edx, esi", "mov     [p], edx", "retn"], ["lea~rax,<TAG>", "test~p,p", "mov~ecx,esi", "cmovz~p,rax", "mov~eax,esi", "and~ecx,0", "shr~al,0", "movzx~eax,al", "lea~p,[p+0]", "mov~esi,<TAG>", "mov~eax,esi", "shr~eax,cl", "xor~edx,eax", "and~eax,0", "and~edx,0", "shl~edx,cl", "xor~edx,esi", "mov~<TAG>,edx", "retn"]]], "func_feature": [0, 6, 0, 0, 1, 0, 0, 19, 0.0, 1, 1], "succs": [[]], "fname": "set_char_quoting", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0.0, ["lea     r, default_quoting_options", "test    o, o", "cmovz   o, r", "mov     eax, [o+4]", "mov     [o+4], esi", "retn"], ["lea~r,<TAG>", "test~o,o", "cmovz~o,r", "mov~eax,[o+0]", "mov~[o+0],esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 6, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_flags", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[2, 1, 0, 3, 2, 37, 1, 2, 0, 0, 0.0, ["push    r15", "push    r14", "lea     r, default_quoting_options", "push    r13", "push    r12", "mov     r13, buffer", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r14, buffersize", "mov     r15, arg", "sub     rsp, 18h", "test    o, o", "cmovz   rbx, r", "mov     [rsp+48h+argsize], argsize_0", "call    ___errno_location", "mov     r12d, [r]", "mov     rbp, r", "lea     r, [p+8]", "sub     rsp, 8", "mov     r9d, [p+4]; flags", "mov     r8d, [p]; quoting_style", "push    r; quote_these_too", "mov     rcx, [rsp+58h+argsize]; argsize", "mov     rdx, arg; arg", "mov     rsi, buffersize; buffersize", "mov     rdi, buffer; buffer", "call    quotearg_buffer_restyled", "mov     [rbp+0], r12d", "add     rsp, 28h", "pop     p", "pop     rbp", "pop     e", "pop     buffer", "pop     buffersize", "pop     arg", "retn"], ["push~r15", "push~r14", "lea~r,<TAG>", "push~r13", "push~r12", "mov~r13,buffer", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r14,buffersize", "mov~r15,arg", "sub~rsp,0", "test~o,o", "cmovz~rbx,r", "mov~[rsp+0],argsize_0", "call~FOO", "mov~r12d,<TAG>", "mov~rbp,r", "lea~r,[p+0]", "sub~rsp,0", "mov~r9d,[p+0]", "mov~r8d,<TAG>", "push~r", "mov~rcx,[rsp+0]", "mov~rdx,arg", "mov~rsi,buffersize", "mov~rdi,buffer", "call~FOO", "mov~[rbp+0],r12d", "add~rsp,<STR>", "pop~p", "pop~rbp", "pop~e", "pop~buffer", "pop~buffersize", "pop~arg", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 0, 37, 0.0, 1, 3], "succs": [[]], "fname": "quotearg_buffer", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[2, 0, 2, 2, 4, 54, 7, 5, 0, 0, 0.0, ["push    r15", "push    r14", "lea     rax, default_quoting_options", "push    r13", "push    r12", "mov     r12, size", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r14, arg", "mov     r15, argsize", "sub     rsp, 38h", "test    o, o", "cmovz   rbx, rax", "xor     ebp, ebp", "call    ___errno_location", "test    size, size", "mov     r13, rax", "mov     eax, [rax]", "setz    bpl", "or      ebp, [p+4]", "lea     r10, [p+8]", "sub     rsp, 8", "mov     r8d, [p]; quoting_style", "mov     rcx, argsize; argsize", "mov     [rsp+70h+e], eax", "push    r10; quote_these_too", "mov     rdx, arg; arg", "xor     esi, esi; buffersize", "xor     edi, edi; buffer", "mov     r9d, ebp; flags", "mov     [rsp+78h+var_48], r10", "call    quotearg_buffer_restyled", "lea     rsi, [rax+1]", "mov     [rsp+78h+var_40], rax", "mov     rdi, bufsize_0; n", "mov     [rsp+78h+bufsize], bufsize_0", "call    xmalloc", "mov     r10, [rsp+78h+var_48]", "mov     rsi, [rsp+78h+bufsize]; buffersize", "mov     rdx, arg; arg", "mov     r8d, [p]; quoting_style", "mov     r9d, ebp; flags", "mov     rcx, argsize; argsize", "mov     rdi, rax; buffer", "mov     [rsp+78h+var_58], rax", "mov     [rsp+78h+quote_these_too], r10; quote_these_too", "call    quotearg_buffer_restyled", "mov     eax, [rsp+78h+e]", "test    size, size", "mov     [r13+0], eax", "pop     rax", "pop     rdx", "jz      short loc_4EDB"], ["push~r15", "push~r14", "lea~rax,<TAG>", "push~r13", "push~r12", "mov~r12,size", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r14,arg", "mov~r15,argsize", "sub~rsp,0", "test~o,o", "cmovz~rbx,rax", "xor~ebp,ebp", "call~FOO", "test~size,size", "mov~r13,rax", "mov~eax,<TAG>", "setz~bpl", "or~ebp,[p+0]", "lea~r10,[p+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~[rsp+0],eax", "push~r10", "mov~rdx,arg", "xor~esi,esi", "xor~edi,edi", "mov~r9d,ebp", "mov~[rsp+0],r10", "call~FOO", "lea~rsi,[rax+0]", "mov~[rsp+0],rax", "mov~rdi,bufsize_0", "mov~[rsp+0],bufsize_0", "call~FOO", "mov~r10,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdx,arg", "mov~r8d,<TAG>", "mov~r9d,ebp", "mov~rcx,argsize", "mov~rdi,rax", "mov~[rsp+0],rax", "mov~<TAG>,r10", "call~FOO", "mov~eax,[rsp+0]", "test~size,size", "mov~[r13+0],eax", "pop~rax", "pop~rdx", "jz~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 0, 0, 0.0, ["mov     rax, [rsp+68h+var_58]", "add     rsp, 38h", "pop     p", "pop     flags", "pop     size", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["mov~rax,[rsp+0]", "add~rsp,0", "pop~p", "pop~flags", "pop~size", "pop~r13", "pop~arg", "pop~argsize", "retn"]], [0, 0, 1, 0, 0, 2, 0, 0, 0, 1, 0.0, ["mov     r11, [rsp+68h+var_40]", "mov     [size], r11"], ["mov~r11,[rsp+0]", "mov~<TAG>,r11"]]], "func_feature": [4, 7, 5, 3, 3, 3, 1, 65, 0.0, 1, 3], "succs": [[1, 2], [], [1]], "fname": "quotearg_alloc_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rcx, o", "xor     edx, edx", "jmp     quotearg_alloc_mem"], ["mov~rcx,o", "xor~edx,edx", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_alloc", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 1, 3, 0, 1, 3, 0, 1, 0, 0, 0.0, ["call    _free", "mov     cs:slotvec0.size, 100h", "mov     cs:slotvec0.val, rbx"], ["call~FOO", "mov~<TAG>,<STR>", "mov~<TAG>,rbx"]], [0, 0, 4, 0, 0, 4, 0, 1, 1, 2, 0.2857142857142857, ["mov     rdi, [sv+8]; ptr", "lea     rbx, slot0", "cmp     rdi, rbx", "jz      short loc_4F69"], ["mov~rdi,[sv+0]", "lea~rbx,<TAG>", "cmp~rdi,rbx", "jz~FOO"]], [2, 0, 6, 2, 0, 5, 0, 0, 1, 4, 0.023809523809523808, ["sub     eax, 2", "lea     rbx, [sv+18h]", "shl     rax, 4", "lea     rbp, [sv+rax+28h]", "nop     word ptr [rax+rax+00000000h]"], ["sub~eax,0", "lea~rbx,[sv+0]", "shl~rax,0", "lea~rbp,[sv+0]", "nop~[ord ptr [rax+0]"]], [1, 0, 7, 0, 0, 7, 0, 0, 0, 3, 0.0, ["mov     eax, cs:nslots", "push    r12", "mov     r12, cs:slotvec_0", "push    rbp", "push    rbx", "cmp     eax, 1", "jbe     short loc_4F41"], ["mov~eax,<TAG>", "push~r12", "mov~r12,<TAG>", "push~rbp", "push~rbx", "cmp~eax,0", "jbe~FOO"]], [1, 0, 6, 1, 1, 5, 0, 2, 2, 3, 0.11904761904761904, ["mov     rdi, [rbx]; ptr", "add     rbx, 10h", "call    _free", "cmp     rbx, rbp", "jnz     short loc_4F30"], ["mov~rdi,<TAG>", "add~rbx,0", "call~FOO", "cmp~rbx,rbp", "jnz~FOO"]], [1, 0, 0, 0, 0, 5, 0, 0, 3, 0, 0.0, ["pop     rbx", "mov     cs:nslots, 1", "pop     rbp", "pop     sv", "retn"], ["pop~rbx", "mov~<TAG>,0", "pop~rbp", "pop~sv", "retn"]], [0, 0, 2, 0, 0, 3, 0, 1, 2, 1, 0.23809523809523808, ["lea     rbx, slotvec0", "cmp     sv, rbx", "jz      short loc_4F84"], ["lea~rbx,<TAG>", "cmp~sv,rbx", "jz~FOO"]], [0, 0, 1, 0, 1, 3, 0, 1, 3, 1, 0.0, ["mov     rdi, sv; ptr", "call    _free", "mov     cs:slotvec_0, rbx"], ["mov~rdi,sv", "call~FOO", "mov~<TAG>,rbx"]]], "func_feature": [3, 0, 6, 0, 8, 11, 0, 35, 0.08333, 5, 3], "succs": [[6], [0, 6], [4], [1, 2], [1, 4], [], [5, 7], [5]], "fname": "quotearg_free", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rdx,0", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 3, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg_n", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg_n_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options; options", "mov     rsi, arg; arg", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "xor     edi, edi; n", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rsi,arg", "mov~rdx,0", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 5, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options; options", "mov     rdx, argsize; argsize", "mov     argsize, arg; arg", "xor     edi, edi; n", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rdx,argsize", "mov~argsize,arg", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 5, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[3, 0, 2, 1, 1, 23, 2, 2, 0, 0, 0.0, ["pxor    xmm0, xmm0", "sub     rsp, 68h", "mov     dword ptr [rsp+68h+s], esi", "mov     dword ptr [rsp+68h+s+4], 0", "mov     rax, arg", "mov     rcx, fs:28h", "mov     [rsp+68h+var_10], rcx", "xor     ecx, ecx", "movups  [rsp+68h+s+8], xmm0", "mov     rcx, rsp; options", "mov     s_0, rax; arg", "movups  [rsp+68h+var_20], xmm0", "movdqa  xmm0, [rsp+68h+s]", "mov     arg, qword ptr [rsp+68h+var_20+8]", "movaps  xmmword ptr [rsp+68h+o.style], xmm0", "movdqa  xmm0, xmmword ptr [rsp+40h]", "mov     qword ptr [rsp+68h+o.quote_these_too+18h], rdx", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "movaps  xmmword ptr [rsp+68h+o.quote_these_too+8], xmm0", "call    quotearg_n_options", "mov     rdx, [rsp+68h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_5087"], ["pxor~xmm0,xmm0", "sub~rsp,0", "mov~[word ptr [rsp+0],esi", "mov~[word ptr [rsp+0],0", "mov~rax,arg", "mov~rcx,<TAG>", "mov~[rsp+0],rcx", "xor~ecx,ecx", "movups~[rsp+0],xmm0", "mov~rcx,rsp", "mov~s_0,rax", "movups~[rsp+0],xmm0", "movdqa~xmm0,[rsp+0]", "mov~arg,[word ptr [rsp+0]", "movaps~<TAG>,xmm0", "movdqa~xmm0,[mmword ptr [rsp+0]", "mov~[word ptr [rsp+0],rdx", "mov~rdx,0", "movaps~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 0, -1, 0.0, ["add     rsp, 68h", "retn"], ["add~rsp,0", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 2, 3, 2, 3, 2, 3, 26, 0.0, 1, 2], "succs": [[1, 2], [], []], "fname": "quotearg_n_style", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 68h", "retn"], ["add~rsp,0", "retn"]], [2, 0, 2, 1, 1, 23, 2, 2, 0, 1, 0.0, ["pxor    xmm0, xmm0", "sub     rsp, 68h", "mov     dword ptr [rsp+68h+s], esi", "mov     dword ptr [rsp+68h+s+4], 0", "mov     rax, arg", "mov     arg, argsize; argsize", "mov     s_0, arg; arg", "movups  [rsp+68h+s+8], xmm0", "mov     argsize, fs:28h", "mov     [rsp+68h+var_10], argsize", "xor     ecx, ecx", "movups  [rsp+68h+var_20], xmm0", "movdqa  xmm0, [rsp+68h+s]", "mov     rcx, qword ptr [rsp+68h+var_20+8]", "movaps  xmmword ptr [rsp+68h+o.style], xmm0", "movdqa  xmm0, xmmword ptr [rsp+40h]", "mov     qword ptr [rsp+68h+o.quote_these_too+18h], rcx", "mov     rcx, rsp; options", "movaps  xmmword ptr [rsp+68h+o.quote_these_too+8], xmm0", "call    quotearg_n_options", "mov     rdx, [rsp+68h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_5103"], ["pxor~xmm0,xmm0", "sub~rsp,0", "mov~[word ptr [rsp+0],esi", "mov~[word ptr [rsp+0],0", "mov~rax,arg", "mov~arg,argsize", "mov~s_0,arg", "movups~[rsp+0],xmm0", "mov~argsize,<TAG>", "mov~[rsp+0],argsize", "xor~ecx,ecx", "movups~[rsp+0],xmm0", "movdqa~xmm0,[rsp+0]", "mov~rcx,[word ptr [rsp+0]", "movaps~<TAG>,xmm0", "movdqa~xmm0,[mmword ptr [rsp+0]", "mov~[word ptr [rsp+0],rcx", "mov~rcx,rsp", "movaps~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 2, 3, 2, 3, 2, 1, 26, 0.0, 1, 2], "succs": [[], [0, 2], []], "fname": "quotearg_n_style_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 4, 1, 1, 0, 0, 0.0, ["mov     rdx, arg; arg", "mov     esi, edi; s", "xor     edi, edi; n", "jmp     quotearg_n_style"], ["mov~rdx,arg", "mov~esi,edi", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "quotearg_style", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["mov     rcx, argsize; argsize", "mov     argsize, arg; arg", "mov     esi, edi; s", "xor     edi, edi; n", "jmp     quotearg_n_style_mem"], ["mov~rcx,argsize", "mov~argsize,arg", "mov~esi,edi", "xor~edi,edi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 5, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_style_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 38h", "retn"], ["add~rsp,0", "retn"]], [4, 0, 2, 2, 1, 33, 6, 2, 0, 1, 0.0, ["sub     rsp, 38h", "mov     ecx, edx", "mov     rax, fs:28h", "mov     [rsp+38h+var_10], rax", "xor     eax, eax", "mov     rax, qword ptr cs:default_quoting_options.quote_these_too+18h", "mov     r8, rsp", "and     ecx, 1Fh", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     qword ptr [rsp+38h+options.quote_these_too+18h], rax", "mov     eax, edx", "shr     al, 5", "movzx   eax, al", "movaps  xmmword ptr [rsp+38h+options.style], xmm0", "lea     r9, [r8+rax*4+8]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "movaps  xmmword ptr [rsp+38h+options.quote_these_too+8], xmm0", "mov     edx, [r9]", "mov     eax, edx", "shr     eax, cl", "not     eax", "and     eax, 1", "shl     eax, cl", "mov     rcx, r8; options", "xor     eax, edx", "mov     rdx, argsize; argsize", "mov     argsize, arg; arg", "mov     [r9], eax", "xor     edi, edi; n", "call    quotearg_n_options", "mov     rsi, [rsp+38h+var_10]", "xor     rsi, fs:28h", "jnz     short loc_51B6"], ["sub~rsp,0", "mov~ecx,edx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "mov~r8,rsp", "and~ecx,0", "movdqa~xmm0,<TAG>", "mov~[word ptr [rsp+0],rax", "mov~eax,edx", "shr~al,0", "movzx~eax,al", "movaps~<TAG>,xmm0", "lea~r9,[r8+0]", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "mov~edx,<TAG>", "mov~eax,edx", "shr~eax,cl", "not~eax", "and~eax,0", "shl~eax,cl", "mov~rcx,r8", "xor~eax,edx", "mov~rdx,argsize", "mov~argsize,arg", "mov~<TAG>,eax", "xor~edi,edi", "call~FOO", "mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 6, 3, 1, 3, 2, 3, 36, 0.0, 4, 3], "succs": [[], [0, 2], []], "fname": "quotearg_char_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["movsx   edx, sil", "mov     ch_0, 0FFFFFFFFFFFFFFFFh", "jmp     quotearg_char_mem"], ["movsx~edx,sil", "mov~ch_0,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_char", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[1, 1, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     edx, 3Ah ; ':'; ch_0", "mov     rsi, 0FFFFFFFFFFFFFFFFh; argsize", "jmp     quotearg_char_mem"], ["mov~edx,<STR>", "mov~rsi,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 1, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_colon", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     edx, 3Ah ; ':'; ch_0", "jmp     quotearg_char_mem"], ["mov~edx,<STR>", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_colon_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[1, 0, 6, 0, 0, 2, 0, 0, 0, 0, 0.25, ["cmp     count, 7FFFE000h", "jbe     short loc_5250"], ["cmp~count,0", "jbe~FOO"]], [1, 0, 6, 0, 1, 4, 0, 2, 2, 2, 0.3, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 4", "jz      short loc_5218"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 4, 1, 0.2, ["cmp     eax, 16h", "jnz     short loc_5250"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 6, 0, 1, 7, 1, 1, 1, 1, 0.4166666666666667, ["mov     rdx, count; nbytes", "mov     rsi, buf; buf", "mov     edi, r13d; fd", "call    _read", "test    rax, rax", "mov     rbp, rax", "jns     short loc_5250"], ["mov~rdx,count", "mov~rsi,buf", "mov~edi,r13d", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jns~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 5, 2, 0.16666666666666666, ["mov     ebx, 7FFFE000h", "jmp     short loc_5218"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 6, 1, 0, 9, 0, 0, 0, 2, 0.0, ["push    r13", "push    r12", "mov     r13d, edi", "push    rbp", "push    rbx", "mov     r12, buf", "mov     rbx, count", "sub     rsp, 8", "nop     dword ptr [rax+rax+00h]"], ["push~r13", "push~r12", "mov~r13d,edi", "push~rbp", "push~rbx", "mov~r12,buf", "mov~rbx,count", "sub~rsp,0", "nop~[word ptr [rax+0]"]], [1, 0, 0, 1, 0, 7, 0, 0, 2, 0, 0.0, ["add     rsp, 8", "mov     rax, rbp", "pop     count", "pop     rbp", "pop     buf", "pop     fd", "retn"], ["add~rsp,0", "mov~rax,rbp", "pop~count", "pop~rbp", "pop~buf", "pop~fd", "retn"]]], "func_feature": [2, 1, 5, 0, 7, 10, 2, 33, 0.19048, 0, 2], "succs": [[2, 6], [0, 3], [4, 6], [1, 6], [3], [3], []], "fname": "safe_read", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[1, 0, 6, 0, 0, 2, 0, 0, 0, 0, 0.2, ["cmp     count, 7FFFE000h", "jbe     short loc_52B0"], ["cmp~count,0", "jbe~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 3, 1, 0.25, ["cmp     eax, 16h", "jnz     short loc_52B0"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 6, 0, 1, 7, 1, 1, 1, 1, 0.4166666666666667, ["mov     rdx, count; n", "mov     rsi, buf; buf", "mov     edi, r13d; fd", "call    _write", "test    rax, rax", "mov     rbp, rax", "jns     short loc_52B0"], ["mov~rdx,count", "mov~rsi,buf", "mov~edi,r13d", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jns~FOO"]], [1, 0, 6, 0, 1, 4, 0, 2, 2, 2, 0.3, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 4", "jz      short loc_5278"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 5, 2, 0.16666666666666666, ["mov     ebx, 7FFFE000h", "jmp     short loc_5278"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 6, 1, 0, 9, 0, 0, 0, 2, 0.0, ["push    r13", "push    r12", "mov     r13d, edi", "push    rbp", "push    rbx", "mov     r12, buf", "mov     rbx, count", "sub     rsp, 8", "nop     dword ptr [rax+rax+00h]"], ["push~r13", "push~r12", "mov~r13d,edi", "push~rbp", "push~rbx", "mov~r12,buf", "mov~rbx,count", "sub~rsp,0", "nop~[word ptr [rax+0]"]], [1, 0, 0, 1, 0, 7, 0, 0, 2, 0, 0.0, ["add     rsp, 8", "mov     rax, result", "pop     count", "pop     result", "pop     buf", "pop     fd", "retn"], ["add~rsp,0", "mov~rax,result", "pop~count", "pop~result", "pop~buf", "pop~fd", "retn"]]], "func_feature": [2, 1, 5, 0, 7, 10, 1, 33, 0.19048, 0, 2], "succs": [[4, 6], [0, 6], [3, 6], [1, 2], [2], [2], []], "fname": "safe_write", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 3, 0, 2, 7, 0, 3, 0, 0, 0.0, ["call    ___errno_location", "mov     r13d, [rax]", "mov     r12, rax", "mov     rdi, output; ptr", "call    _free", "mov     [r12], r13d", "jmp     short loc_5335"], ["call~FOO", "mov~r13d,<TAG>", "mov~r12,rax", "mov~rdi,output", "call~FOO", "mov~<TAG>,r13d", "jmp~FOO"]], [1, 0, 4, 0, 0, 3, 0, 1, 2, 2, 0.048611111111111105, ["cmp     output, r12", "mov     ebx, 0FFFFFFFFh", "jz      short loc_5335"], ["cmp~output,r12", "mov~ebx,0", "jz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.19444444444444442, ["mov     rcx, [rsp+818h+var_30]", "xor     rcx, fs:28h", "mov     eax, ebx", "jnz     short loc_539D"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [1, 0, 3, 0, 1, 4, 0, 2, 1, 2, 0.08333333333333333, ["mov     rdi, fp; fp", "mov     ebx, 0FFFFFFFFh", "call    fseterr", "jmp     short loc_5335"], ["mov~rdi,fp", "mov~ebx,0", "call~FOO", "jmp~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 2, 2, 0.0625, ["cmp     len, 7FFFFFFFh", "ja      short loc_5383"], ["cmp~len,0", "ja~FOO"]], [1, 0, 8, 0, 1, 8, 0, 1, 1, 3, 0.05555555555555555, ["mov     rcx, fp; s", "mov     rdx, len; n", "mov     esi, 1; size", "mov     rdi, output; ptr", "mov     rbp, output", "call    _fwrite", "cmp     rax, len", "jb      short loc_5360"], ["mov~rcx,fp", "mov~rdx,len", "mov~esi,0", "mov~rdi,output", "mov~rbp,output", "call~FOO", "cmp~rax,len", "jb~FOO"]], [2, 0, 9, 1, 1, 20, 2, 2, 0, 3, 0.0, ["push    r13", "push    r12", "mov     rax, format", "push    rbp", "push    rbx", "mov     r13, fp", "sub     rsp, 7F8h", "lea     r12, [rsp+818h+buf]", "lea     format, [rsp+818h+lenbuf]; lengthp", "mov     [rsp+818h+lenbuf], 7D0h", "mov     rcx, fs:28h", "mov     [rsp+818h+var_30], rcx", "xor     ecx, ecx", "mov     fp, r12; resultbuf", "mov     rcx, args; args", "mov     args, format; format", "call    vasnprintf", "test    output, output", "mov     rbx, [rsp+818h+lenbuf]", "jz      short loc_538E"], ["push~r13", "push~r12", "mov~rax,format", "push~rbp", "push~rbx", "mov~r13,fp", "sub~rsp,0", "lea~r12,[rsp+0]", "lea~format,[rsp+0]", "mov~[rsp+0],0", "mov~rcx,<TAG>", "mov~[rsp+0],rcx", "xor~ecx,ecx", "mov~fp,r12", "mov~rcx,args", "mov~args,format", "call~FOO", "test~output,output", "mov~rbx,[rsp+0]", "jz~FOO"]], [1, 0, 4, 0, 1, 2, 0, 1, 3, 3, 0.027777777777777776, ["call    ___errno_location", "mov     dword ptr [rax], 4Bh ; 'K'"], ["call~FOO", "mov~<TAG>,0"]], [1, 0, 0, 1, 0, 6, 0, 0, 3, -1, 0.0, ["add     rsp, 7F8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [7, 3, 13, 1, 10, 13, 1, 57, 0.04722, 1, 2], "succs": [[2], [0, 2], [8, 9], [2], [2, 7], [1, 4], [3, 5], [3], [], []], "fname": "rpl_vfprintf", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    n, n", "jnz     short loc_53C5"], ["test~n,n", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "mov     rbx, n", "call    _malloc", "test    p, p", "jnz     short loc_53C3"], ["push~rbx", "mov~rbx,n", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 4, 10, 10, 0.04167, 0, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "xmalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    n, n", "jnz     short loc_53E5"], ["test~n,n", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "mov     rbx, n", "call    _realloc", "test    p, p", "jnz     short loc_53E3"], ["push~rbx", "mov~rbx,n", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 2, 4, 0, 4, 4, 4, 10, 0.04167, 0, 0], "succs": [[2, 3], [0, 2], [], []], "fname": "xrealloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[1, 0, 3, 0, 0, 3, 0, 1, 0, 0, 0.1, ["mov     rdx, 0AAAAAAAAAAAAAAA9h", "cmp     rax, rdx", "ja      short loc_5434"], ["mov~rdx,0", "cmp~rax,rdx", "ja~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 0, 2, 0.0, ["test    p, p", "mov     rax, [pn]", "jz      short loc_5420"], ["test~p,p", "mov~rax,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []], [1, 0, 1, 1, 0, 6, 0, 1, 2, -1, 0.05, ["lea     rdx, [rax+1]", "shr     rdx, 1", "add     rax, rdx", "mov     [pn], rax", "mov     pn, rax; n", "jmp     short xrealloc"], ["lea~rdx,[rax+0]", "shr~rdx,0", "add~rax,rdx", "mov~<TAG>,rax", "mov~pn,rax", "jmp~FOO"]], [1, 0, 1, 0, 0, 6, 1, 1, 1, -1, 0.05, ["test    rax, rax", "mov     edx, 40h ; '@'", "cmovz   rax, rdx", "mov     [pn], rax", "mov     pn, rax; n", "jmp     short xrealloc"], ["test~rax,rax", "mov~edx,0", "cmovz~rax,rdx", "mov~<TAG>,rax", "mov~pn,rax", "jmp~FOO"]], [1, 0, 0, 1, 1, 2, 0, 1, 2, 0, 0.0, ["sub     rsp, 8", "call    xalloc_die"], ["sub~rsp,0", "call~FOO"]]], "func_feature": [1, 2, 5, 0, 6, 6, 0, 20, 0.03333, 0, 2], "succs": [[3, 5], [0, 4], [], [2], [2], []], "fname": "x2realloc", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 1, 0, 1, 8, 1, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, s", "call    xmalloc", "mov     rdx, s; n", "xor     esi, esi; c", "mov     rdi, rax; s", "pop     s", "jmp     _memset"], ["push~rbx", "mov~rbx,s", "call~FOO", "mov~rdx,s", "xor~esi,esi", "mov~rdi,rax", "pop~s", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 1, 2, 0, 2, 1, 0, 8, 0.0, 0, 0], "succs": [[1], []], "fname": "xzalloc", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 4, 1, 2, 0, 1, 0.0, ["sub     rsp, 8", "call    _calloc", "test    p, p", "jz      short loc_5473"], ["sub~rsp,0", "call~FOO", "test~p,p", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 1, 3, 0, 3, 2, 0, 7, 0.0, 0, 2], "succs": [[], [0, 2], []], "fname": "xcalloc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [2, 0, 1, 2, 1, 14, 0, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rbp, p", "mov     p, s; n", "mov     rbx, s", "sub     rsp, 8", "call    xmalloc", "add     rsp, 8", "mov     rdx, s; n", "mov     rsi, p; src", "pop     s", "pop     p", "mov     rdi, rax; dest", "jmp     _memcpy"], ["push~rbp", "push~rbx", "mov~rbp,p", "mov~p,s", "mov~rbx,s", "sub~rsp,0", "call~FOO", "add~rsp,0", "mov~rdx,s", "mov~rsi,p", "pop~s", "pop~p", "mov~rdi,rax", "jmp~FOO"]]], "func_feature": [1, 0, 2, 0, 2, 1, 2, 14, 0.0, 0, 2], "succs": [[], [0]], "fname": "xmemdup", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 1, 7, 0, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, string", "call    _strlen", "mov     rdi, string; p", "lea     rsi, [rax+1]; s", "pop     string", "jmp     short xmemdup"], ["push~rbx", "mov~rbx,string", "call~FOO", "mov~rdi,string", "lea~rsi,[rax+0]", "pop~string", "jmp~FOO"]]], "func_feature": [1, 0, 2, 0, 2, 1, 0, 7, 0.0, 0, 0], "succs": [[], [0]], "fname": "xstrdup", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[2, 0, 4, 2, 0, 4, 0, 1, 0, 0, 0.0, ["add     p1, 1", "add     p2, 1", "cmp     al, dl", "jnz     short loc_5512"], ["add~p1,0", "add~p2,0", "cmp~al,dl", "jnz~FOO"]], [2, 0, 4, 0, 0, 12, 1, 1, 1, 2, 0.1, ["movzx   eax, byte ptr [p1]", "lea     ecx, [__c-41h]", "lea     edx, [__c+20h]", "cmp     ecx, 1Ah", "cmovb   eax, edx", "movzx   edx, byte ptr [p2]", "lea     r9d, [__c-41h]", "lea     r8d, [__c+20h]", "cmp     r9d, 1Ah", "cmovb   edx, r8d", "test    al, al", "jnz     short loc_54E0"], ["movzx~eax,<TAG>", "lea~ecx,[__c-41h]+0]", "lea~edx,[__c+0]", "cmp~ecx,0", "cmovb~eax,edx", "movzx~edx,<TAG>", "lea~r9d,[__c-41h]+0]", "lea~r8d,[__c+0]", "cmp~r9d,0", "cmovb~edx,r8d", "test~al,al", "jnz~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 0, 2, 0.0, ["xor     eax, eax", "cmp     p1, p2", "jnz     short loc_54EC"], ["xor~eax,eax", "cmp~p1,p2", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0.05, ["jmp     short locret_551A"], ["jmp~FOO"]], [0, 0, 1, 1, 0, 3, 0, 0, 2, 1, 0.1, ["movzx   eax, al", "movzx   edx, dl", "sub     eax, edx"], ["movzx~eax,al", "movzx~edx,dl", "sub~eax,edx"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 2, 4, 0, 6, 8, 2, 24, 0.04167, 0, 3], "succs": [[1, 4], [0, 4], [1, 3], [5], [5], []], "fname": "c_strcasecmp", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 1, 0, 0, 0, 2, 1, 0, 0, 0, 0.0, ["or      dword ptr [fp], 20h", "retn"], ["or~<TAG>,<STR>", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 1, 2, 0.0, 0, 0], "succs": [[]], "fname": "fseterr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 40, 0, 0, 3, 0, 0, 0, 0, 0.057467532467532466, ["mov     rax, [r14+8]", "cmp     rax, [r14+10h]", "jb      short loc_5860"], ["mov~rax,[r14+0]", "cmp~rax,[r14+0]", "jb~FOO"]], [1, 0, 40, 0, 0, 2, 0, 1, 12, -1, 0.20097402597402597, ["cmp     edi, 23h ; '#'", "jz      loc_5879"], ["cmp~edi,0", "jz~FOO"]], [0, 0, 40, 0, 0, 2, 1, 1, 16, -1, 0.0022727272727272726, ["test    dl, dl", "jz      short loc_5893"], ["test~dl,dl", "jz~FOO"]], [3, 0, 45, 0, 0, 4, 0, 0, 3, -1, 0.05551948051948052, ["lea     r13, aUsrLocalLib; \"/usr/local/lib\"", "mov     edi, 1Dh; size", "mov     r12d, 0Fh", "mov     r14d, 0Eh"], ["lea~r13,<TAG>", "mov~edi,0", "mov~r12d,0", "mov~r14d,0"]], [0, 0, 54, 0, 1, 5, 1, 2, 2, 4, 0.03214285714285714, ["lea     rdi, name; \"CHARSETALIASDIR\"", "call    _getenv", "test    rax, rax", "mov     r13, rax", "jz      short loc_5670"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "mov~r13,rax", "jz~FOO"]], [1, 0, 53, 0, 0, 2, 0, 1, 3, 3, 0.006818181818181818, ["cmp     byte ptr [rax], 0", "jz      short loc_5670"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 0A8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     aliases", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~aliases", "retn"]], [1, 0, 2, 0, 0, 7, 1, 1, 2, -1, 0.03506493506493506, ["cmp     byte ptr [codeset], 0", "lea     rax, aAscii; \"ASCII\"", "cmovz   codeset, rax", "mov     rcx, [rsp+0D8h+var_40]", "xor     rcx, fs:28h", "mov     rax, rbx", "jnz     loc_5958"], ["cmp~<TAG>,0", "lea~rax,<TAG>", "cmovz~codeset,rax", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~rax,rbx", "jnz~FOO"]], [2, 0, 40, 1, 0, 7, 2, 1, 15, -1, 0.11883116883116883, ["mov     ecx, [rdx]", "add     rdx, 4", "lea     eax, [rcx-1010101h]", "not     ecx", "and     eax, ecx", "and     eax, 80808080h", "jz      short loc_5771"], ["mov~ecx,<TAG>", "add~rdx,0", "lea~eax,[rcx-1010101h]+0]", "not~ecx", "and~eax,ecx", "and~eax,0", "jz~FOO"]], [0, 0, 40, 0, 0, 1, 0, 0, 14, -1, 0.11818181818181818, ["mov     rdx, r13"], ["mov~rdx,r13"]], [1, 0, 40, 0, 0, 7, 1, 0, 7, -1, 0.13636363636363635, ["lea     rax, [rsp+0D8h+var_78]", "mov     [rsp+0D8h+var_D8], 0", "xor     r15d, r15d", "mov     [rsp+0D8h+var_D0], rax", "lea     rax, [rsp+0D8h+var_B8]", "mov     [rsp+0D8h+src], rax", "nop     dword ptr [rax+rax+00000000h]"], ["lea~rax,[rsp+0]", "mov~<TAG>,0", "xor~r15d,r15d", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "nop~[word ptr [rax+0]"]], [3, 0, 41, 1, 1, 12, 1, 2, 6, -1, 0.1474025974025974, ["add     r12, rbp", "mov     rax, 2E74657372616863h", "lea     rsi, modes; \"r\"", "mov     [r12], rax", "mov     eax, 73h ; 's'", "mov     dword ptr [r12+8], 61696C61h", "mov     [r12+0Ch], ax", "mov     rdi, rbp; filename", "call    _fopen", "test    rax, rax", "mov     r14, rax", "jz      loc_58B4"], ["add~r12,rbp", "mov~rax,0", "lea~rsi,<TAG>", "mov~<TAG>,rax", "mov~eax,0", "mov~[word ptr [r12+0],0", "mov~[r12+0],ax", "mov~rdi,rbp", "call~FOO", "test~rax,rax", "mov~r14,rax", "jz~FOO"]], [1, 0, 40, 0, 1, 5, 0, 2, 9, -1, 0.14788961038961038, ["mov     rdi, r14; _IO_FILE *", "call    ___uflow", "cmp     eax, 0FFFFFFFFh", "mov     edi, eax", "jnz     loc_5729"], ["mov~rdi,r14", "call~FOO", "cmp~eax,0", "mov~edi,eax", "jnz~FOO"]], [0, 0, 40, 0, 0, 3, 0, 0, 8, -1, 0.25941558441558443, ["mov     rax, [r14+8]", "cmp     rax, [r14+10h]", "jnb     loc_5900"], ["mov~rax,[r14+0]", "cmp~rax,[r14+0]", "jnb~FOO"]], [1, 0, 40, 0, 1, 5, 0, 2, 14, -1, 0.023051948051948053, ["mov     rdi, r14; _IO_FILE *", "call    ___uflow", "cmp     eax, 0FFFFFFFFh", "setnz   dl", "jmp     short loc_5870"], ["mov~rdi,r14", "call~FOO", "cmp~eax,0", "setnz~dl", "jmp~FOO"]], [0, 0, 44, 0, 1, 4, 1, 2, 4, -1, 0.09042207792207792, ["call    _malloc", "test    rax, rax", "mov     rbp, rax", "jz      short loc_5656"], ["call~FOO", "test~rax,rax", "mov~rbp,rax", "jz~FOO"]], [1, 0, 45, 1, 0, 3, 0, 1, 6, 0, 0.008279220779220779, ["lea     rdi, [rax+0Fh]", "add     r12, 1", "jmp     loc_5688"], ["lea~rdi,[rax+0]", "add~r12,0", "jmp~FOO"]], [0, 0, 40, 0, 1, 6, 0, 1, 19, -1, 0.054707792207792205, ["lea     rcx, [rax+2]", "lea     rdi, [rax+3]; size", "mov     [rsp+0D8h+var_D8], rcx", "call    _malloc", "mov     rdx, [rsp+0D8h+var_C0]", "mov     r12, rax"], ["lea~rcx,[rax+0]", "lea~rdi,[rax+0]", "mov~<TAG>,rcx", "call~FOO", "mov~rdx,[rsp+0]", "mov~r12,rax"]], [4, 0, 40, 2, 0, 14, 1, 1, 18, -1, 0.12077922077922078, ["mov     esi, eax", "mov     [rsp+0D8h+var_C0], rdx", "shr     esi, 10h", "test    eax, 8080h", "cmovz   eax, esi", "lea     rsi, [r13+2]", "mov     ecx, eax", "cmovz   r13, rsi", "add     cl, al", "sbb     r13, 3", "sub     r13, [rsp+0D8h+var_D0]", "cmp     [rsp+0D8h+var_D8], 0", "lea     rax, [rdx+r13]", "jnz     loc_58DB"], ["mov~esi,eax", "mov~[rsp+0],rdx", "shr~esi,0", "test~eax,0", "cmovz~eax,esi", "lea~rsi,[r13+0]", "mov~ecx,eax", "cmovz~r13,rsi", "add~cl,al", "sbb~r13,0", "sub~r13,[rsp+0]", "cmp~<TAG>,0", "lea~rax,<TAG>", "jnz~FOO"]], [0, 0, 9, 0, 2, 6, 0, 2, 4, -1, 0.002435064935064935, ["mov     rdi, aliases; s", "call    _strlen", "lea     rbp, [aliases+rax+1]", "mov     rdi, aliases; s", "call    _strlen", "lea     r15, [aliases+rax+1]"], ["mov~rdi,aliases", "call~FOO", "lea~rbp,[aliases+0]", "mov~rdi,aliases", "call~FOO", "lea~r15,[aliases+0]"]], [1, 0, 9, 0, 0, 2, 0, 1, 3, -1, 0.033116883116883114, ["cmp     bpl, 2Ah ; '*'", "jnz     short loc_5580"], ["cmp~bpl,0", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 4, -1, 0.0008116883116883117, ["cmp     byte ptr [aliases+1], 0", "jnz     short loc_5580"], ["cmp~[yte ptr [aliases+0],0", "jnz~FOO"]], [1, 0, 40, 0, 0, 2, 0, 1, 16, -1, 0.05714285714285714, ["cmp     eax, 0FFFFFFFFh", "jnz     loc_5710"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 40, 0, 0, 2, 0, 1, 15, -1, 0.059415584415584415, ["cmp     eax, 0Ah", "jz      short loc_5893"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 40, 0, 0, 3, 0, 0, 10, -1, 0.20876623376623377, ["lea     eax, [rdi-9]", "cmp     eax, 1", "jbe     short loc_5710"], ["lea~eax,[rdi-9]+0]", "cmp~eax,0", "jbe~FOO"]], [0, 1, 40, 0, 0, 2, 0, 1, 11, -1, 0.20194805194805196, ["cmp     edi, 20h ; ' '", "jz      short loc_5710"], ["cmp~edi,<STR>", "jz~FOO"]], [2, 0, 40, 5, 2, 15, 0, 3, 21, -1, 0.05779220779220779, ["mov     r15, [rsp+0D8h+var_D8]", "mov     rdi, 0FFFFFFFFFFFFFFFEh", "mov     rsi, [rsp+0D8h+src]; src", "sub     rdi, rdx", "add     rdx, 1; n", "sub     r15, r13", "add     rdi, r15", "add     rdi, r12; dest", "call    _memcpy", "mov     rsi, [rsp+0D8h+var_D0]; src", "lea     rdi, [r12+r15-1]; dest", "lea     rdx, [r13+1]; n", "mov     r15, r12", "call    _memcpy", "jmp     loc_5710"], ["mov~r15,<TAG>", "mov~rdi,0", "mov~rsi,[rsp+0]", "sub~rdi,rdx", "add~rdx,0", "sub~r15,r13", "add~rdi,r15", "add~rdi,r12", "call~FOO", "mov~rsi,[rsp+0]", "lea~rdi,[r12+0]", "lea~rdx,[r13+0]", "mov~r15,r12", "call~FOO", "jmp~FOO"]], [0, 0, 40, 0, 0, 2, 1, 1, 20, -1, 0.12272727272727273, ["test    r12, r12", "jz      loc_5915"], ["test~r12,r12", "jz~FOO"]], [0, 0, 40, 1, 1, 9, 0, 2, 19, -1, 0.054707792207792205, ["add     rax, [rsp+0D8h+var_D8]", "mov     rdi, r15; ptr", "lea     rcx, [rax+2]", "lea     rsi, [rax+3]; size", "mov     [rsp+0D8h+var_D8], rcx", "call    _realloc", "mov     rdx, [rsp+0D8h+var_C0]", "mov     r12, rax", "jmp     loc_5817"], ["add~rax,<TAG>", "mov~rdi,r15", "lea~rcx,[rax+0]", "lea~rsi,[rax+0]", "mov~<TAG>,rcx", "call~FOO", "mov~rdx,[rsp+0]", "mov~r12,rax", "jmp~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 21, -1, 0.053246753246753244, ["test    r15, r15", "jz      short loc_5933"], ["test~r15,r15", "jz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 0, 7, -1, 0.04496753246753247, ["lea     r15, aUsageSOptionFi+1Dh; \"\""], ["lea~r15,<TAG>"]], [0, 0, 13, 0, 1, 5, 1, 2, 11, -1, 0.0775974025974026, ["mov     rdi, r14; stream", "call    _fclose", "mov     rax, [rsp+0D8h+var_D8]", "test    rax, rax", "jz      short loc_58B4"], ["mov~rdi,r14", "call~FOO", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 1, -1, 0.12840909090909092, ["movzx   ebp, byte ptr [aliases]", "test    bpl, bpl", "jz      short loc_55CC"], ["movzx~ebp,<TAG>", "test~bpl,bpl", "jz~FOO"]], [2, 0, 56, 1, 1, 19, 3, 2, 0, 6, 0.0, ["push    r15", "push    r14", "mov     edi, 0Eh; item", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 0A8h", "mov     rax, fs:28h", "mov     [rsp+0D8h+var_40], rax", "xor     eax, eax", "call    _nl_langinfo", "mov     r15, cs:charset_aliases", "test    rax, rax", "mov     rbx, rax", "lea     codeset, aUsageSOptionFi+1Dh; \"\"", "cmovz   codeset, rax", "test    r15, r15", "jnz     short loc_559A"], ["push~r15", "push~r14", "mov~edi,0", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~r15,<TAG>", "test~rax,rax", "mov~rbx,rax", "lea~codeset,<TAG>", "cmovz~codeset,rax", "test~r15,r15", "jnz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 6, -1, 0.1344155844155844, ["mov     cs:charset_aliases, r15", "jmp     loc_559A"], ["mov~<TAG>,r15", "jmp~FOO"]], [0, 0, 55, 0, 0, 1, 0, 1, 1, 5, 0.014935064935064935, ["jmp     loc_5610"], ["jmp~FOO"]], [1, 0, 42, 0, 1, 5, 0, 1, 5, -1, 0.07792207792207792, ["mov     rdx, r14; n", "mov     rsi, r13; src", "mov     rdi, rbp; dest", "call    _memcpy", "mov     byte ptr [rbp+r14+0], 2Fh ; '/'"], ["mov~rdx,r14", "mov~rsi,r13", "mov~rdi,rbp", "call~FOO", "mov~[yte ptr [rbp+0],0"]], [1, 0, 40, 0, 2, 11, 1, 3, 13, -1, 0.1357142857142857, ["mov     rsi, r14; stream", "call    _ungetc", "mov     r13, [rsp+0D8h+src]", "mov     rcx, [rsp+0D8h+var_D0]", "lea     rsi, a50s50s; \"%50s %50s\"", "xor     eax, eax", "mov     rdi, r14; stream", "mov     rdx, r13", "call    _fscanf", "cmp     eax, 1", "jle     loc_589C"], ["mov~rsi,r14", "call~FOO", "mov~r13,[rsp+0]", "mov~rcx,[rsp+0]", "lea~rsi,<TAG>", "xor~eax,eax", "mov~rdi,r14", "mov~rdx,r13", "call~FOO", "cmp~eax,0", "jle~FOO"]], [0, 0, 40, 0, 0, 3, 0, 0, 9, -1, 0.10016233766233766, ["lea     rdx, [rax+1]", "mov     [r14+8], rdx", "movzx   edi, byte ptr [rax]; c"], ["lea~rdx,[rax+0]", "mov~[r14+0],rdx", "movzx~edi,<TAG>"]], [3, 0, 40, 2, 0, 11, 1, 0, 16, -1, 0.11948051948051948, ["mov     ecx, eax", "mov     r13, [rsp+0D8h+var_D0]", "shr     ecx, 10h", "test    eax, 8080h", "cmovz   eax, ecx", "lea     rcx, [rdx+2]", "cmovz   rdx, rcx", "mov     ecx, eax", "add     cl, al", "sbb     rdx, 3", "sub     rdx, [rsp+0D8h+src]"], ["mov~ecx,eax", "mov~r13,[rsp+0]", "shr~ecx,0", "test~eax,0", "cmovz~eax,ecx", "lea~rcx,[rdx+0]", "cmovz~rdx,rcx", "mov~ecx,eax", "add~cl,al", "sbb~rdx,0", "sub~rdx,[rsp+0]"]], [0, 0, 14, 0, 0, 1, 0, 1, 10, -1, 0.04025974025974026, ["jmp     short loc_589C"], ["jmp~FOO"]], [0, 0, 9, 0, 1, 5, 1, 2, 2, -1, 0.06493506493506493, ["mov     rsi, aliases; s2", "mov     rdi, codeset; s1", "call    _strcmp", "test    eax, eax", "jz      short loc_55BF"], ["mov~rsi,aliases", "mov~rdi,codeset", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 11, 0, 2, 6, 0, 3, 22, -1, 0.01607142857142857, ["mov     rdi, r15; ptr", "lea     r15, aUsageSOptionFi+1Dh; \"\"", "call    _free", "mov     rdi, r14; stream", "call    _fclose", "jmp     short loc_58BB"], ["mov~rdi,r15", "lea~r15,<TAG>", "call~FOO", "mov~rdi,r14", "call~FOO", "jmp~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 12, -1, 0.030357142857142857, ["mov     byte ptr [r15+rax], 0", "jmp     short loc_58BB"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 51, 0, 1, 6, 1, 2, 4, 2, 0.007792207792207792, ["mov     rdi, rax; s", "call    _strlen", "test    rax, rax", "mov     r12, rax", "mov     r14, rax", "jnz     loc_5947"], ["mov~rdi,rax", "call~FOO", "test~rax,rax", "mov~r12,rax", "mov~r14,rax", "jnz~FOO"]], [1, 0, 45, 0, 0, 1, 0, 0, 5, -1, 0.017207792207792207, ["mov     edi, 0Eh; size"], ["mov~edi,0"]], [0, 0, 11, 0, 1, 4, 0, 2, 22, -1, 0.01607142857142857, ["mov     rdi, r14; stream", "lea     r15, aUsageSOptionFi+1Dh; \"\"", "call    _fclose", "jmp     loc_58BB"], ["mov~rdi,r14", "lea~r15,<TAG>", "call~FOO", "jmp~FOO"]], [0, 0, 10, 0, 1, 3, 0, 2, 8, -1, 0.10714285714285714, ["mov     rdi, rbp; ptr", "call    _free", "jmp     loc_565D"], ["mov~rdi,rbp", "call~FOO", "jmp~FOO"]], [2, 0, 40, 1, 0, 7, 2, 1, 17, -1, 0.12012987012987013, ["mov     esi, [r13+0]", "add     r13, 4", "lea     eax, [rsi-1010101h]", "not     esi", "and     eax, esi", "and     eax, 80808080h", "jz      short loc_57AF"], ["mov~esi,[r13+0]", "add~r13,0", "lea~eax,[rsi-1010101h]+0]", "not~esi", "and~eax,esi", "and~eax,0", "jz~FOO"]], [0, 0, 3, 0, 1, 3, 0, 1, 3, -1, 0.002435064935064935, ["mov     rdi, aliases; s", "call    _strlen", "lea     codeset, [aliases+rax+1]"], ["mov~rdi,aliases", "call~FOO", "lea~codeset,[aliases+0]"]], [1, 0, 49, 0, 0, 2, 0, 1, 5, 1, 0.003896103896103896, ["cmp     byte ptr [r13+rax-1], 2Fh ; '/'", "jnz     short loc_595D"], ["cmp~[yte ptr [r13+0],0", "jnz~FOO"]], [0, 0, 44, 0, 1, 4, 1, 2, 6, -1, 0.051461038961038964, ["call    _malloc", "test    rax, rax", "mov     rbp, rax", "jnz     loc_58C8"], ["call~FOO", "test~rax,rax", "mov~rbp,rax", "jnz~FOO"]], [0, 0, 45, 0, 0, 2, 0, 1, 6, -1, 0.00762987012987013, ["lea     rdi, [rax+0Eh]", "jmp     loc_5645"], ["lea~rdi,[rax+0]", "jmp~FOO"]], [0, 0, 10, 0, 0, 1, 0, 0, 5, -1, 0.03603896103896104, ["lea     r15, aUsageSOptionFi+1Dh; \"\""], ["lea~r15,<TAG>"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 42, 0, 1, 5, 0, 2, 7, -1, 0.046753246753246755, ["mov     rdx, r14; n", "mov     rsi, r13; src", "mov     rdi, rbp; dest", "call    _memcpy", "jmp     loc_56A9"], ["mov~rdx,r14", "mov~rsi,r13", "mov~rdi,rbp", "call~FOO", "jmp~FOO"]], [1, 0, 40, 0, 0, 4, 0, 0, 14, -1, 0.023051948051948053, ["lea     rdx, [rax+1]", "mov     [r14+8], rdx", "movzx   eax, byte ptr [rax]", "mov     edx, 1"], ["lea~rdx,[rax+0]", "mov~[r14+0],rdx", "movzx~eax,<TAG>", "mov~edx,0"]]], "func_feature": [26, 23, 65, 5, 57, 84, 1, 265, 0.06829, 8, 16], "succs": [[56, 14], [0, 37], [0, 22], [15], [3, 5], [3, 44], [], [54, 6], [8, 39], [8], [13], [10, 30], [24, 40], [12, 38], [23], [36, 53], [15], [27], [17, 28], [32], [19, 21], [49, 19], [13, 31], [2, 22], [25, 13], [1, 13], [13], [26, 29], [27], [42, 46], [47], [43, 30], [41, 7], [32, 35], [32], [4], [11], [9, 31], [24], [48], [31], [49, 20], [47], [47], [50, 45], [51], [47], [34], [48, 18], [7], [16, 52], [53, 55], [51], [34], [], [11], [23]], "fname": "locale_charset", "n_num": 57}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 20, 0, 0, 3, 0, 1, 0, 0, 0.10398860398860399, ["movzx   eax, byte ptr [needle+i-1]", "cmp     al, [needle+j]", "jnz     short loc_5A1D"], ["movzx~eax,[yte ptr [needle+0]", "cmp~al,<TAG>", "jnz~FOO"]], [1, 0, 20, 1, 0, 3, 0, 1, 9, 5, 0.15527065527065528, ["add     i, 1", "cmp     m, i", "jnz     short loc_5A00"], ["add~i,0", "cmp~m,i", "jnz~FOO"]], [1, 0, 20, 0, 0, 2, 1, 0, 5, 9, 0.05982905982905983, ["xor     edx, edx", "mov     ecx, 2"], ["xor~edx,edx", "mov~ecx,0"]], [0, 0, 20, 0, 0, 1, 0, 1, 7, 7, 0.038461538461538464, ["jmp     loc_5AC0"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 3, -1, 0.0, ["lea     rsp, [rbp-20h]", "pop     needle", "pop     resultp", "pop     r13", "pop     m", "pop     rbp", "retn"], ["lea~rsp,[rbp-20h]+0]", "pop~needle", "pop~resultp", "pop~r13", "pop~m", "pop~rbp", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.07122507122507123, ["mov     rsi, [rbp+var_28]", "xor     rsi, fs:28h", "jnz     short loc_5AEE"], ["mov~rsi,[rbp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 20, 1, 0, 3, 0, 1, 8, 7, 0.0014245014245014246, ["sub     j, [table+j*8]", "cmp     al, [needle+j]", "jz      loc_5AC0"], ["sub~j,<TAG>", "cmp~al,<TAG>", "jz~FOO"]], [0, 0, 20, 0, 0, 2, 1, 1, 7, 7, 0.05840455840455841, ["test    j, j", "jnz     short loc_5A10"], ["test~j,j", "jnz~FOO"]], [1, 0, 12, 1, 0, 4, 0, 1, 8, 4, 0.06267806267806268, ["add     j, 1", "lea     rsi, [phaystack+1]", "cmp     m, j", "jz      short loc_5AE5"], ["add~j,0", "lea~rsi,[phaystack+0]", "cmp~m,j", "jz~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 7, 5, 0.16809116809116809, ["cmp     [needle+j], dl", "jz      short loc_5A90"], ["cmp~<TAG>,dl", "jz~FOO"]], [0, 0, 12, 0, 0, 3, 0, 1, 9, 4, 0.008547008547008548, ["movzx   edx, byte ptr [rcx+1]", "mov     rcx, phaystack", "jmp     short loc_5A48"], ["movzx~edx,[yte ptr [rcx+0]", "mov~rcx,phaystack", "jmp~FOO"]], [0, 0, 20, 0, 0, 2, 1, 0, 8, 6, 0.04700854700854701, ["mov     [table+i*8], i", "xor     edx, edx"], ["mov~<TAG>,i", "xor~edx,edx"]], [2, 0, 27, 1, 1, 19, 1, 2, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r14", "push    r13", "push    r12", "push    rbx", "mov     r13, haystack", "mov     haystack, needle; s", "mov     rbx, needle", "mov     r12, resultp", "sub     rsp, 10h", "mov     rax, fs:28h", "mov     [rbp+var_28], rax", "xor     eax, eax", "call    _strlen", "mov     r14, rax", "mov     m, 1FFFFFFFFFFFFFFFh", "cmp     m, rax", "ja      loc_5A70"], ["push~rbp", "mov~rbp,rsp", "push~r14", "push~r13", "push~r12", "push~rbx", "mov~r13,haystack", "mov~haystack,needle", "mov~rbx,needle", "mov~r12,resultp", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "call~FOO", "mov~r14,rax", "mov~m,0", "cmp~m,rax", "ja~FOO"]], [2, 0, 12, 2, 0, 4, 0, 1, 9, 4, 0.002849002849002849, ["movzx   edx, byte ptr [phaystack+1]", "add     rhaystack, 1", "add     rcx, 1", "jmp     short loc_5A48"], ["movzx~edx,[yte ptr [phaystack+0]", "add~rhaystack,0", "add~rcx,0", "jmp~FOO"]], [0, 0, 12, 0, 0, 2, 1, 1, 8, 4, 0.06125356125356125, ["test    j, j", "jz      short loc_5AB0"], ["test~j,j", "jz~FOO"]], [1, 0, 12, 0, 0, 5, 1, 0, 5, 4, 0.21794871794871795, ["mov     qword ptr [resultp], 0", "movzx   edx, byte ptr [phaystack+0]", "mov     rcx, phaystack", "xor     eax, eax", "nop     dword ptr [j+j+00h]"], ["mov~<TAG>,0", "movzx~edx,[yte ptr [phaystack+0]", "mov~rcx,phaystack", "xor~eax,eax", "nop~[word ptr [j+0]"]], [2, 0, 21, 0, 0, 3, 0, 0, 4, 5, 0.12820512820512822, ["cmp     m, 2", "mov     qword ptr [table+8], 1", "jbe     short loc_5A31"], ["cmp~m,0", "mov~[word ptr [table+0],0", "jbe~FOO"]], [1, 0, 26, 0, 0, 3, 0, 1, 1, 5, 0.03133903133903134, ["lea     rdi, ds:0[m*8]; n", "cmp     rdi, 0FAFh", "ja      loc_5AD8"], ["lea~rdi,<TAG>", "cmp~rdi,0", "ja~FOO"]], [0, 0, 12, 0, 0, 2, 1, 1, 6, 3, 0.24786324786324787, ["test    dl, dl", "jz      short loc_5A64"], ["test~dl,dl", "jz~FOO"]], [1, 0, 20, 2, 0, 5, 0, 1, 8, 6, 0.07264957264957266, ["add     j, 1", "mov     b, i", "sub     rax, j", "mov     [table+i*8], rax", "jmp     loc_5A28"], ["add~j,0", "mov~b,i", "sub~rax,j", "mov~<TAG>,rax", "jmp~FOO"]], [0, 0, 12, 2, 0, 5, 1, 1, 9, 3, 0.014245014245014245, ["mov     rsi, [table+j*8]", "add     rhaystack, rsi", "sub     j, rsi", "test    dl, dl", "jnz     short loc_5A4C"], ["mov~rsi,<TAG>", "add~rhaystack,rsi", "sub~j,rsi", "test~dl,dl", "jnz~FOO"]], [4, 0, 24, 3, 0, 6, 2, 0, 2, 4, 0.03133903133903134, ["add     rdi, 2Eh", "and     rdi, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rdi", "lea     rdi, [rsp+30h+var_28+7]", "and     rdi, 0FFFFFFFFFFFFFFF0h", "add     rdi, 10h; p"], ["add~rdi,0", "and~rdi,0", "sub~rsp,rdi", "lea~rdi,[rsp+0]", "and~rdi,0", "add~rdi,0"]], [0, 0, 24, 0, 1, 3, 0, 2, 2, 4, 0.03133903133903134, ["call    mmalloca", "mov     rdi, rax", "jmp     loc_59E2"], ["call~FOO", "mov~rdi,rax", "jmp~FOO"]], [0, 0, 23, 0, 0, 2, 1, 1, 3, 3, 0.12535612535612536, ["test    table, table", "jz      loc_5A70"], ["test~table,table", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 9, 3, 0.008547008547008548, ["mov     [resultp], rhaystack", "jmp     loc_5A64"], ["mov~<TAG>,rhaystack", "jmp~FOO"]], [1, 0, 3, 0, 1, 3, 0, 2, 7, 2, 0.07692307692307693, ["call    freea", "mov     eax, 1", "jmp     short loc_5A72"], ["call~FOO", "mov~eax,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 1, 0, 1, 2, 0.021367521367521368, ["xor     eax, eax"], ["xor~eax,eax"]]], "func_feature": [4, 13, 24, 1, 28, 40, 1, 101, 0.06593, 1, 13], "succs": [[8, 3], [0, 16], [0], [20], [], [4, 6], [], [8, 20], [12, 7], [25, 11], [9, 15], [19], [1], [18, 27], [19], [21, 14], [19], [16, 2], [22, 23], [10, 26], [1], [10, 26], [24], [24], [17, 27], [26], [5], [5]], "fname": "knuth_morris_pratt_unibyte", "n_num": 28}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[2, 0, 88, 2, 0, 4, 0, 1, 0, 0, 0.06106442577030812, ["add     i, 1", "add     b, 30h", "cmp     [rbp+m], i", "jnz     loc_5D80"], ["add~i,0", "add~b,0", "cmp~[rbp+0],i", "jnz~FOO"]], [0, 0, 88, 0, 0, 2, 0, 1, 15, 10, 0.0163515406162465, ["mov     [table+i*8+0], i", "jmp     loc_5DF1"], ["mov~[table+0],i", "jmp~FOO"]], [1, 0, 88, 2, 0, 4, 0, 0, 15, 10, 0.03546918767507003, ["add     j, 1", "mov     rax, i", "sub     rax, j", "mov     [table+i*8+0], rax"], ["add~j,0", "mov~rax,i", "sub~rax,j", "mov~[table+0],rax"]], [2, 0, 76, 0, 0, 3, 0, 1, 22, 9, 0.010119047619047618, ["mov     [rbp+rhaystack.in_shift], 0", "mov     [rbp+rhaystack.next_done], 1", "jmp     loc_62D1"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 76, 0, 1, 5, 1, 2, 21, 10, 0.030392156862745098, ["lea     rdi, [rbx+4]; ps", "mov     [rbp+rhaystack.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      loc_6491"], ["lea~rdi,[rbx+0]", "mov~[rbp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 114, 0, 0, 9, 1, 0, 6, 8, 0.10560224089635854, ["mov     rcx, [rbp+needle]", "lea     rsi, is_basic_table", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [rsi+rax*4]", "bt      eax, edx", "jnb     loc_5F88"], ["mov~rcx,[rbp+0]", "lea~rsi,<TAG>", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,<TAG>", "bt~eax,edx", "jnb~FOO"]], [1, 0, 114, 0, 0, 2, 0, 1, 5, 6, 0.1226890756302521, ["cmp     [rbp+var_100], 0", "jz      loc_5BF0"], ["cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 76, 0, 0, 3, 0, 1, 20, 8, 0.016666666666666666, ["mov     [rbp+rhaystack.cur.bytes], 1", "mov     [rbp+rhaystack.cur.wc_valid], 0", "jmp     loc_5ED9"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 76, 0, 3, 12, 0, 4, 19, 5, 0.0819327731092437, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rbp+rhaystack.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rbp+rhaystack.cur.ptr]; s", "lea     rcx, [rbx+4]; p", "lea     rdi, [rbx+24h]; pwc", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rbp+rhaystack.cur.bytes], rax", "jz      short loc_6200"], ["call~FOO", "mov~rdi,[rbp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rbp+0]", "lea~rcx,[rbx+0]", "lea~rdi,[rbx+0]", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rbp+0],rax", "jz~FOO"]], [3, 0, 76, 0, 0, 5, 0, 0, 14, 11, 0.01803221288515406, ["mov     [rbp+phaystack.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rbp+phaystack.cur.wc_valid], 1", "mov     [rbp+phaystack.next_done], 1", "mov     [rbp+phaystack.cur.wc], eax"], ["mov~[rbp+0],0", "movsx~eax,<TAG>", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],eax"]], [2, 0, 76, 0, 0, 9, 1, 0, 13, 8, 0.040686274509803916, ["mov     rcx, [rbp+phaystack.cur.ptr]", "lea     rsi, is_basic_table", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [rsi+rax*4]", "bt      eax, edx", "jb      short loc_6000"], ["mov~rcx,[rbp+0]", "lea~rsi,<TAG>", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,<TAG>", "bt~eax,edx", "jb~FOO"]], [0, 0, 76, 0, 0, 3, 1, 1, 13, 10, 0.06600140056022409, ["mov     edx, [rbp+phaystack.cur.wc]", "test    edx, edx", "jz      loc_6130"], ["mov~edx,[rbp+0]", "test~edx,edx", "jz~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 12, 11, 0.23399859943977588, ["cmp     [rbp+phaystack.cur.wc_valid], 0", "jnz     loc_6016"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 17, 11, 0.0005602240896358543, ["mov     [rbp+phaystack.next_done], 1", "jmp     loc_6016"], ["mov~[rbp+0],0", "jmp~FOO"]], [2, 0, 76, 0, 1, 6, 0, 2, 15, 11, 0.0038982259570494865, ["mov     rdi, [rbp+phaystack.cur.ptr]; s", "call    _strlen", "mov     [rbp+phaystack.cur.wc_valid], 0", "mov     [rbp+phaystack.cur.bytes], rax", "mov     [rbp+phaystack.next_done], 1", "jmp     loc_5E8A"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~[rbp+0],0", "mov~[rbp+0],rax", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 14, 4, 0.060784313725490195, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_6410"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 76, 0, 1, 5, 1, 2, 15, 9, 0.012138188608776844, ["mov     rsi, [rbp+phaystack.cur.ptr]; s2", "mov     rdi, [rax]; s1", "call    _memcmp", "test    eax, eax", "jnz     loc_5EA3"], ["mov~rsi,[rbp+0]", "mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 76, 0, 0, 3, 0, 1, 14, 9, 0.29623015873015873, ["mov     rdx, [rax+8]; n", "cmp     rdx, [rbp+phaystack.cur.bytes]", "jz      loc_6220"], ["mov~rdx,[rax+0]", "cmp~rdx,[rbp+0]", "jz~FOO"]], [2, 0, 76, 2, 0, 5, 0, 1, 14, 9, 0.06196311858076563, ["lea     rax, [j_0+j_0*2]", "shl     rax, 4", "add     rax, memory", "cmp     byte ptr [rax+10h], 0", "jz      loc_5E95"], ["lea~rax,<TAG>", "shl~rax,0", "add~rax,memory", "cmp~[yte ptr [rax+0],0", "jz~FOO"]], [2, 0, 76, 0, 0, 5, 1, 1, 17, 10, 0.02131185807656396, ["mov     edx, [rbp+phaystack.cur.wc]", "mov     [rbp+phaystack.in_shift], 0", "mov     [rbp+phaystack.next_done], 1", "test    edx, edx", "jnz     loc_6021"], ["mov~edx,[rbp+0]", "mov~[rbp+0],0", "mov~[rbp+0],0", "test~edx,edx", "jnz~FOO"]], [1, 0, 114, 0, 0, 5, 0, 0, 7, 11, 0.10539215686274508, ["mov     [rbp+n], 1", "movsx   eax, byte ptr [rcx]", "mov     [rbp+var_E0], r14b", "mov     [rbp+var_F4], r14b", "mov     [rbp+var_DC], eax"], ["mov~[rbp+0],0", "movsx~eax,<TAG>", "mov~[rbp+0],r14b", "mov~[rbp+0],r14b", "mov~[rbp+0],eax"]], [0, 0, 76, 0, 0, 1, 0, 1, 16, 8, 0.0060107376283846875, ["jmp     loc_603F"], ["jmp~FOO"]], [0, 0, 76, 0, 0, 2, 0, 1, 15, 8, 0.04137488328664799, ["cmp     [rax+14h], edx", "jnz     loc_5EA3"], ["cmp~[rax+0],edx", "jnz~FOO"]], [0, 0, 114, 0, 0, 3, 1, 1, 8, 10, 0.14443277310924368, ["mov     r8d, [rbp+var_DC]", "test    r8d, r8d", "jz      loc_5D58"], ["mov~r8d,[rbp+0]", "test~r8d,r8d", "jz~FOO"]], [0, 0, 114, 0, 0, 2, 0, 1, 10, 11, 0.025175070028011202, ["mov     [rbp+var_F4], r14b", "jmp     loc_5C37"], ["mov~[rbp+0],r14b", "jmp~FOO"]], [1, 0, 114, 0, 0, 1, 0, 0, 9, 11, 0.011064425770308122, ["mov     eax, 1"], ["mov~eax,0"]], [1, 0, 114, 0, 0, 5, 1, 1, 10, 11, 0.03175770308123249, ["mov     r8d, [rbp+var_DC]", "mov     [rbp+var_100], 0", "mov     [rbp+var_F4], r14b", "test    r8d, r8d", "jnz     loc_5C47"], ["mov~r8d,[rbp+0]", "mov~[rbp+0],0", "mov~[rbp+0],r14b", "test~r8d,r8d", "jnz~FOO"]], [2, 0, 76, 2, 0, 6, 0, 1, 16, 7, 0.03075396825396825, ["add     j_0, 1", "mov     rax, [rbp+phaystack.cur.bytes]", "add     [rbp+phaystack.cur.ptr], rax", "cmp     [rbp+m], j_0", "mov     [rbp+phaystack.next_done], 0", "jz      loc_64BC"], ["add~j_0,0", "mov~rax,[rbp+0]", "add~[rbp+0],rax", "cmp~[rbp+0],j_0", "mov~[rbp+0],0", "jz~FOO"]], [1, 0, 76, 0, 1, 5, 0, 2, 21, 8, 0.004481792717086834, ["mov     rdi, [rbp+rhaystack.cur.ptr]; s", "call    _strlen", "mov     [rbp+rhaystack.cur.wc_valid], 0", "mov     [rbp+rhaystack.cur.bytes], rax", "jmp     loc_5ED9"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~[rbp+0],0", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 20, 4, 0.05511204481792717, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_6240"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 114, 0, 1, 7, 1, 2, 8, 11, 0.000980392156862745, ["mov     rdi, [rbp+needle]; s", "call    _strlen", "mov     [rbp+var_E0], 0", "mov     [rbp+n], rax", "xor     eax, eax", "mov     [rbp+var_F4], r14b", "jmp     loc_5C4C"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~[rbp+0],0", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],r14b", "jmp~FOO"]], [1, 0, 114, 0, 0, 2, 0, 1, 7, 4, 0.035364145658263305, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_6439"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 12, 6, 0.18970588235294114, ["cmp     [rbp+phaystack.in_shift], 0", "jnz     short loc_6098"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 76, 0, 0, 2, 1, 1, 11, 7, 0.3144491129785247, ["test    al, al", "jz      loc_605C"], ["test~al,al", "jz~FOO"]], [2, 0, 76, 2, 0, 7, 0, 1, 18, 7, 0.08781512605042016, ["mov     rax, [rbp+rhaystack.cur.bytes]", "mov     [rbp+rhaystack.next_done], 0", "add     [rbp+rhaystack.cur.ptr], rax", "mov     [rbp+phaystack.next_done], 0", "mov     rax, [rbp+phaystack.cur.bytes]", "add     [rbp+phaystack.cur.ptr], rax", "jmp     loc_605C"], ["mov~rax,[rbp+0]", "mov~[rbp+0],0", "add~[rbp+0],rax", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "add~[rbp+0],rax", "jmp~FOO"]], [0, 0, 114, 0, 0, 5, 0, 1, 8, 10, 0.04012605042016806, ["mov     rsi, [rbp+needle]; src", "lea     rcx, [rbx+28h]", "mov     rdx, [rbp+n]; n", "cmp     rsi, rcx", "jz      loc_5FB0"], ["mov~rsi,[rbp+0]", "lea~rcx,[rbx+0]", "mov~rdx,[rbp+0]", "cmp~rsi,rcx", "jz~FOO"]], [2, 0, 114, 0, 0, 5, 1, 1, 7, 11, 0.006302521008403361, ["mov     [rbp+n], 1", "mov     [rbp+var_E0], 0", "xor     eax, eax", "mov     [rbp+var_F4], r14b", "jmp     loc_5C4C"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "xor~eax,eax", "mov~[rbp+0],r14b", "jmp~FOO"]], [0, 0, 114, 0, 0, 1, 0, 0, 9, 9, 0.022058823529411763, ["mov     [r15], rsi"], ["mov~<TAG>,rsi"]], [0, 0, 114, 0, 1, 5, 1, 2, 9, 12, 0.052941176470588235, ["lea     rdi, [rbx+4]; ps", "mov     [rbp+var_E0], r14b", "call    _mbsinit", "test    eax, eax", "jz      loc_6461"], ["lea~rdi,[rbx+0]", "mov~[rbp+0],r14b", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 23, 9, 0.010119047619047618, ["mov     [rbp+rhaystack.next_done], 1", "jmp     loc_5F4C"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 76, 0, 1, 5, 1, 2, 22, 10, 0.030392156862745098, ["lea     rdi, [rbx+4]; ps", "mov     [rbp+rhaystack.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      short loc_6260"], ["lea~rdi,[rbx+0]", "mov~[rbp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [8, 0, 76, 1, 0, 19, 2, 0, 10, 8, 0.2230392156862745, ["mov     rax, [rbp+resultp]", "lea     rbx, [rbp+phaystack]", "mov     [rbp+rhaystack.in_shift], 0", "mov     qword ptr [rbp+rhaystack.state.__count], 0", "mov     [rbp+rhaystack.next_done], 0", "xor     r15d, r15d", "mov     [rbp+ps], rbx", "add     rbx, 4", "mov     [rbp+phaystack.in_shift], 0", "mov     qword ptr [rax], 0", "mov     rax, [rbp+haystack]", "mov     [rbp+var_120], rbx", "lea     rbx, [rbp+rhaystack]", "mov     qword ptr [rbp+phaystack.state.__count], 0", "mov     [rbp+phaystack.next_done], 0", "mov     [rbp+rhaystack.cur.ptr], rax", "mov     [rbp+phaystack.cur.ptr], rax", "xor     eax, eax", "nop     dword ptr [rax+00000000h]"], ["mov~rax,[rbp+0]", "lea~rbx,[rbp+0]", "mov~[rbp+0],0", "mov~[word ptr [rbp+0],0", "mov~[rbp+0],0", "xor~r15d,r15d", "mov~[rbp+0],rbx", "add~rbx,0", "mov~[rbp+0],0", "mov~<TAG>,0", "mov~rax,[rbp+0]", "mov~[rbp+0],rbx", "lea~rbx,[rbp+0]", "mov~[word ptr [rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],rax", "mov~[rbp+0],rax", "xor~eax,eax", "nop~[word ptr [rax+0]"]], [2, 0, 89, 0, 0, 3, 0, 0, 9, 9, 0.1811624649859944, ["cmp     [rbp+m], 2", "mov     qword ptr [table+8], 1", "jbe     loc_5E06"], ["cmp~[rbp+0],0", "mov~[word ptr [table+0],0", "jbe~FOO"]], [0, 0, 114, 0, 0, 4, 1, 1, 10, 8, 0.05798319327731092, ["test    al, al", "mov     [r15+8], rdx", "mov     [r15+10h], al", "jz      short loc_5C80"], ["test~al,al", "mov~[r15+0],rdx", "mov~[r15+0],al", "jz~FOO"]], [0, 0, 114, 0, 1, 7, 0, 2, 9, 9, 0.022058823529411763, ["lea     rcx, [r15+18h]", "mov     rdi, rcx; dest", "call    _memcpy", "mov     rdx, [rbp+n]", "mov     [r15], rax", "movzx   eax, [rbp+var_E0]", "jmp     loc_5C6A"], ["lea~rcx,[r15+0]", "mov~rdi,rcx", "call~FOO", "mov~rdx,[rbp+0]", "mov~<TAG>,rax", "movzx~eax,[rbp+0]", "jmp~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 16, 7, 0.14124649859943977, ["cmp     [rbp+rhaystack.next_done], 0", "jnz     loc_6338"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 76, 0, 0, 2, 1, 1, 15, 8, 0.29704715219421096, ["test    j_0, j_0", "jz      loc_6270"], ["test~j_0,j_0", "jz~FOO"]], [0, 0, 76, 1, 0, 7, 1, 1, 16, 8, 0.1456465919701214, ["mov     r14, [table+j_0*8+0]", "mov     rax, j_0", "sub     rax, count", "test    count, count", "mov     [rbp+haystack], rax", "movzx   eax, [rbp+phaystack.next_done]", "jz      short loc_5E78"], ["mov~r14,[table+0]", "mov~rax,j_0", "sub~rax,count", "test~count,count", "mov~[rbp+0],rax", "movzx~eax,[rbp+0]", "jz~FOO"]], [0, 0, 76, 0, 0, 3, 0, 1, 20, 8, 0.07163865546218487, ["movzx   eax, [rbp+phaystack.next_done]", "mov     r15, [rbp+haystack]", "jmp     loc_5E78"], ["movzx~eax,[rbp+0]", "mov~r15,[rbp+0]", "jmp~FOO"]], [0, 0, 114, 0, 0, 2, 0, 0, 11, 8, 0.0, ["mov     eax, [rbp+var_DC]", "mov     [r15+14h], eax"], ["mov~eax,[rbp+0]", "mov~[r15+0],eax"]], [2, 0, 76, 0, 0, 3, 0, 1, 19, 8, 0.016666666666666666, ["mov     [rbp+rhaystack.cur.bytes], 1", "mov     [rbp+rhaystack.cur.wc_valid], 0", "jmp     loc_62DF"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 76, 0, 3, 12, 0, 4, 18, 5, 0.08137254901960783, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rbp+rhaystack.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rbp+rhaystack.cur.ptr]; s", "lea     rcx, [rbx+4]; p", "lea     rdi, [rbx+24h]; pwc", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rbp+rhaystack.cur.bytes], rax", "jz      loc_646D"], ["call~FOO", "mov~rdi,[rbp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rbp+0]", "lea~rcx,[rbx+0]", "lea~rdi,[rbx+0]", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rbp+0],rax", "jz~FOO"]], [0, 0, 117, 0, 1, 3, 0, 2, 2, 9, 0.008053221288515405, ["call    mmalloca", "mov     r12, rax", "jmp     loc_5B94"], ["call~FOO", "mov~r12,rax", "jmp~FOO"]], [2, 0, 119, 2, 0, 6, 0, 1, 1, 10, 0.008053221288515405, ["mov     rax, [rbp+m]", "lea     rdi, ds:0[rax*8]", "sub     rdi, rax", "shl     rdi, 3; n", "cmp     rdi, 0FAFh", "ja      loc_6484"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "sub~rdi,rax", "shl~rdi,0", "cmp~rdi,0", "ja~FOO"]], [0, 0, 76, 0, 1, 4, 1, 2, 14, 7, 0.012499999999999999, ["mov     rdi, [rbp+var_120]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_64DF"], ["mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 114, 2, 0, 4, 0, 0, 11, 7, 0.06988795518207283, ["mov     rax, [rbp+n]", "add     [rbp+needle], rax", "add     r15, 30h", "mov     [rbp+var_F4], 0"], ["mov~rax,[rbp+0]", "add~[rbp+0],rax", "add~r15,0", "mov~[rbp+0],0"]], [1, 0, 76, 0, 0, 1, 0, 0, 15, 6, 0.006022408963585434, ["mov     [rbp+phaystack.in_shift], 1"], ["mov~[rbp+0],0"]], [1, 0, 76, 0, 0, 2, 0, 1, 22, 9, 0.010119047619047618, ["mov     [rbp+rhaystack.next_done], 1", "jmp     loc_62D1"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 76, 2, 0, 3, 0, 0, 13, 10, 0.28054388422035476, ["lea     rax, [j_0+j_0*2]", "shl     rax, 4", "add     rax, memory"], ["lea~rax,<TAG>", "shl~rax,0", "add~rax,memory"]], [5, 0, 114, 2, 0, 14, 0, 1, 4, 7, 0.038865546218487396, ["mov     rax, [rbp+m]", "mov     [rbp+needle], needle_0", "lea     needle_0, [rbp+var_100]", "mov     [rbp+var_100], 0", "mov     [rbp+var_FC], 0", "mov     r15, memory", "mov     [rbp+var_F4], 0", "mov     r14d, 1", "lea     r13, [rax+rax*2]", "lea     rax, [rbx+4]", "shl     r13, 4", "mov     [rbp+ps], rax", "add     r13, memory", "jmp     loc_5C99"], ["mov~rax,[rbp+0]", "mov~[rbp+0],needle_0", "lea~needle_0,[rbp+0]", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~r15,memory", "mov~[rbp+0],0", "mov~r14d,0", "lea~r13,<TAG>", "lea~rax,[rbx+0]", "shl~r13,0", "mov~[rbp+0],rax", "add~r13,memory", "jmp~FOO"]], [2, 0, 76, 0, 0, 9, 1, 0, 18, 8, 0.023739495798319327, ["mov     rcx, [rbp+rhaystack.cur.ptr]", "lea     rsi, is_basic_table", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [rsi+rax*4]", "bt      eax, edx", "jnb     loc_6358"], ["mov~rcx,[rbp+0]", "lea~rsi,<TAG>", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,<TAG>", "bt~eax,edx", "jnb~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 17, 6, 0.10406162464985994, ["cmp     [rbp+rhaystack.in_shift], 0", "jnz     loc_6370"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 76, 0, 1, 5, 0, 2, 20, 8, 0.004481792717086834, ["mov     rdi, [rbp+rhaystack.cur.ptr]; s", "call    _strlen", "mov     [rbp+rhaystack.cur.wc_valid], 0", "mov     [rbp+rhaystack.cur.bytes], rax", "jmp     loc_62DF"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~[rbp+0],0", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 19, 4, 0.05455182072829131, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_649D"], ["cmp~rax,0", "jz~FOO"]], [3, 0, 76, 0, 0, 5, 0, 0, 19, 9, 0.004271708683473389, ["mov     [rbp+rhaystack.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rbp+rhaystack.cur.wc_valid], 1", "mov     [rbp+rhaystack.next_done], 1", "mov     [rbp+rhaystack.cur.wc], eax"], ["mov~[rbp+0],0", "movsx~eax,<TAG>", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],eax"]], [1, 0, 76, 0, 3, 13, 0, 4, 13, 5, 0.15014005602240893, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rbp+phaystack.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rbp+ps]", "mov     rdx, rax; n", "lea     rcx, [rsi+4]; p", "lea     rdi, [rsi+24h]; pwc", "mov     rsi, [rbp+phaystack.cur.ptr]; s", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rbp+phaystack.cur.bytes], rax", "jz      loc_6320"], ["call~FOO", "mov~rdi,[rbp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rbp+0]", "mov~rdx,rax", "lea~rcx,[rsi+0]", "lea~rdi,[rsi+0]", "mov~rsi,[rbp+0]", "call~FOO", "cmp~rax,0", "mov~[rbp+0],rax", "jz~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 17, 7, 0.1262955182072829, ["cmp     [rbp+rhaystack.next_done], 0", "jz      short loc_5EF8"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 18, 8, 0.02584033613445378, ["cmp     [rbp+rhaystack.cur.wc_valid], 0", "jnz     short loc_5F4C"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 76, 0, 0, 3, 1, 1, 19, 8, 0.04726890756302521, ["mov     edx, [rbp+rhaystack.cur.wc]", "test    edx, edx", "jz      loc_5F56"], ["mov~edx,[rbp+0]", "test~edx,edx", "jz~FOO"]], [0, 0, 76, 0, 0, 1, 0, 1, 18, 9, 0.009453781512605041, ["jmp     short loc_62D1"], ["jmp~FOO"]], [1, 0, 3, 0, 1, 7, 0, 2, 17, -1, 0.0018907563025210082, ["mov     rax, [rbp+rhaystack.cur.ptr]", "mov     rbx, [rbp+resultp]", "mov     rdi, memory; p", "mov     [rbx], rax", "call    freea", "mov     eax, 1", "jmp     loc_5F62"], ["mov~rax,[rbp+0]", "mov~rbx,[rbp+0]", "mov~rdi,memory", "mov~<TAG>,rax", "call~FOO", "mov~eax,0", "jmp~FOO"]], [1, 0, 114, 0, 3, 12, 0, 4, 6, 5, 0.0376750700280112, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rbp+needle]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rbp+needle]; s", "lea     rcx, [rbx+4]; p", "lea     rdi, [rbx+24h]; iter", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rbp+n], rax", "jz      loc_5FD8"], ["call~FOO", "mov~rdi,[rbp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rbp+0]", "lea~rcx,[rbx+0]", "lea~rdi,[rbx+0]", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rbp+0],rax", "jz~FOO"]], [0, 0, 114, 0, 0, 2, 0, 1, 8, 6, 0.008683473389355741, ["mov     [rbp+var_100], r14b", "jmp     loc_5CA6"], ["mov~[rbp+0],r14b", "jmp~FOO"]], [0, 0, 76, 0, 0, 2, 1, 1, 15, 3, 0.04673202614379085, ["test    rax, rax", "jnz     short loc_6101"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 114, 0, 0, 2, 1, 1, 8, 3, 0.03837535014005602, ["test    rax, rax", "jnz     short loc_5D1C"], ["test~rax,rax", "jnz~FOO"]], [2, 0, 76, 0, 0, 4, 0, 1, 16, 2, 0.014775910364145658, ["mov     rax, [rbp+phaystack.cur.ptr]", "mov     [rbp+phaystack.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_6503"], ["mov~rax,[rbp+0]", "mov~[rbp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 76, 2, 0, 5, 0, 1, 19, 7, 0.08928571428571427, ["mov     rax, [rbp+rhaystack.cur.bytes]", "add     [rbp+rhaystack.cur.ptr], rax", "sub     r14, 1", "mov     [rbp+rhaystack.next_done], 0", "jz      loc_6308"], ["mov~rax,[rbp+0]", "add~[rbp+0],rax", "sub~r14,0", "mov~[rbp+0],0", "jz~FOO"]], [0, 0, 76, 0, 0, 3, 1, 1, 19, 8, 0.04236694677871148, ["mov     esi, [rbp+rhaystack.cur.wc]", "test    esi, esi", "jnz     short loc_5ED9"], ["mov~esi,[rbp+0]", "test~esi,esi", "jnz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 8, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5704; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, aMbsinitIterSta; \"mbsinit (&iter->state)\"", "mov     edx, 8Eh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 114, 0, 1, 4, 1, 2, 7, 7, 0.004201680672268907, ["mov     rdi, [rbp+ps]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_64DF"], ["mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 76, 0, 1, 4, 1, 2, 20, 7, 0.00976890756302521, ["lea     rdi, [rbx+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_64DF"], ["lea~rdi,[rbx+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 76, 0, 1, 4, 1, 2, 19, 7, 0.009313725490196078, ["lea     rdi, [rbx+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_64DF"], ["lea~rdi,[rbx+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 76, 0, 0, 3, 1, 1, 17, 1, 0.008578431372549019, ["mov     eax, [rbp+phaystack.cur.wc]", "test    eax, eax", "jnz     loc_6522"], ["mov~eax,[rbp+0]", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, -1, 0.015966386554621848, ["mov     rbx, [rbp+var_38]", "xor     rbx, fs:28h", "jnz     loc_64FE"], ["mov~rbx,[rbp+0]", "xor~rbx,<TAG>", "jnz~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 18, 6, 0.1054971988795518, ["cmp     [rbp+rhaystack.in_shift], 0", "jnz     loc_6160"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 17, 8, 0.02703081232492997, ["cmp     [rbp+rhaystack.cur.wc_valid], 0", "jz      short loc_62DF"], ["cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 114, 0, 0, 4, 0, 1, 9, 2, 0.004971988795518207, ["mov     rax, [rbp+needle]", "mov     [rbp+n], 1", "cmp     byte ptr [rax], 0", "jnz     loc_6503"], ["mov~rax,[rbp+0]", "mov~[rbp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 114, 0, 0, 3, 1, 1, 10, 1, 0.009313725490196078, ["mov     r9d, [rbp+var_DC]", "test    r9d, r9d", "jnz     loc_6522"], ["mov~r9d,[rbp+0]", "test~r9d,r9d", "jnz~FOO"]], [1, 0, 76, 0, 1, 6, 1, 2, 16, 11, 0.03202614379084967, ["mov     rax, [rbp+ps]", "mov     [rbp+phaystack.cur.wc_valid], 1", "lea     rdi, [rax+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_6430"], ["mov~rax,[rbp+0]", "mov~[rbp+0],0", "lea~rdi,[rax+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 10, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5704; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, aIterCurPtr0; \"*iter->cur.ptr == '\\\\0'\"", "mov     edx, 0AAh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [2, 0, 76, 0, 0, 4, 0, 1, 22, 2, 0.010154061624649859, ["mov     rax, [rbp+rhaystack.cur.ptr]", "mov     [rbp+rhaystack.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_6503"], ["mov~rax,[rbp+0]", "mov~[rbp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 76, 0, 0, 4, 0, 1, 21, 2, 0.009593837535014004, ["mov     rax, [rbp+rhaystack.cur.ptr]", "mov     [rbp+rhaystack.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_6503"], ["mov~rax,[rbp+0]", "mov~[rbp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 11, 0, 0.0, ["call    mbuiter_multi_next_0"], ["call~FOO"]], [0, 0, 76, 0, 0, 3, 1, 1, 23, 1, 0.006337535014005601, ["mov     edi, [rbp+rhaystack.cur.wc]", "test    edi, edi", "jnz     loc_6522"], ["mov~edi,[rbp+0]", "test~edi,edi", "jnz~FOO"]], [0, 0, 76, 0, 0, 3, 1, 1, 22, 1, 0.006092436974789915, ["mov     ecx, [rbp+rhaystack.cur.wc]", "test    ecx, ecx", "jnz     loc_6522"], ["mov~ecx,[rbp+0]", "test~ecx,ecx", "jnz~FOO"]], [2, 0, 76, 0, 0, 9, 1, 0, 19, 8, 0.02461484593837535, ["mov     rcx, [rbp+rhaystack.cur.ptr]", "lea     rsi, is_basic_table", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [rsi+rax*4]", "bt      eax, edx", "jnb     loc_6148"], ["mov~rcx,[rbp+0]", "lea~rsi,<TAG>", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,<TAG>", "bt~eax,edx", "jnb~FOO"]], [3, 0, 76, 0, 0, 4, 0, 1, 14, 11, 0.0792016806722689, ["mov     [rbp+phaystack.cur.bytes], 1", "mov     [rbp+phaystack.cur.wc_valid], 0", "mov     [rbp+phaystack.next_done], 1", "jmp     loc_5E8A"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 3, 0, 1, 4, 0, 2, 14, -1, 0.0203781512605042, ["mov     rdi, memory; p", "call    freea", "mov     eax, 1", "jmp     loc_5F62"], ["mov~rdi,memory", "call~FOO", "mov~eax,0", "jmp~FOO"]], [3, 0, 76, 0, 0, 5, 0, 0, 20, 9, 0.00469187675070028, ["mov     [rbp+rhaystack.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rbp+rhaystack.cur.wc_valid], 1", "mov     [rbp+rhaystack.next_done], 1", "mov     [rbp+rhaystack.cur.wc], eax"], ["mov~[rbp+0],0", "movsx~eax,<TAG>", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],eax"]], [0, 0, 88, 0, 0, 2, 1, 1, 14, 11, 0.017401960784313726, ["test    j, j", "jz      loc_6348"], ["test~j,j", "jz~FOO"]], [0, 0, 90, 0, 0, 1, 0, 0, 11, 10, 0.03091736694677871, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [2, 0, 76, 0, 0, 3, 0, 1, 23, 9, 0.010119047619047618, ["mov     [rbp+rhaystack.in_shift], 0", "mov     [rbp+rhaystack.next_done], 1", "jmp     loc_5F4C"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 20, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 76, 0, 0, 1, 0, 0, 21, 6, 0.005952380952380952, ["mov     [rbp+rhaystack.in_shift], 1"], ["mov~[rbp+0],0"]], [0, 0, 3, 0, 0, 1, 1, 0, 1, -1, 0.0010504201680672268, ["xor     eax, eax"], ["xor~eax,eax"]], [2, 0, 120, 1, 1, 21, 1, 2, 0, 11, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "push    rbx", "mov     rbx, needle_0", "sub     rsp, 108h", "mov     [rbp+haystack], haystack_0", "mov     haystack_0, needle_0; string", "mov     rax, fs:28h", "mov     [rbp+var_38], rax", "xor     eax, eax", "mov     [rbp+resultp], resultp_0", "call    mbslen", "mov     rsi, rax", "mov     [rbp+m], rax", "mov     m_0, 492492492492492h", "cmp     m_0, rax", "ja      loc_5F60"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "push~rbx", "mov~rbx,needle_0", "sub~rsp,0", "mov~[rbp+0],haystack_0", "mov~haystack_0,needle_0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],resultp_0", "call~FOO", "mov~rsi,rax", "mov~[rbp+0],rax", "mov~m_0,0", "cmp~m_0,rax", "ja~FOO"]], [0, 0, 116, 0, 0, 2, 1, 1, 3, 8, 0.03221288515406162, ["test    memory, memory", "jz      loc_5F60"], ["test~memory,memory", "jz~FOO"]], [1, 0, 76, 0, 0, 1, 0, 0, 20, 6, 0.005952380952380952, ["mov     [rbp+rhaystack.in_shift], 1"], ["mov~[rbp+0],0"]], [1, 0, 88, 0, 0, 4, 1, 0, 10, 15, 0.02387955182072829, ["lea     r14, [memory+30h]", "xor     ebx, ebx", "mov     r15d, 2", "nop     dword ptr [rax+rax+00h]"], ["lea~r14,[memory+0]", "xor~ebx,ebx", "mov~r15d,0", "nop~[word ptr [rax+0]"]], [0, 0, 0, 0, 0, 8, 0, 0, 3, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "pop~rbp", "retn"]], [0, 0, 88, 0, 0, 2, 0, 1, 11, 14, 0.029551820728291316, ["movzx   ecx, byte ptr [b+10h]", "jmp     short loc_5DAD"], ["movzx~ecx,[yte ptr [b+0]", "jmp~FOO"]], [4, 0, 117, 3, 0, 6, 2, 0, 2, 9, 0.008053221288515405, ["add     rdi, 2Eh", "and     rdi, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rdi", "lea     r12, [rsp+130h+resultp+7]", "and     r12, 0FFFFFFFFFFFFFFF0h", "add     r12, 10h"], ["add~rdi,0", "and~rdi,0", "sub~rsp,rdi", "lea~r12,[rsp+0]", "and~r12,0", "add~r12,0"]], [1, 0, 88, 0, 0, 2, 0, 1, 13, 12, 0.012254901960784315, ["cmp     byte ptr [rax+10h], 0", "jz      short loc_5DBC"], ["cmp~[yte ptr [rax+0],0", "jz~FOO"]], [1, 0, 88, 2, 0, 5, 1, 1, 12, 13, 0.04005602240896358, ["lea     rax, [j+j*2]", "shl     rax, 4", "add     rax, memory", "test    cl, cl", "jnz     short loc_5D90"], ["lea~rax,<TAG>", "shl~rax,0", "add~rax,memory", "test~cl,cl", "jnz~FOO"]], [0, 0, 88, 0, 0, 3, 0, 1, 14, 11, 0.015126050420168066, ["mov     eax, [rax+14h]", "cmp     [b+14h], eax", "jz      short loc_5DE2"], ["mov~eax,[rax+0]", "cmp~[b+0],eax", "jz~FOO"]], [0, 0, 88, 0, 0, 3, 0, 1, 13, 12, 0.028291316526610648, ["mov     rdx, [b+8]; n", "cmp     rdx, [rax+8]", "jnz     short loc_5D9F"], ["mov~rdx,[b+0]", "cmp~rdx,[rax+0]", "jnz~FOO"]], [0, 0, 88, 0, 1, 7, 1, 2, 14, 11, 0.01221988795518207, ["mov     rsi, [rax]; s2", "mov     rdi, [b]; s1", "mov     byte ptr [rbp+ps], cl", "call    _memcmp", "test    eax, eax", "movzx   ecx, byte ptr [rbp+ps]", "jnz     short loc_5D9F"], ["mov~rsi,<TAG>", "mov~rdi,<TAG>", "mov~[yte ptr [rbp+0],cl", "call~FOO", "test~eax,eax", "movzx~ecx,[yte ptr [rbp+0]", "jnz~FOO"]], [0, 0, 76, 0, 0, 2, 1, 1, 21, 3, 0.04047619047619047, ["test    rax, rax", "jnz     short loc_61D0"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 88, 1, 0, 1, 0, 0, 15, 14, 0.0012605042016806721, ["sub     j, [table+j*8+0]"], ["sub~j,[table+0]"]], [0, 0, 76, 0, 0, 2, 1, 1, 20, 3, 0.03991596638655462, ["test    rax, rax", "jnz     short loc_63E4"], ["test~rax,rax", "jnz~FOO"]]], "func_feature": [36, 45, 127, 5, 121, 185, 1, 509, 0.04782, 6, 29], "succs": [[41, 111], [0], [0], [68], [57, 3], [20, 79], [5, 71], [76], [29, 7], [11], [9, 54], [18, 98], [58, 11], [11], [58], [73, 14], [21, 46], [16, 46], [17, 22], [18, 98], [23], [27], [27, 46], [25, 42], [23], [35], [25, 101], [32, 70], [76], [28, 118], [35], [74, 30], [65, 10], [32, 12], [32], [44, 37], [35], [43], [24, 26], [77], [102, 39], [33], [41, 109], [49, 55], [43], [61, 86], [45, 47], [33, 66], [33], [55], [34], [50, 63], [107], [112, 52], [56, 78], [6], [65], [68], [17], [6], [64, 81], [51, 60], [34], [120, 62], [68], [97, 15], [67, 85], [76, 77], [34, 103], [68], [84], [36, 31], [71], [89, 75], [38, 87], [82, 90], [48, 85], [76, 103], [], [72, 78], [104, 78], [108, 78], [89, 93], [], [83, 110], [96, 8], [34, 69], [88, 90], [93, 38], [19, 13], [], [90, 94], [90, 95], [], [40, 93], [4, 93], [80, 99], [58], [84], [77], [1, 119], [42], [77], [], [8], [84], [105, 53], [105, 59], [51], [111], [], [114], [107], [115, 116], [113, 116], [2, 100], [100, 117], [2, 100], [40, 91], [114], [4, 92]], "fname": "knuth_morris_pratt_multibyte", "n_num": 121}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 145, 0, 0, 2, 0, 1, 0, 0, 0.04475169639104065, ["movzx   edx, [rsp+1C8h+iter_haystack.cur.wc_valid]", "jmp     loc_71E3"], ["movzx~edx,[rsp+0]", "jmp~FOO"]], [0, 0, 145, 0, 1, 7, 1, 2, 15, 8, 0.05327868852459016, ["mov     rdx, [rsp+1C8h+var_1A0]; resultp", "mov     rsi, [rsp+1C8h+needle_last_ccount]; needle", "mov     rdi, haystack; haystack", "call    knuth_morris_pratt_multibyte", "test    al, al", "mov     byte ptr [rsp+1C8h+count], al", "jnz     loc_74F9"], ["mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,haystack", "call~FOO", "test~al,al", "mov~[yte ptr [rsp+0],al", "jnz~FOO"]], [0, 0, 145, 0, 0, 3, 0, 0, 10, 7, 0.0841439980784243, ["lea     rdx, [outer_loop_count+outer_loop_count*4]", "cmp     comparison_count, rdx", "jnb     loc_6F20"], ["lea~rdx,<TAG>", "cmp~comparison_count,rdx", "jnb~FOO"]], [1, 0, 145, 0, 0, 4, 1, 1, 9, 7, 0.16258331832102324, ["cmp     outer_loop_count, 9", "setnbe  al", "and     al, byte ptr [rsp+1C8h+count]", "jz      loc_75CF"], ["cmp~outer_loop_count,0", "setnbe~al", "and~al,[yte ptr [rsp+0]", "jz~FOO"]], [2, 0, 145, 0, 0, 8, 1, 0, 18, 18, 0.023809523809523808, ["mov     rcx, [rsp+1C8h+rneedle.cur.ptr]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_6B68"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 17, 18, 0.21385035729298024, ["cmp     [rsp+1C8h+rneedle.in_shift], 0", "jnz     loc_6B81"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 145, 0, 1, 5, 1, 2, 21, 17, 0.026001321083288297, ["lea     rdi, [rbp+4]; ps", "mov     [rsp+1C8h+rneedle.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      loc_6E30"], ["lea~rdi,[rbp+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 145, 0, 0, 2, 1, 1, 20, 18, 0.027907884465261514, ["test    rax, rax", "jnz     short loc_6BFB"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 22, 18, 0.004924037710922957, ["mov     ecx, [rsp+1C8h+rneedle.cur.wc]", "test    ecx, ecx", "jnz     loc_72C4"], ["mov~ecx,[rsp+0]", "test~ecx,ecx", "jnz~FOO"]], [1, 0, 145, 1, 0, 2, 0, 0, 11, 6, 0.0026821994035108794, ["add     comparison_count, 1", "mov     byte ptr [rsp+1C8h+count], al"], ["add~comparison_count,0", "mov~[yte ptr [rsp+0],al"]], [1, 0, 145, 0, 3, 13, 0, 4, 14, 9, 0.06537861046057769, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+1C8h+resultp]", "mov     rdx, rax; n", "lea     rcx, [rsi+4]; p", "lea     rdi, [rsi+24h]; pwc", "mov     rsi, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]; s", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], rax", "jz      loc_7543"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "mov~rdx,rax", "lea~rcx,[rsi+0]", "lea~rdi,[rsi+0]", "mov~rsi,[rsp+0]", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 15, 10, 0.004623791509037411, ["mov     [rsp+1C8h+iter_needle_last_ccount.in_shift], 1", "jmp     loc_73D5"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 145, 0, 0, 2, 0, 0, 13, 10, 0.05658139674533117, ["lea     rax, [rsp+1C8h+iter_needle_last_ccount]", "mov     [rsp+1C8h+resultp], rax"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax"]], [1, 0, 24, 2, 1, 9, 0, 2, 9, -1, 0.0002552092716027142, ["mov     rsi, rbx", "mov     rdi, needle_last_ccount_0; string", "sub     rsi, rcx; maxlen", "call    _strnlen", "add     needle_last_ccount_0, rax", "mov     rcx, rbx", "movzx   edx, byte ptr [rsp+1C8h+count]", "cmp     byte ptr [needle_last_ccount_0+0], 0", "jnz     loc_66E0"], ["mov~rsi,rbx", "mov~rdi,needle_last_ccount_0", "sub~rsi,rcx", "call~FOO", "add~needle_last_ccount_0,rax", "mov~rcx,rbx", "movzx~edx,[yte ptr [rsp+0]", "cmp~[yte ptr [needle_last_ccount_0+0],0", "jnz~FOO"]], [0, 0, 24, 0, 0, 3, 1, 1, 8, -1, 0.0022818711343301507, ["test    needle_last_ccount_0, needle_last_ccount_0", "mov     byte ptr [rsp+1C8h+count], dl", "jz      short loc_661B"], ["test~needle_last_ccount_0,needle_last_ccount_0", "mov~[yte ptr [rsp+0],dl", "jz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 11, 5, 0.20338177305390415, ["cmp     [rsp+1C8h+iter_needle.cur.wc_valid], 0", "jz      loc_6D71"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 145, 0, 0, 5, 1, 1, 14, 6, 0.1587101423166997, ["lea     rax, [last_ccount_0+1]", "test    dl, dl", "mov     [rsp+1C8h+last_ccount], last_ccount_0", "mov     last_ccount_0, comparison_count", "jnz     loc_6814"], ["lea~rax,[last_ccount_0+0]", "test~dl,dl", "mov~[rsp+0],last_ccount_0", "mov~last_ccount_0,comparison_count", "jnz~FOO"]], [1, 0, 145, 1, 0, 2, 0, 1, 10, 6, 0.07381552873356152, ["add     comparison_count, 1", "jmp     loc_6814"], ["add~comparison_count,0", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 15, 9, 0.03252416981925178, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_74CF"], ["cmp~rax,0", "jz~FOO"]], [2, 0, 145, 0, 1, 6, 0, 2, 20, 16, 0.0039032006245121, ["mov     rdi, [rsp+1C8h+rneedle.cur.ptr]; s", "call    _strlen", "mov     [rsp+1C8h+rneedle.cur.wc_valid], 0", "mov     [rsp+1C8h+rneedle.cur.bytes], rax", "mov     [rsp+1C8h+rneedle.next_done], 1", "jmp     loc_6A47"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 19, 17, 0.036434876598811027, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_6E00"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 145, 0, 0, 2, 1, 1, 16, 11, 0.024057226926079388, ["test    rax, rax", "jnz     short loc_7456"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 145, 0, 0, 3, 0, 1, 12, 4, 0.15326317580415946, ["mov     eax, [rsp+1C8h+iter_needle.cur.wc]", "cmp     [rsp+1C8h+iter_haystack.cur.wc], eax", "jnz     loc_6A79"], ["mov~eax,[rsp+0]", "cmp~[rsp+0],eax", "jnz~FOO"]], [0, 0, 145, 0, 1, 6, 1, 2, 14, 16, 0.005129205948878081, ["lea     rax, [rsp+1C8h+iter_needle_last_ccount]", "lea     rdi, [rsp+1C8h+iter_needle_last_ccount.state]; ps", "mov     [rsp+1C8h+resultp], rax", "call    _mbsinit", "test    eax, eax", "jz      loc_75B0"], ["lea~rax,[rsp+0]", "lea~rdi,[rsp+0]", "mov~[rsp+0],rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 145, 0, 0, 8, 1, 0, 13, 12, 0.017364238675714086, ["mov     rcx, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     short loc_7010"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [2, 0, 145, 0, 0, 5, 1, 1, 22, 16, 0.02080706179066835, ["mov     edx, [rsp+1C8h+rneedle.cur.wc]", "mov     [rsp+1C8h+rneedle.in_shift], 0", "mov     [rsp+1C8h+rneedle.next_done], 1", "test    edx, edx", "jnz     loc_6A47"], ["mov~edx,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "test~edx,edx", "jnz~FOO"]], [3, 0, 145, 0, 0, 5, 0, 0, 19, 17, 0.0138263375968294, ["mov     [rsp+1C8h+rneedle.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rsp+1C8h+rneedle.cur.wc_valid], 1", "mov     [rsp+1C8h+rneedle.next_done], 1", "mov     [rsp+1C8h+rneedle.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [1, 0, 145, 0, 0, 1, 0, 0, 15, 15, 0.004623791509037411, ["mov     [rsp+1C8h+iter_needle_last_ccount.in_shift], 1"], ["mov~[rsp+0],0"]], [0, 0, 4, 0, 0, 1, 0, 0, 23, -1, 0.0004503693028283192, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 145, 0, 0, 2, 0, 1, 22, 17, 0.0005704677835825377, ["mov     [rsp+1C8h+rneedle.next_done], 1", "jmp     loc_6A38"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 24, 0, 1, 8, 1, 2, 9, -1, 0.0016963910406533357, ["mov     rdx, [rsp+1C8h+resultp]; resultp", "mov     rsi, [rsp+1C8h+needle_last_ccount]; needle", "mov     rdi, haystack; haystack", "mov     [rsp+1C8h+count], rcx", "call    knuth_morris_pratt_unibyte", "test    al, al", "mov     rcx, [rsp+1C8h+count]", "jnz     loc_74F9"], ["mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,haystack", "mov~[rsp+0],rcx", "call~FOO", "test~al,al", "mov~rcx,[rsp+0]", "jnz~FOO"]], [0, 0, 145, 0, 1, 5, 1, 2, 14, 7, 0.04524960467583419, ["mov     rdi, rcx; ps", "mov     [rsp+1C8h+resultp], rcx", "call    _mbsinit", "test    eax, eax", "jz      loc_75B0"], ["mov~rdi,rcx", "mov~[rsp+0],rcx", "call~FOO", "test~eax,eax", "jz~FOO"]], [6, 0, 145, 1, 0, 24, 1, 0, 13, 3, 0.19119928341239825, ["movdqa  xmm0, xmmword ptr [rsp+1C8h+iter_haystack.in_shift]", "lea     rcx, [rbp+4]", "mov     [rsp+1C8h+rneedle.in_shift], 0", "mov     qword ptr [rbp+4], 0", "movaps  xmmword ptr [rsp+1C8h+rhaystack.in_shift], xmm0", "mov     [rsp+1C8h+rneedle.next_done], 0", "mov     [rsp+1C8h+rhaystack.next_done], 0", "movdqa  xmm0, xmmword ptr [rsp+1C8h+iter_haystack.cur.ptr]", "movaps  xmmword ptr [rsp+1C8h+rhaystack.cur.ptr], xmm0", "mov     rax, [rsp+1C8h+rhaystack.cur.bytes]", "add     [rsp+1C8h+rhaystack.cur.ptr], rax", "mov     rax, [rsp+1C8h+needle_last_ccount]", "movdqa  xmm0, xmmword ptr [rsp+1C8h+iter_haystack.cur.wc_valid]", "movsx   edx, byte ptr [rax]", "mov     [rsp+1C8h+rneedle.cur.ptr], rax", "movaps  xmmword ptr [rsp+1C8h+rhaystack.cur.wc_valid], xmm0", "mov     eax, edx", "shr     al, 5", "movdqa  xmm0, xmmword ptr [rsp+1C8h+iter_haystack.cur.buf+8]", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "movaps  xmmword ptr [rsp+1C8h+rhaystack.cur.buf+8], xmm0", "bt      eax, edx", "jnb     loc_7230"], ["movdqa~xmm0,[mmword ptr [rsp+0]", "lea~rcx,[rbp+0]", "mov~[rsp+0],0", "mov~[word ptr [rbp+0],0", "movaps~[mmword ptr [rsp+0],xmm0", "mov~[rsp+0],0", "mov~[rsp+0],0", "movdqa~xmm0,[mmword ptr [rsp+0]", "movaps~[mmword ptr [rsp+0],xmm0", "mov~rax,[rsp+0]", "add~[rsp+0],rax", "mov~rax,[rsp+0]", "movdqa~xmm0,[mmword ptr [rsp+0]", "movsx~edx,<TAG>", "mov~[rsp+0],rax", "movaps~[mmword ptr [rsp+0],xmm0", "mov~eax,edx", "shr~al,0", "movdqa~xmm0,[mmword ptr [rsp+0]", "and~eax,0", "mov~eax,[r13+0]", "movaps~[mmword ptr [rsp+0],xmm0", "bt~eax,edx", "jnb~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 21, -1, 0.002717228127064193, ["mov     rax, [rsp+1C8h+iter_haystack.cur.ptr]", "jmp     loc_66B6"], ["mov~rax,[rsp+0]", "jmp~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 20, 16, 0.018570227586621028, ["mov     edx, [rsp+1C8h+rneedle.cur.wc]", "test    edx, edx", "jz      loc_6C38"], ["mov~edx,[rsp+0]", "test~edx,edx", "jz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 20, 15, 0.1978021978021978, ["cmp     [rsp+1C8h+rhaystack.next_done], 0", "jz      loc_6928"], ["cmp~[rsp+0],0", "jz~FOO"]], [3, 0, 145, 0, 0, 4, 0, 1, 19, 16, 0.15333573530294842, ["mov     [rsp+1C8h+rneedle.cur.bytes], 1", "mov     [rsp+1C8h+rneedle.cur.wc_valid], 0", "mov     [rsp+1C8h+rneedle.next_done], 1", "jmp     loc_6A47"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 18, 11, 0.004808943333533496, ["mov     r9d, [rsp+1C8h+iter_needle_last_ccount.cur.wc]", "test    r9d, r9d", "jnz     loc_72C4"], ["mov~r9d,[rsp+0]", "test~r9d,r9d", "jnz~FOO"]], [2, 0, 145, 0, 0, 4, 0, 1, 17, 12, 0.005562060889929743, ["mov     rax, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_75DD"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 145, 0, 1, 4, 1, 2, 23, 17, 0.005314357773374167, ["lea     rdi, [r15+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_75B0"], ["lea~rdi,[r15+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 145, 0, 0, 8, 1, 0, 22, 17, 0.013961448387677896, ["mov     rcx, [rsp+1C8h+rhaystack.cur.ptr]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_6C48"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [1, 0, 145, 0, 0, 1, 0, 0, 24, 16, 0.004653816129225965, ["mov     [rsp+1C8h+rhaystack.in_shift], 1"], ["mov~[rsp+0],0"]], [1, 0, 145, 0, 0, 2, 0, 1, 21, 14, 0.12778478352248845, ["cmp     [rsp+1C8h+rhaystack.cur.wc_valid], 0", "jnz     loc_697D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 145, 0, 1, 6, 0, 2, 24, 14, 0.003813126763946436, ["mov     rdi, [rsp+1C8h+rhaystack.cur.ptr]; s", "call    _strlen", "mov     [rsp+1C8h+rhaystack.cur.wc_valid], 0", "mov     [rsp+1C8h+rhaystack.cur.bytes], rax", "mov     [rsp+1C8h+rhaystack.next_done], 1", "jmp     loc_6A63"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 23, 15, 0.036449888908905305, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_6E40"], ["cmp~rax,0", "jz~FOO"]], [2, 0, 145, 2, 0, 5, 0, 1, 13, 12, 0.03396284953662002, ["mov     rax, [rsp+1C8h+iter_needle_last_ccount.cur.bytes]", "add     [rsp+1C8h+iter_needle_last_ccount.cur.ptr], rax", "sub     [rsp+1C8h+count], 1", "mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 0", "jz      loc_7170"], ["mov~rax,[rsp+0]", "add~[rsp+0],rax", "sub~[rsp+0],0", "mov~[rsp+0],0", "jz~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 13, 10, 0.05446466102203807, ["mov     r10d, [rsp+1C8h+iter_needle_last_ccount.cur.wc]", "test    r10d, r10d", "jnz     loc_6F49"], ["mov~r10d,[rsp+0]", "test~r10d,r10d", "jnz~FOO"]], [2, 0, 145, 0, 0, 3, 0, 1, 15, 13, 0.015297543986068576, ["mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], 1", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 0", "jmp     loc_6F49"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 0, 1, 5, 0, 2, 16, 13, 0.0023269080646129824, ["mov     rdi, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]; s", "call    _strlen", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 0", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], rax", "jmp     loc_6F49"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 12, 11, 0.020476790968594248, ["cmp     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 0", "jnz     short loc_6FBE"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 145, 1, 1, 6, 1, 2, 17, 10, 0.022398366660661743, ["mov     rdi, [rsp+1C8h+resultp]", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 1", "add     rdi, 4; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_7564"], ["mov~rdi,[rsp+0]", "mov~[rsp+0],0", "add~rdi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 145, 0, 0, 3, 0, 1, 22, 13, 0.1706149042214616, ["mov     rdx, [rsp+1C8h+rhaystack.cur.bytes]; n", "cmp     rdx, [rsp+1C8h+rneedle.cur.bytes]", "jz      loc_6D20"], ["mov~rdx,[rsp+0]", "cmp~rdx,[rsp+0]", "jz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 23, 14, 0.040293040293040296, ["cmp     [rsp+1C8h+rneedle.cur.wc_valid], 0", "jz      loc_6A63"], ["cmp~[rsp+0],0", "jz~FOO"]], [3, 0, 145, 0, 0, 4, 0, 1, 23, 14, 0.014712063892391762, ["mov     [rsp+1C8h+rhaystack.cur.bytes], 1", "mov     [rsp+1C8h+rhaystack.cur.wc_valid], 0", "mov     [rsp+1C8h+rhaystack.next_done], 1", "jmp     loc_6A63"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 26, 16, 0.0007205908845253108, ["mov     [rsp+1C8h+rhaystack.next_done], 1", "jmp     loc_697D"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 0, 1, 5, 1, 2, 25, 16, 0.02654176424668228, ["lea     rdi, [r15+4]; ps", "mov     [rsp+1C8h+rhaystack.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      loc_6E70"], ["lea~rdi,[r15+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 145, 0, 0, 1, 0, 0, 13, 12, 0.1585149822854741, ["mov     rcx, [rsp+1C8h+iter_haystack.cur.bytes]"], ["mov~rcx,[rsp+0]"]], [0, 0, 145, 0, 0, 3, 1, 1, 24, 13, 0.03613463039692548, ["test    al, al", "lea     rdx, [rbx+1]", "jnz     loc_6A79"], ["test~al,al", "lea~rdx,[rbx+0]", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 3, -1, 0.006695490302047679, ["xor     eax, eax", "jmp     loc_66B6"], ["xor~eax,eax", "jmp~FOO"]], [0, 0, 25, 0, 0, 3, 1, 1, 2, -1, 0.0012910586681078484, ["movzx   esi, byte ptr [haystack]", "test    sil, sil", "jz      loc_6D18"], ["movzx~esi,<TAG>", "test~sil,sil", "jz~FOO"]], [1, 0, 24, 0, 0, 2, 0, 1, 5, -1, 0.0028973758481955205, ["cmp     byte ptr [r12+1], 0", "jz      loc_6D18"], ["cmp~[yte ptr [r12+0],0", "jz~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 8, 8, 0.1696240917552393, ["mov     eax, [rsp+1C8h+iter_haystack.cur.wc]", "test    eax, eax", "jz      loc_6D18"], ["mov~eax,[rsp+0]", "test~eax,eax", "jz~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 22, 15, 0.022818711343301507, ["mov     eax, [rsp+1C8h+rhaystack.cur.wc]", "test    eax, eax", "jz      loc_6D18"], ["mov~eax,[rsp+0]", "test~eax,eax", "jz~FOO"]], [0, 0, 24, 0, 0, 3, 1, 1, 6, -1, 0.003272683600552453, ["movzx   edi, byte ptr [r14]", "test    dil, dil", "jz      loc_6D18"], ["movzx~edi,<TAG>", "test~dil,dil", "jz~FOO"]], [0, 0, 24, 0, 0, 3, 1, 1, 10, -1, 0.0017414279709361677, ["movzx   edi, byte ptr [rdx+rbx]", "test    dil, dil", "jz      loc_6D18"], ["movzx~edi,<TAG>", "test~dil,dil", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 27, -1, 0.0006004924037710923, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 145, 0, 0, 2, 0, 1, 15, 14, 0.03223393182409576, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_7148"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 145, 0, 3, 13, 0, 4, 14, 14, 0.052155267319201754, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+1C8h+resultp]", "mov     rdx, rax; n", "lea     rcx, [rsi+4]; p", "lea     rdi, [rsi+24h]; pwc", "mov     rsi, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]; s", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], rax", "jz      loc_7108"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "mov~rdx,rax", "lea~rcx,[rsi+0]", "lea~rdi,[rsi+0]", "mov~rsi,[rsp+0]", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [2, 0, 145, 0, 0, 3, 0, 1, 18, 9, 0.008887287575812166, ["mov     [rsp+1C8h+iter_needle_last_ccount.in_shift], 0", "mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 1", "jmp     loc_71C5"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 145, 0, 3, 13, 0, 4, 15, 6, 0.04399357473127966, ["mov     [rsp+1C8h+rneedle.in_shift], 1", "call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+1C8h+rneedle.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rcx, [rsp+1C8h+resultp]; p", "mov     rsi, [rsp+1C8h+rneedle.cur.ptr]; s", "lea     rdi, [rbp+24h]; pwc", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+1C8h+rneedle.cur.bytes], rax", "jz      loc_73A8"], ["mov~[rsp+0],0", "call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rcx,[rsp+0]", "mov~rsi,[rsp+0]", "lea~rdi,[rbp+0]", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 8, 11, 0.005224283912808503, ["mov     [rsp+1C8h+iter_haystack.in_shift], 1", "jmp     loc_6AB0"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 145, 0, 1, 6, 1, 2, 7, 12, 0.006795572369342862, ["lea     rax, [rsp+1C8h+iter_haystack]", "lea     rdi, [rsp+1C8h+iter_haystack.state]; ps", "mov     [rsp+1C8h+resultp], rax", "call    _mbsinit", "test    eax, eax", "jz      loc_75B0"], ["lea~rax,[rsp+0]", "lea~rdi,[rsp+0]", "mov~[rsp+0],rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 145, 0, 0, 2, 1, 1, 16, 13, 0.025283232250445358, ["test    rax, rax", "jnz     short loc_70BB"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 24, 0, 0, 4, 1, 1, 5, -1, 0.003948237554794932, ["mov     r8, [rsp+1C8h+needle_last_ccount]", "movzx   esi, byte ptr [r8+1]", "test    sil, sil", "jz      loc_66B3"], ["mov~r8,[rsp+0]", "movzx~esi,[yte ptr [r8+0]", "test~sil,sil", "jz~FOO"]], [1, 0, 24, 1, 0, 5, 0, 1, 4, -1, 0.007356031946195881, ["add     r13, 1", "cmp     sil, r15b", "lea     rbx, [rdx+1]", "lea     r14, [r12+1]", "jz      loc_6E80"], ["add~r13,0", "cmp~sil,r15b", "lea~rbx,[rdx+0]", "lea~r14,[r12+0]", "jz~FOO"]], [5, 0, 161, 0, 0, 15, 1, 0, 1, 15, 0.00468384074941452, ["mov     rax, needle_0", "lea     r13, is_basic_table", "mov     [rsp+1C8h+iter_needle.cur.ptr], needle_0", "movsx   edx, byte ptr [rax]", "lea     needle_0, [rsp+1C8h+iter_needle]", "mov     [rsp+1C8h+iter_needle.in_shift], 0", "mov     qword ptr [rsp+1C8h+iter_needle.state.__count], 0", "mov     [rsp+1C8h+iter_needle.next_done], 0", "lea     rbp, [rbx+4]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_7300"], ["mov~rax,needle_0", "lea~r13,<TAG>", "mov~[rsp+0],needle_0", "movsx~edx,<TAG>", "lea~needle_0,[rsp+0]", "mov~[rsp+0],0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],0", "lea~rbp,[rbx+0]", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [2, 0, 183, 1, 1, 16, 1, 2, 0, 16, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, haystack", "push    rbp", "push    rbx", "mov     rbx, needle_0", "sub     rsp, 198h", "mov     rax, fs:28h", "mov     [rsp+1C8h+var_40], rax", "xor     eax, eax", "mov     [rsp+1C8h+needle_last_ccount], needle_0", "call    ___ctype_get_mb_cur_max", "cmp     rax, 1", "ja      loc_6650"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,haystack", "push~rbp", "push~rbx", "mov~rbx,needle_0", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~[rsp+0],needle_0", "call~FOO", "cmp~rax,0", "ja~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 16, 5, 0.031563381973218035, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_7503"], ["cmp~rax,0", "jz~FOO"]], [2, 0, 145, 0, 0, 4, 0, 1, 18, 5, 0.005321863928421304, ["mov     rax, [rsp+1C8h+rneedle.cur.ptr]", "mov     [rsp+1C8h+rneedle.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_75DD"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 145, 0, 0, 2, 1, 1, 17, 4, 0.022946315979102856, ["test    rax, rax", "jnz     short loc_72D0"], ["test~rax,rax", "jnz~FOO"]], [1, 0, 145, 0, 3, 12, 0, 4, 22, 15, 0.05578574431033447, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+1C8h+rhaystack.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+1C8h+rhaystack.cur.ptr]; s", "lea     rcx, [r15+4]; p", "lea     rdi, [r15+24h]; pwc", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+1C8h+rhaystack.cur.bytes], rax", "jz      loc_6DD8"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rcx,[r15+0]", "lea~rdi,[r15+0]", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 21, 16, 0.06539362277067196, ["cmp     [rsp+1C8h+rhaystack.in_shift], 0", "jnz     loc_6C61"], ["cmp~[rsp+0],0", "jnz~FOO"]], [3, 0, 145, 2, 0, 5, 0, 1, 11, 11, 0.25575722092115527, ["add     [rsp+1C8h+iter_haystack.cur.ptr], rcx", "add     r14, 1", "cmp     [rsp+1C8h+iter_haystack.in_shift], 0", "mov     [rsp+1C8h+iter_haystack.next_done], 0", "jz      loc_6798"], ["add~[rsp+0],rcx", "add~r14,0", "cmp~[rsp+0],0", "mov~[rsp+0],0", "jz~FOO"]], [0, 0, 145, 0, 0, 3, 0, 1, 10, 6, 0.13667957725334773, ["mov     rcx, [rsp+1C8h+iter_haystack.cur.bytes]", "cmp     rcx, [rsp+1C8h+iter_needle.cur.bytes]", "jnz     loc_6A81"], ["mov~rcx,[rsp+0]", "cmp~rcx,[rsp+0]", "jnz~FOO"]], [0, 0, 145, 0, 1, 8, 1, 2, 11, 5, 0.041644148201525254, ["mov     rsi, [rsp+1C8h+iter_needle.cur.ptr]; s2", "mov     rdi, [rsp+1C8h+iter_haystack.cur.ptr]; s1", "mov     rdx, rcx; n", "mov     [rsp+1C8h+resultp], rcx", "call    _memcmp", "test    eax, eax", "mov     rcx, [rsp+1C8h+resultp]", "jnz     loc_6A81"], ["mov~rsi,[rsp+0]", "mov~rdi,[rsp+0]", "mov~rdx,rcx", "mov~[rsp+0],rcx", "call~FOO", "test~eax,eax", "mov~rcx,[rsp+0]", "jnz~FOO"]], [0, 0, 145, 0, 1, 6, 1, 2, 14, 11, 0.005239296222902781, ["lea     rax, [rsp+1C8h+iter_needle_last_ccount]", "lea     rdi, [rsp+1C8h+iter_needle_last_ccount.state]; ps", "mov     [rsp+1C8h+resultp], rax", "call    _mbsinit", "test    eax, eax", "jz      loc_75B0"], ["lea~rax,[rsp+0]", "lea~rdi,[rsp+0]", "mov~[rsp+0],rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 145, 0, 0, 8, 1, 0, 13, 10, 0.028575932264456847, ["mov     rcx, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_7489"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [3, 0, 149, 0, 0, 4, 0, 0, 2, 14, 0.008617065994115174, ["mov     [rsp+1C8h+iter_needle.cur.bytes], 1", "mov     [rsp+1C8h+iter_needle.cur.wc], edx", "mov     [rsp+1C8h+iter_needle.cur.wc_valid], 1", "mov     [rsp+1C8h+iter_needle.next_done], 1"], ["mov~[rsp+0],0", "mov~[rsp+0],edx", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [0, 0, 24, 0, 0, 3, 0, 1, 7, -1, 0.0032126343601753438, ["cmp     sil, dil", "lea     rbx, [rdx+2]", "jnz     loc_65D2"], ["cmp~sil,dil", "lea~rbx,[rdx+0]", "jnz~FOO"]], [0, 0, 145, 0, 0, 2, 0, 0, 5, 11, 0.16935136812185986, ["lea     rax, [rsp+1C8h+iter_haystack]", "mov     [rsp+1C8h+resultp], rax"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax"]], [9, 0, 146, 0, 0, 19, 2, 1, 4, 12, 0.06398246562180988, ["mov     rax, [rsp+1C8h+needle_last_ccount]", "mov     [rsp+1C8h+iter_haystack.in_shift], 0", "xor     r14d, r14d", "xor     ebx, ebx", "cmp     [rsp+1C8h+iter_haystack.in_shift], 0", "mov     [rsp+1C8h+iter_needle_last_ccount.in_shift], 0", "mov     qword ptr [rsp+1C8h+iter_needle_last_ccount.state.__count], 0", "mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 0", "lea     rbp, [rsp+1C8h+rneedle]", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.ptr], rax", "lea     rax, [rsp+1C8h+result]", "mov     [rsp+1C8h+iter_haystack.cur.ptr], haystack", "mov     qword ptr [rsp+1C8h+iter_haystack.state.__count], 0", "mov     [rsp+1C8h+iter_haystack.next_done], 0", "lea     r15, [rsp+1C8h+rhaystack]", "mov     [rsp+1C8h+last_ccount], 0", "mov     byte ptr [rsp+1C8h+count], 1", "mov     [rsp+1C8h+var_1A0], rax", "jnz     loc_6AA3"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "xor~r14d,r14d", "xor~ebx,ebx", "cmp~[rsp+0],0", "mov~[rsp+0],0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],0", "lea~rbp,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],haystack", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],0", "lea~r15,[rsp+0]", "mov~[rsp+0],0", "mov~[yte ptr [rsp+0],0", "mov~[rsp+0],rax", "jnz~FOO"]], [0, 0, 145, 0, 0, 2, 1, 1, 24, 17, 0.028012970635921456, ["test    rax, rax", "jnz     short loc_6CDB"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 148, 0, 0, 3, 1, 1, 3, 13, 0.03987269561040053, ["mov     eax, [rsp+1C8h+iter_needle.cur.wc]", "test    eax, eax", "jnz     short loc_670B"], ["mov~eax,[rsp+0]", "test~eax,eax", "jnz~FOO"]], [2, 0, 149, 0, 0, 3, 0, 1, 7, 14, 0.009097459917132048, ["mov     [rsp+1C8h+iter_needle.in_shift], 0", "mov     [rsp+1C8h+iter_needle.next_done], 1", "jmp     loc_66AB"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 149, 0, 0, 2, 0, 1, 7, 14, 0.009097459917132048, ["mov     [rsp+1C8h+iter_needle.next_done], 1", "jmp     loc_66AB"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 4, -1, 0.0016963910406533357, ["mov     rax, r12"], ["mov~rax,r12"]], [0, 0, 4, 0, 0, 1, 0, 1, 10, -1, 0.0003602954422626554, ["jmp     loc_66B3"], ["jmp~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 18, 13, 0.004728877679697353, ["mov     r11d, [rsp+1C8h+iter_needle_last_ccount.cur.wc]", "test    r11d, r11d", "jnz     loc_72C4"], ["mov~r11d,[rsp+0]", "test~r11d,r11d", "jnz~FOO"]], [2, 0, 145, 0, 0, 4, 0, 1, 17, 14, 0.005391921375527932, ["mov     rax, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_75DD"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 24, 1, 0, 4, 0, 1, 8, -1, 0.0022218218939530415, ["neg     rdx", "lea     r9, [r8+rdx]", "add     rdx, r12", "jmp     short loc_6EDA"], ["neg~rdx", "lea~r9,<TAG>", "add~rdx,r12", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 19, 2, 0.008451930583078124, ["mov     [rsp+1C8h+rneedle.next_done], 1", "jmp     loc_68F1"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 0, 1, 5, 1, 2, 18, 3, 0.02152765267519366, ["lea     rdi, [rbp+4]; ps", "mov     [rsp+1C8h+rneedle.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      loc_74B8"], ["lea~rdi,[rbp+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 19, 4, 0.00469384895614404, ["mov     edi, [rsp+1C8h+rneedle.cur.wc]; iter", "test    edi, edi", "jz      short loc_72D0"], ["mov~edi,[rsp+0]", "test~edi,edi", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, -1, 0.0, ["call    mbuiter_multi_next_0"], ["call~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 10, 11, 0.005614603975259712, ["mov     eax, [rsp+1C8h+iter_haystack.cur.wc]", "test    eax, eax", "jnz     loc_72C4"], ["mov~eax,[rsp+0]", "test~eax,eax", "jnz~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 26, 17, 0.004713865369603075, ["mov     eax, [rsp+1C8h+rhaystack.cur.wc]", "test    eax, eax", "jnz     loc_72C4"], ["mov~eax,[rsp+0]", "test~eax,eax", "jnz~FOO"]], [0, 0, 152, 0, 0, 3, 1, 1, 7, 16, 0.004713865369603075, ["mov     eax, [rsp+1C8h+iter_needle.cur.wc]", "test    eax, eax", "jnz     loc_72C4"], ["mov~eax,[rsp+0]", "test~eax,eax", "jnz~FOO"]], [2, 0, 153, 0, 0, 4, 0, 1, 6, 17, 0.0005404431633939831, ["mov     rax, [rsp+1C8h+iter_needle.cur.ptr]", "mov     [rsp+1C8h+iter_needle.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_75DD"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 145, 0, 0, 4, 0, 1, 25, 18, 0.005374407013751276, ["mov     rax, [rsp+1C8h+rhaystack.cur.ptr]", "mov     [rsp+1C8h+rhaystack.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_75DD"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, -1, 0.010628715546748334, ["mov     rbx, [rsp+1C8h+var_40]", "xor     rbx, fs:28h", "jnz     loc_75D8"], ["mov~rbx,[rsp+0]", "xor~rbx,<TAG>", "jnz~FOO"]], [0, 0, 26, 0, 0, 5, 1, 1, 1, -1, 0.0007506155047138654, ["mov     rax, [rsp+1C8h+needle_last_ccount]", "movzx   r15d, byte ptr [rax]", "mov     rax, haystack", "test    r15b, r15b", "jz      loc_66B6"], ["mov~rax,[rsp+0]", "movzx~r15d,<TAG>", "mov~rax,haystack", "test~r15b,r15b", "jz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 10, -1, 0.0042935206869633095, ["mov     rax, [rsp+1C8h+result]", "jmp     loc_66B6"], ["mov~rax,[rsp+0]", "jmp~FOO"]], [0, 0, 145, 0, 0, 1, 0, 1, 12, 4, 0.038986969314838166, ["jmp     loc_6830"], ["jmp~FOO"]], [1, 0, 145, 0, 3, 12, 0, 4, 18, 17, 0.19439440341079686, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+1C8h+rneedle.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+1C8h+rneedle.cur.ptr]; s", "lea     rcx, [rbp+4]; p", "lea     rdi, [rbp+24h]; pwc", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+1C8h+rneedle.cur.bytes], rax", "jz      loc_6DB0"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rcx,[rbp+0]", "lea~rdi,[rbp+0]", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 151, 0, 1, 5, 1, 2, 6, 15, 0.014201645349186333, ["lea     rdi, [rbx+4]; ps", "mov     [rsp+1C8h+iter_needle.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      loc_74C5"], ["lea~rdi,[rbx+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 24, 0, 0, 3, 1, 1, 9, -1, 0.002642166576592806, ["movzx   esi, byte ptr [r9+rbx]", "test    sil, sil", "jnz     short loc_6EC0"], ["movzx~esi,<TAG>", "test~sil,sil", "jnz~FOO"]], [0, 0, 145, 0, 0, 3, 0, 1, 13, 15, 0.043358053603955254, ["lea     rax, [rsp+1C8h+iter_needle_last_ccount]", "mov     [rsp+1C8h+resultp], rax", "jmp     loc_703A"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [2, 0, 145, 1, 1, 6, 1, 2, 17, 12, 0.023794511499429533, ["mov     rdi, [rsp+1C8h+resultp]", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 1", "add     rdi, 4; ps", "call    _mbsinit", "test    eax, eax", "jz      short loc_7128"], ["mov~rdi,[rsp+0]", "mov~[rsp+0],0", "add~rdi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 24, 1, 0, 3, 0, 1, 11, -1, 0.001411157148862067, ["add     rbx, 1", "cmp     sil, dil", "jnz     loc_65D2"], ["add~rbx,0", "cmp~sil,dil", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 198h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [2, 0, 145, 0, 1, 6, 0, 2, 8, 9, 0.0036930282831922176, ["mov     rdi, [rsp+1C8h+iter_haystack.cur.ptr]; s", "call    _strlen", "mov     [rsp+1C8h+iter_haystack.cur.wc_valid], 0", "mov     [rsp+1C8h+iter_haystack.cur.bytes], rax", "mov     [rsp+1C8h+iter_haystack.next_done], 1", "jmp     loc_6D5C"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 7, 10, 0.03478102043675813, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_7200"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 24, 0, 0, 1, 0, 0, 8, -1, 0.001125923257070798, ["mov     eax, edx"], ["mov~eax,edx"]], [0, 0, 24, 0, 0, 3, 0, 1, 7, -1, 0.0031525851197982345, ["lea     try_kmp, [outer_loop_count+outer_loop_count*4+0]", "cmp     rax, rbx", "ja      loc_66E0"], ["lea~try_kmp,[outer_loop_count+0]", "cmp~rax,rbx", "ja~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 12, 11, 0.08978112051882543, ["cmp     [rsp+1C8h+iter_needle_last_ccount.in_shift], 0", "jnz     loc_73C8"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 145, 0, 0, 3, 0, 1, 18, 11, 0.009585359995196061, ["mov     [rsp+1C8h+iter_needle_last_ccount.in_shift], 0", "mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 1", "jmp     loc_6FBE"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 145, 0, 0, 4, 0, 0, 14, 2, 0.14132588722752656, ["mov     [rsp+1C8h+rneedle.cur.bytes], 1", "mov     [rsp+1C8h+rneedle.cur.wc], edx", "mov     [rsp+1C8h+rneedle.cur.wc_valid], 1", "mov     [rsp+1C8h+rneedle.next_done], 1"], ["mov~[rsp+0],0", "mov~[rsp+0],edx", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [0, 0, 24, 0, 0, 4, 0, 1, 7, -1, 0.004773914609980183, ["movzx   esi, byte ptr [haystack]", "mov     r12, haystack", "mov     rdx, rbx", "jmp     loc_65B0"], ["movzx~esi,<TAG>", "mov~r12,haystack", "mov~rdx,rbx", "jmp~FOO"]], [1, 0, 24, 0, 0, 4, 1, 1, 6, -1, 0.005164234672431394, ["cmp     outer_loop_count, 9", "setnbe  dl", "and     dl, al", "jz      loc_66E2"], ["cmp~outer_loop_count,0", "setnbe~dl", "and~dl,al", "jz~FOO"]], [0, 0, 24, 0, 0, 2, 1, 1, 10, -1, 0.0007656278148081427, ["xor     ebp, ebp", "jmp     loc_66E2"], ["xor~ebp,ebp", "jmp~FOO"]], [1, 0, 145, 0, 3, 13, 0, 4, 6, 10, 0.17874907424087744, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+1C8h+iter_haystack.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+1C8h+resultp]", "mov     rdx, rax; n", "lea     rcx, [rsi+4]; p", "lea     rdi, [rsi+24h]; pwc", "mov     rsi, [rsp+1C8h+iter_haystack.cur.ptr]; s", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+1C8h+iter_haystack.cur.bytes], rax", "jz      loc_6D40"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "mov~rdx,rax", "lea~rcx,[rsi+0]", "lea~rdi,[rsi+0]", "mov~rsi,[rsp+0]", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [2, 0, 145, 0, 1, 6, 0, 2, 16, 8, 0.0038431513841349907, ["mov     rdi, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]; s", "call    _strlen", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 0", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], rax", "mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 1", "jmp     loc_71D6"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 145, 0, 0, 3, 0, 1, 19, 2, 0.008451930583078124, ["mov     [rsp+1C8h+rneedle.in_shift], 0", "mov     [rsp+1C8h+rneedle.next_done], 1", "jmp     loc_68F1"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 15, 1, 0.16672671590704377, ["mov     esi, [rsp+1C8h+rneedle.cur.wc]", "test    esi, esi", "jz      loc_75FC"], ["mov~esi,[rsp+0]", "test~esi,esi", "jz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 12, 13, 0.06534608378870674, ["cmp     [rsp+1C8h+iter_needle_last_ccount.in_shift], 0", "jnz     loc_70F0"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 145, 0, 0, 2, 1, 1, 8, 11, 0.026464200644528518, ["test    rax, rax", "jnz     short loc_6B2F"], ["test~rax,rax", "jnz~FOO"]], [3, 0, 147, 0, 0, 3, 0, 0, 4, 13, 0.008496967513360956, ["mov     [rsp+1C8h+iter_needle.cur.bytes], 1", "mov     [rsp+1C8h+iter_needle.cur.wc_valid], 0", "mov     [rsp+1C8h+iter_needle.next_done], 1"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [2, 0, 158, 0, 3, 13, 0, 4, 3, 14, 0.005374407013751276, ["mov     [rsp+1C8h+iter_needle.in_shift], 1", "call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+1C8h+iter_needle.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+1C8h+iter_needle.cur.ptr]; s", "lea     rdi, [rbx+24h]; pwc", "mov     rcx, rbp; p", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+1C8h+iter_needle.cur.bytes], rax", "jz      loc_66F8"], ["mov~[rsp+0],0", "call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rdi,[rbx+0]", "mov~rcx,rbp", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 159, 0, 1, 4, 1, 2, 2, 15, 0.00078064012490242, ["mov     rdi, rbp; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_75B0"], ["mov~rdi,rbp", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 145, 0, 0, 8, 1, 0, 6, 10, 0.15402129746392043, ["mov     rcx, [rsp+1C8h+iter_haystack.cur.ptr]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_6EF0"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [2, 0, 145, 0, 0, 5, 1, 1, 26, 15, 0.02119738185311956, ["mov     eax, [rsp+1C8h+rhaystack.cur.wc]", "mov     [rsp+1C8h+rhaystack.in_shift], 0", "mov     [rsp+1C8h+rhaystack.next_done], 1", "test    eax, eax", "jnz     loc_698C"], ["mov~eax,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [2, 0, 145, 0, 0, 4, 0, 1, 9, 12, 0.0072184191036650065, ["mov     rax, [rsp+1C8h+iter_haystack.cur.ptr]", "mov     [rsp+1C8h+iter_haystack.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_75DD"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 145, 2, 0, 5, 0, 1, 16, 19, 0.1825196661262235, ["mov     rax, [rsp+1C8h+rneedle.cur.bytes]", "mov     [rsp+1C8h+rneedle.next_done], 0", "add     comparison_count, 1", "add     [rsp+1C8h+rneedle.cur.ptr], rax", "jmp     loc_69E3"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "add~comparison_count,0", "add~[rsp+0],rax", "jmp~FOO"]], [2, 0, 145, 0, 0, 3, 0, 1, 16, 20, 0.0078064012490242, ["mov     [rsp+1C8h+rneedle.cur.bytes], 1", "mov     [rsp+1C8h+rneedle.cur.wc_valid], 0", "jmp     loc_6900"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 0, 1, 5, 0, 2, 17, 20, 0.003993274485077764, ["mov     rdi, [rsp+1C8h+rneedle.cur.ptr]; s", "call    _strlen", "mov     [rsp+1C8h+rneedle.cur.wc_valid], 0", "mov     [rsp+1C8h+rneedle.cur.bytes], rax", "jmp     loc_6900"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 18, 11, 0.009585359995196061, ["mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 1", "jmp     loc_6FBE"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 145, 0, 0, 2, 1, 1, 11, 9, 0.08842500850697571, ["test    al, al", "jz      loc_7170"], ["test~al,al", "jz~FOO"]], [0, 0, 145, 1, 0, 5, 0, 1, 10, 10, 0.17691006625432854, ["mov     rsi, comparison_count", "sub     rsi, [rsp+1C8h+last_ccount]", "movzx   eax, [rsp+1C8h+iter_needle_last_ccount.next_done]", "mov     [rsp+1C8h+count], count_0", "jz      loc_7571"], ["mov~rsi,comparison_count", "sub~rsi,[rsp+0]", "movzx~eax,[rsp+0]", "mov~[rsp+0],count_0", "jz~FOO"]], [0, 0, 145, 0, 0, 3, 0, 0, 9, 8, 0.10286434876598811, ["lea     rdx, [outer_loop_count+outer_loop_count*4]", "cmp     comparison_count, rdx", "jnb     loc_6F20"], ["lea~rdx,<TAG>", "cmp~comparison_count,rdx", "jnb~FOO"]], [0, 0, 145, 0, 1, 6, 1, 2, 23, 14, 0.02152765267519366, ["mov     rsi, [rsp+1C8h+rneedle.cur.ptr]; s2", "mov     rdi, [rsp+1C8h+rhaystack.cur.ptr]; s1", "call    _memcmp", "test    eax, eax", "setnz   al", "jmp     loc_69A4"], ["mov~rsi,[rsp+0]", "mov~rdi,[rsp+0]", "call~FOO", "test~eax,eax", "setnz~al", "jmp~FOO"]], [0, 0, 145, 0, 0, 2, 1, 1, 11, 12, 0.08386126623831541, ["test    al, al", "jz      short loc_6F6D"], ["test~al,al", "jz~FOO"]], [2, 0, 147, 0, 1, 6, 0, 2, 5, 13, 0.004263496066774755, ["mov     rdi, [rsp+1C8h+iter_needle.cur.ptr]; s", "call    _strlen", "mov     [rsp+1C8h+iter_needle.cur.wc_valid], 0", "mov     [rsp+1C8h+iter_needle.cur.bytes], rax", "mov     [rsp+1C8h+iter_needle.next_done], 1", "jmp     loc_670B"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 156, 0, 0, 2, 0, 1, 4, 14, 0.0013811325286735123, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_7525"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 10, 9, 0.009262595328169098, ["mov     [rsp+1C8h+iter_haystack.next_done], 1", "jmp     loc_67DF"], ["mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 145, 1, 1, 6, 1, 2, 9, 10, 0.023148982165375608, ["mov     rdi, [rsp+1C8h+resultp]", "mov     [rsp+1C8h+iter_haystack.cur.wc_valid], 1", "add     rdi, 4; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_7138"], ["mov~rdi,[rsp+0]", "mov~[rsp+0],0", "add~rdi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [3, 0, 145, 0, 0, 3, 0, 0, 7, 9, 0.13934426229508196, ["mov     [rsp+1C8h+iter_haystack.cur.bytes], 1", "mov     [rsp+1C8h+iter_haystack.cur.wc_valid], 0", "mov     [rsp+1C8h+iter_haystack.next_done], 1"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [0, 0, 154, 0, 0, 2, 1, 1, 5, 16, 0.0015012310094277307, ["test    rax, rax", "jnz     short loc_737C"], ["test~rax,rax", "jnz~FOO"]], [2, 0, 145, 0, 0, 3, 0, 1, 10, 9, 0.009262595328169098, ["mov     [rsp+1C8h+iter_haystack.in_shift], 0", "mov     [rsp+1C8h+iter_haystack.next_done], 1", "jmp     loc_67DF"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 145, 0, 0, 4, 0, 1, 15, 8, 0.028230649132288475, ["mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], 1", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 0", "mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 1", "jmp     loc_71D6"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 0, 0, 4, 1, 1, 8, 8, 0.14721071278448328, ["cmp     outer_loop_count, 9", "setnbe  al", "and     al, byte ptr [rsp+1C8h+count]", "jnz     loc_7590"], ["cmp~outer_loop_count,0", "setnbe~al", "and~al,[yte ptr [rsp+0]", "jnz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 18, 9, 0.008887287575812166, ["mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 1", "jmp     loc_71C5"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 1, 0, 1, 0, 0, 9, 7, 0.03972257250945776, ["add     comparison_count, 1"], ["add~comparison_count,0"]], [0, 0, 145, 0, 1, 4, 1, 2, 19, 19, 0.005359394703656999, ["lea     rdi, [rbp+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_75B0"], ["lea~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [3, 0, 145, 0, 0, 5, 0, 0, 23, 16, 0.004023299105266318, ["mov     [rsp+1C8h+rhaystack.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rsp+1C8h+rhaystack.cur.wc_valid], 1", "mov     [rsp+1C8h+rhaystack.next_done], 1", "mov     [rsp+1C8h+rhaystack.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [1, 0, 145, 0, 0, 2, 0, 1, 14, 9, 0.047764166616625636, ["cmp     [rsp+1C8h+iter_needle_last_ccount.next_done], 0", "jz      loc_7170"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 145, 0, 0, 1, 0, 0, 20, 18, 0.004653816129225965, ["mov     [rsp+1C8h+rneedle.in_shift], 1"], ["mov~[rsp+0],0"]], [0, 0, 145, 0, 0, 1, 0, 1, 15, 7, 0.03584939650513422, ["jmp     loc_6D71"], ["jmp~FOO"]], [1, 0, 145, 1, 0, 3, 0, 1, 10, 7, 0.002642166576592806, ["add     comparison_count, 1", "mov     byte ptr [rsp+1C8h+count], al", "jmp     loc_6D71"], ["add~comparison_count,0", "mov~[yte ptr [rsp+0],al", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 12, 8, 0.02915390620308653, ["cmp     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 0", "jz      loc_71D6"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 145, 0, 0, 1, 0, 1, 13, 9, 0.008827238335435056, ["jmp     loc_71C5"], ["jmp~FOO"]], [0, 0, 145, 0, 0, 1, 0, 0, 5, 11, 0.021047258752176785, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 145, 0, 0, 2, 0, 0, 24, 14, 0.01043355551552273, ["cmp     [rsp+1C8h+rneedle.cur.wc], eax", "setnz   al"], ["cmp~[rsp+0],eax", "setnz~al"]], [1, 0, 24, 0, 0, 8, 3, 0, 3, -1, 0.0017714525911247223, ["lea     rbx, [rsp+1C8h+result]", "mov     rbp, [rsp+1C8h+needle_last_ccount]", "xor     r13d, r13d", "xor     edx, edx", "xor     ecx, ecx", "mov     eax, 1", "mov     [rsp+1C8h+resultp], rbx", "nop     dword ptr [try_kmp+00h]"], ["lea~rbx,[rsp+0]", "mov~rbp,[rsp+0]", "xor~r13d,r13d", "xor~edx,edx", "xor~ecx,ecx", "mov~eax,0", "mov~[rsp+0],rbx", "nop~[word ptr [try_kmp+0]"]], [3, 0, 145, 0, 0, 5, 0, 0, 14, 11, 0.007611241217798595, ["mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 1", "mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 1", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [3, 0, 145, 0, 0, 5, 0, 0, 14, 9, 0.018712844532516662, ["mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 1", "mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 1", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [0, 0, 145, 0, 0, 3, 1, 1, 14, 8, 0.05813517084008887, ["mov     r8d, [rsp+1C8h+iter_needle_last_ccount.cur.wc]", "test    r8d, r8d", "jz      loc_6FDD"], ["mov~r8d,[rsp+0]", "test~r8d,r8d", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 3, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5704; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, aMbsinitIterSta; \"mbsinit (&iter->state)\"", "mov     edx, 8Eh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 7, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5704; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, aIterCurPtr0; \"*iter->cur.ptr == '\\\\0'\"", "mov     edx, 0AAh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [2, 0, 145, 0, 0, 4, 0, 1, 21, 19, 0.005809764006485318, ["mov     rax, [rsp+1C8h+rneedle.cur.ptr]", "mov     [rsp+1C8h+rneedle.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_75DD"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [3, 0, 145, 0, 0, 5, 0, 0, 7, 9, 0.14260193358554013, ["mov     [rsp+1C8h+iter_haystack.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rsp+1C8h+iter_haystack.cur.wc_valid], 1", "mov     [rsp+1C8h+iter_haystack.next_done], 1", "mov     [rsp+1C8h+iter_haystack.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [2, 0, 145, 2, 0, 7, 0, 0, 25, 19, 0.02715726896054765, ["mov     rax, [rsp+1C8h+rhaystack.cur.bytes]", "add     [rsp+1C8h+rhaystack.cur.ptr], rax", "mov     rbx, rdx", "mov     rax, [rsp+1C8h+rneedle.cur.bytes]", "add     [rsp+1C8h+rneedle.cur.ptr], rax", "mov     [rsp+1C8h+rhaystack.next_done], 0", "mov     [rsp+1C8h+rneedle.next_done], 0"], ["mov~rax,[rsp+0]", "add~[rsp+0],rax", "mov~rbx,rdx", "mov~rax,[rsp+0]", "add~[rsp+0],rax", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [1, 0, 145, 0, 0, 2, 0, 0, 13, 7, 0.10978502371944995, ["movzx   edx, [rsp+1C8h+iter_haystack.cur.wc_valid]", "mov     byte ptr [rsp+1C8h+count], 1"], ["movzx~edx,[rsp+0]", "mov~[yte ptr [rsp+0],0"]], [0, 0, 0, 0, 1, 1, 0, 1, 16, 0, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [53, 71, 196, 2, 184, 288, 1, 762, 0.0396, 6, 24], "succs": [[16], [0, 111], [9, 148], [17, 2], [26, 163], [113, 4], [25, 29], [179, 6], [6, 103], [15], [18, 159], [10], [10], [122, 30], [13, 30], [83, 22], [167, 15], [15], [131, 21], [35], [19, 7], [50, 38], [56, 32], [177, 27], [174, 23], [35, 28], [34], [67], [33], [34], [129, 111], [177, 69], [126, 31], [109], [33, 35], [81, 42], [35], [50, 103], [178, 37], [41, 177], [164, 39], [80], [51, 62], [51], [91, 43], [124, 134], [45, 165], [45], [45], [45, 46], [161, 68], [56, 150], [51, 172], [51], [62], [140, 54], [82], [56, 181], [109], [58, 173], [128, 58], [58, 3], [58, 52], [88, 58], [58, 118], [58], [72, 48], [66, 47], [176], [144, 77], [130], [177, 70], [98, 117], [63, 95], [73, 60], [138, 87], [75, 110], [145, 79], [178, 102], [101, 78], [44, 53], [80, 40], [89, 139], [82, 84], [112, 82], [177, 11], [85, 175], [92], [128, 99], [130], [89, 171], [108, 55], [90, 95], [92], [92], [109], [95], [117, 103], [97, 178], [115], [133], [132, 100], [101, 103], [], [155, 103], [55, 103], [114, 103], [106, 178], [105, 178], [141, 119], [59, 109], [109], [32], [20, 36], [93, 94], [64, 96], [67], [146, 125], [128, 115], [], [160], [120, 135], [127], [122, 14], [12, 86], [46], [133], [74], [123, 127], [127], [121, 156], [182], [133], [183, 143], [24, 116], [155, 142], [90], [136, 153], [137, 177], [180, 71], [65, 52], [], [104, 178], [5], [143], [143], [46], [169, 124], [147, 151], [168, 148], [57], [49, 134], [90], [152, 157], [61], [154, 158], [160], [114, 107], [61], [182], [162, 149], [176], [83], [177, 166], [62], [1, 124], [113], [83], [83], [170, 182], [176], [139], [57], [74], [46], [176], [1, 182], [], [], [8, 178], [61], [5], [16], []], "fname": "mbsstr", "n_num": 184}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[1, 0, 5, 0, 0, 2, 0, 1, 0, 0, 0.047619047619047616, ["cmp     [rsp+1098h+outsize], 0", "jnz     loc_78C3"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 8, 0, 1, 8, 2, 2, 7, 3, 0.11904761904761904, ["xor     edx, edx; inbytesleft", "xor     esi, esi; inbuf", "mov     r8, r12; outbytesleft", "mov     rcx, rbp; outbuf", "mov     rdi, cd; cd", "call    _iconv", "cmp     res, 0FFFFFFFFFFFFFFFFh", "jz      fail"], ["xor~edx,edx", "xor~esi,esi", "mov~r8,r12", "mov~rcx,rbp", "mov~rdi,cd", "call~FOO", "cmp~res,0", "jz~FOO"]], [1, 0, 4, 0, 0, 5, 0, 1, 8, 2, 0.047619047619047616, ["mov     rax, [rsp+1098h+resultp]", "mov     r15, [rsp+1098h+result]", "mov     ebx, 0FFFFFFFFh", "cmp     [rax], r15", "jz      short loc_7824"], ["mov~rax,[rsp+0]", "mov~r15,[rsp+0]", "mov~ebx,0", "cmp~<TAG>,r15", "jz~FOO"]], [1, 0, 9, 0, 1, 3, 0, 2, 8, 3, 0.011904761904761904, ["call    ___errno_location", "cmp     dword ptr [rax], 16h", "jz      loc_77E0"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 16, 0, 1, 5, 1, 2, 4, 4, 0.0992063492063492, ["mov     rdi, [rsp+1098h+count]; size", "call    _malloc", "test    rax, rax", "mov     [rsp+1098h+result], rax", "jz      loc_78AE"], ["mov~rdi,[rsp+0]", "call~FOO", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 18, 0, 0, 5, 1, 1, 3, 5, 0.16798941798941797, ["mov     count_0, [rsp+1098h+resultp]", "mov     rax, [rax]", "test    rax, rax", "mov     [rsp+1098h+result], rax", "jz      short loc_775C"], ["mov~count_0,[rsp+0]", "mov~rax,<TAG>", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 17, 0, 0, 4, 0, 0, 4, 5, 0.07275132275132275, ["mov     rax, [rsp+1098h+lengthp]", "mov     rcx, [rsp+1098h+count]", "cmp     [rax], rcx", "jnb     short loc_7774"], ["mov~rax,[rsp+0]", "mov~rcx,[rsp+0]", "cmp~<TAG>,rcx", "jnb~FOO"]], [2, 0, 21, 0, 1, 10, 2, 2, 1, 3, 0.17328042328042326, ["xor     edx, edx; inbytesleft", "xor     esi, esi; inbuf", "mov     r8, r12; outbytesleft", "mov     rcx, rbp; outbuf", "mov     rdi, cd; cd", "mov     [rsp+1098h+outptr], r14", "mov     [rsp+1098h+outsize], 1000h", "call    _iconv", "cmp     res, 0FFFFFFFFFFFFFFFFh", "jz      loc_78B9"], ["xor~edx,edx", "xor~esi,esi", "mov~r8,r12", "mov~rcx,rbp", "mov~rdi,cd", "mov~[rsp+0],r14", "mov~[rsp+0],0", "call~FOO", "cmp~res,0", "jz~FOO"]], [1, 0, 28, 1, 1, 30, 7, 2, 0, 4, 0.0, ["push    r15", "push    r14", "mov     r15, src_0", "push    r13", "push    r12", "mov     r13, srclen_0", "push    rbp", "push    rbx", "mov     rbx, cd", "xor     esi, esi; inbuf", "xor     edx, edx; inbytesleft", "sub     rsp, 1068h", "mov     [rsp+1098h+src], src_0", "mov     [rsp+1098h+resultp], resultp_0", "mov     src_0, cd; cd", "mov     [rsp+1098h+lengthp], lengthp_0", "xor     ecx, ecx; outbuf", "xor     r8d, r8d; outbytesleft", "mov     rax, fs:28h", "mov     [rsp+1098h+var_40], rax", "xor     eax, eax", "call    _iconv", "mov     [rsp+1098h+inptr], src_0", "xor     r15d, r15d", "test    srclen_0, srclen_0", "mov     [rsp+1098h+insize], srclen_0", "lea     r14, [rsp+1098h+tmp]", "lea     r12, [rsp+1098h+outsize]", "lea     rbp, [rsp+1098h+outptr]", "jz      short loc_76FB"], ["push~r15", "push~r14", "mov~r15,src_0", "push~r13", "push~r12", "mov~r13,srclen_0", "push~rbp", "push~rbx", "mov~rbx,cd", "xor~esi,esi", "xor~edx,edx", "sub~rsp,0", "mov~[rsp+0],src_0", "mov~[rsp+0],resultp_0", "mov~src_0,cd", "mov~[rsp+0],lengthp_0", "xor~ecx,ecx", "xor~r8d,r8d", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~[rsp+0],src_0", "xor~r15d,r15d", "test~srclen_0,srclen_0", "mov~[rsp+0],srclen_0", "lea~r14,[rsp+0]", "lea~r12,[rsp+0]", "lea~rbp,[rsp+0]", "jz~FOO"]], [0, 0, 22, 0, 0, 2, 0, 1, 4, 4, 0.05291005291005291, ["mov     r13, [rsp+1098h+result]", "jmp     loc_76FB"], ["mov~r13,[rsp+0]", "jmp~FOO"]], [1, 0, 22, 0, 0, 3, 0, 1, 4, 3, 0.06349206349206349, ["cmp     eax, 16h", "mov     r13, [rsp+1098h+result]", "jnz     loc_78B9"], ["cmp~eax,0", "mov~r13,[rsp+0]", "jnz~FOO"]], [0, 0, 3, 0, 0, 7, 1, 0, 9, 2, 0.003968253968253968, ["mov     res, [rsp+1098h+resultp]", "mov     rsi, [rsp+1098h+result]", "xor     ebx, ebx", "mov     rdi, [rsp+1098h+count]", "mov     [rax], rsi", "mov     rax, [rsp+1098h+lengthp]", "mov     [rax], rdi"], ["mov~res,[rsp+0]", "mov~rsi,[rsp+0]", "xor~ebx,ebx", "mov~rdi,[rsp+0]", "mov~<TAG>,rsi", "mov~rax,[rsp+0]", "mov~<TAG>,rdi"]], [0, 0, 3, 0, 2, 7, 0, 3, 9, 2, 0.0, ["call    ___errno_location", "mov     r12d, [rax]", "mov     rbp, rax", "mov     rdi, r15; ptr", "call    _free", "mov     [rbp+0], r12d", "jmp     loc_7824"], ["call~FOO", "mov~r12d,<TAG>", "mov~rbp,rax", "mov~rdi,r15", "call~FOO", "mov~[rbp+0],r12d", "jmp~FOO"]], [1, 0, 27, 2, 0, 5, 0, 1, 3, 5, 0.03042328042328042, ["mov     rax, [rsp+1098h+outptr]", "sub     rax, r14", "add     count_0, rax", "cmp     [rsp+1098h+insize], 0", "jz      loc_7850"], ["mov~rax,[rsp+0]", "sub~rax,r14", "add~count_0,rax", "cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 27, 0, 1, 10, 0, 2, 2, 5, 0.042328042328042326, ["mov     rsi, [rsp+1098h+count]; inbuf", "mov     r8, r12; outbytesleft", "mov     rcx, rbp; outbuf", "mov     rdx, r13; inbytesleft", "mov     rdi, cd; cd", "mov     [rsp+1098h+outptr], r14", "mov     [rsp+1098h+outsize], 1000h", "call    _iconv", "cmp     res, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_76A0"], ["mov~rsi,[rsp+0]", "mov~r8,r12", "mov~rcx,rbp", "mov~rdx,r13", "mov~rdi,cd", "mov~[rsp+0],r14", "mov~[rsp+0],0", "call~FOO", "cmp~res,0", "jnz~FOO"]], [1, 0, 27, 0, 1, 4, 0, 2, 3, 4, 0.03968253968253968, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 7", "jz      short loc_76A0"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [0, 0, 13, 0, 1, 16, 4, 2, 5, 5, 0.15873015873015872, ["xor     r8d, r8d; outbytesleft", "xor     ecx, ecx; outbuf", "xor     edx, edx; inbytesleft", "xor     esi, esi; inbuf", "mov     rdi, cd; cd", "lea     r15, [rsp+1098h+insize]", "call    _iconv", "mov     rax, [rsp+1098h+src]", "mov     [rsp+1098h+insize], r13", "lea     r14, [rsp+1098h+inptr]", "mov     [rsp+1098h+inptr], rax", "mov     rax, [rsp+1098h+result]", "mov     [rsp+1098h+outptr], rax", "mov     rax, [rsp+1098h+count]", "mov     [rsp+1098h+outsize], rax", "jmp     short loc_77DB"], ["xor~r8d,r8d", "xor~ecx,ecx", "xor~edx,edx", "xor~esi,esi", "mov~rdi,cd", "lea~r15,[rsp+0]", "call~FOO", "mov~rax,[rsp+0]", "mov~[rsp+0],r13", "lea~r14,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 4, 0, 1, 2, 0, 1, 5, 3, 0.017195767195767195, ["call    ___errno_location", "mov     dword ptr [rax], 0Ch"], ["call~FOO", "mov~<TAG>,0"]], [0, 0, 20, 2, 0, 5, 0, 1, 2, 3, 0.1693121693121693, ["mov     res, [rsp+1098h+outptr]", "sub     rax, r14", "add     rax, r15", "mov     [rsp+1098h+count], count_0", "jz      loc_7860"], ["mov~res,[rsp+0]", "sub~rax,r14", "add~rax,r15", "mov~[rsp+0],count_0", "jz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 3, 1, 0.06613756613756613, ["mov     rdx, [rsp+1098h+var_40]", "xor     rdx, fs:28h", "mov     eax, ebx", "jnz     loc_78C8"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [1, 0, 3, 0, 0, 4, 1, 1, 3, 2, 0.003968253968253968, ["mov     count_0, [rsp+1098h+lengthp]", "xor     ebx, ebx", "mov     qword ptr [rax], 0", "jmp     short loc_7824"], ["mov~count_0,[rsp+0]", "xor~ebx,ebx", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.047619047619047616, ["mov     ebx, 0FFFFFFFFh", "jmp     loc_7824"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 9, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 1068h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 13, 0, 1, 8, 0, 2, 7, 4, 0.03835978835978836, ["mov     r8, r12; outbytesleft", "mov     rcx, rbp; outbuf", "mov     rdx, r15; inbytesleft", "mov     rsi, r14; inbuf", "mov     rdi, cd; cd", "call    _iconv", "cmp     res, 0FFFFFFFFFFFFFFFFh", "jz      loc_7870"], ["mov~r8,r12", "mov~rcx,rbp", "mov~rdx,r15", "mov~rsi,r14", "mov~rdi,cd", "call~FOO", "cmp~res,0", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 6, 4, 0.17328042328042326, ["test    r13, r13", "jnz     short loc_77B8"], ["test~r13,r13", "jnz~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 8, 5, 0.0013227513227513227, ["mov     r13, [rsp+1098h+insize]"], ["mov~r13,[rsp+0]"]], [0, 0, 27, 0, 0, 6, 0, 1, 1, 6, 0.006613756613756613, ["lea     rax, [rsp+1098h+insize]", "lea     rsi, [rsp+1098h+inptr]", "mov     [rsp+1098h+result], srclen_0", "mov     [rsp+1098h+count], rsi", "mov     srclen_0, rax", "jmp     short loc_76B7"], ["lea~rax,[rsp+0]", "lea~rsi,[rsp+0]", "mov~[rsp+0],srclen_0", "mov~[rsp+0],rsi", "mov~srclen_0,rax", "jmp~FOO"]]], "func_feature": [14, 21, 36, 1, 29, 43, 1, 170, 0.05706, 1, 6], "succs": [[11, 22], [0, 2], [19, 12], [1, 2], [16, 17], [4, 6], [16, 4], [18, 21], [28, 7], [7], [21, 7], [19], [19], [9, 14], [13, 15], [10, 13], [26], [21], [20, 5], [24, 23], [19], [19], [], [], [], [3, 27], [25, 1], [26], [14]], "fname": "mem_cd_iconv", "n_num": 29}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[1, 0, 20, 0, 0, 2, 0, 1, 0, 0, 0.06818181818181818, ["cmp     eax, 7", "jnz     failed"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 20, 0, 1, 5, 0, 2, 3, 4, 0.12987012987012986, ["call    ___errno_location", "mov     r15, rax", "mov     eax, [rax]", "cmp     eax, 16h", "jz      loc_7A66"], ["call~FOO", "mov~r15,rax", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 12, 0, 1, 4, 0, 2, 5, 3, 0.10173160173160173, ["call    ___errno_location", "cmp     dword ptr [rax], 7", "mov     rcx, rax", "jnz     failed"], ["call~FOO", "cmp~<TAG>,0", "mov~rcx,rax", "jnz~FOO"]], [1, 0, 12, 0, 1, 8, 2, 2, 4, 3, 0.20238095238095238, ["mov     r8, [rsp+88h+outbytesleft]; outbytesleft", "mov     rcx, [rsp+88h+outbuf]; outbuf", "xor     edx, edx; inbytesleft", "xor     esi, esi; inbuf", "mov     rdi, cd; cd", "call    _iconv", "cmp     res, 0FFFFFFFFFFFFFFFFh", "jz      loc_7A00"], ["mov~r8,[rsp+0]", "mov~rcx,<TAG>", "xor~edx,edx", "xor~esi,esi", "mov~rdi,cd", "call~FOO", "cmp~res,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.08658008658008658, ["mov     rdi, [rsp+88h+var_40]", "xor     rdi, fs:28h", "mov     rax, rbx", "jnz     short loc_7B0D"], ["mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "mov~rax,rbx", "jnz~FOO"]], [0, 0, 3, 0, 1, 3, 1, 1, 5, 2, 0.06168831168831169, ["mov     rdi, result; ptr", "xor     ebx, ebx", "call    _free"], ["mov~rdi,result", "xor~ebx,ebx", "call~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 6, 3, 0.017316017316017316, ["mov     dword ptr [r15], 0Ch", "jmp     short failed"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 4, 0, 0, 1, 0, 0, 7, 3, 0.017316017316017316, ["mov     dword ptr [rcx], 0Ch"], ["mov~<TAG>,0"]], [0, 0, 20, 1, 0, 5, 0, 0, 5, 4, 0.06493506493506493, ["mov     r14, [rsp+88h+outptr]", "lea     r13, [result_size+result_size+0]", "sub     r14, result", "cmp     result_size, newsize", "jnb     loc_7AF0"], ["mov~r14,[rsp+0]", "lea~r13,[result_size+0]", "sub~r14,result", "cmp~result_size,newsize", "jnb~FOO"]], [0, 0, 12, 1, 0, 5, 0, 0, 6, 4, 0.08225108225108226, ["mov     r15, [rsp+88h+outptr]", "lea     rdx, [result_size+result_size+0]", "sub     r15, result", "cmp     result_size, newsize_0", "jnb     loc_7AB8"], ["mov~r15,[rsp+0]", "lea~rdx,[result_size+0]", "sub~r15,result", "cmp~result_size,newsize_0", "jnb~FOO"]], [2, 1, 22, 2, 2, 24, 2, 3, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, cd", "push    rbp", "push    rbx", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "mov     [rsp+88h+inptr], src", "call    _strlen", "mov     r13, rax", "mov     [rsp+88h+inbytes_remaining], rax", "shl     r13, 4", "cmp     result_size, 10000000h", "cmovnb  r13, result_size", "lea     rbp, [result_size+1]", "mov     rdi, result_size; size", "call    _malloc", "test    rax, rax", "mov     rbx, rax", "jz      loc_7B00"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,cd", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~[rsp+0],src", "call~FOO", "mov~r13,rax", "mov~[rsp+0],rax", "shl~r13,0", "cmp~result_size,0", "cmovnb~r13,result_size", "lea~rbp,[result_size+0]", "mov~rdi,result_size", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 20, 0, 1, 5, 1, 2, 6, 4, 0.0670995670995671, ["mov     rsi, newsize; size", "mov     rdi, result; ptr", "call    _realloc", "test    newresult, newresult", "jz      loc_7AF0"], ["mov~rsi,newsize", "mov~rdi,result", "call~FOO", "test~newresult,newresult", "jz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 6, 2, 0.0, ["mov     rdi, result; ptr", "call    _realloc", "test    smaller_result, smaller_result", "cmovnz  result, smaller_result", "jmp     short loc_7AC8"], ["mov~rdi,result", "call~FOO", "test~smaller_result,smaller_result", "cmovnz~result,smaller_result", "jmp~FOO"]], [1, 0, 4, 1, 0, 8, 0, 0, 5, 2, 0.06601731601731602, ["mov     res, [rsp+88h+outptr]", "lea     rdx, [rax+1]", "mov     [rsp+88h+outptr], rdx", "mov     byte ptr [rax], 0", "mov     rsi, [rsp+88h+outptr]", "sub     rsi, result; size", "cmp     result_size, length", "jbe     short loc_7AC8"], ["mov~res,[rsp+0]", "lea~rdx,[rax+0]", "mov~[rsp+0],rdx", "mov~<TAG>,0", "mov~rsi,[rsp+0]", "sub~rsi,result", "cmp~result_size,length", "jbe~FOO"]], [0, 0, 12, 0, 1, 9, 1, 2, 7, 4, 0.04112554112554113, ["mov     rsi, newsize_0; size", "mov     rdi, result; ptr", "mov     [rsp+88h+inbuf], newsize_0", "mov     [rsp+88h+inbytesleft], rax", "call    _realloc", "test    newresult, newresult", "mov     rdx, [rsp+88h+inbuf]", "mov     rcx, [rsp+88h+inbytesleft]", "jz      short loc_7AB8"], ["mov~rsi,newsize_0", "mov~rdi,result", "mov~[rsp+0],newsize_0", "mov~[rsp+0],rax", "call~FOO", "test~newresult,newresult", "mov~rdx,[rsp+0]", "mov~rcx,[rsp+0]", "jz~FOO"]], [1, 0, 3, 0, 1, 3, 0, 2, 1, 2, 0.006493506493506494, ["call    ___errno_location", "mov     dword ptr [rax], 0Ch", "jmp     short loc_7AC8"], ["call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 20, 1, 0, 8, 0, 0, 7, 6, 0.08225108225108226, ["lea     rsi, [newresult+used]", "mov     rbx, newresult", "mov     rbp, newsize", "mov     [rsp+88h+outptr], rsi", "lea     rsi, [newsize-1]", "mov     rdx, rsi", "sub     rdx, used", "mov     [rsp+88h+outbytes_remaining], rdx"], ["lea~rsi,<TAG>", "mov~rbx,newresult", "mov~rbp,newsize", "mov~[rsp+0],rsi", "lea~rsi,[newsize-1]+0]", "mov~rdx,rsi", "sub~rdx,used", "mov~[rsp+0],rdx"]], [0, 0, 12, 1, 0, 7, 0, 0, 8, 4, 0.025974025974025976, ["lea     rcx, [newresult+used]", "mov     rbp, result_size", "mov     rbx, newresult", "mov     [rsp+88h+outptr], rcx", "lea     rcx, [result_size-1]", "sub     rcx, used", "mov     [rsp+88h+outbytes_remaining], rcx"], ["lea~rcx,<TAG>", "mov~rbp,result_size", "mov~rbx,newresult", "mov~[rsp+0],rcx", "lea~rcx,[result_size-1]+0]", "sub~rcx,used", "mov~[rsp+0],rcx"]], [0, 1, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     result_size", "pop     cd", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~result_size", "pop~cd", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 20, 0, 1, 17, 4, 2, 1, 6, 0.0367965367965368, ["xor     r8d, r8d; outbytesleft", "xor     ecx, ecx; outbuf", "xor     edx, edx; inbytesleft", "xor     esi, esi; inbuf", "mov     rdi, cd; cd", "call    _iconv", "lea     rax, [rsp+88h+outbytes_remaining]", "mov     [rsp+88h+outptr], result", "mov     [rsp+88h+outbytes_remaining], r13", "mov     [rsp+88h+outbytesleft], rax", "lea     rax, [rsp+88h+outptr]", "mov     [rsp+88h+outbuf], rax", "lea     rax, [rsp+88h+inbytes_remaining]", "mov     [rsp+88h+inbytesleft], rax", "lea     rax, [rsp+88h+inptr]", "mov     [rsp+88h+inbuf], rax", "jmp     short loc_79D4"], ["xor~r8d,r8d", "xor~ecx,ecx", "xor~edx,edx", "xor~esi,esi", "mov~rdi,cd", "call~FOO", "lea~rax,[rsp+0]", "mov~[rsp+0],result", "mov~[rsp+0],r13", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~<TAG>,rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 20, 0, 1, 8, 0, 2, 2, 5, 0.18831168831168832, ["mov     r8, [rsp+88h+outbytesleft]; outbytesleft", "mov     rcx, [rsp+88h+outbuf]; outbuf", "mov     rdi, cd; cd", "mov     rdx, [rsp+88h+inbytesleft]; inbytesleft", "mov     rsi, [rsp+88h+inbuf]; inbuf", "call    _iconv", "cmp     res, 0FFFFFFFFFFFFFFFFh", "jz      loc_7970"], ["mov~r8,[rsp+0]", "mov~rcx,<TAG>", "mov~rdi,cd", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "call~FOO", "cmp~res,0", "jz~FOO"]], [0, 0, 12, 0, 0, 1, 0, 1, 3, 4, 0.0670995670995671, ["jmp     short loc_7A66"], ["jmp~FOO"]]], "func_feature": [13, 13, 27, 1, 23, 33, 2, 143, 0.06145, 1, 8], "succs": [[9, 6], [0, 3], [10, 6], [2, 14], [], [19, 4], [5], [6], [6], [12, 7], [8, 15], [16, 20], [17, 7], [5], [13, 5], [8, 18], [5], [21], [3], [], [21], [1, 22], [3]], "fname": "str_cd_iconv", "n_num": 23}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[2, 0, 0, 1, 1, 9, 0, 1, 0, 0, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 0Ch", "add     rsp, 8", "mov     rax, result", "pop     result", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["call~FOO", "mov~<TAG>,0", "add~rsp,0", "mov~rax,result", "pop~result", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [0, 0, 2, 0, 1, 5, 1, 2, 1, -1, 0.044444444444444446, ["mov     rdi, src; s", "call    _strdup", "test    rax, rax", "mov     src, rax", "jz      short loc_7B68"], ["mov~rdi,src", "call~FOO", "test~rax,rax", "mov~src,rax", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 1, 1, 3, 0, 0.011111111111111112, ["xor     ebx, ebx", "jmp     loc_7B57"], ["xor~ebx,ebx", "jmp~FOO"]], [1, 0, 6, 0, 1, 6, 0, 2, 2, 1, 0.11111111111111112, ["mov     rdi, to_codeset; tocode", "mov     rsi, from_codeset; fromcode", "call    _iconv_open", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     to_codeset, rax", "jz      short loc_7C00"], ["mov~rdi,to_codeset", "mov~rsi,from_codeset", "call~FOO", "cmp~rax,0", "mov~to_codeset,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "mov     rax, rbx", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "mov~rax,rbx", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [0, 0, 2, 0, 1, 4, 1, 1, 4, -1, 0.05, ["mov     rdi, cd; cd", "call    _iconv_close", "test    eax, eax", "jns     short loc_7B57"], ["mov~rdi,cd", "call~FOO", "test~eax,eax", "jns~FOO"]], [0, 0, 1, 0, 2, 8, 1, 3, 5, -1, 0.0, ["call    ___errno_location", "mov     r12d, [rax]", "mov     cd, rax", "mov     rdi, result; ptr", "call    _free", "xor     ebx, ebx", "mov     [rbp+0], r12d", "jmp     short loc_7B57"], ["call~FOO", "mov~r12d,<TAG>", "mov~cd,rax", "mov~rdi,result", "call~FOO", "xor~ebx,ebx", "mov~[rbp+0],r12d", "jmp~FOO"]], [0, 0, 1, 0, 2, 7, 0, 3, 4, -1, 0.005555555555555556, ["call    ___errno_location", "mov     r13d, [rax]", "mov     from_codeset, rax", "mov     rdi, cd; cd", "call    _iconv_close", "mov     [r12], r13d", "jmp     loc_7B57"], ["call~FOO", "mov~r13d,<TAG>", "mov~from_codeset,rax", "mov~rdi,cd", "call~FOO", "mov~<TAG>,r13d", "jmp~FOO"]], [0, 0, 9, 0, 1, 7, 1, 2, 1, 2, 0.06666666666666667, ["mov     r12, from_codeset", "mov     from_codeset, to_codeset; s2", "mov     rbp, to_codeset", "mov     src, from_codeset; s1", "call    c_strcasecmp", "test    eax, eax", "jnz     short loc_7B88"], ["mov~r12,from_codeset", "mov~from_codeset,to_codeset", "mov~rbp,to_codeset", "mov~src,from_codeset", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 10, 1, 0, 8, 0, 1, 0, 3, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, src", "sub     rsp, 8", "cmp     byte ptr [src], 0", "jz      short loc_7B47"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,src", "sub~rsp,0", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 4, 0, 1, 6, 1, 2, 3, -1, 0.1, ["mov     rdi, src; src", "mov     rsi, cd; cd", "call    str_cd_iconv", "test    rax, rax", "mov     src, rax", "jz      short loc_7BE0"], ["mov~rdi,src", "mov~rsi,cd", "call~FOO", "test~rax,rax", "mov~src,rax", "jz~FOO"]]], "func_feature": [10, 6, 18, 0, 11, 15, 1, 69, 0.03535, 0, 3], "succs": [[], [0, 4], [4], [2, 10], [], [4, 6], [4], [4], [1, 3], [8, 1], [5, 7]], "fname": "str_iconv", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[2, 0, 0, 0, 1, 7, 0, 1, 0, 0, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 0", "mov     eax, 0FFFFFFFFh", "pop     rbx", "pop     stream", "pop     r12", "retn"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "pop~rbx", "pop~stream", "pop~r12", "retn"]], [0, 0, 2, 0, 0, 2, 1, 1, 1, -1, 0.047619047619047616, ["test    eax, eax", "jnz     short loc_7C68"], ["test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["pop     rbx", "pop     stream", "pop     r12", "retn"], ["pop~rbx", "pop~stream", "pop~r12", "retn"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, 2, 0.07142857142857142, ["test    eax, eax", "jz      short loc_7C3F"], ["test~eax,eax", "jz~FOO"]], [1, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.047619047619047616, ["test    r12, r12", "mov     eax, 0FFFFFFFFh", "jz      short loc_7C78"], ["test~r12,r12", "mov~eax,0", "jz~FOO"]], [0, 1, 7, 0, 2, 12, 2, 3, 0, 3, 0.0, ["push    r12", "push    rbp", "mov     rbp, stream", "push    rbx", "call    ___fpending", "mov     ebx, [stream+0]", "mov     rdi, stream; stream", "mov     r12, rax", "call    _fclose", "and     ebx, 20h", "test    ebx, ebx", "jnz     short loc_7C48"], ["push~r12", "push~rbp", "mov~rbp,stream", "push~rbx", "call~FOO", "mov~ebx,[stream+0]", "mov~rdi,stream", "mov~r12,rax", "call~FOO", "and~ebx,<STR>", "test~ebx,ebx", "jnz~FOO"]], [1, 0, 0, 0, 1, 9, 0, 1, 3, 0, 0.0, ["call    ___errno_location", "cmp     dword ptr [rax], 9", "pop     rbx", "pop     stream", "pop     r12", "setnz   al", "movzx   eax, al", "neg     eax", "retn"], ["call~FOO", "cmp~<TAG>,0", "pop~rbx", "pop~stream", "pop~r12", "setnz~al", "movzx~eax,al", "neg~eax", "retn"]], [1, 0, 0, 0, 0, 5, 0, 0, 2, -1, 0.0, ["pop     rbx", "mov     eax, 0FFFFFFFFh", "pop     stream", "pop     r12", "retn"], ["pop~rbx", "mov~eax,0", "pop~stream", "pop~r12", "retn"]]], "func_feature": [4, 5, 8, 0, 8, 8, 2, 44, 0.02083, 0, 0], "succs": [[], [0, 7], [], [2, 4], [2, 6], [1, 3], [], []], "fname": "close_stream", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 344, 2, 1, 10, 0, 1, 0, 0, 0.0, ["mov     rcx, rdx", "mov     rdi, fbp_0; dest", "mov     [rbp+fbp], r8", "sub     rcx, rsi", "mov     rdx, n_1; n", "mov     qword ptr [rbp+n], n_1", "call    _memcpy", "mov     rcx, qword ptr [rbp+n]", "mov     r8, [rbp+fbp]", "add     fbp_0, rcx"], ["mov~rcx,rdx", "mov~rdi,fbp_0", "mov~[rbp+0],r8", "sub~rcx,rsi", "mov~rdx,n_1", "mov~[word ptr [rbp+0],n_1", "call~FOO", "mov~rcx,[word ptr [rbp+0]", "mov~r8,[rbp+0]", "add~fbp_0,rcx"]], [0, 0, 344, 0, 0, 4, 0, 1, 21, 10, 0.23392104075566825, ["mov     rsi, [dp+18h]; src", "mov     rdx, [dp+20h]", "cmp     rsi, rdx", "jz      short loc_8006"], ["mov~rsi,[dp+0]", "mov~rdx,[dp+0]", "cmp~rsi,rdx", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 12, 29, 0.0024937364809137735, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~memory_size,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 11, 29, 0.018370395729913943, ["cmp     rax, 0Ch", "ja      loc_8802"], ["cmp~rax,0", "ja~FOO"]], [0, 0, 344, 1, 0, 3, 0, 0, 12, 28, 0.01400538429218344, ["add     allocated, allocated", "cmp     allocated, rax", "jnb     loc_7E9D"], ["add~allocated,allocated", "cmp~allocated,rax", "jnb~FOO"]], [1, 0, 3, 0, 1, 4, 1, 2, 3, -1, 7.00269214609172e-05, ["call    ___errno_location", "xor     r15d, r15d", "mov     dword ptr [rax], 16h", "jmp     loc_7E22"], ["call~FOO", "xor~r15d,r15d", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 2, -1, 5.446538335849115e-05, ["mov     rdi, [rbp+d.dir]; ptr", "call    _free", "mov     rdi, [rbp+a.arg]; ptr", "test    rdi, rdi", "jz      short loc_8FFE"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~rdi,[rbp+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    _free"], ["call~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 13, 28, 0.0025754345559515102, ["mov     rbx, memory_size", "jmp     loc_7E9D"], ["mov~rbx,memory_size", "jmp~FOO"]], [0, 0, 344, 0, 0, 4, 0, 1, 22, 9, 0.2345901868940726, ["mov     rsi, [dp+30h]; src", "mov     rdx, [dp+38h]", "cmp     rsi, rdx", "jz      short loc_8043"], ["mov~rsi,[dp+0]", "mov~rdx,[dp+0]", "cmp~rsi,rdx", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 10, 24, 0.0025754345559515102, ["mov     r14, allocated", "jmp     loc_7EEB"], ["mov~r14,allocated", "jmp~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 9, 25, 0.005371324235020722, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "jz      loc_8818"], ["cmp~allocated,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 39, 35, 0.008709274157991108, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "jz      loc_8160"], ["cmp~allocated,0", "jz~FOO"]], [1, 0, 344, 1, 0, 7, 1, 0, 40, 36, 0.01886577135950784, ["lea     rsi, [allocated+allocated]", "lea     edx, [rcx+2]", "test    allocated, allocated", "mov     rax, 0FFFFFFFFFFFFFFFFh", "cmovns  rax, rsi", "add     rdx, length", "jb      loc_8820"], ["lea~rsi,<TAG>", "lea~edx,[rcx+0]", "test~allocated,allocated", "mov~rax,0", "cmovns~rax,rsi", "add~rdx,length", "jb~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 38, 36, 0.035149624188854825, ["test    allocated, allocated", "js      loc_8820"], ["test~allocated,allocated", "js~FOO"]], [0, 0, 11, 0, 0, 1, 0, 1, 40, -1, 0.0002632493528993739, ["jmp     out_of_memory"], ["jmp~FOO"]], [0, 0, 344, 0, 0, 4, 0, 1, 15, 25, 0.0016631393846967834, ["mov     rax, [rdx+10h]; jumptable 000000000000877C cases 3,4", "mov     r12, length", "mov     [rax], length", "jmp     loc_86A4"], ["mov~rax,[rdx+0]", "mov~r12,length", "mov~<TAG>,length", "jmp~FOO"]], [0, 0, 344, 1, 0, 4, 0, 1, 14, 26, 0.013320676615676694, ["lea     rcx, off_B19C", "movsxd  rax, dword ptr [rcx+rax*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [0, 0, 344, 2, 1, 10, 0, 1, 23, 9, 0.0, ["mov     rcx, rdx", "mov     rdi, fbp_0; dest", "mov     [rbp+fbp], r8", "sub     rcx, rsi", "mov     rdx, n_2; n", "mov     qword ptr [rbp+n], n_2", "call    _memcpy", "mov     rcx, qword ptr [rbp+n]", "mov     r8, [rbp+fbp]", "add     fbp_0, rcx"], ["mov~rcx,rdx", "mov~rdi,fbp_0", "mov~[rbp+0],r8", "sub~rcx,rsi", "mov~rdx,n_2", "mov~[word ptr [rbp+0],n_2", "call~FOO", "mov~rcx,[word ptr [rbp+0]", "mov~r8,[rbp+0]", "add~fbp_0,rcx"]], [0, 0, 8, 0, 1, 3, 0, 2, 12, -1, 0.00018673845722911252, ["mov     rdi, result_0; ptr", "call    _free", "jmp     loc_7DE3"], ["mov~rdi,result_0", "call~FOO", "jmp~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 11, -1, 0.002427599943978463, ["test    result_0, result_0", "jnz     loc_8840"], ["test~result_0,result_0", "jnz~FOO"]], [0, 0, 344, 0, 1, 7, 1, 2, 15, 25, 0.014919624655700969, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "mov     qword ptr [rbp+n], cp_0", "mov     qword ptr [rbp+has_width], n_0", "call    _realloc", "test    memory, memory", "jz      loc_8840"], ["mov~rsi,rbx", "mov~rdi,result_0", "mov~[word ptr [rbp+0],cp_0", "mov~[word ptr [rbp+0],n_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [0, 0, 344, 0, 1, 5, 1, 2, 19, 27, 0.014919624655700969, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "call    _realloc", "test    memory, memory", "jz      short loc_8840"], ["mov~rsi,rbx", "mov~rdi,result_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 23, 8, 0.23525933303247692, ["mov     edi, dword ptr [rbp+has_width]", "cmp     edi, 10h", "ja      short loc_807F"], ["mov~edi,[word ptr [rbp+0]", "cmp~edi,0", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 36, 27, 0.019514168780442258, ["test    length, length", "jz      loc_9218"], ["test~length,length", "jz~FOO"]], [0, 0, 344, 0, 1, 11, 1, 2, 35, 28, 0.019564743779275143, ["mov     rdi, rbx; size", "mov     byte ptr [rbp+fbp], dl", "mov     qword ptr [rbp+n], r8", "mov     qword ptr [rbp+has_width], rcx", "call    _malloc", "test    rax, rax", "mov     r9, rax", "mov     rcx, qword ptr [rbp+has_width]", "mov     r8, qword ptr [rbp+n]", "movzx   edx, byte ptr [rbp+fbp]", "jz      out_of_memory"], ["mov~rdi,rbx", "mov~[yte ptr [rbp+0],dl", "mov~[word ptr [rbp+0],r8", "mov~[word ptr [rbp+0],rcx", "call~FOO", "test~rax,rax", "mov~r9,rax", "mov~rcx,[word ptr [rbp+0]", "mov~r8,[word ptr [rbp+0]", "movzx~edx,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 37, 27, 0.0023264499463126935, ["test    dl, dl", "jz      loc_9218"], ["test~dl,dl", "jz~FOO"]], [2, 0, 344, 1, 0, 5, 1, 1, 24, 9, 0.011577784348204976, ["mov     eax, 1", "mov     ecx, edi", "shl     rax, cl", "test    eax, 14180h", "jnz     short loc_8076"], ["mov~eax,0", "mov~ecx,edi", "shl~rax,cl", "test~eax,0", "jnz~FOO"]], [1, 0, 344, 0, 0, 2, 1, 1, 25, 9, 0.0069715690698868675, ["test    ah, 10h", "jnz     loc_8940"], ["test~ah,0", "jnz~FOO"]], [1, 0, 344, 0, 0, 2, 1, 1, 26, 8, 0.0036530710695445137, ["test    ah, 6", "jz      short loc_807F"], ["test~ah,0", "jz~FOO"]], [2, 0, 344, 1, 0, 2, 0, 0, 27, 9, 1.5561538102426044e-05, ["mov     byte ptr [r12], 6Ch ; 'l'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]], [2, 0, 344, 1, 0, 2, 0, 0, 25, 8, 0.005290922954824854, ["mov     byte ptr [r12], 6Ch ; 'l'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]], [3, 0, 344, 0, 1, 10, 0, 2, 34, 30, 0.023770897848876805, ["mov     r9, [rbp+var_388]", "mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     eax, 1", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "mov     r10, [rbp+maxlen]", "jmp     loc_8206"], ["mov~r9,[rbp+0]", "mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "mov~rcx,0", "mov~edx,0", "mov~eax,0", "mov~[rbp+0],maxlen_0", "call~FOO", "mov~r10,[rbp+0]", "jmp~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 33, 31, 0.02577833626408977, ["cmp     eax, 2", "jnz     loc_8850"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 344, 0, 1, 10, 0, 2, 38, 26, 0.0013266211232318202, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "mov     qword ptr [rbp+n], r8", "mov     qword ptr [rbp+has_width], rcx", "call    _memcpy", "mov     rcx, qword ptr [rbp+has_width]", "mov     result_0, rax", "mov     r8, qword ptr [rbp+n]", "jmp     loc_8C00"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "mov~[word ptr [rbp+0],r8", "mov~[word ptr [rbp+0],rcx", "call~FOO", "mov~rcx,[word ptr [rbp+0]", "mov~result_0,rax", "mov~r8,[word ptr [rbp+0]", "jmp~FOO"]], [2, 0, 344, 0, 0, 6, 0, 1, 24, 7, 0.23760134451689205, ["movzx   eax, byte ptr [dp+48h]", "mov     byte ptr [fbp_0+1], 0", "mov     [fbp_0], al", "mov     rax, [dp+28h]", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      loc_87D8"], ["movzx~eax,[yte ptr [dp+0]", "mov~[yte ptr [fbp_0+0],0", "mov~<TAG>,al", "mov~rax,[dp+0]", "cmp~rax,0", "jz~FOO"]], [2, 0, 344, 1, 0, 3, 0, 1, 26, 8, 0.0013188403541806069, ["mov     byte ptr [r12], 4Ch ; 'L'", "add     r12, 1", "jmp     loc_807F"], ["mov~<TAG>,0", "add~r12,0", "jmp~FOO"]], [1, 0, 344, 1, 0, 3, 0, 1, 20, 36, 0.031885591571870965, ["add     rcx, 1", "cmp     r8, digitp", "jz      loc_9278"], ["add~rcx,0", "cmp~r8,digitp", "jz~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 19, 37, 0.042988749007951944, ["mov     rdi, [dp+40h]", "cmp     rdi, 0FFFFFFFFFFFFFFFFh", "jz      loc_9091"], ["mov~rdi,[dp+0]", "cmp~rdi,0", "jz~FOO"]], [1, 0, 344, 1, 0, 4, 0, 1, 34, 31, 0.0011593345886307402, ["sub     rsp, 10h", "mov     r9, [rbp+var_388]", "fstp    [rsp+3D0h+x.value]", "jmp     loc_81D9"], ["sub~rsp,0", "mov~r9,[rbp+0]", "fstp~<TAG>,<TAG>", "jmp~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 33, 31, 0.02692599969914369, ["cmp     eax, 2", "jnz     loc_8890"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 344, 0, 0, 2, 1, 0, 21, 41, 0.024836214811471965, ["xor     eax, eax", "mov     r10, 1999999999999999h"], ["xor~eax,eax", "mov~r10,0"]], [2, 0, 344, 2, 0, 4, 0, 1, 25, 7, 0.002536530710695445, ["shl     rax, 5", "add     rax, r8", "cmp     dword ptr [rax], 5", "jnz     loc_8DD0; jumptable 000000000000819E default case"], ["shl~rax,0", "add~rax,r8", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 30, 41, 0.01606728809075489, ["js      out_of_memory"], ["js~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 29, 42, 0.036211699164345405, ["test    allocated, allocated", "jnz     loc_88A8"], ["test~allocated,allocated", "jnz~FOO"]], [0, 0, 344, 1, 0, 3, 0, 0, 31, 40, 0.01614509578126702, ["add     allocated, allocated", "cmp     allocated, rax", "jnb     loc_8120"], ["add~allocated,allocated", "cmp~allocated,rax", "jnb~FOO"]], [1, 0, 344, 0, 0, 3, 0, 0, 26, 6, 0.0026532422464636404, ["mov     eax, [rax+10h]", "mov     dword ptr [rbp+n], 1", "mov     [rbp+prefixes], eax"], ["mov~eax,[rax+0]", "mov~[word ptr [rbp+0],0", "mov~[rbp+0],eax"]], [0, 0, 344, 0, 0, 1, 0, 0, 32, 42, 0.0001050403821913758, ["nop     word ptr [memory_size+memory_size+00h]"], ["nop~[ord ptr [memory_size+0]"]], [1, 0, 344, 1, 0, 7, 0, 1, 22, 40, 0.025637634023746907, ["movsx   esi, byte ptr [digitp]", "lea     r9, [digitp+1]", "sub     esi, 30h ; '0'", "cmp     rax, r10", "movsxd  rcx, esi", "mov     rsi, rdi", "ja      short loc_90C6"], ["movsx~esi,<TAG>", "lea~r9,[digitp+0]", "sub~esi,0", "cmp~rax,r10", "movsxd~rcx,esi", "mov~rsi,rdi", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 25, 37, 0.027878495510496256, ["cmp     r8, digitp", "jnz     short loc_90AA"], ["cmp~r8,digitp", "jnz~FOO"]], [0, 0, 344, 1, 0, 2, 0, 0, 23, 40, 0.0, ["lea     rsi, [rax+rax*4]", "add     rsi, rsi"], ["lea~rsi,<TAG>", "add~rsi,rsi"]], [1, 0, 344, 0, 0, 2, 0, 1, 31, 41, 0.01490795350212415, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~memory_size,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 30, 41, 0.018144753427428766, ["cmp     rax, 0Ch", "ja      loc_88C0"], ["cmp~rax,0", "ja~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 30, 1, 0.009500319011531099, ["jns     loc_88C0"], ["jns~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 26, 5, 0.23872177526026672, ["mov     rax, [dp+40h]", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      short loc_80F4"], ["mov~rax,[dp+0]", "cmp~rax,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 25, 6, 0.23306515616003484, ["mov     dword ptr [rbp+n], 0", "jmp     loc_80BF"], ["mov~[word ptr [rbp+0],0", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 44, 35, 0.01388089198736403, ["mov     result_0, memory", "jmp     loc_8160"], ["mov~result_0,memory", "jmp~FOO"]], [0, 0, 344, 0, 1, 5, 1, 2, 43, 36, 0.013731760580549117, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "call    _realloc", "test    memory, memory", "jz      out_of_memory"], ["mov~rsi,rbx", "mov~rdi,result_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [0, 0, 344, 1, 0, 3, 0, 0, 23, 39, 0.02630678016215123, ["add     rcx, rsi", "mov     rax, precision", "jnb     short loc_9104"], ["add~rcx,rsi", "mov~rax,precision", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 32, 40, 0.014900172733072937, ["test    rdx, rdx", "jnz     out_of_memory"], ["test~rdx,rdx", "jnz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 24, 40, 0.009679276699709, ["cmp     r8, digitp", "jz      out_of_memory"], ["cmp~r8,digitp", "jz~FOO"]], [2, 0, 344, 2, 0, 4, 0, 1, 27, 6, 0.0023497922534663324, ["shl     rax, 5", "add     r8, rax", "cmp     dword ptr [r8], 5", "jnz     loc_8DD0; jumptable 000000000000819E default case"], ["shl~rax,0", "add~r8,rax", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 25, 39, 0.009500319011531099, ["lea     rcx, [digitp+1]", "cmp     byte ptr [digitp-1], 30h ; '0'", "jz      short loc_90F7"], ["lea~rcx,[digitp+0]", "cmp~[yte ptr [digitp-1]+0],0", "jz~FOO"]], [0, 0, 344, 0, 0, 5, 1, 1, 33, 39, 0.015149157342711753, ["cmp     result_0, [rbp+result]", "mov     rbx, memory_size", "setz    dl", "test    result_0, result_0", "jnz     loc_8133"], ["cmp~result_0,[rbp+0]", "mov~rbx,memory_size", "setz~dl", "test~result_0,result_0", "jnz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 26, 40, 0.00249762686543938, ["cmp     r8, digitp", "jz      out_of_memory"], ["cmp~r8,digitp", "jz~FOO"]], [1, 0, 344, 0, 0, 4, 0, 1, 27, 39, 0.0025754345559515102, ["mov     r9, digitp", "lea     digitp, [r9+1]", "cmp     byte ptr [digitp-1], 30h ; '0'", "jnz     short loc_90E1"], ["mov~r9,digitp", "lea~digitp,[r9+0]", "cmp~[yte ptr [digitp-1]+0],0", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 34, 39, 0.00016469294491734226, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 344, 0, 0, 5, 0, 0, 28, 5, 0.00265324224646364, ["mov     eax, dword ptr [rbp+n]", "mov     edx, [r8+10h]", "mov     [rbp+rax*4+prefixes], edx", "lea     eax, [rax+1]", "mov     dword ptr [rbp+n], eax"], ["mov~eax,[word ptr [rbp+0]", "mov~edx,[r8+0]", "mov~[rbp+0],edx", "lea~eax,[rax+0]", "mov~[word ptr [rbp+0],eax"]], [0, 0, 344, 0, 0, 1, 0, 0, 26, 38, 0.01024727284044755, ["mov     rax, rdi"], ["mov~rax,rdi"]], [1, 0, 344, 1, 0, 4, 1, 0, 27, 4, 0.23969437139166835, ["mov     rax, length", "xor     edx, edx", "add     rax, 2", "jb      loc_9288"], ["mov~rax,length", "xor~edx,edx", "add~rax,0", "jb~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 26, 36, 0.02774622243662564, ["jmp     loc_8A8B"], ["jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 28, 36, 0.13081417967351894, ["cmp     allocated, rax", "jnb     short loc_8152"], ["cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 24, 38, 0.014627845816280481, ["mov     rcx, digitp", "jmp     short loc_90FA"], ["mov~rcx,digitp", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 34, 37, 0.019506388011391044, ["test    length, length", "jz      loc_8D68"], ["test~length,length", "jz~FOO"]], [0, 0, 344, 0, 1, 7, 1, 2, 33, 38, 0.01965681621304783, ["mov     rdi, rbx; size", "mov     byte ptr [rbp+fbp], dl", "call    _malloc", "test    rax, rax", "mov     rcx, rax", "movzx   edx, byte ptr [rbp+fbp]", "jz      out_of_memory"], ["mov~rdi,rbx", "mov~[yte ptr [rbp+0],dl", "call~FOO", "test~rax,rax", "mov~rcx,rax", "movzx~edx,[yte ptr [rbp+0]", "jz~FOO"]], [1, 0, 344, 0, 0, 3, 1, 0, 18, 42, 0.027053733991067676, ["xor     edx, edx", "mov     r10, 1999999999999999h", "mov     r9, rsi"], ["xor~edx,edx", "mov~r10,0", "mov~r9,rsi"]], [1, 0, 344, 0, 0, 3, 0, 1, 17, 39, 0.03629728762390875, ["mov     rsi, [dp+28h]", "cmp     rsi, 0FFFFFFFFFFFFFFFFh", "jz      loc_9109"], ["mov~rsi,[dp+0]", "cmp~rsi,0", "jz~FOO"]], [1, 0, 344, 0, 0, 1, 0, 0, 31, 40, 0.013795303527800687, ["mov     ebx, 0Ch"], ["mov~ebx,0"]], [0, 0, 344, 0, 0, 2, 1, 1, 35, 37, 0.0023264499463126935, ["test    dl, dl", "jz      loc_8D68"], ["test~dl,dl", "jz~FOO"]], [1, 0, 344, 1, 0, 7, 0, 1, 19, 41, 0.02777734551283049, ["movsx   ecx, byte ptr [digitp]", "lea     r8, [digitp+1]", "sub     ecx, 30h ; '0'", "cmp     width_0, r10", "movsxd  rax, ecx", "mov     rcx, r9", "ja      short loc_9134"], ["movsx~ecx,<TAG>", "lea~r8,[digitp+0]", "sub~ecx,0", "cmp~width_0,r10", "movsxd~rax,ecx", "mov~rcx,r9", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 22, 38, 0.01438275159116727, ["cmp     rdi, digitp", "jnz     short loc_9118"], ["cmp~rdi,digitp", "jnz~FOO"]], [0, 0, 344, 0, 0, 4, 1, 1, 32, 39, 0.03050450506528065, ["cmp     result_0, [rbp+result]", "setz    dl", "test    result_0, result_0", "jz      loc_88F0"], ["cmp~result_0,[rbp+0]", "setz~dl", "test~result_0,result_0", "jz~FOO"]], [0, 0, 344, 1, 0, 2, 0, 0, 20, 41, 0.0, ["lea     rcx, [width_0+width_0*4]", "add     rcx, rcx"], ["lea~rcx,<TAG>", "add~rcx,rcx"]], [0, 0, 344, 0, 1, 6, 0, 2, 36, 36, 0.0013266211232318204, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "call    _memcpy", "mov     result_0, rax", "jmp     loc_8152"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "call~FOO", "mov~result_0,rax", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 33, 38, 0.027246956422506134, ["test    dl, dl", "jnz     loc_88F0"], ["test~dl,dl", "jnz~FOO"]], [0, 0, 344, 1, 0, 3, 0, 0, 20, 40, 0.028446491651234806, ["add     rax, rcx", "mov     width_0, rax", "jnb     short loc_9166"], ["add~rax,rcx", "mov~width_0,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 21, 39, 0.017837413049905854, ["cmp     rdi, digitp", "jz      loc_9210"], ["cmp~rdi,digitp", "jz~FOO"]], [0, 0, 344, 0, 1, 5, 1, 2, 34, 37, 0.027335138471753215, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "call    _realloc", "test    memory, memory", "jz      out_of_memory"], ["mov~rsi,rbx", "mov~rdi,result_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 22, 40, 0.009702619006862638, ["lea     rax, [digitp+1]", "cmp     byte ptr [digitp-1], 30h ; '0'", "jnz     short loc_916B"], ["lea~rax,[digitp+0]", "cmp~[yte ptr [digitp-1]+0],0", "jnz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 24, 41, 6.224615240970417e-05, ["mov     r8, digitp", "jmp     short loc_9145"], ["mov~r8,digitp", "jmp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 35, 36, 0.027512799365089245, ["mov     result_0, memory"], ["mov~result_0,memory"]], [0, 0, 344, 0, 0, 2, 0, 1, 21, 39, 0.008609420955167209, ["mov     rax, digitp", "jmp     short loc_9152"], ["mov~rax,digitp", "jmp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 23, 39, 0.0027699537822318356, ["mov     rdx, r9"], ["mov~rdx,r9"]], [0, 0, 344, 0, 0, 4, 0, 1, 15, 25, 0.0016631393846967834, ["mov     rax, [rdx+10h]; jumptable 000000000000877C case 2", "mov     r12, length", "mov     [rax], r14d", "jmp     loc_86A4"], ["mov~rax,[rdx+0]", "mov~r12,length", "mov~<TAG>,r14d", "jmp~FOO"]], [1, 0, 344, 0, 0, 3, 0, 0, 29, 35, 0.24093151367081123, ["mov     byte ptr [result_0+length], 0", "mov     [rbp+fbp], fbp_0", "xchg    ax, ax"], ["mov~<TAG>,0", "mov~[rbp+0],fbp_0", "xchg~ax,ax"]], [0, 0, 344, 0, 0, 2, 0, 1, 35, 36, 0.016514682311199638, ["mov     result_0, rcx", "jmp     loc_8152"], ["mov~result_0,rcx", "jmp~FOO"]], [2, 0, 344, 0, 0, 3, 0, 1, 28, 3, 0.10688053407198767, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "jz      loc_8152"], ["cmp~allocated,0", "mov~edx,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 23, 37, 0.031068610821493595, ["mov     dword ptr [rbp+has_width], 1", "jmp     loc_8A51"], ["mov~[word ptr [rbp+0],0", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 22, 38, 0.01407152082911875, ["mov     rdx, rsi", "jmp     loc_9157"], ["mov~rdx,rsi", "jmp~FOO"]], [0, 0, 344, 0, 0, 4, 0, 1, 15, 25, 0.0016631393846967834, ["mov     rax, [rdx+10h]; jumptable 000000000000877C case 1", "mov     r12, length", "mov     [rax], r14w", "jmp     loc_86A4"], ["mov~rax,[rdx+0]", "mov~r12,length", "mov~<TAG>,r14w", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 23, 39, 0.004933007578469056, ["cmp     rdi, digitp", "jz      loc_9210"], ["cmp~rdi,digitp", "jz~FOO"]], [0, 0, 344, 0, 0, 4, 0, 1, 15, 25, 0.0016631393846967834, ["mov     rax, [rdx+10h]; jumptable 000000000000877C case 0", "mov     r12, length", "mov     [rax], r14b", "jmp     loc_86A4"], ["mov~rax,[rdx+0]", "mov~r12,length", "mov~<TAG>,r14b", "jmp~FOO"]], [1, 0, 344, 0, 0, 3, 1, 1, 26, 35, 0.003649180685018907, ["test    byte ptr [rbp+flags], 8", "mov     rdi, rcx", "jz      loc_8E0F"], ["test~[yte ptr [rbp+0],0", "mov~rdi,rcx", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 1, 1, 25, 36, 0.0069715690698868675, ["test    byte ptr [rbp+flags], 4", "jz      loc_9179"], ["test~[yte ptr [rbp+0],0", "jz~FOO"]], [4, 0, 344, 1, 0, 9, 0, 1, 30, 34, 0.3117209504987473, ["mov     eax, dword ptr [rbp+has_width]", "mov     r12, allocated", "mov     r10d, 7FFFFFFFh", "sub     r12, length", "mov     [rbp+retcount], 0FFFFFFFFh", "cmp     maxlen_0, 7FFFFFFFh", "cmovbe  r10, maxlen_0", "cmp     eax, 11h; switch 18 cases", "ja      loc_8DD0; jumptable 000000000000819E default case"], ["mov~eax,[word ptr [rbp+0]", "mov~r12,allocated", "mov~r10d,0", "sub~r12,length", "mov~[rbp+0],0", "cmp~maxlen_0,0", "cmovbe~r10,maxlen_0", "cmp~eax,0", "ja~FOO"]], [0, 0, 344, 0, 0, 4, 0, 0, 41, 35, 0.015540789384956141, ["cmp     rax, rdx", "cmovb   rax, rdx", "cmp     allocated, rax", "jnb     loc_8160"], ["cmp~rax,rdx", "cmovb~rax,rdx", "cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 40, 35, 0.02471172250665256, ["cmp     allocated, rdx", "jnb     loc_8160"], ["cmp~allocated,rdx", "jnb~FOO"]], [0, 0, 344, 0, 1, 6, 0, 2, 46, 35, 0.0013266211232318202, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "call    _memcpy", "mov     result_0, rax", "jmp     loc_8160"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "call~FOO", "mov~result_0,rax", "jmp~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 37, 35, 0.009609249778248083, ["mov     byte ptr [rdi+1], 0", "jmp     loc_8160"], ["mov~[yte ptr [rdi+0],0", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 45, 35, 0.015332005415415259, ["mov     result_0, rcx", "jmp     loc_8160"], ["mov~result_0,rcx", "jmp~FOO"]], [0, 1, 344, 0, 0, 3, 0, 1, 27, 35, 0.0, ["lea     rdi, [rcx+1]", "mov     byte ptr [rcx], 20h ; ' '", "jmp     loc_8E0F"], ["lea~rdi,[rcx+0]", "mov~<TAG>,<STR>", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 29, 28, 0.007228334448576897, ["test    pad, pad", "jz      loc_8BC0"], ["test~pad,pad", "jz~FOO"]], [1, 0, 344, 2, 0, 6, 1, 1, 28, 29, 0.025349745568852024, ["sub     rdx, r8", "lea     rsi, [p_0+pad]", "mov     r8, end", "sub     r8, rcx", "test    byte ptr [rbp+flags], 2", "jnz     loc_9195"], ["sub~rdx,r8", "lea~rsi,<TAG>", "mov~r8,end", "sub~r8,rcx", "test~[yte ptr [rbp+0],0", "jnz~FOO"]], [1, 0, 344, 1, 1, 10, 1, 2, 15, 20, 0.2130218950841101, ["fld     tbyte ptr [rdx+10h]", "sub     rsp, 10h", "fld     st", "fstp    [rsp+3D0h+x.value]; x", "fstp    [rbp+has_width]", "call    rpl_isnanl", "test    eax, eax", "pop     r11", "pop     r12", "jnz     short loc_89F8"], ["fld~<TAG>,[byte ptr [rdx+0]", "sub~rsp,0", "fld~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "fstp~<TAG>,[rbp+0]", "call~FOO", "test~eax,eax", "pop~r11", "pop~r12", "jnz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 14, 17, 0.3232481598481194, ["cmp     dword ptr [rbp+has_width], 0Ch", "jz      loc_8980"], ["cmp~[word ptr [rbp+0],0", "jz~FOO"]], [0, 0, 344, 1, 0, 4, 0, 1, 31, 33, 0.31162758127013274, ["lea     rsi, off_B154", "movsxd  rax, dword ptr [rsi+rax*4]", "add     rax, rsi", "jmp     rax; switch jump"], ["lea~rsi,<TAG>", "movsxd~rax,<TAG>", "add~rax,rsi", "jmp~rax"]], [1, 1, 344, 1, 0, 4, 0, 1, 30, 29, 0.0023264499463126935, ["add     p_0, 1", "mov     byte ptr [p_0-1], 20h ; ' '", "cmp     end, p_0", "jnz     short loc_919E"], ["add~p_0,0", "mov~[yte ptr [p_0-1]+0],<STR>", "cmp~end,p_0", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 31, 28, 0.0026610230155148535, ["jmp     loc_8BC0"], ["jmp~FOO"]], [0, 0, 344, 0, 0, 4, 1, 1, 34, 29, 0.03612611070478206, ["cmp     result_0, [rbp+result]", "setz    dl", "test    result_0, result_0", "jz      loc_9011"], ["cmp~result_0,[rbp+0]", "setz~dl", "test~result_0,result_0", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 35, 28, 0.014643407354382907, ["test    dl, dl", "jnz     loc_9011"], ["test~dl,dl", "jnz~FOO"]], [1, 0, 344, 0, 0, 9, 1, 1, 16, 19, 0.010317299761908467, ["fld     [rbp+has_width]", "mov     edx, 0", "fld     st", "fadd    st, st(1)", "fucomip st, st(1)", "setnp   al", "cmovnz  eax, edx", "test    al, al", "jz      short loc_89D1"], ["fld~<TAG>,[rbp+0]", "mov~edx,0", "fld~<TAG>,<TAG>", "fadd~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "setnp~al", "cmovnz~eax,edx", "test~al,al", "jz~FOO"]], [0, 0, 23, 0, 1, 5, 1, 2, 16, -1, 0.01058184590964971, ["mov     rdi, rbx; size", "call    _malloc", "test    rax, rax", "mov     rcx, rax", "jz      out_of_memory"], ["mov~rdi,rbx", "call~FOO", "test~rax,rax", "mov~rcx,rax", "jz~FOO"]], [0, 0, 27, 0, 0, 4, 1, 1, 15, -1, 0.02050621683447192, ["cmp     result_0, [rbp+result]", "setz    r13b", "test    result_0, result_0", "jz      loc_91B0"], ["cmp~result_0,[rbp+0]", "setz~r13b", "test~result_0,result_0", "jz~FOO"]], [0, 0, 26, 0, 0, 2, 1, 1, 16, -1, 0.005290922954824855, ["test    r13b, r13b", "jnz     loc_91B0"], ["test~r13b,r13b", "jnz~FOO"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.03118836982514024, ["mov     rax, [dp+50h]; jumptable 000000000000819E cases 7-10,15-17", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "mov     r9, [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jz      loc_8658"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "mov~r9,[rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 14, 0, 0, 2, 1, 1, 17, -1, 0.007858576741725153, ["test    length, length", "jz      loc_9270"], ["test~length,length", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 33, 32, 0.006275968316708449, ["cmp     eax, 2", "jz      loc_8640"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 344, 0, 0, 8, 1, 1, 17, 19, 0.003921507601811363, ["fldz", "mov     edx, 1", "fucomip st, st(1)", "fstp    st", "setp    al", "cmovnz  eax, edx", "test    al, al", "jnz     short loc_89F8"], ["fldz~<TAG>", "mov~edx,0", "fucomip~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "setp~al", "cmovnz~eax,edx", "test~al,al", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 18, 18, 0.0010504038219137579, ["jmp     short loc_89D3"], ["jmp~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 18, -1, 0.002482065327336954, ["test    r13b, r13b", "jz      loc_9270"], ["test~r13b,r13b", "jz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 17, 18, 0.004396134513935357, ["fstp    st"], ["fstp~<TAG>,<TAG>"]], [1, 0, 344, 1, 0, 2, 0, 0, 34, 31, 0.0037970152969919544, ["sub     rsp, 8", "push    [rbp+var_388]"], ["sub~rsp,0", "push~[rbp+0]"]], [0, 0, 11, 0, 1, 6, 0, 2, 19, -1, 4.279422978167162e-05, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "call    _memcpy", "mov     result_0, rax", "jmp     loc_8EBA"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "call~FOO", "mov~result_0,rax", "jmp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 32, 31, 0.013927576601671309, ["js      out_of_memory"], ["js~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 31, 32, 0.034297629977747, ["test    allocated, allocated", "jnz     loc_91EC"], ["test~allocated,allocated", "jnz~FOO"]], [0, 0, 344, 1, 0, 3, 0, 0, 33, 30, 0.01400538429218344, ["add     allocated, allocated", "cmp     allocated, rax", "jnb     loc_8F40"], ["add~allocated,allocated", "cmp~allocated,rax", "jnb~FOO"]], [2, 0, 344, 0, 1, 10, 1, 1, 35, 30, 0.007959726739390922, ["mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "xor     eax, eax", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "pop     rsi", "pop     rdi", "mov     r10, [rbp+maxlen]"], ["mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "mov~rcx,0", "mov~edx,0", "xor~eax,eax", "mov~[rbp+0],maxlen_0", "call~FOO", "pop~rsi", "pop~rdi", "mov~r10,[rbp+0]"]], [1, 0, 344, 0, 0, 2, 0, 1, 33, 31, 0.00249762686543938, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~memory_size,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 32, 31, 0.018370395729913943, ["cmp     rax, 0Ch", "ja      loc_91FE"], ["cmp~rax,0", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 34, 30, 0.0025754345559515102, ["mov     rbx, memory_size", "jmp     loc_8F40"], ["mov~rbx,memory_size", "jmp~FOO"]], [0, 0, 344, 0, 0, 6, 0, 1, 16, 38, 0.20391061452513967, ["mov     eax, [dp+10h]", "mov     rdi, [dp+20h]", "mov     [rbp+flags], eax", "mov     flags_0, [dp+18h]", "cmp     rax, rdi", "jz      loc_8F93"], ["mov~eax,[dp+0]", "mov~rdi,[dp+0]", "mov~[rbp+0],eax", "mov~flags_0,[dp+0]", "cmp~rax,rdi", "jz~FOO"]], [0, 0, 344, 0, 0, 3, 1, 1, 35, 29, 0.1274049060342462, ["movsxd  rcx, [rbp+retcount]", "test    ecx, ecx", "js      loc_834D"], ["movsxd~rcx,[rbp+0]", "test~ecx,ecx", "js~FOO"]], [5, 0, 344, 3, 1, 17, 1, 2, 34, 30, 0.0237670074643512, ["mov     eax, [rbp+prefixes+4]", "sub     rsp, 8", "push    [rbp+var_388]", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "sub     rsp, 18h", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "fstp    [rsp+3E8h+var_3E0]", "push    rax", "xor     eax, eax", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "add     rsp, 30h", "mov     r10, [rbp+maxlen]", "jmp     loc_8206"], ["mov~eax,[rbp+0]", "sub~rsp,0", "push~[rbp+0]", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "sub~rsp,0", "mov~rcx,0", "mov~edx,0", "fstp~<TAG>,[rsp+0]", "push~rax", "xor~eax,eax", "mov~[rbp+0],maxlen_0", "call~FOO", "add~rsp,0", "mov~r10,[rbp+0]", "jmp~FOO"]], [3, 0, 344, 0, 1, 12, 0, 2, 34, 30, 0.026447482402494026, ["mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     eax, 1", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "pop     r8", "mov     r10, [rbp+maxlen]", "pop     r9", "jmp     loc_8206"], ["mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "mov~rcx,0", "mov~edx,0", "mov~eax,0", "mov~[rbp+0],maxlen_0", "call~FOO", "pop~r8", "mov~r10,[rbp+0]", "pop~r9", "jmp~FOO"]], [2, 1, 344, 1, 1, 11, 1, 2, 34, 30, 0.03445000337166654, ["mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "xor     eax, eax", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "add     rsp, 20h", "mov     r10, [rbp+maxlen]", "jmp     loc_8206"], ["mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "mov~rcx,0", "mov~edx,0", "xor~eax,eax", "mov~[rbp+0],maxlen_0", "call~FOO", "add~rsp,<STR>", "mov~r10,[rbp+0]", "jmp~FOO"]], [0, 0, 344, 0, 0, 3, 0, 0, 36, 28, 0.18268597334827186, ["movsxd  rdx, ecx", "cmp     rdx, r10", "jnb     short loc_822B"], ["movsxd~rdx,ecx", "cmp~rdx,r10", "jnb~FOO"]], [2, 0, 344, 0, 1, 13, 2, 1, 35, 29, 0.1935907211735482, ["mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen_0", "xor     eax, eax", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "pop     rdx", "pop     rcx", "movsxd  rcx, [rbp+retcount]", "mov     r10, [rbp+maxlen]", "test    ecx, ecx", "jns     loc_8215"], ["mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen_0", "xor~eax,eax", "mov~[rbp+0],maxlen_0", "call~FOO", "pop~rdx", "pop~rcx", "movsxd~rcx,[rbp+0]", "mov~r10,[rbp+0]", "test~ecx,ecx", "jns~FOO"]], [1, 0, 344, 1, 0, 3, 0, 1, 37, 28, 0.0002878884548948818, ["add     rdx, result_0", "cmp     byte ptr [rdx+length], 0", "jnz     loc_8DD0; jumptable 000000000000819E default case"], ["add~rdx,result_0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 33, 0, 0, 3, 0, 1, 11, -1, 0.018378176498965157, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "mov     eax, 1", "jz      loc_8EBA"], ["cmp~allocated,0", "mov~eax,0", "jz~FOO"]], [1, 0, 41, 1, 0, 4, 1, 0, 10, -1, 0.07104620220662611, ["mov     r12, length", "xor     eax, eax", "add     r12, 1", "jb      loc_9220"], ["mov~r12,length", "xor~eax,eax", "add~r12,0", "jb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 37, 27, 0.18305945026273004, ["cmp     ecx, eax", "jl      loc_8620"], ["cmp~ecx,eax", "jl~FOO"]], [2, 0, 344, 2, 0, 5, 0, 1, 18, 38, 0.0072438959866793235, ["mov     rax, [rbp+a.arg]", "shl     rsi, 5", "add     rax, rsi", "cmp     dword ptr [rax], 5", "jnz     loc_8DD0; jumptable 000000000000819E default case"], ["mov~rax,[rbp+0]", "shl~rsi,0", "add~rax,rsi", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 31, 0, 0, 1, 0, 1, 13, -1, 0.0037736729898383155, ["js      out_of_memory"], ["js~FOO"]], [0, 0, 32, 0, 0, 2, 1, 1, 12, -1, 0.006675899845940773, ["test    allocated, allocated", "jz      out_of_memory"], ["test~allocated,allocated", "jz~FOO"]], [0, 0, 344, 0, 0, 3, 0, 0, 38, 26, 0.09111150879486232, ["lea     eax, [rcx+1]", "cmp     rax, r10", "jb      loc_8635"], ["lea~eax,[rcx+0]", "cmp~rax,r10", "jb~FOO"]], [1, 0, 30, 0, 0, 2, 0, 1, 14, -1, 0.005520455641835639, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~memory_size,0", "jz~FOO"]], [1, 0, 32, 0, 0, 2, 0, 1, 13, -1, 0.0166119419243398, ["cmp     r12, 0Ch", "ja      loc_923E"], ["cmp~r12,0", "ja~FOO"]], [0, 0, 31, 0, 0, 1, 0, 1, 15, -1, 8.947884408894975e-05, ["jmp     short loc_923E"], ["jmp~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 39, 37, 0.03830602283396359, ["cmp     r12, 7FFFFFFEh", "ja      overflow"], ["cmp~r12,0", "ja~FOO"]], [0, 0, 344, 0, 0, 5, 0, 0, 38, 26, 0.18250312527556833, ["movsxd  rcx, eax", "mov     [rbp+retcount], eax", "lea     eax, [rcx+1]", "cmp     rax, r10", "jnb     loc_823F"], ["movsxd~rcx,eax", "mov~[rbp+0],eax", "lea~eax,[rcx+0]", "cmp~rax,r10", "jnb~FOO"]], [1, 0, 344, 0, 0, 5, 1, 1, 19, 37, 0.007508442134420566, ["movsxd  rdx, dword ptr [rax+10h]", "mov     dword ptr [rbp+has_width], 1", "test    edx, edx", "mov     rax, rdx", "js      loc_8DBD"], ["movsxd~rdx,[word ptr [rax+0]", "mov~[word ptr [rbp+0],0", "test~edx,edx", "mov~rax,rdx", "js~FOO"]], [0, 0, 28, 0, 0, 2, 0, 1, 16, -1, 0.0007313922908140241, ["mov     rbx, memory_size", "jmp     loc_8E86"], ["mov~rbx,memory_size", "jmp~FOO"]], [0, 0, 29, 0, 0, 2, 1, 1, 15, -1, 0.0030267191609218654, ["test    rax, rax", "jnz     out_of_memory"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 33, 0, 0, 1, 0, 1, 13, -1, 0.01555375733337483, ["js      out_of_memory"], ["js~FOO"]], [0, 0, 36, 0, 0, 2, 1, 1, 12, -1, 0.03661629915500848, ["test    allocated, allocated", "jnz     loc_9259"], ["test~allocated,allocated", "jnz~FOO"]], [0, 0, 344, 0, 0, 4, 0, 1, 18, 36, 0.21019747591851978, ["mov     rcx, [dp+30h]", "mov     r8, [dp+38h]", "cmp     rcx, r8", "jz      short loc_8AA8"], ["mov~rcx,[dp+0]", "mov~r8,[dp+0]", "cmp~rcx,r8", "jz~FOO"]], [1, 0, 344, 0, 0, 4, 1, 1, 20, 37, 0.0, ["neg     eax", "or      [rbp+flags], 2", "movsxd  arg, eax", "jmp     loc_8A51"], ["neg~eax", "or~[rbp+0],0", "movsxd~arg,eax", "jmp~FOO"]], [1, 0, 344, 0, 0, 3, 1, 1, 17, 37, 0.16561366925506918, ["xor     edx, edx", "mov     dword ptr [rbp+has_width], 0", "jmp     loc_8A51"], ["xor~edx,edx", "mov~[word ptr [rbp+0],0", "jmp~FOO"]], [0, 0, 32, 1, 0, 3, 0, 0, 14, -1, 0.013203965079908498, ["add     allocated, allocated", "cmp     allocated, r12", "jnb     loc_8E86"], ["add~allocated,allocated", "cmp~allocated,r12", "jnb~FOO"]], [0, 0, 11, 0, 0, 2, 0, 1, 18, -1, 0.0005641057562129441, ["mov     result_0, rcx", "jmp     loc_8EBA"], ["mov~result_0,rcx", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 42, 40, 0.0100203337431205, ["test    allocated, allocated", "js      out_of_memory"], ["test~allocated,allocated", "js~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 21, 35, 0.005049719114237251, ["mov     r12d, 0Ch", "jmp     loc_8AAE"], ["mov~r12d,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, -1, 0.005524346026361245, ["mov     rbx, [rbp+var_38]", "xor     rbx, fs:28h", "mov     rax, r15", "jnz     loc_9283"], ["mov~rbx,[rbp+0]", "xor~rbx,<TAG>", "mov~rax,r15", "jnz~FOO"]], [0, 0, 344, 0, 0, 3, 0, 0, 43, 39, 0.010006068999859946, ["cmp     rsi, rax", "mov     allocated, rsi", "jnb     short loc_8298"], ["cmp~rsi,rax", "mov~allocated,rsi", "jnb~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 44, 40, 0.002412038405876037, ["cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 344, 0, 0, 3, 1, 1, 22, 35, 0.03741512477759968, ["test    rax, rax", "mov     r12d, 0Ch", "jz      short loc_8AAE"], ["test~rax,rax", "mov~r12d,0", "jz~FOO"]], [0, 0, 344, 0, 0, 3, 1, 1, 21, 36, 0.009290238247148348, ["movsxd  rax, dword ptr [rax+10h]", "test    eax, eax", "js      short loc_8AA8"], ["movsxd~rax,[word ptr [rax+0]", "test~eax,eax", "js~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 45, 39, 0.0025754345559515102, ["mov     rbx, rax"], ["mov~rbx,rax"]], [0, 0, 344, 0, 0, 2, 1, 1, 29, 2, 0.012246930486609296, ["test    allocated, allocated", "jz      out_of_memory"], ["test~allocated,allocated", "jz~FOO"]], [1, 0, 344, 1, 0, 3, 0, 0, 23, 36, 0.0025546858384816085, ["add     rax, 0Ch", "mov     r12, rax", "jb      out_of_memory"], ["add~rax,0", "mov~r12,rax", "jb~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 24, 35, 0.0025754345559515102, ["jmp     short loc_8AAE"], ["jmp~FOO"]], [0, 0, 344, 0, 0, 4, 1, 1, 44, 38, 0.010838611288339739, ["cmp     result_0, [rbp+result]", "setz    r12b", "test    result_0, result_0", "jz      loc_83B0"], ["cmp~result_0,[rbp+0]", "setz~r12b", "test~result_0,result_0", "jz~FOO"]], [0, 1, 344, 0, 0, 1, 0, 0, 19, 35, 0.16783378202434862, ["mov     r12d, 12h"], ["mov~r12d,<STR>"]], [0, 0, 344, 0, 0, 2, 1, 1, 42, 37, 0.019044729047685737, ["test    r12b, r12b", "jnz     loc_83B0"], ["test~r12b,r12b", "jnz~FOO"]], [0, 0, 344, 0, 0, 7, 1, 1, 41, 38, 0.020043261075924745, ["cmp     allocated, rdx", "mov     rbx, rdx", "cmovnb  rbx, allocated", "cmp     result_0, [rbp+result]", "setz    r12b", "test    result_0, result_0", "jnz     loc_82AC"], ["cmp~allocated,rdx", "mov~rbx,rdx", "cmovnb~rbx,allocated", "cmp~result_0,[rbp+0]", "setz~r12b", "test~result_0,result_0", "jnz~FOO"]], [1, 0, 344, 1, 0, 4, 0, 0, 20, 34, 0.2163261283411919, ["cmp     width_0, r12", "cmovnb  r12, width_0", "add     r12, 1", "jb      out_of_memory"], ["cmp~width_0,r12", "cmovnb~r12,width_0", "add~r12,0", "jb~FOO"]], [0, 1, 344, 0, 0, 2, 0, 1, 21, 33, 0.21363657583915593, ["cmp     r12, 2BCh", "ja      loc_8D78"], ["cmp~r12,<STR>", "ja~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 22, 32, 0.20689842984080548, ["lea     rcx, [rbp+tmpbuf]"], ["lea~rcx,[rbp+0]"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.043046715737383286, ["mov     rax, [dp+50h]; jumptable 000000000000819E cases 5,6,13,14", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "mov     r9d, [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jz      loc_8520"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "mov~r9d,[rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 33, 31, 0.09337026605042917, ["cmp     eax, 2", "jz      loc_8568"], ["cmp~eax,0", "jz~FOO"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.023930987172105272, ["mov     rax, [dp+50h]; jumptable 000000000000819E case 4", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movzx   r9d, word ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jnz     loc_82FE"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movzx~r9d,[ord ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jnz~FOO"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.023930987172105272, ["mov     rax, [dp+50h]; jumptable 000000000000819E case 2", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movzx   r9d, byte ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jnz     loc_82FE"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movzx~r9d,[yte ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jnz~FOO"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.023930987172105272, ["mov     rax, [dp+50h]; jumptable 000000000000819E case 1", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movsx   r9d, byte ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jnz     loc_82FE"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movsx~r9d,[yte ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jnz~FOO"]], [1, 0, 344, 1, 0, 2, 0, 0, 34, 30, 0.11343421100408194, ["sub     rsp, 8", "push    [rbp+var_388]"], ["sub~rsp,0", "push~[rbp+0]"]], [1, 0, 344, 0, 0, 2, 0, 1, 33, 31, 0.023677334101035813, ["cmp     eax, 2", "jnz     loc_8307"], ["cmp~eax,0", "jnz~FOO"]], [2, 0, 344, 3, 1, 18, 1, 2, 23, 31, 0.21237609125285942, ["mov     rax, [dp+50h]", "sub     rsp, 10h", "mov     [rbp+maxlen], rcx", "mov     [rbp+fbp], rdx", "shl     rax, 5", "add     rax, [rbp+a.arg]", "fld     tbyte ptr [rax+10h]", "fld     st", "fstp    [rsp+3D0h+x.value]; x", "fstp    [rbp+n]", "call    rpl_isnanl", "test    eax, eax", "pop     r9", "mov     rdx, [rbp+fbp]", "mov     rcx, [rbp+maxlen]", "pop     r10", "fld     [rbp+n]", "jz      loc_8DD8"], ["mov~rax,[dp+0]", "sub~rsp,0", "mov~[rbp+0],rcx", "mov~[rbp+0],rdx", "shl~rax,0", "add~rax,[rbp+0]", "fld~<TAG>,[byte ptr [rax+0]", "fld~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "fstp~<TAG>,[rbp+0]", "call~FOO", "test~eax,eax", "pop~r9", "mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "pop~r10", "fld~<TAG>,[rbp+0]", "jz~FOO"]], [0, 0, 344, 0, 1, 6, 1, 2, 23, 32, 0.004901884502264204, ["mov     rdi, r12; size", "call    _malloc", "test    rax, rax", "mov     rcx, rax", "mov     rdx, qword ptr [rbp+n]", "jnz     loc_8AD3"], ["mov~rdi,r12", "call~FOO", "test~rax,rax", "mov~rcx,rax", "mov~rdx,[word ptr [rbp+0]", "jnz~FOO"]], [1, 0, 344, 0, 0, 6, 0, 1, 24, 30, 0.18053329391077014, ["fstp    st", "movzx   edi, byte ptr [dp+48h]", "lea     rax, [rcx+3]", "lea     esi, [rdi-41h]", "cmp     sil, 19h", "ja      loc_8FD0"], ["fstp~<TAG>,<TAG>", "movzx~edi,[yte ptr [dp+0]", "lea~rax,[rcx+0]", "lea~esi,[rdi-41h]+0]", "cmp~sil,0", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 34, 30, 0.07715313331569693, ["mov     r9d, [rbp+prefixes]", "jmp     loc_8311"], ["mov~r9d,[rbp+0]", "jmp~FOO"]], [2, 0, 344, 0, 0, 3, 0, 0, 25, 29, 0.0892668181323042, ["mov     r8d, 414Eh", "mov     byte ptr [rcx+2], 4Eh ; 'N'", "mov     [rcx], r8w"], ["mov~r8d,0", "mov~[yte ptr [rcx+0],0", "mov~<TAG>,r8w"]], [1, 0, 344, 0, 0, 3, 0, 1, 36, 28, 0.1389787999979251, ["mov     rdi, [rbp+fbp]", "cmp     byte ptr [rdi+1], 0", "jnz     loc_8668"], ["mov~rdi,[rbp+0]", "cmp~[yte ptr [rdi+0],0", "jnz~FOO"]], [0, 0, 344, 1, 0, 5, 1, 1, 26, 28, 0.21555453541027994, ["mov     r10d, dword ptr [rbp+has_width]", "mov     r8, p_0", "sub     r8, rcx", "test    r10d, r10d", "jz      short loc_8BC0"], ["mov~r10d,[word ptr [rbp+0]", "mov~r8,p_0", "sub~r8,rcx", "test~r10d,r10d", "jz~FOO"]], [0, 0, 344, 0, 0, 3, 0, 1, 31, 29, 0.03134871850733727, ["mov     word ptr [rbp+retcount], r8w", "fldcw   word ptr [rbp+retcount]", "jmp     loc_8B4D"], ["mov~[ord ptr [rbp+0],r8w", "fldcw~[ord ptr [rbp+0]", "jmp~FOO"]], [2, 0, 344, 0, 0, 4, 0, 1, 25, 29, 0.0892668181323042, ["mov     edi, 616Eh", "mov     byte ptr [rcx+2], 6Eh ; 'n'", "mov     [rcx], di", "jmp     loc_8B4D"], ["mov~edi,0", "mov~[yte ptr [rcx+0],0", "mov~<TAG>,di", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 1, 0, 37, 27, 0.127369892573515, ["test    eax, eax", "jns     loc_8620"], ["test~eax,eax", "jns~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 27, 28, 0.027590607055601374, ["cmp     rdx, r8", "jbe     short loc_8BC0"], ["cmp~rdx,r8", "jbe~FOO"]], [1, 0, 344, 1, 0, 4, 0, 0, 39, 36, 0.028100247428455828, ["lea     retcount_0, [allocated+allocated]", "mov     rdx, rax", "add     rdx, 0Ch", "jb      out_of_memory"], ["lea~retcount_0,<TAG>", "mov~rdx,rax", "add~rdx,0", "jb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 29, 29, 0.01612175347411338, ["cmp     rcx, p_0", "jnb     short loc_8BA3"], ["cmp~rcx,p_0", "jnb~FOO"]], [0, 0, 344, 2, 0, 3, 0, 0, 30, 31, 0.004645119123574174, ["mov     rdi, rcx", "sub     rdi, p_0", "add     rdi, q"], ["mov~rdi,rcx", "sub~rdi,p_0", "add~rdi,q"]], [2, 0, 344, 2, 0, 6, 0, 1, 31, 30, 0.004979692192776334, ["sub     p_0, 1", "movzx   r9d, byte ptr [p_0]", "sub     q, 1", "cmp     rdi, q", "mov     [q], r9b", "jnz     short loc_8B8C"], ["sub~p_0,0", "movzx~r9d,<TAG>", "sub~q,0", "cmp~rdi,q", "mov~<TAG>,r9b", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 32, 29, 0.005314265261978494, ["mov     p_0, rcx"], ["mov~p_0,rcx"]], [0, 0, 344, 0, 0, 2, 1, 1, 30, 28, 0.01746004575092202, ["test    pad, pad", "jz      short loc_8BC0"], ["test~pad,pad", "jz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 42, 38, 0.005565843461301048, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 344, 1, 0, 1, 0, 0, 31, 30, 0.004645119123574174, ["add     pad, p_0"], ["add~pad,p_0"]], [1, 1, 344, 1, 0, 4, 0, 1, 32, 29, 0.004979692192776334, ["add     p_0, 1", "mov     byte ptr [p_0-1], 20h ; ' '", "cmp     p_0, rdx", "jnz     short loc_8BAB"], ["add~p_0,0", "mov~[yte ptr [p_0-1]+0],<STR>", "cmp~p_0,rdx", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 33, 28, 0.005314265261978494, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 344, 0, 1, 5, 1, 2, 43, 37, 0.018488404060524006, ["mov     rdi, rbx; size", "call    _malloc", "test    rax, rax", "mov     rcx, rax", "jz      out_of_memory"], ["mov~rdi,rbx", "call~FOO", "test~rax,rax", "mov~rcx,rax", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 37, 26, 0.016522463080250852, ["mov     result_0, r9", "jmp     loc_8C00"], ["mov~result_0,r9", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 27, 27, 0.2202385583791102, ["cmp     r12, r8", "jbe     loc_8DD0; jumptable 000000000000819E default case"], ["cmp~r12,r8", "jbe~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 44, 36, 0.018323711115606666, ["test    length, length", "jz      loc_86D0"], ["test~length,length", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 45, 36, 0.0023264499463126935, ["test    r12b, r12b", "jz      loc_86D0"], ["test~r12b,r12b", "jz~FOO"]], [0, 0, 344, 2, 0, 9, 1, 1, 28, 26, 0.22030469491604548, ["mov     rdx, allocated", "mov     rax, length", "xor     esi, esi", "sub     rdx, length", "add     rax, r8", "setb    sil", "cmp     rdx, r8", "mov     r12, rax", "ja      short loc_8C00"], ["mov~rdx,allocated", "mov~rax,length", "xor~esi,esi", "sub~rdx,length", "add~rax,r8", "setb~sil", "cmp~rdx,r8", "mov~r12,rax", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 29, 27, 0.046178864318949284, ["test    rsi, rsi", "jz      loc_8F1F"], ["test~rsi,rsi", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 30, 27, 0.005322046031029707, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "jnz     out_of_memory"], ["cmp~allocated,0", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 31, 26, 0.0025754345559515102, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.052272503280891135, ["mov     rax, [dp+50h]; jumptable 000000000000819E case 12", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "fld     tbyte ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jz      loc_8CB0"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "fld~<TAG>,[byte ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 344, 0, 1, 9, 0, 2, 29, 25, 0.22322248331025038, ["lea     rdi, [result_0+length]; dest", "mov     rsi, rcx; src", "mov     rdx, r8; n", "mov     qword ptr [rbp+has_width], rcx", "call    _memcpy", "mov     rcx, qword ptr [rbp+has_width]", "lea     rax, [rbp+tmpbuf]", "cmp     rcx, rax", "jz      loc_86A4"], ["lea~rdi,<TAG>", "mov~rsi,rcx", "mov~rdx,r8", "mov~[word ptr [rbp+0],rcx", "call~FOO", "mov~rcx,[word ptr [rbp+0]", "lea~rax,[rbp+0]", "cmp~rcx,rax", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 30, 26, 0.03885716064175783, ["cmp     allocated, rax", "jnb     loc_8C00"], ["cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 4, 0, 1, 37, 26, 0.015102472728404476, ["mov     result_0, memory", "mov     rcx, qword ptr [rbp+has_width]", "mov     r8, qword ptr [rbp+n]", "jmp     loc_8C00"], ["mov~result_0,memory", "mov~rcx,[word ptr [rbp+0]", "mov~r8,[word ptr [rbp+0]", "jmp~FOO"]], [0, 0, 344, 0, 1, 3, 0, 2, 30, 25, 0.0, ["mov     rdi, rcx; ptr", "call    _free", "jmp     loc_86A4"], ["mov~rdi,rcx", "call~FOO", "jmp~FOO"]], [0, 0, 344, 0, 1, 7, 1, 2, 18, 28, 0.01954529185664711, ["mov     rdi, rbx; size", "mov     byte ptr [rbp+has_width], dl", "call    _malloc", "test    rax, rax", "mov     rcx, rax", "movzx   edx, byte ptr [rbp+has_width]", "jz      out_of_memory"], ["mov~rdi,rbx", "mov~[yte ptr [rbp+0],dl", "call~FOO", "test~rax,rax", "mov~rcx,rax", "movzx~edx,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 344, 0, 0, 4, 1, 1, 17, 29, 0.03613000108930767, ["cmp     result_0, [rbp+result]", "setz    dl", "test    result_0, result_0", "jz      loc_8C40"], ["cmp~result_0,[rbp+0]", "setz~dl", "test~result_0,result_0", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 18, 28, 0.014670640046062153, ["test    dl, dl", "jnz     loc_8C40"], ["test~dl,dl", "jnz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 19, 27, 0.019514168780442258, ["test    length, length", "jz      loc_8D70"], ["test~length,length", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 20, 27, 0.0023264499463126935, ["test    dl, dl", "jz      loc_8D70"], ["test~dl,dl", "jz~FOO"]], [0, 0, 344, 0, 1, 6, 0, 2, 21, 26, 0.0013266211232318202, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "call    _memcpy", "mov     result_0, rax", "jmp     loc_869F"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "call~FOO", "mov~result_0,rax", "jmp~FOO"]], [0, 0, 344, 0, 0, 5, 0, 0, 26, 34, 0.031850578111140504, ["fldz", "fxch    st(1)", "fucomi  st, st(1)", "fstp    st(1)", "jbe     short loc_8DCE"], ["fldz~<TAG>", "fxch~<TAG>,<TAG>", "fucomi~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "jbe~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 26, 35, 0.0013227307387062136, ["lea     rdi, [rcx+1]", "mov     byte ptr [rcx], 2Bh ; '+'", "jmp     loc_8E0F"], ["lea~rdi,[rcx+0]", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 344, 0, 0, 3, 0, 0, 25, 35, 0.02087191297987893, ["fchs", "lea     rdi, [rcx+1]", "mov     byte ptr [rcx], 2Dh ; '-'"], ["fchs~<TAG>", "lea~rdi,[rcx+0]", "mov~<TAG>,0"]], [0, 0, 344, 0, 0, 2, 0, 1, 16, 24, 0.016522463080250852, ["mov     result_0, r9", "jmp     loc_7EEB"], ["mov~result_0,r9", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 15, 25, 0.019514168780442258, ["test    length, length", "jz      loc_8C90"], ["test~length,length", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 16, 25, 0.0023264499463126935, ["test    dl, dl", "jz      loc_8C90"], ["test~dl,dl", "jz~FOO"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.05121431868992617, ["mov     rax, [dp+50h]; jumptable 000000000000819E case 11", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movsd   xmm0, qword ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jz      loc_8CA0"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movsd~xmm0,[word ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 344, 1, 0, 3, 0, 1, 33, 31, 0.023436324779674625, ["sub     rsp, 8", "push    [rbp+var_388]", "jmp     loc_84B5"], ["sub~rsp,0", "push~[rbp+0]", "jmp~FOO"]], [0, 0, 344, 0, 0, 3, 0, 0, 34, 31, 7.780769051213022e-06, ["mov     eax, [rbp+prefixes+4]", "push    [rbp+var_388]", "push    rax"], ["mov~eax,[rbp+0]", "push~[rbp+0]", "push~rax"]], [2, 0, 344, 2, 0, 5, 0, 1, 33, 31, 0.023346845935585673, ["sub     rsp, 8", "push    [rbp+var_388]", "sub     rsp, 10h", "fstp    [rsp+3E0h+var_3E0]", "jmp     loc_857B"], ["sub~rsp,0", "push~[rbp+0]", "sub~rsp,0", "fstp~<TAG>,<TAG>", "jmp~FOO"]], [2, 0, 344, 0, 0, 6, 1, 1, 15, 16, 0.22990616392524238, ["mov     eax, [dp+10h]", "mov     rdi, [rbp+buf]", "test    al, 1", "mov     byte ptr [rdi], 25h ; '%'", "lea     r12, [rdi+1]", "jz      short loc_7F88"], ["mov~eax,[dp+0]", "mov~rdi,[rbp+0]", "test~al,0", "mov~<TAG>,0", "lea~r12,[rdi+0]", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 14, 17, 0.10951821478034889, ["cmp     al, 41h ; 'A'", "jnz     short loc_7F63"], ["cmp~al,0", "jnz~FOO"]], [1, 0, 344, 1, 0, 6, 0, 1, 18, 17, 0.008449915189617341, ["mov     rax, [dp+50h]", "mov     r8, [rbp+a.arg]", "shl     rax, 5", "mov     eax, [r8+rax]", "mov     dword ptr [rbp+has_width], eax", "jmp     loc_7F63"], ["mov~rax,[dp+0]", "mov~r8,[rbp+0]", "shl~rax,0", "mov~eax,<TAG>", "mov~[word ptr [rbp+0],eax", "jmp~FOO"]], [0, 0, 10, 0, 0, 2, 0, 1, 40, -1, 0.017432813059242776, ["cmp     result_0, [rbp+result]", "jz      short loc_8CE2"], ["cmp~result_0,[rbp+0]", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 41, -1, 0.0023497922534663324, ["test    result_0, result_0", "jnz     loc_8DB0"], ["test~result_0,result_0", "jnz~FOO"]], [1, 0, 359, 1, 1, 22, 2, 2, 0, 31, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, format", "push    rbx", "lea     rbx, [rbp+a]", "mov     r13, args", "sub     rsp, 398h", "mov     [rbp+lengthp], lengthp_0", "lea     lengthp_0, [rbp+d]; d", "mov     [rbp+result], resultbuf_0", "mov     format, rbx; a", "mov     resultbuf_0, format; format", "mov     rax, fs:28h", "mov     [rbp+var_38], rax", "xor     eax, eax", "call    printf_parse", "test    eax, eax", "js      loc_8D30"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,format", "push~rbx", "lea~rbx,[rbp+0]", "mov~r13,args", "sub~rsp,0", "mov~[rbp+0],lengthp_0", "lea~lengthp_0,[rbp+0]", "mov~[rbp+0],resultbuf_0", "mov~format,rbx", "mov~resultbuf_0,format", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 41, -1, 0.01057017475607289, ["mov     rax, [rbp+buf_malloced]", "test    rax, rax", "jz      short loc_8CF6"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 8, 0, 1, 3, 0, 2, 42, -1, 0.0, ["mov     rdi, result_0; ptr", "call    _free", "jmp     loc_8CE2"], ["mov~rdi,result_0", "call~FOO", "jmp~FOO"]], [0, 0, 6, 0, 1, 2, 0, 1, 42, -1, 0.0, ["mov     rdi, rax; ptr", "call    _free"], ["mov~rdi,rax", "call~FOO"]], [0, 0, 357, 0, 1, 5, 1, 2, 1, 30, 0.00275439224412941, ["mov     rsi, rbx; a", "mov     rdi, args; args", "call    printf_fetchargs", "test    eax, eax", "js      loc_8FE1"], ["mov~rsi,rbx", "mov~rdi,args", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 42, -1, 0.005917274863447503, ["mov     rdi, [rbp+d.dir]; ptr", "call    _free", "mov     rdi, [rbp+a.arg]; ptr", "test    rdi, rdi", "jz      short loc_8D13"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~rdi,[rbp+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 43, -1, 0.0, ["call    _free"], ["call~FOO"]], [3, 0, 353, 2, 0, 7, 0, 0, 2, 29, 0.005446538335849115, ["mov     rax, [rbp+d.max_width_length]", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "add     rax, 7", "cmp     rax, 6", "cmovbe  rax, rdx", "add     rax, [rbp+d.max_precision_length]", "jb      out_of_memory_1"], ["mov~rax,[rbp+0]", "mov~rdx,0", "add~rax,0", "cmp~rax,0", "cmovbe~rax,rdx", "add~rax,[rbp+0]", "jb~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 33, 32, 1.5561538102426044e-05, ["nop"], ["nop"]], [1, 0, 3, 0, 1, 4, 1, 2, 43, -1, 0.0012021288184124118, ["call    ___errno_location", "xor     r15d, r15d", "mov     dword ptr [rax], 4Bh ; 'K'", "jmp     loc_7E22"], ["call~FOO", "xor~r15d,r15d", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 33, 31, 0.051237012599658564, ["push    [rbp+var_388]", "push    r9"], ["push~[rbp+0]", "push~r9"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.0460998895130793, ["mov     rax, [dp+50h]; jumptable 000000000000819E case 3", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movsx   r9d, word ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jz      short loc_8520"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movsx~r9d,[ord ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 33, 32, 1.5561538102426044e-05, ["jmp     loc_8520"], ["jmp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 33, 32, 1.5561538102426044e-05, ["jmp     loc_8520"], ["jmp~FOO"]], [1, 0, 352, 1, 0, 3, 0, 0, 3, 28, 0.008076438275159116, ["mov     rdi, rax", "add     rdi, 6; size", "jb      out_of_memory_1"], ["mov~rdi,rax", "add~rdi,0", "jb~FOO"]], [0, 0, 344, 0, 0, 3, 0, 1, 33, 31, 0.02291274386226993, ["push    [rbp+var_388]", "push    arg", "jmp     loc_8528"], ["push~[rbp+0]", "push~arg", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, -1, 2.3342307153639065e-05, ["xor     r15d, r15d", "jmp     loc_7E22"], ["xor~r15d,r15d", "jmp~FOO"]], [1, 0, 351, 0, 0, 2, 0, 0, 4, 27, 0.01073746129067397, ["cmp     rdi, 0F9Fh", "jbe     loc_7E50"], ["cmp~rdi,0", "jbe~FOO"]], [1, 0, 349, 0, 0, 2, 0, 1, 5, 28, 0.00012449230481940835, ["cmp     buf_memsize, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory_1"], ["cmp~buf_memsize,0", "jz~FOO"]], [0, 0, 344, 1, 0, 3, 0, 0, 16, 30, 0.01400538429218344, ["add     allocated, allocated", "cmp     allocated, rax", "jnb     loc_87A1"], ["add~allocated,allocated", "cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 15, 31, 0.013927576601671309, ["js      out_of_memory"], ["js~FOO"]], [0, 0, 348, 0, 1, 4, 1, 2, 6, 27, 0.0026999268607709186, ["call    _malloc", "test    rax, rax", "mov     [rbp+buf], rax", "jz      out_of_memory_1"], ["call~FOO", "test~rax,rax", "mov~[rbp+0],rax", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 16, 31, 0.0024937364809137735, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~memory_size,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 15, 31, 0.018370395729913943, ["cmp     rax, 0Ch", "ja      loc_8D52"], ["cmp~rax,0", "ja~FOO"]], [0, 0, 347, 0, 0, 1, 0, 0, 7, 26, 0.005306484492927281, ["mov     [rbp+buf_malloced], buf_0"], ["mov~[rbp+0],buf_0"]], [0, 0, 344, 0, 0, 2, 0, 1, 17, 30, 0.0025754345559515102, ["mov     rbx, memory_size", "jmp     loc_87A1"], ["mov~rbx,memory_size", "jmp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 34, 33, 6.224615240970417e-05, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 346, 0, 0, 3, 1, 1, 6, 25, 0.023902522525326403, ["xor     ebx, ebx", "cmp     [rbp+result], 0", "jz      short loc_7D78"], ["xor~ebx,ebx", "cmp~[rbp+0],0", "jz~FOO"]], [4, 0, 347, 2, 0, 8, 2, 1, 5, 26, 0.013266211232318203, ["add     rax, 24h", "mov     [rbp+buf_malloced], 0", "and     rax, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rax", "lea     rax, [rsp+3C0h+flags+3]", "and     rax, 0FFFFFFFFFFFFFFF0h", "mov     [rbp+buf], rax", "jmp     loc_7D62"], ["add~rax,0", "mov~[rbp+0],0", "and~rax,0", "sub~rsp,rax", "lea~rax,[rsp+0]", "and~rax,0", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 344, 1, 0, 3, 0, 0, 34, 32, 0.004617108354989792, ["sub     rsp, 8", "push    [rbp+var_388]", "push    r9"], ["sub~rsp,0", "push~[rbp+0]", "push~r9"]], [0, 0, 344, 0, 0, 2, 0, 1, 20, 26, 0.016522463080250852, ["mov     result_0, rcx", "jmp     loc_869F"], ["mov~result_0,rcx", "jmp~FOO"]], [0, 0, 345, 0, 0, 2, 0, 0, 7, 25, 0.0, ["mov     rax, [rbp+lengthp]", "mov     rbx, [rax]"], ["mov~rax,[rbp+0]", "mov~rbx,<TAG>"]], [0, 0, 344, 0, 0, 2, 0, 0, 35, 31, 0.008099780582312756, ["mov     eax, [rbp+prefixes+4]", "push    rax"], ["mov~eax,[rbp+0]", "push~rax"]], [1, 0, 344, 1, 0, 4, 0, 1, 34, 32, 0.0004792953735547249, ["sub     rsp, 8", "push    [rbp+var_388]", "push    arg", "jmp     loc_8574"], ["sub~rsp,0", "push~[rbp+0]", "push~arg", "jmp~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 22, 33, 0.00473848835218873, ["cmp     r12, 0FFFFFFFFFFFFFFFFh", "mov     qword ptr [rbp+n], width_0", "jz      out_of_memory"], ["cmp~r12,0", "mov~[word ptr [rbp+0],width_0", "jz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 1, 24, -1, 8.558845956334324e-05, ["jmp     out_of_memory"], ["jmp~FOO"]], [1, 0, 344, 0, 0, 11, 1, 1, 7, 24, 0.029115637789639128, ["mov     args, [rbp+d.dir]", "mov     r8, cp_0", "lea     rax, [rbp+retcount]", "xor     r10d, r10d", "mov     r15, [rbp+result]", "mov     [rbp+i], 0", "mov     [rbp+var_388], rax", "mov     cp_0, r10", "mov     rcx, [dp+0]", "cmp     rcx, cp_0", "jz      loc_86C1"], ["mov~args,[rbp+0]", "mov~r8,cp_0", "lea~rax,[rbp+0]", "xor~r10d,r10d", "mov~r15,[rbp+0]", "mov~[rbp+0],0", "mov~[rbp+0],rax", "mov~cp_0,r10", "mov~rcx,[dp+0]", "cmp~rcx,cp_0", "jz~FOO"]], [0, 0, 344, 2, 0, 5, 0, 0, 8, 25, 0.048406757857279936, ["sub     rcx, cp_0", "mov     rax, length", "add     rax, n_0", "mov     r14, rax", "jnb     loc_7E80"], ["sub~rcx,cp_0", "mov~rax,length", "add~rax,n_0", "mov~r14,rax", "jnb~FOO"]], [1, 1, 344, 2, 0, 6, 0, 1, 15, 24, 0.539132081148234, ["mov     r8, [dp+8]", "add     dp, 58h", "mov     rcx, [dp+0]", "add     [rbp+i], 1", "cmp     rcx, cp_0", "jnz     loc_7DB5"], ["mov~r8,[dp+0]", "add~dp,<STR>", "mov~rcx,[dp+0]", "add~[rbp+0],0", "cmp~rcx,cp_0", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 27, -1, 7.586249824932697e-05, ["fstp    st"], ["fstp~<TAG>,<TAG>"]], [0, 0, 0, 0, 1, 1, 0, 1, 12, -1, 0.0, ["call    _abort; jumptable 000000000000819E default case"], ["call~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 11, 20, 0.44815284542724204, ["cmp     rdx, 0FFFFFFFFFFFFFFFFh", "jz      loc_8DD0; jumptable 000000000000819E default case"], ["cmp~rdx,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 11, 28, 0.05127137766296821, ["cmp     rdx, 0FFFFFFFFFFFFFFFFh", "jnz     loc_8DD0; jumptable 000000000000819E default case"], ["cmp~rdx,0", "jnz~FOO"]], [1, 1, 344, 1, 0, 4, 0, 1, 13, 27, 0.013001665084576959, ["mov     eax, edi", "sub     eax, 12h", "cmp     eax, 4; switch 5 cases", "ja      loc_8DD0; jumptable 000000000000819E default case"], ["mov~eax,edi", "sub~eax,<STR>", "cmp~eax,0", "ja~FOO"]], [2, 0, 344, 2, 0, 5, 0, 1, 20, 37, 0.009103499789919235, ["mov     rax, [rbp+a.arg]", "shl     rdi, 5", "add     rax, rdi", "cmp     dword ptr [rax], 5", "jnz     loc_8DD0; jumptable 000000000000819E default case"], ["mov~rax,[rbp+0]", "shl~rdi,0", "add~rax,rdi", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 344, 0, 0, 5, 0, 0, 27, 33, 0.02976727719767822, ["fld     st", "fadd    st, st(1)", "fucomip st, st(1)", "fstp    st", "jp      short loc_8DD0; jumptable 000000000000819E default case"], ["fld~<TAG>,<TAG>", "fadd~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "jp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 28, 32, 0.030018206999579838, ["jnz     short loc_8DD0; jumptable 000000000000819E default case"], ["jnz~FOO"]], [0, 0, 10, 0, 0, 2, 0, 1, 10, -1, 0.02313611677378192, ["cmp     result_0, [rbp+result]", "jz      short loc_7DE3"], ["cmp~result_0,[rbp+0]", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 13, 27, 0.0025832153250027233, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "jnz     out_of_memory"], ["cmp~allocated,0", "jnz~FOO"]], [0, 0, 344, 0, 1, 11, 1, 2, 14, 26, 0.01954529185664711, ["mov     rdi, rbx; size", "mov     [rbp+fbp], cp_0", "mov     byte ptr [rbp+n], dl", "mov     qword ptr [rbp+has_width], n_0", "call    _malloc", "test    rax, rax", "mov     r9, rax", "mov     rcx, qword ptr [rbp+has_width]", "movzx   edx, byte ptr [rbp+n]", "mov     r8, [rbp+fbp]", "jz      out_of_memory"], ["mov~rdi,rbx", "mov~[rbp+0],cp_0", "mov~[yte ptr [rbp+0],dl", "mov~[word ptr [rbp+0],n_0", "call~FOO", "test~rax,rax", "mov~r9,rax", "mov~rcx,[word ptr [rbp+0]", "movzx~edx,[yte ptr [rbp+0]", "mov~r8,[rbp+0]", "jz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 11, 29, 0.013927576601671309, ["js      out_of_memory"], ["js~FOO"]], [0, 0, 20, 0, 1, 5, 1, 2, 17, -1, 0.0029450210858841287, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "call    _realloc", "test    memory, memory", "jz      out_of_memory"], ["mov~rsi,rbx", "mov~rdi,result_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [0, 0, 344, 0, 1, 7, 1, 2, 36, 27, 0.01489628234854733, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "mov     qword ptr [rbp+n], r8", "mov     qword ptr [rbp+has_width], rcx", "call    _realloc", "test    memory, memory", "jz      out_of_memory"], ["mov~rsi,rbx", "mov~rdi,result_0", "mov~[word ptr [rbp+0],r8", "mov~[word ptr [rbp+0],rcx", "call~FOO", "test~memory,memory", "jz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 1, 31, 0, 4.279422978167162e-05, ["jmp     out_of_memory"], ["jmp~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 11, -1, 0.01605561693717807, ["mov     rax, [rbp+buf_malloced]", "test    rax, rax", "jz      short out_of_memory_1"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 6, 0, 1, 2, 0, 1, 12, -1, 0.0, ["mov     rdi, rax; ptr", "call    _free"], ["mov~rdi,rax", "call~FOO"]], [2, 0, 344, 0, 0, 10, 2, 1, 24, 36, 0.029843139695927546, ["fnstcw  word ptr [rbp+retcount]", "movzx   r8d, word ptr [rbp+retcount]", "mov     eax, r8d", "or      ah, 3", "mov     word ptr [rbp+retcount], ax", "fldcw   word ptr [rbp+retcount]", "fxam", "fnstsw  ax", "test    ah, 2", "jz      loc_8FB7"], ["fnstcw~[ord ptr [rbp+0]", "movzx~r8d,[ord ptr [rbp+0]", "mov~eax,r8d", "or~ah,0", "mov~[ord ptr [rbp+0],ax", "fldcw~[ord ptr [rbp+0]", "fxam~<TAG>", "fnstsw~ax", "test~ah,0", "jz~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 3, -1, 0.011356032430245406, ["mov     rdi, [rbp+d.dir]; ptr", "call    _free", "mov     rdi, [rbp+a.arg]; ptr", "test    rdi, rdi", "jz      short loc_7E14"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~rdi,[rbp+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    _free"], ["call~FOO"]], [1, 0, 3, 0, 1, 3, 1, 1, 4, -1, 0.006314094085059367, ["call    ___errno_location", "xor     r15d, r15d", "mov     dword ptr [rax], 0Ch"], ["call~FOO", "xor~r15d,r15d", "mov~<TAG>,0"]], [0, 0, 3, 0, 0, 3, 0, 1, 15, -1, 0.0005602153716873376, ["mov     rax, [rbp+lengthp]", "mov     [rax], length", "jmp     loc_7E22"], ["mov~rax,[rbp+0]", "mov~<TAG>,length", "jmp~FOO"]], [2, 0, 344, 1, 0, 5, 0, 1, 29, 31, 0.030344999299730786, ["movzx   esi, byte ptr [dp+48h]", "lea     rax, [p_0+3]", "sub     esi, 41h ; 'A'", "cmp     sil, 19h", "ja      loc_8FA4"], ["movzx~esi,[yte ptr [dp+0]", "lea~rax,[p_0+0]", "sub~esi,0", "cmp~sil,0", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 39, 25, 0.2359777573748723, ["lea     r12, [rcx+length]", "jmp     short loc_86A4"], ["lea~r12,<TAG>", "jmp~FOO"]], [2, 0, 344, 0, 0, 3, 0, 0, 30, 30, 0.01417267082678452, ["mov     esi, 4E49h", "mov     byte ptr [rdi+2], 46h ; 'F'", "mov     [rdi], si"], ["mov~esi,0", "mov~[yte ptr [rdi+0],0", "mov~<TAG>,si"]], [0, 0, 0, 0, 0, 8, 0, 0, 3, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "pop~rbp", "retn"]], [2, 0, 344, 0, 0, 4, 0, 1, 30, 30, 0.01417267082678452, ["mov     r11d, 6E69h", "mov     byte ptr [rdi+2], 66h ; 'f'", "mov     [rdi], r11w", "jmp     loc_8E47"], ["mov~r11d,0", "mov~[yte ptr [rdi+0],0", "mov~<TAG>,r11w", "jmp~FOO"]], [0, 0, 344, 0, 0, 3, 0, 1, 9, 22, 0.5744775213582111, ["mov     rax, [rbp+i]", "cmp     [rbp+d.count], rax", "jz      loc_8E5A"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jz~FOO"]], [0, 0, 37, 0, 0, 2, 0, 0, 11, -1, 0.048287452731828016, ["cmp     allocated, r12", "jnb     short loc_8EBA"], ["cmp~allocated,r12", "jnb~FOO"]], [0, 1, 344, 0, 0, 2, 1, 1, 20, 11, 0.23325189461726398, ["test    al, 20h", "jz      short loc_7FC9"], ["test~al,<STR>", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 1, 1, 19, 12, 0.23258274847885965, ["test    al, 10h", "jz      short loc_7FBC"], ["test~al,0", "jz~FOO"]], [2, 0, 344, 1, 0, 2, 0, 0, 20, 12, 0.0, ["mov     byte ptr [r12], 23h ; '#'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]], [1, 0, 344, 0, 0, 4, 0, 1, 10, 21, 0.501423880736372, ["movzx   eax, byte ptr [dp+48h]", "mov     rdx, [dp+50h]", "cmp     al, 25h ; '%'", "jz      loc_8678"], ["movzx~eax,[yte ptr [dp+0]", "mov~rdx,[dp+0]", "cmp~al,0", "jz~FOO"]], [1, 0, 28, 0, 0, 1, 0, 0, 14, -1, 0.010807488212134887, ["mov     ebx, 0Ch"], ["mov~ebx,0"]], [0, 0, 344, 0, 0, 2, 0, 0, 9, 24, 0.04103577597609748, ["cmp     allocated, rax", "jnb     short loc_7EEB"], ["cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 10, 30, 0.034297629977747, ["test    allocated, allocated", "jnz     loc_87F0"], ["test~allocated,allocated", "jnz~FOO"]], [1, 0, 344, 1, 0, 4, 0, 0, 12, 27, 0.051259706509391385, ["mov     rax, length", "add     rax, 1", "mov     r12, rax", "jnb     loc_8780"], ["mov~rax,length", "add~rax,0", "mov~r12,rax", "jnb~FOO"]], [1, 0, 344, 0, 0, 1, 0, 0, 12, 28, 0.013989822754081014, ["mov     ebx, 0Ch"], ["mov~ebx,0"]], [0, 0, 344, 0, 0, 1, 0, 0, 14, 26, 0.0025754345559515102, ["mov     r12, allocated"], ["mov~r12,allocated"]], [1, 0, 344, 0, 0, 1, 0, 0, 14, 25, 0.056597314078523524, ["mov     byte ptr [result_0+length], 25h ; '%'"], ["mov~<TAG>,0"]], [0, 0, 344, 0, 0, 2, 0, 0, 13, 26, 0.046676833538226915, ["cmp     allocated, rax", "jnb     loc_869F"], ["cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 20, 26, 0.0151180342665069, ["mov     result_0, memory", "jmp     loc_869F"], ["mov~result_0,memory", "jmp~FOO"]], [0, 0, 344, 0, 0, 4, 1, 1, 13, 27, 0.03613000108930767, ["cmp     result_0, [rbp+result]", "setz    dl", "test    result_0, result_0", "jz      loc_86E0"], ["cmp~result_0,[rbp+0]", "setz~dl", "test~result_0,result_0", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 14, 26, 0.014670640046062153, ["test    dl, dl", "jnz     loc_86E0"], ["test~dl,dl", "jnz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 0, 18, -1, 0.0004979692192776334, ["mov     result_0, memory"], ["mov~result_0,memory"]], [1, 0, 10, 0, 0, 3, 0, 0, 12, -1, 0.018043603429762998, ["cmp     allocated, r12", "mov     byte ptr [result_0+length], 0", "jbe     short loc_8EDF"], ["cmp~allocated,r12", "mov~<TAG>,0", "jbe~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 8, 23, 0.5205178879880488, ["mov     r14, length", "jmp     loc_7EFA"], ["mov~r14,length", "jmp~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 13, -1, 0.002528749941644232, ["cmp     result_0, [rbp+result]", "jz      short loc_8EDF"], ["cmp~result_0,[rbp+0]", "jz~FOO"]], [0, 0, 8, 0, 1, 5, 1, 1, 14, -1, 0.0, ["mov     rdi, result_0; ptr", "mov     rsi, r12; size", "call    _realloc", "test    memory, memory", "cmovnz  result_0, memory"], ["mov~rdi,result_0", "mov~rsi,r12", "call~FOO", "test~memory,memory", "cmovnz~result_0,memory"]], [0, 0, 344, 0, 0, 3, 0, 0, 16, 24, 0.0151180342665069, ["mov     rcx, qword ptr [rbp+has_width]", "mov     r8, qword ptr [rbp+n]", "mov     result_0, memory"], ["mov~rcx,[word ptr [rbp+0]", "mov~r8,[word ptr [rbp+0]", "mov~result_0,memory"]], [0, 0, 7, 0, 0, 3, 1, 1, 13, -1, 0.010644092062059414, ["mov     rax, [rbp+buf_malloced]", "test    rax, rax", "jz      short loc_8EF3"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 6, 0, 1, 2, 0, 1, 14, -1, 0.0, ["mov     rdi, rax; ptr", "call    _free"], ["mov~rdi,rax", "call~FOO"]], [0, 0, 344, 0, 1, 4, 0, 1, 10, 23, 0.05095625651639408, ["lea     rdi, [result_0+length]; dest", "mov     rdx, rcx; n", "mov     rsi, r8; src", "call    _memcpy"], ["lea~rdi,<TAG>", "mov~rdx,rcx", "mov~rsi,r8", "call~FOO"]], [0, 0, 344, 0, 1, 10, 0, 2, 17, 24, 0.0013266211232318202, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "mov     qword ptr [rbp+n], r8", "mov     qword ptr [rbp+has_width], rcx", "call    _memcpy", "mov     rcx, qword ptr [rbp+has_width]", "mov     result_0, rax", "mov     r8, qword ptr [rbp+n]", "jmp     loc_7EEB"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "mov~[word ptr [rbp+0],r8", "mov~[word ptr [rbp+0],rcx", "call~FOO", "mov~rcx,[word ptr [rbp+0]", "mov~result_0,rax", "mov~r8,[word ptr [rbp+0]", "jmp~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 14, -1, 0.005633276793078228, ["mov     rdi, [rbp+d.dir]; ptr", "call    _free", "mov     rdi, [rbp+a.arg]; ptr", "test    rdi, rdi", "jz      short loc_8F10"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~rdi,[rbp+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 15, -1, 0.0, ["call    _free"], ["call~FOO"]], [1, 0, 344, 0, 0, 1, 0, 0, 33, 30, 0.013989822754081014, ["mov     ebx, 0Ch"], ["mov~ebx,0"]], [2, 0, 344, 2, 0, 7, 0, 1, 12, 19, 0.4481411742736652, ["mov     r8, [rbp+a.arg]", "shl     rdx, 5", "add     rdx, r8", "cmp     al, 6Eh ; 'n'", "mov     edi, [rdx]", "mov     dword ptr [rbp+has_width], edi", "jz      loc_8760"], ["mov~r8,[rbp+0]", "shl~rdx,0", "add~rdx,r8", "cmp~al,0", "mov~edi,<TAG>", "mov~[word ptr [rbp+0],edi", "jz~FOO"]], [2, 0, 344, 0, 0, 4, 1, 0, 13, 18, 0.4331398515429265, ["and     eax, 0FFFFFFDFh", "lea     ecx, [rax-45h]", "cmp     cl, 2", "jbe     short loc_7F56"], ["and~eax,0", "lea~ecx,[rax-45h]+0]", "cmp~cl,0", "jbe~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 14, 32, 0.034297629977747, ["test    allocated, allocated", "jnz     loc_8D40"], ["test~allocated,allocated", "jnz~FOO"]], [1, 0, 344, 0, 0, 3, 0, 0, 16, 16, 0.0, ["mov     rdi, [rbp+buf]", "lea     fbp_0, [rdi+2]", "mov     byte ptr [rdi+1], 27h ; '''"], ["mov~rdi,[rbp+0]", "lea~fbp_0,[rdi+0]", "mov~[yte ptr [rdi+0],0"]], [1, 0, 344, 0, 0, 2, 1, 1, 16, 15, 0.23057531006364668, ["test    al, 2", "jz      short loc_7F95"], ["test~al,0", "jz~FOO"]], [2, 0, 344, 1, 0, 2, 0, 0, 17, 15, 0.0, ["mov     byte ptr [r12], 2Dh ; '-'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]], [1, 0, 344, 0, 0, 2, 1, 1, 17, 14, 0.231244456202051, ["test    al, 4", "jz      short loc_7FA2"], ["test~al,0", "jz~FOO"]], [1, 0, 344, 0, 0, 1, 0, 0, 16, 30, 0.013989822754081014, ["mov     ebx, 0Ch"], ["mov~ebx,0"]], [2, 0, 344, 1, 0, 2, 0, 0, 18, 14, 0.0, ["mov     byte ptr [r12], 2Bh ; '+'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]], [1, 0, 344, 0, 0, 2, 1, 1, 18, 13, 0.23191360234045533, ["test    al, 8", "jz      short loc_7FAF"], ["test~al,0", "jz~FOO"]], [1, 1, 344, 1, 0, 2, 0, 0, 19, 13, 0.0, ["mov     byte ptr [r12], 20h ; ' '", "add     r12, 1"], ["mov~<TAG>,<STR>", "add~r12,0"]], [2, 0, 344, 1, 0, 2, 0, 0, 21, 11, 0.0, ["mov     byte ptr [r12], 30h ; '0'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]]], "func_feature": [54, 114, 306, 3, 360, 586, 1, 1250, 0.04697, 3, 103], "succs": [[9], [0, 9], [8, 299], [328, 2], [2, 333], [173], [5, 7], [5], [333], [18, 23], [343], [10, 299], [104, 15], [105, 12], [12, 207], [299], [290], [16, 99, 93, 101], [23], [306], [306, 19], [19, 340], [19, 332], [35, 27], [26, 218], [24, 299], [34, 218], [28, 31], [36, 29], [35, 30], [31], [35], [141], [32, 245], [227], [42, 55], [35], [41, 171], [296, 37], [136], [142, 39], [48], [292, 46], [299, 45], [43, 52], [81, 47], [54], [51], [50, 58], [48, 70], [58], [299, 59], [51, 77], [305, 51], [61, 69], [54], [104], [56, 299], [72, 60], [299, 63], [299, 62], [67, 292], [64, 68], [66, 84], [65, 299], [64, 68], [74], [69], [49], [96, 71], [176], [44, 94], [49], [78, 95], [73, 299], [79], [75, 151], [81], [83, 95], [82, 85], [97, 79], [74, 84], [85], [94], [74, 87], [91, 86], [88, 98], [90, 299], [92, 100], [88], [94], [80], [80], [290], [104], [94], [179, 94], [165], [97], [290], [89, 98], [290], [237, 110], [238, 102], [115, 292], [104, 170], [104, 185], [104], [104], [104], [237], [219, 116], [208, 111], [120, 140], [113, 247], [192, 193, 226, 292, 263, 243, 124, 189, 191], [116, 117], [219], [25, 119], [304, 25], [130, 127], [299, 125], [121, 123], [121, 303], [267, 126], [129, 169], [131, 285], [128, 140], [249], [169, 132], [249], [136], [336], [299, 135], [138, 133], [137, 118], [141], [299, 139], [137, 347], [118], [76, 167], [145, 201], [141], [141], [141], [147, 150], [145, 201], [292, 150], [336, 153], [148, 319], [154, 159], [160, 292], [299, 155], [152, 299], [314, 158], [162, 299], [155, 324], [155], [250, 13], [314, 158], [165, 166], [122], [161, 299], [168, 299], [163, 156], [38, 183], [165], [165], [122, 157], [336], [299, 174], [186], [], [316, 172], [182, 175], [178, 299], [186, 180], [176, 183], [182], [299, 53], [299, 181], [186], [184, 217], [186], [57, 217], [184, 213], [299, 187], [188, 286], [196], [262, 190], [281, 194], [260, 190], [264, 190], [265, 190], [146], [194, 278], [308, 198], [196, 287], [200, 204], [146], [202], [108, 205], [219, 206], [202], [202], [14, 159], [112, 219], [106, 299], [209, 212], [210], [210, 211], [212], [219, 214], [217], [215], [216, 215], [219], [299, 220], [227], [292, 222], [221, 109], [107, 109], [227, 223], [224, 228], [225, 299], [227], [40, 246], [290, 230], [227, 134], [227], [290], [234, 299], [233, 231], [22, 231], [282, 235], [282, 236], [330], [297, 291], [237], [237], [343], [240, 242], [240, 344], [33, 244], [143], [143], [144], [352, 351], [114, 247], [247], [251, 253], [253, 254], [256, 268], [257, 255], [253], [257], [259, 6], [258, 261], [261], [266, 309], [262], [173], [199], [195, 262], [262], [262], [269, 309], [199], [173], [280, 270], [273, 309], [232, 274], [299, 271], [276, 309], [299, 277], [274, 355], [279], [232], [281], [288, 283], [279], [284], [330], [288], [144], [284], [299, 197], [299], [289, 337], [11, 325], [289, 337], [292], [], [348, 292], [292, 327], [17, 292], [177, 292], [298, 292], [313, 292], [306, 20], [329, 299], [241, 299], [299, 4], [299, 335], [299, 229], [299], [307, 309], [309], [103, 239], [310, 311], [311], [173], [173], [315, 317], [290], [203], [], [203], [323, 149], [336, 164], [1, 359], [320, 322], [320], [293, 294], [122], [326, 343], [3, 302], [331, 300], [333], [330], [290], [330, 350], [330], [301, 334], [21, 301], [336], [338, 341], [318], [339, 341], [341], [343], [345, 342], [345], [318], [343], [312, 346], [312], [118], [349, 295], [248, 114], [272, 275], [352], [353, 354], [354], [356, 357], [232], [357], [321, 358], [321], [1]], "fname": "vasnprintf", "n_num": 360}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[1, 0, 0, 1, 0, 3, 0, 0, 0, 0, 0.0, ["mov     rax, rcx", "add     rsp, 8", "retn"], ["mov~rax,rcx", "add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 6, 2, 2, 1, -1, 0.16666666666666666, ["sub     rsp, 8", "call    _malloc", "xor     ecx, ecx", "test    rax, rax", "mov     rsi, rax", "jz      short loc_930D"], ["sub~rsp,0", "call~FOO", "xor~ecx,ecx", "test~rax,rax", "mov~rsi,rax", "jz~FOO"]], [4, 0, 1, 4, 0, 16, 0, 0, 2, -1, 0.0, ["lea     rcx, [p+10h]", "mov     dword ptr [rax+0Ch], 1415FB4Ah", "mov     rdx, 0FF00FF00FF00FF01h", "mov     rax, p", "mul     rdx", "shr     rdx, 8", "mov     rax, rdx", "shl     rax, 8", "add     rdx, rax", "mov     rax, p", "sub     rax, rdx", "mov     rdx, rax", "lea     slot, mmalloca_results", "mov     rdi, [rax+slot*8]", "mov     [rax+slot*8], p", "mov     [rsi], rdi"], ["lea~rcx,[p+0]", "mov~[word ptr [rax+0],0", "mov~rdx,0", "mov~rax,p", "mul~,rdx", "shr~rdx,0", "mov~rax,rdx", "shl~rax,0", "add~rdx,rax", "mov~rax,p", "sub~rax,rdx", "mov~rdx,rax", "lea~slot,<TAG>", "mov~rdi,<TAG>", "mov~<TAG>,p", "mov~<TAG>,rdi"]], [1, 0, 4, 1, 0, 2, 0, 0, 0, 1, 0.0, ["add     n, 10h; size", "jb      short loc_9315"], ["add~n,0", "jb~FOO"]], [0, 0, 0, 0, 0, 3, 1, 0, 1, 0, 0.0, ["xor     ecx, ecx", "mov     rax, rcx", "retn"], ["xor~ecx,ecx", "mov~rax,rcx", "retn"]]], "func_feature": [1, 3, 2, 0, 5, 5, 2, 30, 0.03333, 1, 7], "succs": [[], [0, 2], [0], [1, 4], []], "fname": "mmalloca", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0.02564102564102564, ["jmp     short locret_932E"], ["jmp~FOO"]], [0, 0, 8, 0, 0, 3, 1, 1, 4, -1, 0.16025641025641024, ["mov     rax, [rcx-10h]", "test    rax, rax", "jnz     short loc_9370"], ["mov~rax,[rcx-10h]+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 0, 5, 0.0, ["test    p, p", "jz      short locret_932E"], ["test~p,p", "jz~FOO"]], [0, 0, 2, 0, 0, 2, 0, 1, 5, 0, 0.0641025641025641, ["lea     rcx, [rax+slot*8]", "jmp     short loc_938C"], ["lea~rcx,<TAG>", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 4, 1, 0.07692307692307693, ["jmp     short loc_93A0"], ["jmp~FOO"]], [3, 0, 11, 4, 0, 14, 1, 1, 2, 3, 0.1282051282051282, ["mov     rax, p", "mov     rdx, 0FF00FF00FF00FF01h", "mul     rdx", "shr     rdx, 8", "mov     rax, rdx", "shl     rax, 8", "add     rdx, rax", "mov     rax, p", "sub     rax, rdx", "mov     rdx, rax", "lea     slot, mmalloca_results", "mov     rcx, [rax+slot*8]", "test    rcx, rcx", "jz      short locret_932E"], ["mov~rax,p", "mov~rdx,0", "mul~,rdx", "shr~rdx,0", "mov~rax,rdx", "shl~rax,0", "add~rdx,rax", "mov~rax,p", "sub~rax,rdx", "mov~rdx,rax", "lea~slot,<TAG>", "mov~rcx,<TAG>", "test~rcx,rcx", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 1, 4, 0.07051282051282051, ["cmp     dword ptr [p-4], 1415FB4Ah", "jz      short loc_9330"], ["cmp~[word ptr [p-4]+0],0", "jz~FOO"]], [1, 0, 2, 1, 0, 1, 0, 0, 6, -1, 0.038461538461538464, ["sub     rcx, 10h"], ["sub~rcx,0"]], [0, 0, 8, 0, 0, 2, 0, 1, 5, -1, 0.09615384615384615, ["cmp     p, rax", "jz      short loc_9388"], ["cmp~p,rax", "jz~FOO"]], [0, 0, 10, 0, 0, 2, 0, 1, 3, 2, 0.17307692307692307, ["cmp     rcx, p", "jnz     short loc_9378"], ["cmp~rcx,p", "jnz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 8, 0, 0, 1, 0, 0, 6, -1, 0.019230769230769232, ["mov     rcx, rax"], ["mov~rcx,rax"]], [1, 0, 1, 1, 0, 4, 0, 1, 6, -1, 0.0641025641025641, ["mov     rax, [p-10h]", "sub     p, 10h; ptr", "mov     [rcx], rax", "jmp     _free"], ["mov~rax,[p-10h]+0]", "sub~p,0", "mov~<TAG>,rax", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 7, -1, 0.0, [], []]], "func_feature": [0, 3, 10, 0, 14, 18, 3, 36, 0.06548, 1, 6], "succs": [[10], [0, 8], [10, 6], [12], [3], [9, 10], [10, 5], [12], [11, 7], [1, 4], [], [1], [13], []], "fname": "freea", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 1, 0, 1, 0, 6, 0, 0, 0, 0, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, -1, 0.06666666666666667, ["mov     rsi, [rsp+78h+var_30]", "xor     rsi, fs:28h", "mov     rax, rbx", "jnz     loc_9591"], ["mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "mov~rax,rbx", "jnz~FOO"]], [2, 0, 23, 2, 0, 4, 0, 0, 5, 7, 0.305, ["mov     rax, [rsp+78h+var_60]", "add     [rsp+78h+string], rax", "add     count, 1", "mov     [rsp+78h+var_6C], 0"], ["mov~rax,[rsp+0]", "add~[rsp+0],rax", "add~count,0", "mov~[rsp+0],0"]], [2, 0, 23, 0, 0, 3, 0, 1, 4, 8, 0.03333333333333333, ["mov     [rsp+78h+var_60], 1", "mov     [rsp+78h+var_58], 0", "jmp     loc_947B"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 23, 0, 1, 5, 0, 2, 5, 8, 0.015000000000000001, ["mov     rdi, [rsp+78h+string]; s", "call    _strlen", "mov     [rsp+78h+var_58], 0", "mov     [rsp+78h+var_60], rax", "jmp     loc_947B"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 23, 0, 0, 3, 1, 1, 5, 8, 0.26666666666666666, ["mov     eax, [rsp+78h+var_54]", "test    eax, eax", "jz      loc_93E3"], ["mov~eax,[rsp+0]", "test~eax,eax", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 5, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5693; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, aMbsinitIterSta; \"mbsinit (&iter->state)\"", "mov     edx, 8Eh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 23, 0, 1, 4, 1, 2, 4, 7, 0.07833333333333334, ["mov     rdi, r13; ps", "call    _mbsinit", "test    eax, eax", "jz      short loc_9572"], ["mov~rdi,r13", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 23, 0, 0, 3, 0, 1, 7, 9, 0.07083333333333333, ["mov     [rsp+78h+var_78], 0", "mov     [rsp+78h+var_6C], 1", "jmp     loc_946F"], ["mov~<TAG>,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 23, 0, 1, 5, 1, 2, 6, 10, 0.165, ["lea     rdi, [rbp+4]; ps", "mov     [rsp+78h+var_58], 1", "call    _mbsinit", "test    eax, eax", "jz      short loc_9568"], ["lea~rdi,[rbp+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 23, 0, 0, 2, 0, 1, 2, 6, 0.38333333333333336, ["cmp     [rsp+78h+var_78], 0", "jz      short loc_9438"], ["cmp~<TAG>,0", "jz~FOO"]], [3, 0, 23, 0, 0, 9, 1, 1, 1, 7, 0.03333333333333333, ["mov     rbp, rsp", "mov     [rsp+78h+string], string_0", "mov     [rsp+78h+var_78], 0", "mov     [rsp+78h+var_74], 0", "mov     [rsp+78h+var_6C], 0", "xor     ebx, ebx", "lea     r12, is_basic_table", "lea     r13, [rbp+4]", "jmp     short loc_948E"], ["mov~rbp,rsp", "mov~[rsp+0],string_0", "mov~<TAG>,0", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~ebx,ebx", "lea~r12,<TAG>", "lea~r13,[rbp+0]", "jmp~FOO"]], [0, 0, 23, 0, 0, 2, 1, 1, 5, 3, 0.20833333333333334, ["test    rax, rax", "jnz     short loc_94F4"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 23, 0, 0, 3, 1, 1, 7, 1, 0.06166666666666667, ["mov     edx, [rsp+78h+var_54]", "test    edx, edx", "jnz     loc_95B5"], ["mov~edx,[rsp+0]", "test~edx,edx", "jnz~FOO"]], [2, 0, 23, 0, 0, 8, 1, 0, 3, 8, 0.14666666666666667, ["mov     rcx, [rsp+78h+string]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r12+rax*4]", "bt      eax, edx", "jnb     loc_9518"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,<TAG>", "bt~eax,edx", "jnb~FOO"]], [1, 0, 23, 0, 0, 2, 0, 1, 5, 6, 0.05333333333333334, ["mov     [rsp+78h+var_78], 1", "jmp     loc_9494"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 1, 25, 1, 1, 12, 1, 2, 0, 8, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, string_0", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+78h+var_30], rax", "xor     eax, eax", "call    ___ctype_get_mb_cur_max", "cmp     rax, 1", "ja      short loc_9408"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,string_0", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "cmp~rax,0", "ja~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 7, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5693; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, aIterCurPtr0; \"*iter->cur.ptr == '\\\\0'\"", "mov     edx, 0AAh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [2, 0, 23, 0, 0, 4, 0, 1, 6, 2, 0.08666666666666667, ["mov     rax, [rsp+78h+string]", "mov     [rsp+78h+var_60], 1", "cmp     byte ptr [rax], 0", "jnz     loc_9596"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 23, 0, 3, 12, 0, 4, 3, 5, 0.30333333333333334, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+78h+string]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+78h+string]; s", "lea     rcx, [rbp+4]; p", "lea     rdi, [rbp+24h]; pwc", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+78h+var_60], rax", "jz      short loc_9530"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rcx,[rbp+0]", "lea~rdi,[rbp+0]", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 23, 0, 0, 2, 0, 1, 4, 4, 0.24666666666666667, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      short loc_9548"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 3, 0, 1, 3, 0, 1, 1, -1, 0.005, ["mov     rdi, string_0; s", "call    _strlen", "mov     string_0, rax"], ["mov~rdi,string_0", "call~FOO", "mov~string_0,rax"]], [3, 0, 23, 0, 0, 5, 0, 0, 4, 9, 0.045000000000000005, ["mov     [rsp+78h+var_60], 1", "movsx   eax, byte ptr [rcx]", "mov     [rsp+78h+var_58], 1", "mov     [rsp+78h+var_6C], 1", "mov     [rsp+78h+var_54], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [1, 0, 23, 0, 0, 2, 0, 1, 7, 9, 0.07083333333333333, ["mov     [rsp+78h+var_6C], 1", "jmp     loc_946F"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 8, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5693; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, assertion; \"iter->cur.wc == 0\"", "mov     edx, 0ABh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]]], "func_feature": [12, 9, 29, 5, 26, 33, 1, 119, 0.10173, 7, 4], "succs": [[], [0, 10], [11], [2], [2], [1, 2], [], [16, 6], [5], [8, 24], [], [20, 15], [11], [9, 19], [9, 25], [23, 7], [20], [12, 22], [], [18, 14], [3, 21], [4, 13], [1], [5], [5], []], "fname": "mbslen", "n_num": 26}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]], [1, 2, 4, 0, 0, 9, 1, 1, 0, 2, 0.0, ["mov     rdx, qword ptr [rsp+x.value]", "mov     rax, qword ptr [rsp+x.value+8]", "mov     rsi, rdx", "mov     ecx, eax", "shr     rsi, 20h", "mov     eax, esi", "shr     eax, 1Fh", "and     ecx, 7FFFh", "jz      short locret_9610"], ["mov~rdx,[word ptr [rsp+0]", "mov~rax,[word ptr [rsp+0]", "mov~rsi,rdx", "mov~ecx,eax", "shr~rsi,<STR>", "mov~eax,esi", "shr~eax,0", "and~ecx,<STR>", "jz~FOO"]], [1, 1, 2, 0, 0, 3, 1, 1, 1, 1, 0.16666666666666666, ["xor     eax, 1", "cmp     ecx, 7FFFh", "jz      short loc_9618"], ["xor~eax,0", "cmp~ecx,<STR>", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 0, 1, 0, 5, 2, 0, 2, 0, 0.0, ["add     esi, 80000000h", "xor     eax, eax", "or      esi, edx", "setnz   al", "retn"], ["add~esi,0", "xor~eax,eax", "or~esi,edx", "setnz~al", "retn"]]], "func_feature": [0, 4, 2, 0, 5, 4, 2, 19, 0.03333, 0, 1], "succs": [[], [0, 2], [3, 4], [], []], "fname": "rpl_isnanl", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[1, 0, 34, 2, 0, 4, 0, 0, 0, 0, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000009666 cases 1,2", "cmp     r11d, 2Fh ; '/'", "ja      loc_97FB"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_9707"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [2, 0, 34, 1, 0, 8, 1, 0, 4, 5, 0.0067226890756302525, ["mov     rdx, [args+8]; jumptable 0000000000009666 case 12", "add     rdx, 0Fh", "and     rdx, 0FFFFFFFFFFFFFFF0h", "lea     r11, [rdx+10h]", "mov     [args+8], r11", "fld     tbyte ptr [rdx]", "fstp    tbyte ptr [ap+10h]", "nop     dword ptr [ap+00000000h]"], ["mov~rdx,[args+0]", "add~rdx,0", "and~rdx,0", "lea~r11,[rdx+0]", "mov~[args+0],r11", "fld~<TAG>,<TAG>", "fstp~<TAG>,[byte ptr [ap+0]", "nop~[word ptr [ap+0]"]], [0, 0, 34, 1, 0, 4, 0, 1, 3, 2, 0.7546218487394959, ["mov     edx, [ap]", "movsxd  rdx, dword ptr [r8+rdx*4]", "add     rdx, r8", "jmp     rdx; switch jump"], ["mov~edx,<TAG>", "movsxd~rdx,<TAG>", "add~rdx,r8", "jmp~rdx"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["movsd   xmm0, qword ptr [rdx]", "movsd   qword ptr [ap+10h], xmm0", "jmp     loc_9690"], ["movsd~xmm0,<TAG>", "movsd~[word ptr [ap+0],xmm0", "jmp~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 0, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_9782"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 10h", "mov     [args+4], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~[args+0],r11d"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["mov     edx, [rdx]", "mov     [ap+10h], dl", "jmp     short loc_9690"], ["mov~edx,<TAG>", "mov~[ap+0],dl", "jmp~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000009666 cases 3,4", "cmp     r11d, 2Fh ; '/'", "ja      loc_97BA"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000009666 case 16", "cmp     r11d, 2Fh ; '/'", "ja      short loc_97DC"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_96E5"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000009666 cases 5,6,13,14", "cmp     r11d, 2Fh ; '/'", "ja      loc_980C"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 1, 34, 2, 0, 4, 0, 1, 5, 4, 0.7537815126050421, ["add     i, 1", "add     ap, 20h", "cmp     [a], i", "ja      short loc_9658"], ["add~i,0", "add~ap,<STR>", "cmp~<TAG>,i", "ja~FOO"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["mov     rdx, [rdx]", "mov     [ap+10h], rdx", "jmp     short loc_9690"], ["mov~rdx,<TAG>", "mov~[ap+0],rdx", "jmp~FOO"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["mov     edx, [rdx]", "mov     [ap+10h], edx", "jmp     short loc_9690"], ["mov~edx,<TAG>", "mov~[ap+0],edx", "jmp~FOO"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["mov     edx, [rdx]", "mov     [ap+10h], dx", "jmp     loc_9690"], ["mov~edx,<TAG>", "mov~[ap+0],dx", "jmp~FOO"]], [0, 0, 34, 0, 0, 5, 1, 1, 6, 5, 0.07899159663865547, ["mov     rdx, [rdx]", "test    rdx, rdx", "cmovz   rdx, r9", "mov     [ap+10h], rdx", "jmp     loc_9690"], ["mov~rdx,<TAG>", "test~rdx,rdx", "cmovz~rdx,r9", "mov~[ap+0],rdx", "jmp~FOO"]], [0, 0, 34, 0, 0, 5, 1, 1, 6, 5, 0.07899159663865547, ["mov     rdx, [rdx]", "test    rdx, rdx", "cmovz   rdx, r10", "mov     [ap+10h], rdx", "jmp     loc_9690"], ["mov~rdx,<TAG>", "test~rdx,rdx", "cmovz~rdx,r10", "mov~[ap+0],rdx", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 1, 0, 1, -1, 0.0, ["xor     eax, eax", "retn"], ["xor~eax,eax", "retn"]], [1, 0, 35, 0, 0, 3, 0, 1, 0, 5, 0.0, ["cmp     qword ptr [a], 0", "mov     rax, [a+8]", "jz      short loc_969D"], ["cmp~<TAG>,0", "mov~rax,[a+0]", "jz~FOO"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [1, 0, 0, 0, 0, 2, 0, 0, 3, -1, 0.0, ["mov     eax, 0FFFFFFFFh; jumptable 0000000000009666 default case", "retn"], ["mov~eax,0", "retn"]], [1, 0, 34, 0, 0, 2, 0, 1, 2, 3, 0.7823529411764706, ["cmp     dword ptr [ap], 16h; switch 23 cases", "ja      short loc_96A0; jumptable 0000000000009666 default case"], ["cmp~<TAG>,0", "ja~FOO"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 1, 0.07899159663865547, ["mov     r11d, [args+4]; jumptable 0000000000009666 case 11", "cmp     r11d, 0AFh", "ja      loc_981D"], ["mov~r11d,[args+0]", "cmp~r11d,0", "ja~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000009666 cases 7-10,17-22", "cmp     r11d, 2Fh ; '/'", "ja      loc_97EA"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_9729"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     short loc_97A7"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000009666 case 15", "cmp     r11d, 2Fh ; '/'", "ja      loc_97CB"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_96C1"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_974F"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [0, 0, 34, 0, 0, 5, 1, 0, 1, 4, 0.027731092436974792, ["lea     r8, off_B1D0", "lea     r10, wide_null_string_2670", "lea     r9, aNull; \"(NULL)\"", "xor     ecx, ecx", "nop     dword ptr [ap+00000000h]"], ["lea~r8,<TAG>", "lea~r10,<TAG>", "lea~r9,<TAG>", "xor~ecx,ecx", "nop~[word ptr [ap+0]"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]]], "func_feature": [0, 5, 25, 0, 36, 52, 1, 132, 0.10528, 3, 18], "succs": [[8], [0, 2], [8], [13], [1, 3, 9, 10, 12, 22, 25, 26, 29], [13], [5], [5], [13], [24, 27], [28, 21], [15], [35, 11], [19, 23], [13], [13], [13], [13], [13], [], [34, 19], [18], [], [4, 22], [16], [6, 7], [30, 31], [16], [18], [32, 33], [14], [14], [17], [17], [23], [15]], "fname": "printf_fetchargs", "n_num": 36}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 5, 0, 0, 2, 1, 1, 0, 0, 0.024118683901292598, ["test    rax, rax", "jz      short loc_A00E"], ["test~rax,rax", "jz~FOO"]], [0, 0, 6, 0, 0, 1, 0, 1, 30, -1, 0.002408930669800235, ["jmp     short error"], ["jmp~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 18, 9, 0.007990599294947122, ["cmp     esi, 5", "jnz     error"], ["cmp~esi,0", "jnz~FOO"]], [0, 0, 6, 0, 0, 1, 0, 1, 21, -1, 0.002408930669800235, ["jmp     error"], ["jmp~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 14, -1, 0.02144535840188014, ["mov     rax, [a+8]; jumptable 0000000000009A55 default case"], ["mov~rax,[a+0]"]], [2, 0, 184, 0, 0, 4, 1, 1, 19, 25, 0.4429200940070505, ["mov     ecx, ebx", "and     ecx, 0FFFFFFDFh", "cmp     cl, 5Ah ; 'Z'", "jz      short loc_9A10"], ["mov~ecx,ebx", "and~ecx,0", "cmp~cl,0", "jz~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 18, 26, 0.44271445358401884, ["cmp     bl, 6Ah ; 'j'", "jz      short loc_9A10"], ["cmp~bl,0", "jz~FOO"]], [0, 0, 4, 0, 1, 2, 0, 1, 16, -1, 0.0, ["mov     rdi, rax; ptr", "call    _free"], ["mov~rdi,rax", "call~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 20, 24, 0.4430963572267921, ["cmp     bl, 74h ; 't'", "jnz     short loc_9A38"], ["cmp~bl,0", "jnz~FOO"]], [2, 0, 184, 1, 0, 4, 0, 1, 15, 33, 0.022591069330199765, ["movzx   eax, byte ptr [rbp+1]", "sub     eax, 30h ; '0'", "cmp     al, 9", "ja      short loc_9E1E"], ["movzx~eax,[yte ptr [rbp+0]", "sub~eax,0", "cmp~al,0", "ja~FOO"]], [1, 0, 184, 0, 0, 3, 0, 1, 14, 6, 0.17273795534665098, ["cmp     byte ptr [rbp+1], 2Ah ; '*'", "mov     [dp+30h], rbp", "jnz     loc_9E04"], ["cmp~[yte ptr [rbp+0],0", "mov~[dp+0],rbp", "jnz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 21, 32, 0.0002643948296122209, ["xchg    ax, ax"], ["xchg~ax,ax"]], [0, 0, 184, 0, 1, 6, 0, 1, 18, 12, 0.010825499412455935, ["mov     rdi, rax; ptr", "call    _realloc", "mov     rdx, [rsp+78h+cp]", "mov     r10, [rsp+78h+max_width_length]", "mov     r9, [rsp+78h+a_allocated]", "mov     r8, [rsp+78h+d_allocated]"], ["mov~rdi,rax", "call~FOO", "mov~rdx,[rsp+0]", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]"]], [1, 0, 184, 1, 0, 8, 1, 1, 17, 13, 0.026204465334900118, ["mov     rsi, a_allocated_0", "mov     [rsp+78h+d_allocated], a_allocated_0", "mov     [rsp+78h+a_allocated], d_allocated_0", "shl     rsi, 5; size", "test    rax, rax", "mov     [rsp+78h+max_width_length], max_width_length_0", "mov     [rsp+78h+cp], rdx", "jz      loc_A1F9"], ["mov~rsi,a_allocated_0", "mov~[rsp+0],a_allocated_0", "mov~[rsp+0],d_allocated_0", "shl~rsi,0", "test~rax,rax", "mov~[rsp+0],max_width_length_0", "mov~[rsp+0],rdx", "jz~FOO"]], [1, 0, 184, 1, 0, 1, 0, 0, 18, 31, 0.006110458284371329, ["add     eax, 8"], ["add~eax,0"]], [1, 0, 184, 0, 0, 2, 0, 1, 17, 27, 0.44729729729729734, ["cmp     bl, 6Ch ; 'l'", "jz      short loc_9A10"], ["cmp~bl,0", "jz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 17, 30, 0.022062279670975328, ["movzx   ebx, byte ptr [rbp+0]"], ["movzx~ebx,[yte ptr [rbp+0]"]], [1, 0, 184, 1, 0, 6, 2, 1, 16, 31, 0.004700352526439483, ["mov     ecx, eax", "mov     edi, esi", "and     ecx, 1", "shl     edi, cl", "or      eax, edi", "jmp     short loc_9A13"], ["mov~ecx,eax", "mov~edi,esi", "and~ecx,0", "shl~edi,cl", "or~eax,edi", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 17, 31, 8.813160987074031e-05, ["or      eax, 4", "jmp     short loc_9A13"], ["or~eax,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 16, -1, 0.014130434782608696, ["mov     rdi, [d+8]; ptr", "test    rdi, rdi", "jz      short loc_A01C"], ["mov~rdi,[d+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 184, 0, 0, 2, 1, 1, 19, 11, 0.027438307873090484, ["test    memory, memory", "jz      loc_A13A"], ["test~memory,memory", "jz~FOO"]], [0, 0, 184, 0, 1, 7, 0, 2, 18, 12, 0.010825499412455935, ["mov     rdi, memory_size; size", "call    _malloc", "mov     r8, [rsp+78h+d_allocated]", "mov     r9, [rsp+78h+a_allocated]", "mov     r10, [rsp+78h+max_width_length]", "mov     rdx, [rsp+78h+cp]", "jmp     loc_9C14"], ["mov~rdi,memory_size", "call~FOO", "mov~r8,[rsp+0]", "mov~r9,[rsp+0]", "mov~r10,[rsp+0]", "mov~rdx,[rsp+0]", "jmp~FOO"]], [3, 0, 184, 2, 0, 5, 0, 0, 17, 33, 0.005346650998824913, ["add     cp_0, 1", "movzx   eax, byte ptr [cp_0]", "sub     eax, 30h ; '0'", "cmp     al, 9", "jbe     short loc_9E10"], ["add~cp_0,0", "movzx~eax,<TAG>", "sub~eax,0", "cmp~al,0", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 16, 34, 0.004935370152761457, ["nop"], ["nop"]], [0, 0, 184, 0, 0, 1, 0, 0, 20, 10, 0.025440658049353703, ["mov     [a+8], memory"], ["mov~[a+0],memory"]], [2, 0, 184, 1, 0, 3, 0, 1, 15, 29, 0.46119271445358406, ["add     rbp, 1", "cmp     bl, 68h ; 'h'", "jnz     short loc_99F0"], ["add~rbp,0", "cmp~bl,0", "jnz~FOO"]], [1, 0, 184, 0, 0, 3, 1, 1, 14, 30, 0.43334312573443007, ["xor     eax, eax", "mov     esi, 1", "jmp     short loc_9A17"], ["xor~eax,eax", "mov~esi,0", "jmp~FOO"]], [1, 0, 184, 1, 0, 7, 0, 1, 27, 29, 0.02925969447708578, ["add     a_allocated_0, a_allocated_0", "lea     rsi, [r13+1]", "cmp     a_allocated_0, r13", "cmovbe  a_allocated_0, rsi", "mov     rsi, 7FFFFFFFFFFFFFFh", "cmp     a_allocated_0, rsi", "ja      out_of_memory"], ["add~a_allocated_0,a_allocated_0", "lea~rsi,[r13+0]", "cmp~a_allocated_0,r13", "cmovbe~a_allocated_0,rsi", "mov~rsi,0", "cmp~a_allocated_0,rsi", "ja~FOO"]], [0, 0, 184, 0, 0, 3, 0, 0, 26, 25, 0.186310223266745, ["cmp     a_allocated_0, r13", "mov     rax, [a+8]", "jbe     loc_A040"], ["cmp~a_allocated_0,r13", "mov~rax,[a+0]", "jbe~FOO"]], [3, 0, 184, 0, 0, 11, 0, 0, 15, 5, 0.14559341950646298, ["mov     rdi, [rsp+78h+max_precision_length]", "lea     rcx, [rbp+2]", "mov     eax, 2", "mov     [dp+38h], cp_0", "cmp     rdi, 2", "cmovnb  rax, rdi", "mov     [rsp+78h+max_precision_length], rax", "movsx   eax, byte ptr [rbp+2]", "lea     esi, [rax-30h]", "cmp     sil, 9", "jbe     loc_A25F"], ["mov~rdi,[rsp+0]", "lea~rcx,[rbp+0]", "mov~eax,0", "mov~[dp+0],cp_0", "cmp~rdi,0", "cmovnb~rax,rdi", "mov~[rsp+0],rax", "movsx~eax,[yte ptr [rbp+0]", "lea~esi,[rax-30h]+0]", "cmp~sil,0", "jbe~FOO"]], [2, 0, 1, 0, 1, 4, 0, 2, 17, -1, 0.00390716803760282, ["call    ___errno_location", "mov     dword ptr [rax], 16h", "mov     eax, 0FFFFFFFFh", "jmp     loc_98CE"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 2, 0, 1, 1, 0, 1, 17, -1, 0.0, ["call    _free"], ["call~FOO"]], [1, 0, 184, 2, 0, 6, 0, 1, 16, 9, 0.1378084606345476, ["mov     rcx, [a]", "mov     rsi, rcx", "shl     rsi, 5", "add     rsi, rax", "cmp     rcx, rbx", "ja      short loc_9C4E"], ["mov~rcx,<TAG>", "mov~rsi,rcx", "shl~rsi,0", "add~rsi,rax", "cmp~rcx,rbx", "ja~FOO"]], [0, 0, 184, 0, 0, 3, 0, 1, 15, 10, 0.145358401880141, ["cmp     a_allocated_0, rbx", "mov     rax, [a+8]", "ja      short loc_9C21"], ["cmp~a_allocated_0,rbx", "mov~rax,[a+0]", "ja~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 17, 11, 0.009841363102232667, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 184, 1, 0, 7, 0, 0, 16, 32, 0.02382491186839013, ["mov     rdi, [rsp+78h+max_precision_length]", "mov     rax, rcx", "mov     [dp+38h], rcx", "sub     rax, rbp", "cmp     rdi, rax", "cmovnb  rax, rdi", "mov     [rsp+78h+max_precision_length], rax"], ["mov~rdi,[rsp+0]", "mov~rax,rcx", "mov~[dp+0],rcx", "sub~rax,rbp", "cmp~rdi,rax", "cmovnb~rax,rdi", "mov~[rsp+0],rax"]], [0, 0, 184, 0, 0, 2, 0, 1, 29, 22, 0.09380141010575793, ["cmp     edi, ecx", "jz      loc_9ACB; jumptable 0000000000009A55 case 0"], ["cmp~edi,ecx", "jz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 16, 7, 0.05666862514688602, ["mov     rsi, cp_0"], ["mov~rsi,cp_0"]], [1, 0, 184, 0, 0, 3, 0, 1, 21, 23, 0.4382784958871916, ["lea     ecx, [c-25h]", "cmp     cl, 53h ; 'S'; switch 84 cases", "ja      loc_9FFD; jumptable 0000000000009A55 default case"], ["lea~ecx,[c-25h]+0]", "cmp~cl,0", "ja~FOO"]], [0, 0, 184, 0, 0, 3, 0, 1, 17, 31, 0.03025851938895418, ["movzx   ebx, byte ptr [rcx]", "mov     rbp, rcx", "jmp     loc_99DF"], ["movzx~ebx,<TAG>", "mov~rbp,rcx", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 20, 32, 0.008049353701527614, ["cmp     edi, 5", "jz      loc_9E3A"], ["cmp~edi,0", "jz~FOO"]], [0, 0, 184, 0, 1, 7, 0, 1, 29, 27, 0.010443595769682726, ["mov     rdi, rax; ptr", "call    _realloc", "mov     ecx, dword ptr [rsp+78h+cp]", "mov     rdx, [rsp+78h+max_width_length]", "mov     r10, [rsp+78h+a_allocated]", "mov     r9, [rsp+78h+d_allocated]", "mov     r8, [rsp+78h+var_40]"], ["mov~rdi,rax", "call~FOO", "mov~ecx,[word ptr [rsp+0]", "mov~rdx,[rsp+0]", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]"]], [1, 0, 184, 1, 0, 9, 1, 1, 28, 28, 0.0254406580493537, ["mov     rsi, a_allocated_0", "mov     [rsp+78h+var_40], a_allocated_0", "mov     [rsp+78h+d_allocated], r9", "shl     rsi, 5; size", "test    rax, rax", "mov     [rsp+78h+a_allocated], r10", "mov     [rsp+78h+max_width_length], rdx", "mov     dword ptr [rsp+78h+cp], ecx", "jz      loc_A115"], ["mov~rsi,a_allocated_0", "mov~[rsp+0],a_allocated_0", "mov~[rsp+0],r9", "shl~rsi,0", "test~rax,rax", "mov~[rsp+0],r10", "mov~[rsp+0],rdx", "mov~[word ptr [rsp+0],ecx", "jz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 13, 15, 0.05666862514688602, ["mov     rdi, rax"], ["mov~rdi,rax"]], [2, 0, 184, 0, 0, 9, 1, 0, 12, 13, 0.14612220916568744, ["test    max_width_length_0, max_width_length_0", "mov     esi, 1", "mov     [dp+18h], rbp", "cmovz   max_width_length_0, rsi", "mov     [dp+20h], rax", "movzx   esi, byte ptr [rbp+1]", "lea     edi, [rsi-30h]", "cmp     dil, 9", "jbe     loc_9E45"], ["test~max_width_length_0,max_width_length_0", "mov~esi,0", "mov~[dp+0],rbp", "cmovz~max_width_length_0,rsi", "mov~[dp+0],rax", "movzx~esi,[yte ptr [rbp+0]", "lea~edi,[rsi-30h]+0]", "cmp~dil,0", "jbe~FOO"]], [2, 1, 184, 2, 0, 5, 0, 0, 18, 10, 0.010252643948296123, ["add     rcx, 1", "mov     dword ptr [rsi], 0", "add     rsi, 20h", "cmp     rcx, rbx", "jbe     short loc_9C38"], ["add~rcx,0", "mov~<TAG>,0", "add~rsi,<STR>", "cmp~rcx,rbx", "jbe~FOO"]], [1, 0, 184, 0, 0, 5, 0, 1, 17, 5, 0.008431257344300823, ["mov     rdi, [rsp+78h+arg_posn]", "cmp     rdi, 0FFFFFFFFFFFFFFFFh", "lea     rax, [rdi+1]", "mov     [dp+40h], rdi", "jz      loc_9FFD; jumptable 0000000000009A55 default case"], ["mov~rdi,[rsp+0]", "cmp~rdi,0", "lea~rax,[rdi+0]", "mov~[dp+0],rdi", "jz~FOO"]], [1, 0, 184, 0, 0, 3, 0, 1, 16, 4, 0.09952996474735605, ["mov     rbx, [dp+40h]", "cmp     rbx, 0FFFFFFFFFFFFFFFFh", "jz      loc_A238"], ["mov~rbx,[dp+0]", "cmp~rbx,0", "jz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 19, 9, 0.010663924794359578, ["mov     [a], rcx"], ["mov~<TAG>,rcx"]], [0, 0, 184, 1, 0, 5, 0, 1, 22, 22, 0.43434195064629855, ["lea     rsi, off_B24C", "movzx   ecx, cl", "movsxd  rcx, dword ptr [rsi+rcx*4]", "add     rcx, rsi", "jmp     rcx; switch jump"], ["lea~rsi,<TAG>", "movzx~ecx,cl", "movsxd~rcx,<TAG>", "add~rcx,rsi", "jmp~rcx"]], [2, 0, 184, 1, 0, 5, 0, 0, 14, 14, 0.05707990599294947, ["add     np, 1", "movzx   r11d, byte ptr [np]", "lea     ebx, [r11-30h]", "cmp     bl, 9", "jbe     short loc_9E48"], ["add~np,0", "movzx~r11d,<TAG>", "lea~ebx,[r11-30h]+0]", "cmp~bl,0", "jbe~FOO"]], [1, 0, 184, 1, 0, 5, 1, 1, 17, 8, 0.1394535840188014, ["shl     rbx, 5", "lea     rcx, [rax+rbx]", "mov     esi, [rcx]", "test    esi, esi", "jnz     loc_A0FF"], ["shl~rbx,0", "lea~rcx,<TAG>", "mov~esi,<TAG>", "test~esi,esi", "jnz~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 15, 13, 0.05749118683901293, ["cmp     r11b, 24h ; '$'", "jnz     loc_9B85"], ["cmp~r11b,0", "jnz~FOO"]], [1, 2, 185, 1, 1, 16, 1, 2, 0, 20, 0.0, ["push    r15", "push    r14", "mov     r15, a", "push    r13", "push    r12", "mov     r14, d", "push    rbp", "push    rbx", "mov     rbx, format", "mov     edi, 58h ; 'X'; size", "sub     rsp, 48h", "mov     qword ptr [d], 0", "call    _malloc", "test    rax, rax", "mov     [d+8], rax", "jz      out_of_memory_1"], ["push~r15", "push~r14", "mov~r15,a", "push~r13", "push~r12", "mov~r14,d", "push~rbp", "push~rbx", "mov~rbx,format", "mov~edi,<STR>", "sub~rsp,<STR>", "mov~<TAG>,0", "call~FOO", "test~rax,rax", "mov~[d+0],rax", "jz~FOO"]], [2, 0, 184, 0, 0, 3, 0, 0, 23, 28, 0.008578143360752051, ["mov     ecx, 10h; jumptable 0000000000009A55 case 46", "mov     ebx, 73h ; 's'", "nop     dword ptr [rax+00000000h]"], ["mov~ecx,0", "mov~ebx,0", "nop~[word ptr [rax+0]"]], [0, 0, 184, 0, 0, 1, 1, 0, 16, 17, 0.04274383078730905, ["xor     edi, edi"], ["xor~edi,edi"]], [1, 0, 184, 0, 0, 2, 0, 1, 24, 27, 0.18960047003525266, ["cmp     arg_index, 0FFFFFFFFFFFFFFFFh", "jz      loc_A0BB"], ["cmp~arg_index,0", "jz~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 23, 28, 0.028143360752056333, ["cmp     eax, 0Fh; jumptable 0000000000009A55 cases 51,74,80,83", "mov     ecx, 0Ah", "jg      loc_9A68"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 24, 28, 0.01471797884841363, ["test    al, 4", "jnz     loc_9A68"], ["test~al,0", "jnz~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 25, 28, 0.009841363102232667, ["cmp     eax, 7", "mov     ecx, 8", "jg      loc_9A68"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [2, 0, 184, 0, 0, 3, 1, 1, 26, 28, 0.004935370152761457, ["test    al, 2", "mov     ecx, 2", "jnz     loc_9A68"], ["test~al,0", "mov~ecx,0", "jnz~FOO"]], [4, 0, 184, 1, 0, 6, 2, 1, 27, 28, 0.0, ["and     eax, 1", "cmp     eax, 1", "sbb     ecx, ecx", "and     ecx, 2", "add     ecx, 4", "jmp     loc_9A68"], ["and~eax,0", "cmp~eax,0", "sbb~ecx,ecx", "and~ecx,0", "add~ecx,0", "jmp~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 23, 28, 0.028143360752056333, ["cmp     eax, 0Fh; jumptable 0000000000009A55 case 73", "mov     ecx, 16h", "jg      loc_9A68"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 24, 28, 0.01471797884841363, ["test    al, 4", "jnz     loc_9A68"], ["test~al,0", "jnz~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 25, 28, 0.009841363102232667, ["cmp     eax, 7", "mov     ecx, 15h", "jg      loc_9A68"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [1, 1, 184, 0, 0, 3, 1, 1, 26, 28, 0.004935370152761457, ["test    al, 2", "mov     ecx, 12h", "jnz     loc_9A68"], ["test~al,0", "mov~ecx,<STR>", "jnz~FOO"]], [2, 0, 184, 1, 0, 5, 2, 1, 27, 28, 0.0, ["xor     ecx, ecx", "test    al, 1", "setz    cl", "add     ecx, 13h", "jmp     loc_9A68"], ["xor~ecx,ecx", "test~al,0", "setz~cl", "add~ecx,0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 23, 28, 0.008578143360752051, ["mov     ecx, 11h; jumptable 0000000000009A55 case 75", "jmp     loc_9A68"], ["mov~ecx,0", "jmp~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 23, 28, 0.008578143360752051, ["mov     ecx, 0Eh; jumptable 0000000000009A55 case 30", "mov     ebx, 63h ; 'c'", "jmp     loc_9A68"], ["mov~ecx,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 184, 1, 0, 5, 1, 1, 23, 28, 0.008578143360752051, ["xor     ecx, ecx; jumptable 0000000000009A55 case 78", "cmp     eax, 7", "setnle  cl", "add     ecx, 0Fh", "jmp     loc_9A68"], ["xor~ecx,ecx", "cmp~eax,0", "setnle~cl", "add~ecx,0", "jmp~FOO"]], [2, 0, 184, 1, 0, 5, 1, 1, 23, 28, 0.008578143360752051, ["xor     ecx, ecx; jumptable 0000000000009A55 case 62", "cmp     eax, 7", "setnle  cl", "add     ecx, 0Dh", "jmp     loc_9A68"], ["xor~ecx,ecx", "cmp~eax,0", "setnle~cl", "add~ecx,0", "jmp~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 23, 28, 0.028143360752056333, ["cmp     eax, 0Fh; jumptable 0000000000009A55 cases 63,68", "mov     ecx, 9", "jg      loc_9A68"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 24, 28, 0.01471797884841363, ["test    al, 4", "jnz     loc_9A68"], ["test~al,0", "jnz~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 25, 28, 0.009841363102232667, ["cmp     eax, 7", "mov     ecx, 7", "jg      loc_9A68"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [2, 0, 184, 0, 0, 3, 1, 1, 26, 28, 0.004935370152761457, ["test    al, 2", "mov     ecx, 1", "jnz     loc_9A68"], ["test~al,0", "mov~ecx,0", "jnz~FOO"]], [4, 0, 184, 1, 0, 6, 2, 1, 27, 28, 0.0, ["and     eax, 1", "cmp     eax, 1", "sbb     ecx, ecx", "and     ecx, 2", "add     ecx, 3", "jmp     loc_9A68"], ["and~eax,0", "cmp~eax,0", "sbb~ecx,ecx", "and~ecx,0", "add~ecx,0", "jmp~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 23, 28, 0.013513513513513473, ["cmp     eax, 0Fh; jumptable 0000000000009A55 cases 28,32-34,60,64-66", "mov     ecx, 0Ch", "jg      loc_9A68"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [2, 0, 184, 1, 0, 5, 2, 1, 24, 28, 0.0, ["xor     ecx, ecx", "test    al, 4", "setnz   cl", "add     ecx, 0Bh", "jmp     loc_9A68"], ["xor~ecx,ecx", "test~al,0", "setnz~cl", "add~ecx,0", "jmp~FOO"]], [2, 0, 184, 0, 0, 5, 0, 1, 18, 7, 0.12690951821386606, ["mov     dword ptr [rcx], 5", "movzx   ebx, byte ptr [rbp+0]", "lea     rcx, [rbp+1]", "cmp     bl, 2Eh ; '.'", "jnz     loc_99DF"], ["mov~<TAG>,0", "movzx~ebx,[yte ptr [rbp+0]", "lea~rcx,[rbp+0]", "cmp~bl,0", "jnz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 25, 26, 0.1753819036427732, ["mov     [dp+50h], arg_index"], ["mov~[dp+0],arg_index"]], [1, 0, 184, 0, 0, 2, 0, 1, 18, 5, 0.05749118683901293, ["cmp     dil, 24h ; '$'", "jnz     loc_9CB7"], ["cmp~dil,0", "jnz~FOO"]], [2, 0, 184, 1, 0, 5, 0, 0, 17, 6, 0.05707990599294947, ["add     np, 1", "movzx   edi, byte ptr [np]", "lea     r11d, [rdi-30h]", "cmp     r11b, 9", "jbe     short loc_A262"], ["add~np,0", "movzx~edi,<TAG>", "lea~r11d,[rdi-30h]+0]", "cmp~r11b,0", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 1, 0, 19, 10, 0.04274383078730905, ["xor     r11d, r11d"], ["xor~r11d,r11d"]], [0, 0, 184, 0, 0, 3, 0, 1, 26, 26, 0.0051410105757931845, ["mov     arg_index, [rsp+78h+arg_posn]", "mov     [rsp+78h+arg_posn], arg_posn_0", "jmp     loc_9A77"], ["mov~arg_index,[rsp+0]", "mov~[rsp+0],arg_posn_0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 13, 7, 0.30608108108108106, ["cmp     bl, 2Eh ; '.'", "jz      loc_9C77"], ["cmp~bl,0", "jz~FOO"]], [0, 0, 184, 1, 0, 2, 0, 0, 18, 16, 0.0, ["lea     rsi, [n+n*4]", "add     rsi, rsi"], ["lea~rsi,<TAG>", "add~rsi,rsi"]], [2, 0, 184, 1, 0, 7, 0, 1, 17, 16, 0.043683901292596944, ["movsx   eax, sil", "mov     rbx, 1999999999999999h", "mov     rsi, rdx", "sub     eax, 30h ; '0'", "cmp     n, rbx", "cdqe", "ja      short loc_9E87"], ["movsx~eax,sil", "mov~rbx,0", "mov~rsi,rdx", "sub~eax,0", "cmp~n,rbx", "cdqe~", "ja~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 18, 15, 0.044506462984723855, ["mov     rbp, np"], ["mov~rbp,np"]], [1, 0, 184, 2, 0, 6, 0, 1, 27, 24, 0.18331374853113983, ["mov     rsi, [a]", "mov     r11, rsi", "shl     r11, 5", "add     r11, rax", "cmp     rsi, r13", "ja      short loc_9AB7"], ["mov~rsi,<TAG>", "mov~r11,rsi", "shl~r11,0", "add~r11,rax", "cmp~rsi,r13", "ja~FOO"]], [0, 0, 184, 0, 0, 2, 0, 1, 31, 25, 0.0254406580493537, ["mov     [a+8], memory", "jmp     loc_9A84"], ["mov~[a+0],memory", "jmp~FOO"]], [2, 0, 184, 1, 0, 6, 0, 1, 20, 9, 0.043683901292596944, ["mov     rdi, 1999999999999999h", "sub     eax, 30h ; '0'", "mov     rsi, rdx", "cmp     n, rdi", "cdqe", "ja      short loc_A29E"], ["mov~rdi,0", "sub~eax,0", "mov~rsi,rdx", "cmp~n,rdi", "cdqe~", "ja~FOO"]], [1, 0, 184, 0, 0, 2, 0, 0, 23, 6, 0.04471210340775558, ["cmp     bl, 9", "jbe     short loc_A280"], ["cmp~bl,0", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 28, 26, 0.009841363102232667, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [6, 0, 184, 0, 0, 10, 3, 1, 1, 19, 0.005346650998824912, ["mov     qword ptr [a], 0", "mov     qword ptr [a+8], 0", "xor     esi, esi", "mov     [rsp+78h+max_precision_length], 0", "xor     r10d, r10d", "xor     r8d, r8d", "mov     r9d, 1", "mov     [rsp+78h+arg_posn], 0", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "jmp     short loc_98AC"], ["mov~<TAG>,0", "mov~[word ptr [a+0],0", "xor~esi,esi", "mov~[rsp+0],0", "xor~r10d,r10d", "xor~r8d,r8d", "mov~r9d,0", "mov~[rsp+0],0", "mov~rdx,0", "jmp~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 21, 8, 0.044506462984723855, ["mov     rdi, np"], ["mov~rdi,np"]], [0, 0, 184, 1, 0, 2, 0, 0, 21, 9, 0.0, ["lea     rsi, [n+n*4]", "add     rsi, rsi"], ["lea~rsi,<TAG>", "add~rsi,rsi"]], [1, 0, 184, 2, 0, 9, 2, 1, 19, 14, 0.05543478260869565, ["xor     ebx, ebx", "add     rax, rsi", "movzx   esi, byte ptr [np+1]", "setb    bl", "add     np, 1", "mov     rdi, rax", "test    rbx, rbx", "lea     r11d, [rsi-30h]", "jnz     loc_A21A"], ["xor~ebx,ebx", "add~rax,rsi", "movzx~esi,[yte ptr [np+0]", "setb~bl", "add~np,0", "mov~rdi,rax", "test~rbx,rbx", "lea~r11d,[rsi-30h]+0]", "jnz~FOO"]], [1, 0, 184, 1, 0, 6, 0, 1, 21, 15, 0.005141010575793185, ["movsx   eax, sil", "mov     rbp, np", "mov     rsi, rdx", "sub     eax, 30h ; '0'", "cdqe", "jmp     loc_9E8A"], ["movsx~eax,sil", "mov~rbp,np", "mov~rsi,rdx", "sub~eax,0", "cdqe~", "jmp~FOO"]], [1, 0, 184, 0, 0, 3, 0, 1, 3, 17, 0.43484136310223265, ["cmp     cl, 25h ; '%'", "lea     rbp, [cp_0+1]", "jz      short loc_98E0"], ["cmp~cl,0", "lea~rbp,[cp_0+0]", "jz~FOO"]], [0, 0, 184, 0, 0, 3, 1, 1, 2, 18, 0.43967391304347825, ["movzx   ecx, byte ptr [cp_0]", "test    cl, cl", "jnz     short loc_98A0"], ["movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 4, 19, 0.42851057579318447, ["mov     rbx, rbp"], ["mov~rbx,rbp"]], [0, 0, 184, 0, 0, 3, 0, 1, 27, 20, 0.015349588719153937, ["mov     [d+8], memory", "mov     rsi, [d]", "jmp     loc_98A9"], ["mov~[d+0],memory", "mov~rsi,<TAG>", "jmp~FOO"]], [0, 0, 184, 0, 0, 2, 0, 1, 24, 20, 0.4071680376028202, ["mov     rax, [d+8]", "jmp     loc_98A9"], ["mov~rax,[d+0]", "jmp~FOO"]], [0, 0, 184, 0, 0, 2, 1, 1, 30, 26, 0.026674500587544066, ["test    memory, memory", "jz      loc_A13A"], ["test~memory,memory", "jz~FOO"]], [0, 0, 184, 0, 1, 8, 0, 2, 29, 27, 0.010443595769682726, ["mov     rdi, memory_size; size", "call    _malloc", "mov     r8, [rsp+78h+var_40]", "mov     r9, [rsp+78h+d_allocated]", "mov     r10, [rsp+78h+a_allocated]", "mov     rdx, [rsp+78h+max_width_length]", "mov     ecx, dword ptr [rsp+78h+cp]", "jmp     loc_A0A9"], ["mov~rdi,memory_size", "call~FOO", "mov~r8,[rsp+0]", "mov~r9,[rsp+0]", "mov~r10,[rsp+0]", "mov~rdx,[rsp+0]", "mov~ecx,[word ptr [rsp+0]", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 0, 0, 20, 13, 0.04471210340775558, ["cmp     r11b, 9", "jbe     short loc_9E65"], ["cmp~r11b,0", "jbe~FOO"]], [2, 1, 184, 2, 0, 5, 0, 0, 29, 25, 0.010252643948296123, ["add     rsi, 1", "mov     dword ptr [r11], 0", "add     r11, 20h", "cmp     rsi, r13", "jbe     short loc_9AA0"], ["add~rsi,0", "mov~<TAG>,0", "add~r11,<STR>", "cmp~rsi,r13", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 30, 24, 0.010663924794359576, ["mov     [a], rsi"], ["mov~<TAG>,rsi"]], [1, 0, 184, 0, 0, 2, 0, 1, 20, 16, 0.006169212690951821, ["cmp     r11b, 9", "ja      loc_9FFD; jumptable 0000000000009A55 default case"], ["cmp~r11b,0", "ja~FOO"]], [1, 0, 184, 0, 0, 3, 0, 1, 24, 5, 0.044594594594594604, ["lea     rbx, [n-1]", "cmp     rbx, 0FFFFFFFFFFFFFFFDh", "ja      loc_9FFD; jumptable 0000000000009A55 default case"], ["lea~rbx,[n-1]+0]", "cmp~rbx,0", "ja~FOO"]], [1, 0, 184, 2, 0, 9, 2, 1, 22, 7, 0.05543478260869565, ["xor     ebp, ebp", "add     rsi, rax", "setb    bpl", "add     np, 1", "movsx   eax, byte ptr [rcx]", "test    rbp, rbp", "mov     r11, rsi", "lea     ebx, [rax-30h]", "jnz     short loc_A2DD"], ["xor~ebp,ebp", "add~rsi,rax", "setb~bpl", "add~np,0", "movsx~eax,<TAG>", "test~rbp,rbp", "mov~r11,rsi", "lea~ebx,[rax-30h]+0]", "jnz~FOO"]], [1, 0, 184, 1, 0, 5, 0, 1, 24, 8, 0.005141010575793185, ["sub     eax, 30h ; '0'", "mov     rsi, rdx", "mov     rdi, np", "cdqe", "jmp     short loc_A2A1"], ["sub~eax,0", "mov~rsi,rdx", "mov~rdi,np", "cdqe~", "jmp~FOO"]], [2, 0, 184, 1, 0, 4, 0, 1, 21, 12, 0.044594594594594604, ["mov     rbx, n", "sub     rbx, 1", "cmp     rbx, 0FFFFFFFFFFFFFFFDh", "ja      loc_9FFD; jumptable 0000000000009A55 default case"], ["mov~rbx,n", "sub~rbx,0", "cmp~rbx,0", "ja~FOO"]], [1, 0, 184, 1, 0, 5, 1, 1, 28, 23, 0.18495887191539365, ["shl     r13, 5", "lea     rsi, [rax+r13]", "mov     edi, [rsi]", "test    edi, edi", "jnz     loc_A031"], ["shl~r13,0", "lea~rsi,<TAG>", "mov~edi,<TAG>", "test~edi,edi", "jnz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 29, 22, 0.08660399529964748, ["mov     [rsi], ecx"], ["mov~<TAG>,ecx"]], [1, 0, 184, 1, 0, 3, 0, 1, 22, 11, 0.044594594594594604, ["mov     [dp+28h], rbx", "add     rbp, 2", "jmp     loc_9BAA"], ["mov~[dp+0],rbx", "add~rbp,0", "jmp~FOO"]], [0, 0, 1, 0, 0, 7, 1, 0, 3, -1, 0.00024970622796709755, ["lea     rdx, [rsi+rsi*4]", "lea     rdx, [rsi+rdx*2]", "mov     [rax+rdx*8], cp_0", "mov     rax, [rsp+78h+max_precision_length]", "mov     [d+10h], max_width_length_0", "mov     [d+18h], rax", "xor     eax, eax"], ["lea~rdx,<TAG>", "lea~rdx,<TAG>", "mov~<TAG>,cp_0", "mov~rax,[rsp+0]", "mov~[d+0],max_width_length_0", "mov~[d+0],rax", "xor~eax,eax"]], [0, 0, 184, 0, 0, 3, 0, 0, 17, 3, 0.14703290246768508, ["cmp     a_allocated_0, rbx", "mov     rax, [a+8]", "jbe     loc_A180"], ["cmp~a_allocated_0,rbx", "mov~rax,[a+0]", "jbe~FOO"]], [0, 0, 184, 0, 0, 3, 0, 1, 18, 4, 0.005141010575793185, ["mov     rbx, [rsp+78h+arg_posn]", "mov     [rsp+78h+arg_posn], arg_posn_0", "jmp     loc_9CC6"], ["mov~rbx,[rsp+0]", "mov~[rsp+0],arg_posn_0", "jmp~FOO"]], [0, 0, 184, 0, 0, 3, 0, 1, 25, 4, 0.044594594594594604, ["mov     [dp+40h], rbx", "lea     rcx, [rdi+2]", "jmp     loc_9CC6"], ["mov~[dp+0],rbx", "lea~rcx,[rdi+0]", "jmp~FOO"]], [1, 0, 184, 0, 0, 5, 0, 1, 25, 27, 0.009665099882491186, ["mov     rsi, [rsp+78h+arg_posn]", "cmp     rsi, 0FFFFFFFFFFFFFFFFh", "lea     rax, [rsi+1]", "mov     [dp+50h], rsi", "jz      loc_9FFD; jumptable 0000000000009A55 default case"], ["mov~rsi,[rsp+0]", "cmp~rsi,0", "lea~rax,[rsi+0]", "mov~[dp+0],rsi", "jz~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 2, -1, 0.0, ["add     rsp, 48h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     d", "pop     a", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~d", "pop~a", "retn"]], [2, 0, 1, 0, 1, 4, 0, 2, 1, -1, 0.001189776733254994, ["call    ___errno_location", "mov     dword ptr [rax], 0Ch", "mov     eax, 0FFFFFFFFh", "jmp     loc_98CE"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 23, 9, 0.006169212690951821, ["cmp     bl, 9", "ja      loc_9FFD; jumptable 0000000000009A55 default case"], ["cmp~bl,0", "ja~FOO"]], [0, 0, 184, 0, 0, 7, 0, 0, 23, 21, 0.43278495887191537, ["mov     [dp+48h], bl; jumptable 0000000000009A55 case 0", "mov     rax, [d]", "mov     [dp+8], rbp", "lea     rsi, [rax+1]", "cmp     rsi, r9", "mov     [d], rsi", "jb      short loc_9B55"], ["mov~[dp+0],bl", "mov~rax,<TAG>", "mov~[dp+0],rbp", "lea~rsi,[rax+0]", "cmp~rsi,r9", "mov~<TAG>,rsi", "jb~FOO"]], [1, 0, 184, 2, 0, 6, 0, 1, 18, 33, 0.1422150411280846, ["mov     rsi, [a]", "mov     rdi, rsi", "shl     rdi, 5", "add     rdi, rax", "cmp     rsi, rbx", "ja      short loc_9CFE"], ["mov~rsi,<TAG>", "mov~rdi,rsi", "shl~rdi,0", "add~rdi,rax", "cmp~rsi,rbx", "ja~FOO"]], [0, 0, 184, 0, 0, 2, 0, 1, 22, 34, 0.025440658049353703, ["mov     [a+8], memory", "jmp     loc_9CD3"], ["mov~[a+0],memory", "jmp~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 19, 35, 0.009841363102232667, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [1, 0, 184, 0, 0, 2, 0, 1, 13, 21, 0.008372502937720329, ["cmp     dil, 9", "ja      loc_9FFD; jumptable 0000000000009A55 default case"], ["cmp~dil,0", "ja~FOO"]], [1, 0, 184, 2, 0, 9, 2, 1, 12, 19, 0.057638072855464156, ["movzx   ebx, byte ptr [rbp+1]", "xor     r11d, r11d", "add     rax, rdi", "setb    r11b", "add     rbp, 1", "mov     rcx, rax", "test    r11, r11", "lea     edi, [rbx-30h]", "jnz     loc_A0E2"], ["movzx~ebx,[yte ptr [rbp+0]", "xor~r11d,r11d", "add~rax,rdi", "setb~r11b", "add~rbp,0", "mov~rcx,rax", "test~r11,r11", "lea~edi,[rbx-30h]+0]", "jnz~FOO"]], [0, 0, 184, 0, 0, 2, 1, 1, 24, 23, 0.021063454759106932, ["test    r9, r9", "js      loc_A13A"], ["test~r9,r9", "js~FOO"]], [2, 1, 184, 2, 0, 5, 0, 0, 20, 34, 0.010252643948296123, ["add     rsi, 1", "mov     dword ptr [rdi], 0", "add     rdi, 20h", "cmp     rsi, rbx", "jbe     short loc_9CE8"], ["add~rsi,0", "mov~<TAG>,0", "add~rdi,<STR>", "cmp~rsi,rbx", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 21, 33, 0.010663924794359578, ["mov     [a], rsi"], ["mov~<TAG>,rsi"]], [1, 0, 184, 1, 0, 5, 1, 1, 19, 32, 0.14386016451233846, ["shl     rbx, 5", "lea     rsi, [rax+rbx]", "mov     edi, [rsi]", "test    edi, edi", "jnz     loc_A16E"], ["shl~rbx,0", "lea~rsi,<TAG>", "mov~edi,<TAG>", "test~edi,edi", "jnz~FOO"]], [1, 0, 184, 1, 0, 7, 0, 1, 25, 22, 0.014923619271445358, ["add     r9, r9", "mov     rax, 2E8BA2E8BA2E8BAh", "mov     [rsp+78h+a_allocated], a_allocated_0", "cmp     d_allocated_0, rax", "mov     [rsp+78h+max_width_length], r10", "mov     [rsp+78h+cp], rdx", "ja      loc_A13A"], ["add~r9,r9", "mov~rax,0", "mov~[rsp+0],a_allocated_0", "cmp~d_allocated_0,rax", "mov~[rsp+0],r10", "mov~[rsp+0],rdx", "ja~FOO"]], [0, 0, 184, 0, 0, 3, 0, 1, 19, 8, 0.005992949471210342, ["movzx   ebx, byte ptr [rbp+0]", "lea     rcx, [rbp+1]", "jmp     loc_99D6"], ["movzx~ebx,[yte ptr [rbp+0]", "lea~rcx,[rbp+0]", "jmp~FOO"]], [0, 0, 184, 0, 1, 8, 0, 2, 20, 0, 0.010575793184488837, ["mov     rdi, memory_size; size", "call    _malloc", "mov     r8, [rsp+78h+var_40]", "mov     r9, [rsp+78h+d_allocated]", "mov     r10, [rsp+78h+a_allocated]", "mov     rdx, [rsp+78h+max_width_length]", "mov     rcx, [rsp+78h+cp]", "jmp     loc_A1E7"], ["mov~rdi,memory_size", "call~FOO", "mov~r8,[rsp+0]", "mov~r9,[rsp+0]", "mov~r10,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rcx,[rsp+0]", "jmp~FOO"]], [1, 0, 184, 1, 0, 9, 1, 1, 19, 1, 0.025705052878965923, ["mov     rsi, a_allocated_0", "mov     [rsp+78h+var_40], a_allocated_0", "mov     [rsp+78h+d_allocated], r9", "shl     rsi, 5; size", "test    rax, rax", "mov     [rsp+78h+a_allocated], max_width_length_0", "mov     [rsp+78h+max_width_length], rdx", "mov     [rsp+78h+cp], cp_0", "jz      loc_A2F3"], ["mov~rsi,a_allocated_0", "mov~[rsp+0],a_allocated_0", "mov~[rsp+0],r9", "shl~rsi,0", "test~rax,rax", "mov~[rsp+0],max_width_length_0", "mov~[rsp+0],rdx", "mov~[rsp+0],cp_0", "jz~FOO"]], [1, 0, 184, 0, 0, 4, 0, 1, 20, 31, 0.1312573443008226, ["mov     dword ptr [rsi], 5", "mov     rbp, rcx", "movzx   ebx, byte ptr [rcx]", "jmp     loc_99DF"], ["mov~<TAG>,0", "mov~rbp,rcx", "movzx~ebx,<TAG>", "jmp~FOO"]], [0, 0, 184, 0, 0, 2, 0, 0, 6, 18, 0.06304347826086956, ["mov     rax, cp_0", "nop     dword ptr [rax+00h]"], ["mov~rax,cp_0", "nop~[word ptr [rax+0]"]], [0, 0, 184, 0, 0, 1, 0, 1, 5, 19, 0.0626321974148061, ["jmp     loc_9D21"], ["jmp~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 16, 28, 0.45193889541715626, ["cmp     bl, 4Ch ; 'L'", "jz      short loc_9A30"], ["cmp~bl,0", "jz~FOO"]], [2, 0, 184, 1, 0, 5, 0, 0, 7, 17, 0.06345475910693302, ["add     np, 1", "movzx   ecx, byte ptr [np]", "lea     esi, [rcx-30h]", "cmp     sil, 9", "jbe     short loc_9D28"], ["add~np,0", "movzx~ecx,<TAG>", "lea~esi,[rcx-30h]+0]", "cmp~sil,0", "jbe~FOO"]], [6, 0, 184, 0, 0, 17, 0, 1, 4, 16, 0.4350470035252644, ["lea     c, [rsi+rsi*4]", "mov     r13, rdx", "lea     rcx, [rsi+rcx*2]", "lea     r12, [rax+rcx*8]", "mov     [dp], rbx", "mov     dword ptr [dp+10h], 0", "mov     qword ptr [dp+18h], 0", "mov     qword ptr [dp+20h], 0", "mov     [dp+28h], rdx", "mov     qword ptr [dp+30h], 0", "mov     qword ptr [dp+38h], 0", "mov     [dp+40h], rdx", "mov     [dp+50h], rdx", "movzx   ebx, byte ptr [rbx+1]", "lea     eax, [rbx-30h]", "cmp     al, 9", "ja      short loc_9966"], ["lea~c,<TAG>", "mov~r13,rdx", "lea~rcx,<TAG>", "lea~r12,<TAG>", "mov~<TAG>,rbx", "mov~[word ptr [dp+0],0", "mov~[word ptr [dp+0],0", "mov~[word ptr [dp+0],0", "mov~[dp+0],rdx", "mov~[word ptr [dp+0],0", "mov~[word ptr [dp+0],0", "mov~[dp+0],rdx", "mov~[dp+0],rdx", "movzx~ebx,[yte ptr [rbx+0]", "lea~eax,[rbx-30h]+0]", "cmp~al,0", "ja~FOO"]], [1, 0, 184, 0, 0, 3, 0, 1, 8, 16, 0.06386603995299647, ["cmp     cl, 24h ; '$'", "mov     r13, rdx", "jnz     loc_9966"], ["cmp~cl,0", "mov~r13,rdx", "jnz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 17, -1, 0.021107520564042304, ["test    rax, rax", "jz      short loc_A14B"], ["test~rax,rax", "jz~FOO"]], [1, 0, 184, 1, 0, 7, 0, 1, 16, 14, 0.03381316098707403, ["add     a_allocated_0, a_allocated_0", "lea     rcx, [rbx+1]", "cmp     a_allocated_0, rbx", "cmovbe  a_allocated_0, rcx", "mov     rcx, 7FFFFFFFFFFFFFFh", "cmp     a_allocated_0, rcx", "ja      out_of_memory"], ["add~a_allocated_0,a_allocated_0", "lea~rcx,[rbx+0]", "cmp~a_allocated_0,rbx", "cmovbe~a_allocated_0,rcx", "mov~rcx,0", "cmp~a_allocated_0,rcx", "ja~FOO"]], [1, 0, 184, 1, 0, 7, 0, 1, 18, 2, 0.03108108108108108, ["add     a_allocated_0, a_allocated_0", "lea     rsi, [rbx+1]", "cmp     a_allocated_0, rbx", "cmovbe  a_allocated_0, rsi", "mov     rsi, 7FFFFFFFFFFFFFFh", "cmp     a_allocated_0, rsi", "ja      short out_of_memory"], ["add~a_allocated_0,a_allocated_0", "lea~rsi,[rbx+0]", "cmp~a_allocated_0,rbx", "cmovbe~a_allocated_0,rsi", "mov~rsi,0", "cmp~a_allocated_0,rsi", "ja~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 20, -1, 0.007917156286721504, ["mov     rax, [a+8]"], ["mov~rax,[a+0]"]], [1, 0, 184, 0, 0, 2, 0, 1, 6, 14, 0.46630434782608693, ["cmp     bl, 2Dh ; '-'", "jz      short loc_9980"], ["cmp~bl,0", "jz~FOO"]], [1, 0, 184, 0, 0, 4, 0, 1, 5, 15, 0.4754994124559342, ["lea     rax, [rbp+1]", "cmp     bl, 27h ; '''", "mov     rcx, rax", "jnz     short loc_9940"], ["lea~rax,[rbp+0]", "cmp~bl,0", "mov~rcx,rax", "jnz~FOO"]], [0, 0, 184, 0, 0, 1, 1, 0, 9, 22, 0.04494712103407755, ["xor     ecx, ecx"], ["xor~ecx,ecx"]], [0, 0, 4, 0, 1, 2, 0, 1, 18, -1, 0.0, ["mov     rdi, rax; ptr", "call    _free"], ["mov~rdi,rax", "call~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 7, 13, 0.46166274970622795, ["cmp     bl, 2Bh ; '+'", "jz      short loc_9990"], ["cmp~bl,0", "jz~FOO"]], [0, 1, 184, 0, 0, 2, 0, 1, 8, 12, 0.4569623971797885, ["cmp     bl, 20h ; ' '", "jz      short loc_99A0"], ["cmp~bl,<STR>", "jz~FOO"]], [1, 0, 184, 1, 1, 12, 1, 2, 26, 21, 0.015129259694477086, ["lea     rax, [d_allocated_0+d_allocated_0*4]", "mov     rdi, [d+8]; ptr", "mov     [rsp+78h+d_allocated], d_allocated_0", "lea     rsi, [d_allocated_0+rax*2]", "shl     rsi, 3; size", "call    _realloc", "test    memory, memory", "mov     r9, [rsp+78h+d_allocated]", "mov     rdx, [rsp+78h+cp]", "mov     r10, [rsp+78h+max_width_length]", "mov     r8, [rsp+78h+a_allocated]", "jz      loc_A13A"], ["lea~rax,<TAG>", "mov~rdi,[d+0]", "mov~[rsp+0],d_allocated_0", "lea~rsi,<TAG>", "shl~rsi,0", "call~FOO", "test~memory,memory", "mov~r9,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r10,[rsp+0]", "mov~r8,[rsp+0]", "jz~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 9, 11, 0.45220329024676853, ["cmp     bl, 23h ; '#'", "jz      short loc_99B0"], ["cmp~bl,0", "jz~FOO"]], [0, 0, 2, 0, 1, 1, 0, 1, 19, -1, 0.0, ["call    _free"], ["call~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 18, -1, 0.011236780258519388, ["mov     rdi, [d+8]; ptr", "test    rdi, rdi", "jz      short out_of_memory_1"], ["mov~rdi,[d+0]", "test~rdi,rdi", "jz~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 10, 10, 0.44738542890716804, ["cmp     bl, 30h ; '0'", "jnz     short loc_99C0"], ["cmp~bl,0", "jnz~FOO"]], [0, 0, 184, 0, 0, 2, 1, 1, 21, 35, 0.026938895417156286, ["test    memory, memory", "jz      loc_A13A"], ["test~memory,memory", "jz~FOO"]], [2, 0, 184, 1, 0, 7, 0, 1, 10, 21, 0.04588719153936545, ["movsx   eax, bl", "mov     rsi, 1999999999999999h", "mov     rdi, rdx", "sub     eax, 30h ; '0'", "cmp     n, rsi", "cdqe", "ja      short loc_9D67"], ["movsx~eax,bl", "mov~rsi,0", "mov~rdi,rdx", "sub~eax,0", "cmp~n,rsi", "cdqe~", "ja~FOO"]], [1, 0, 184, 0, 0, 2, 0, 0, 13, 18, 0.04471210340775558, ["cmp     dil, 9", "jbe     short loc_9D46"], ["cmp~dil,0", "jbe~FOO"]], [0, 1, 184, 0, 0, 2, 1, 0, 11, 17, 0.0003231492361927144, ["or      dword ptr [dp+10h], 20h", "nop"], ["or~[word ptr [dp+0],<STR>", "nop"]], [0, 0, 184, 0, 0, 2, 0, 0, 7, 16, 0.03296122209165688, ["movzx   ebx, byte ptr [rax]", "mov     rbp, rax"], ["movzx~ebx,<TAG>", "mov~rbp,rax"]], [1, 0, 184, 0, 0, 2, 1, 1, 6, 17, 0.004641598119858989, ["or      dword ptr [dp+10h], 1", "jmp     short loc_9960"], ["or~[word ptr [dp+0],0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 7, 17, 8.813160987074031e-05, ["or      dword ptr [dp+10h], 2", "jmp     short loc_9960"], ["or~[word ptr [dp+0],0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 8, 17, 0.00014688601645123384, ["or      dword ptr [dp+10h], 4", "jmp     short loc_9960"], ["or~[word ptr [dp+0],0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 9, 17, 0.00020564042303172737, ["or      dword ptr [dp+10h], 8", "jmp     short loc_9960"], ["or~[word ptr [dp+0],0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 10, 17, 0.0002643948296122209, ["or      dword ptr [dp+10h], 10h", "jmp     short loc_9960"], ["or~[word ptr [dp+0],0", "jmp~FOO"]], [0, 0, 184, 1, 0, 2, 0, 0, 11, 21, 0.0, ["lea     rdi, [n+n*4]", "add     rdi, rdi"], ["lea~rdi,<TAG>", "add~rdi,rdi"]], [0, 0, 184, 0, 0, 1, 0, 0, 11, 20, 0.04670975323149236, ["mov     rsi, rbp"], ["mov~rsi,rbp"]], [0, 0, 184, 0, 0, 3, 0, 1, 15, 16, 0.0445945945945946, ["lea     rbp, [rsi+2]", "movzx   ebx, byte ptr [rsi+2]", "jmp     loc_9966"], ["lea~rbp,[rsi+0]", "movzx~ebx,[yte ptr [rsi+0]", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 11, 9, 0.44250881316098706, ["cmp     bl, 2Ah ; '*'", "jz      loc_9B5E"], ["cmp~bl,0", "jz~FOO"]], [1, 0, 184, 1, 0, 6, 0, 1, 14, 20, 0.0051410105757931845, ["movsx   eax, bl", "mov     rdi, rdx", "mov     rsi, rbp", "sub     eax, 30h ; '0'", "cdqe", "jmp     loc_9D6A"], ["movsx~eax,bl", "mov~rdi,rdx", "mov~rsi,rbp", "sub~eax,0", "cdqe~", "jmp~FOO"]], [1, 0, 184, 0, 0, 5, 0, 1, 13, 12, 0.10005875440658049, ["mov     rdi, [rsp+78h+arg_posn]", "cmp     rdi, 0FFFFFFFFFFFFFFFFh", "lea     rcx, [rdi+1]", "mov     [dp+28h], rdi", "jz      loc_9FFD; jumptable 0000000000009A55 default case"], ["mov~rdi,[rsp+0]", "cmp~rdi,0", "lea~rcx,[rdi+0]", "mov~[dp+0],rdi", "jz~FOO"]], [2, 0, 184, 1, 0, 4, 0, 1, 14, 17, 0.0445945945945946, ["mov     r13, n", "sub     r13, 1", "cmp     r13, 0FFFFFFFFFFFFFFFDh", "ja      loc_9FFD; jumptable 0000000000009A55 default case"], ["mov~r13,n", "sub~r13,0", "cmp~r13,0", "ja~FOO"]], [0, 0, 184, 0, 0, 3, 0, 0, 14, 11, 0.0949764982373678, ["mov     rbx, [rsp+78h+arg_posn]", "mov     rbp, cp_0", "mov     [rsp+78h+arg_posn], arg_posn_0"], ["mov~rbx,[rsp+0]", "mov~rbp,cp_0", "mov~[rsp+0],arg_posn_0"]], [0, 0, 184, 1, 0, 6, 0, 0, 15, 9, 0.010634547591069332, ["mov     rsi, cp_0", "lea     rcx, [rbp+2]", "mov     rbp, cp_0", "sub     rsi, rdi", "cmp     max_width_length_0, rsi", "cmovb   max_width_length_0, rsi"], ["mov~rsi,cp_0", "lea~rcx,[rbp+0]", "mov~rbp,cp_0", "sub~rsi,rdi", "cmp~max_width_length_0,rsi", "cmovb~max_width_length_0,rsi"]], [1, 0, 184, 0, 0, 4, 0, 0, 14, 10, 0.015188014101057579, ["movzx   esi, byte ptr [cp_0]", "lea     ecx, [rsi-30h]", "cmp     cl, 9", "jbe     short loc_9DD0"], ["movzx~esi,<TAG>", "lea~ecx,[rsi-30h]+0]", "cmp~cl,0", "jbe~FOO"]], [2, 0, 184, 1, 0, 6, 0, 0, 13, 10, 0.02444183313748531, ["mov     [dp+18h], rbp", "movzx   esi, byte ptr [rbp+0]", "mov     rdi, rbp", "sub     esi, 30h ; '0'", "cmp     sil, 9", "jbe     short loc_9DD7"], ["mov~[dp+0],rbp", "movzx~esi,[yte ptr [rbp+0]", "mov~rdi,rbp", "sub~esi,0", "cmp~sil,0", "jbe~FOO"]], [1, 0, 184, 0, 0, 3, 0, 0, 12, 8, 0.2918331374853114, ["lea     esi, [rbx-30h]", "cmp     sil, 9", "jbe     loc_9DAF"], ["lea~esi,[rbx-30h]+0]", "cmp~sil,0", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 0, 1, 14, 9, 0.010076380728554641, ["jmp     short loc_9DF6"], ["jmp~FOO"]], [1, 0, 184, 1, 0, 2, 0, 0, 15, 11, 0.0, ["mov     rbp, cp_0", "add     cp_0, 1"], ["mov~rbp,cp_0", "add~cp_0,0"]], [0, 0, 184, 0, 0, 3, 0, 1, 15, 8, 0.026498237367802588, ["mov     [dp+20h], rbp", "movzx   ebx, byte ptr [rbp+0]", "jmp     loc_99D6"], ["mov~[dp+0],rbp", "movzx~ebx,[yte ptr [rbp+0]", "jmp~FOO"]], [0, 0, 184, 0, 1, 7, 0, 1, 20, 36, 0.010575793184488837, ["mov     rdi, rax; ptr", "call    _realloc", "mov     rcx, [rsp+78h+cp]", "mov     rdx, [rsp+78h+max_width_length]", "mov     r10, [rsp+78h+a_allocated]", "mov     r9, [rsp+78h+d_allocated]", "mov     r8, [rsp+78h+var_40]"], ["mov~rdi,rax", "call~FOO", "mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]"]]], "func_feature": [14, 58, 138, 1, 186, 294, 1, 687, 0.08677, 1, 63], "succs": [[19, 7], [0], [0, 135], [0], [0], [8, 14], [5, 14], [19], [11, 38], [35, 23], [9, 29], [14], [20], [12, 21], [16], [6, 14], [25], [16], [16], [30, 31], [24, 148], [20], [35, 22], [22], [32], [17, 141], [25], [145, 42], [88, 27], [37, 47], [121], [30], [34, 51], [32, 146], [45], [39], [1, 124], [81], [49, 4], [26], [3, 39], [103], [104, 41], [50], [43, 175], [48, 45], [4, 118], [117, 46], [51], [67, 68, 69, 70, 71, 76, 62, 54, 57, 124, 4], [50, 52], [2, 78], [175, 55], [122, 93], [56], [86], [120, 79], [56, 58], [56, 59], [56, 60], [56, 61], [56], [56, 63], [56, 64], [56, 65], [56, 66], [56], [56], [56], [56], [56], [56, 72], [56, 73], [56, 74], [56, 75], [56], [56, 77], [56], [10, 26], [28], [82, 47], [80, 81], [90], [28], [10, 26], [87], [85, 87], [96], [113, 92], [88], [94, 95], [90, 109], [106], [99], [110], [94], [105, 108], [96], [100, 143], [98, 116], [99], [100], [100], [89, 148], [103], [112, 86], [106, 107], [113], [97, 4], [4, 119], [123, 91], [110], [115, 4], [114, 36], [124], [33], [121], [147, 125], [117], [117], [83, 4], [], [121], [4, 111], [130, 102], [133, 127], [125], [131], [4, 174], [128, 162], [148, 134], [131, 132], [133], [40, 138], [155, 148], [84], [160], [136, 185], [26], [142], [139], [18, 15], [144, 142], [140, 150], [150, 151], [152, 158], [145, 13], [145, 137], [145], [153, 166], [149, 165], [161], [158], [154, 167], [168, 156], [148, 101], [169, 159], [122], [122, 157], [163, 173], [148, 126], [170, 171], [176, 161], [164], [150], [164], [164], [164], [164], [164], [171], [129], [150], [44, 181], [129], [177, 4], [4, 172], [33], [184], [178, 183], [179, 182], [84, 180], [184], [179], [84], [160]], "fname": "printf_parse", "n_num": 186}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 0, 0, 0, 0.16666666666666666, ["xor     ebx, ebx", "nop     dword ptr [rax+rax+00000000h]"], ["xor~ebx,ebx", "nop~[word ptr [rax+0]"]], [2, 0, 3, 2, 1, 17, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r15, rdx", "push    r13", "push    r12", "lea     r12, __frame_dummy_init_array_entry", "push    rbp", "lea     rbp, __do_global_dtors_aux_fini_array_entry", "push    rbx", "mov     r13d, edi", "mov     r14, rsi", "sub     rbp, r12", "sub     rsp, 8", "sar     rbp, 3", "call    _init_proc", "test    rbp, rbp", "jz      short loc_A376"], ["push~r15", "push~r14", "mov~r15,rdx", "push~r13", "push~r12", "lea~r12,<TAG>", "push~rbp", "lea~rbp,<TAG>", "push~rbx", "mov~r13d,edi", "mov~r14,rsi", "sub~rbp,r12", "sub~rsp,0", "sar~rbp,0", "call~FOO", "test~rbp,rbp", "jz~FOO"]], [1, 0, 2, 1, 1, 7, 0, 2, 2, 1, 0.16666666666666666, ["mov     rdx, r15", "mov     rsi, r14", "mov     edi, r13d", "call    qword ptr [r12+rbx*8]", "add     rbx, 1", "cmp     rbp, rbx", "jnz     short loc_A360"], ["mov~rdx,r15", "mov~rsi,r14", "mov~edi,r13d", "call~<TAG>", "add~rbx,0", "cmp~rbp,rbx", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 5, 0, 34, 0.08333, 2, 4], "succs": [[2], [0, 3], [2, 3], []], "fname": "__libc_csu_init", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_csu_fini", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rdx, cs:__dso_handle", "xor     esi, esi", "jmp     ___cxa_atexit"], ["mov~rdx,<TAG>", "xor~esi,esi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 1, 3, 0.0, 1, 0], "succs": [[1], []], "fname": "atexit", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[2, 0, 0, 2, 0, 3, 0, 0, 0, 0, 0.0, ["sub     rsp, 8; _fini", "add     rsp, 8", "retn"], ["sub~rsp,0", "add~rsp,0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 3, 0.0, 0, 2], "succs": [[]], "fname": "term_proc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __libc_start_main:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_start_main", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp___cxa_finalize:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp___cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __gmon_start__:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__gmon_start__", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0.0, ["push    cs:qword_20CDA0", "jmp     cs:qword_20CDA8"], ["push~<TAG>", "jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 66, 2, 0.0, 2, 0], "succs": [[]], "fname": "sub_1720", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_toupper_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_toupper_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigprocmask_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigprocmask", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:raise_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "raise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fdatasync_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fdatasync", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strncmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigaction_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigaction", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:localeconv_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "localeconv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fcntl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fcntl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:clock_gettime_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "clock_gettime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dup2_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "dup2", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "strchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__overflow_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__overflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:ftruncate_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "ftruncate", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:lseek_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:gettimeofday_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "gettimeofday", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__strtoul_internal_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__strtoul_internal", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__memcpy_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__memcpy_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigemptyset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigemptyset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fsync_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fsync", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dcngettext_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "dcngettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigismember_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigismember", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigaddset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigaddset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_tolower_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_tolower_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:interrupt_signal, edi", "retn"], ["mov~<TAG>,edi", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "interrupt_handler", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[1, 0, 0, 1, 0, 4, 0, 0, 0, 0, 0.0, ["mov     eax, cs:info_signal_count", "add     eax, 1", "mov     cs:info_signal_count, eax", "retn"], ["mov~eax,<TAG>", "add~eax,0", "mov~<TAG>,eax", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 4, 0.0, 1, 1], "succs": [[]], "fname": "siginfo_handler", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0.16666666666666666, ["jmp     close_stdout"], ["jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.0, ["cmp     cs:close_stdout_required, 0", "jnz     short loc_36D0"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0.0, [], []]], "func_feature": [0, 0, 2, 0, 4, 3, 0, 4, 0.04167, 1, 0], "succs": [[3], [0, 2], [], []], "fname": "maybe_close_stdout", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[1, 0, 0, 1, 0, 7, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "mov     eax, ebx", "pop     value", "pop     table", "pop     error_msgid", "pop     str", "retn"], ["add~rsp,0", "mov~eax,ebx", "pop~value", "pop~table", "pop~error_msgid", "pop~str", "retn"]], [0, 0, 16, 0, 0, 3, 2, 1, 6, 8, 0.12083333333333333, ["or      ebx, edx", "test    strcomma, strcomma", "jz      short loc_3754"], ["or~ebx,edx", "test~strcomma,strcomma", "jz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 6, 1, 0.15, ["test    strcomma, strcomma", "jz      short loc_37AF"], ["test~strcomma,strcomma", "jz~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 5, 2, 0.2833333333333333, ["cmp     byte ptr [entry], 0", "jz      short loc_3761"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 16, 0, 1, 5, 0, 1, 1, 6, 0.17083333333333334, ["mov     esi, 2Ch ; ','; c", "mov     rdi, str; s", "call    _strchr", "mov     r8, entry", "nop     dword ptr [strcomma]"], ["mov~esi,0", "mov~rdi,str", "call~FOO", "mov~r8,entry", "nop~<TAG>"]], [0, 0, 16, 0, 0, 2, 0, 1, 7, 7, 0.0875, ["lea     str, [strcomma+1]", "jmp     short loc_36F5"], ["lea~str,[strcomma+0]", "jmp~FOO"]], [1, 0, 16, 1, 0, 9, 1, 0, 0, 7, 0.0, ["push    r13", "push    r12", "mov     r13, str", "push    rbp", "push    rbx", "mov     rbp, table", "mov     r12, error_msgid", "xor     ebx, ebx", "sub     rsp, 8"], ["push~r13", "push~r12", "mov~r13,str", "push~rbp", "push~rbx", "mov~rbp,table", "mov~r12,error_msgid", "xor~ebx,ebx", "sub~rsp,0"]], [0, 0, 16, 0, 0, 4, 1, 1, 3, 4, 0.4, ["movzx   esi, byte ptr [rcx]", "movzx   edi, byte ptr [rdx]", "test    sil, sil", "jnz     short loc_3710"], ["movzx~esi,<TAG>", "movzx~edi,<TAG>", "test~sil,sil", "jnz~FOO"]], [0, 0, 16, 0, 0, 3, 0, 1, 2, 5, 0.35, ["mov     rcx, entry", "mov     rdx, str", "jmp     short loc_371D"], ["mov~rcx,entry", "mov~rdx,str", "jmp~FOO"]], [2, 0, 16, 2, 0, 4, 0, 1, 4, 3, 0.175, ["add     rdx, 1", "add     rcx, 1", "cmp     sil, dil", "jnz     short loc_373B"], ["add~rdx,0", "add~rcx,0", "cmp~sil,dil", "jnz~FOO"]], [0, 0, 16, 0, 0, 2, 1, 1, 5, 3, 0.01875, ["test    dil, dil", "jnz     short loc_373B"], ["test~dil,dil", "jnz~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 4, 4, 0.19583333333333333, ["cmp     dil, 2Ch ; ','", "jz      short loc_3733"], ["cmp~dil,0", "jz~FOO"]], [0, 0, 16, 0, 0, 3, 1, 1, 5, 3, 0.16875, ["mov     edx, [entry+0Ch]", "test    edx, edx", "jnz     short loc_3747"], ["mov~edx,[entry+0]", "test~edx,edx", "jnz~FOO"]], [3, 0, 0, 0, 4, 19, 5, 4, 8, -1, 0.0, ["mov     rcx, slen; argsize", "mov     rdx, r13; arg", "mov     esi, 6; s", "xor     edi, edi; n", "call    quotearg_n_style_mem", "mov     edx, 5; category", "mov     rsi, error_msgid; msgid", "xor     edi, edi; domainname", "mov     value, rax", "call    _dcgettext", "lea     rdx, format; \"%s: %s\"", "mov     rcx, rax", "xor     edi, edi; status", "mov     r8, rbx", "xor     esi, esi; errnum", "xor     eax, eax", "call    _error", "mov     edi, 1; status", "call    usage"], ["mov~rcx,slen", "mov~rdx,r13", "mov~esi,0", "xor~edi,edi", "call~FOO", "mov~edx,0", "mov~rsi,error_msgid", "xor~edi,edi", "mov~value,rax", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "xor~edi,edi", "mov~r8,rbx", "xor~esi,esi", "xor~eax,eax", "call~FOO", "mov~edi,0", "call~FOO"]], [2, 0, 1, 1, 0, 8, 2, 1, 7, 0, 0.027083333333333334, ["xor     eax, eax", "or      rcx, 0FFFFFFFFFFFFFFFFh", "mov     rdi, str", "repne scasb", "mov     rax, rcx", "not     rax", "sub     rax, 1", "jmp     short loc_3769"], ["xor~eax,eax", "or~rcx,0", "mov~rdi,str", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "sub~rax,0", "jmp~FOO"]], [0, 0, 1, 1, 0, 1, 0, 0, 7, -1, 0.027083333333333334, ["sub     strcomma, str"], ["sub~strcomma,str"]], [1, 0, 16, 1, 0, 2, 0, 1, 6, 6, 0.1, ["add     entry, 10h", "jmp     short loc_3708"], ["add~entry,0", "jmp~FOO"]]], "func_feature": [5, 14, 17, 0, 17, 23, 4, 78, 0.13382, 1, 7], "succs": [[], [0, 5], [14, 15], [16, 2], [8], [4], [4], [9, 11], [7], [3, 7], [3, 12], [10, 12], [1, 3], [], [13], [13], [8]], "fname": "parse_symbols", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[0, 0, 2, 0, 0, 4, 1, 1, 0, 0, 0.17777777777777778, ["mov     rdx, [rsp+28h+var_10]", "xor     rdx, fs:28h", "mov     rax, rcx", "jnz     short loc_387A"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "mov~rax,rcx", "jnz~FOO"]], [1, 0, 3, 0, 0, 3, 1, 1, 2, 2, 0.06666666666666667, ["mov     byte ptr [invalid], 1", "xor     ecx, ecx", "jmp     short loc_3811"], ["mov~<TAG>,0", "xor~ecx,ecx", "jmp~FOO"]], [1, 0, 6, 1, 1, 6, 1, 2, 2, 2, 0.06944444444444445, ["add     rdi, 1; str", "mov     rsi, invalid; invalid", "call    parse_integer", "test    rax, rax", "mov     rcx, rax", "jz      short loc_3811"], ["add~rdi,0", "mov~rsi,invalid", "call~FOO", "test~rax,rax", "mov~rcx,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 4, 2, 0.016666666666666666, ["jmp     short loc_3811"], ["jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 2, 2, 0.025, ["mov     rcx, [rsp+28h+n]"], ["mov~rcx,[rsp+0]"]], [2, 1, 10, 1, 1, 13, 1, 2, 0, 4, 0.0, ["push    rbx", "lea     r8, valid_suffixes; \"bcEGkKMPTwYZ0\"", "mov     rbx, invalid", "mov     edx, 0Ah; strtol_base", "sub     rsp, 20h", "lea     rcx, [rsp+28h+n]; val", "lea     invalid, [rsp+28h+suffix]; ptr", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "call    xstrtoumax", "cmp     eax, 2", "jz      short loc_3830"], ["push~rbx", "lea~r8,<TAG>", "mov~rbx,invalid", "mov~edx,0", "sub~rsp,<STR>", "lea~rcx,[rsp+0]", "lea~invalid,[rsp+0]", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "cmp~eax,0", "jz~FOO"]], [0, 1, 0, 1, 0, 3, 0, 0, 4, -1, 0.0, ["add     rsp, 20h", "pop     invalid", "retn"], ["add~rsp,<STR>", "pop~invalid", "retn"]], [0, 0, 5, 0, 0, 2, 1, 1, 1, 3, 0.03333333333333333, ["test    eax, eax", "jnz     short loc_383A"], ["test~eax,eax", "jnz~FOO"]], [0, 0, 5, 2, 0, 9, 1, 1, 3, 3, 0.044444444444444446, ["mov     rdi, [rsp+28h+n]", "xor     edx, edx", "mov     rsi, rdi", "imul    rsi, multiplier", "mov     multiplier, rsi", "div     multiplier", "mov     multiplier, rsi", "cmp     rdi, rax", "jnz     short loc_383A"], ["mov~rdi,[rsp+0]", "xor~edx,edx", "mov~rsi,rdi", "imul~rsi,multiplier", "mov~multiplier,rsi", "div~,multiplier", "mov~multiplier,rsi", "cmp~rdi,rax", "jnz~FOO"]], [1, 0, 7, 0, 0, 3, 0, 1, 1, 3, 0.05555555555555556, ["mov     rdi, [rsp+28h+suffix]", "cmp     byte ptr [rdi], 78h ; 'x'", "jz      short loc_3848"], ["mov~rdi,[rsp+0]", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 6, 11, 1, 11, 15, 2, 46, 0.04444, 2, 5], "succs": [[10, 6], [0], [0, 8], [0], [0], [9, 7], [], [1, 4], [1, 3], [1, 2], []], "fname": "parse_integer", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[1, 0, 6, 0, 0, 3, 1, 1, 0, 0, 0.0641025641025641, ["and     ebx, 0FFFEFFFFh", "cmp     ebx, r12d", "jnz     loc_38F3"], ["and~ebx,0", "cmp~ebx,r12d", "jnz~FOO"]], [2, 0, 8, 0, 0, 4, 1, 1, 5, 4, 0.10256410256410256, ["mov     eax, [rsp+0C8h+st.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_3977"], ["mov~eax,[rsp+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 9, 0, 1, 6, 1, 2, 4, 3, 0.10897435897435898, ["mov     rdx, rsp; stat_buf", "mov     esi, ebp; fildes", "mov     edi, 1; ver", "call    ___fxstat", "test    eax, eax", "jnz     short loc_3908"], ["mov~rdx,rsp", "mov~esi,ebp", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 3, 0, 4, 16, 2, 5, 2, 2, 0.05448717948717949, ["mov     rdi, name; name", "call    quote", "lea     rsi, aSettingFlagsFo; \"setting flags for %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     fd, rax", "call    _dcgettext", "mov     new_flags, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, rbp", "mov     rdx, rbx; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_38AA"], ["mov~rdi,name", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~fd,rax", "call~FOO", "mov~new_flags,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,rbp", "mov~rdx,rbx", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 12, 0, 1, 8, 2, 2, 1, 3, 0.05769230769230769, ["mov     esi, 3; cmd", "mov     ebp, edi", "mov     r13, name", "call    _fcntl", "or      ebx, eax", "test    eax, eax", "mov     r12d, eax", "js      short loc_3908"], ["mov~esi,0", "mov~ebp,edi", "mov~r13,name", "call~FOO", "or~ebx,eax", "test~eax,eax", "mov~r12d,eax", "js~FOO"]], [1, 0, 4, 0, 1, 3, 0, 2, 6, 3, 0.01282051282051282, ["call    ___errno_location", "mov     dword ptr [rax], 14h", "jmp     short loc_3908"], ["call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [2, 0, 4, 1, 1, 7, 1, 2, 4, 2, 0.04807692307692307, ["xor     eax, eax", "mov     edx, ebx", "mov     esi, 4; cmd", "mov     edi, ebp; fd", "call    _fcntl", "add     eax, 1", "jnz     short loc_38AA"], ["xor~eax,eax", "mov~edx,ebx", "mov~esi,0", "mov~edi,ebp", "call~FOO", "add~eax,0", "jnz~FOO"]], [2, 0, 13, 1, 0, 11, 2, 1, 0, 2, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "mov     ebx, esi", "sub     rsp, 0A8h", "mov     rax, fs:28h", "mov     [rsp+0C8h+var_30], rax", "xor     eax, eax", "and     ebx, 0FFFDFEFFh", "jnz     short loc_38CF"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "mov~ebx,esi", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "and~ebx,0", "jnz~FOO"]], [1, 0, 10, 0, 0, 2, 1, 1, 3, 3, 0.12179487179487179, ["test    ebx, 10000h", "jnz     short loc_3947"], ["test~ebx,0", "jnz~FOO"]], [0, 0, 11, 0, 0, 2, 0, 1, 2, 2, 0.09935897435897435, ["cmp     eax, ebx", "jz      short loc_38AA"], ["cmp~eax,ebx", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 1, 0.14102564102564102, ["mov     rax, [rsp+0C8h+var_30]", "xor     rax, fs:28h", "jnz     loc_398B"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 7, 2, 0.016025641025641024, ["jmp     loc_38AA"], ["jmp~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 2, -1, 0.0, ["add     rsp, 0A8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]]], "func_feature": [9, 12, 21, 1, 14, 21, 2, 73, 0.05907, 2, 3], "succs": [[12, 6], [0, 5], [1, 3], [11], [9, 3], [3], [11, 3], [11, 4], [2, 6], [8, 11], [], [10, 13], [11], []], "fname": "set_fd_flags", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[5, 0, 9, 0, 3, 25, 2, 4, 0, 0, 0.13636363636363635, ["mov     rdi, cs:w_bytes; n", "lea     r12, [rsp+2D8h+hbuf]", "mov     r8d, 1; to_block_size", "mov     ecx, 1; from_block_size", "mov     edx, 1D1h; opts", "mov     rsi, r12; buf", "call    human_readable", "mov     rbx, cs:w_bytes", "lea     rdx, aLuBytesSCopied; \"%lu bytes (%s) copied\"", "lea     rsi, aLuByteSCopied; \"%lu byte (%s) copied\"", "xor     edi, edi; domainname", "mov     r8d, 5; category", "mov     r13, rax", "mov     rcx, rbx; n", "call    _dcngettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     r8, r13", "xor     eax, eax", "mov     rcx, rbx", "mov     esi, 1", "call    ___fprintf_chk", "mov     rax, cs:start_time", "cmp     rax, now", "jge     short loc_3B48"], ["mov~rdi,<TAG>", "lea~r12,[rsp+0]", "mov~r8d,0", "mov~ecx,0", "mov~edx,0", "mov~rsi,r12", "call~FOO", "mov~rbx,<TAG>", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "xor~edi,edi", "mov~r8d,0", "mov~r13,rax", "mov~rcx,rbx", "call~FOO", "mov~rdi,<TAG>", "mov~rdx,rax", "mov~r8,r13", "xor~eax,eax", "mov~rcx,rbx", "mov~esi,0", "call~FOO", "mov~rax,<TAG>", "cmp~rax,now", "jge~FOO"]], [1, 0, 10, 0, 0, 2, 1, 1, 1, 2, 0.03787878787878788, ["test    byte ptr cs:status_flags, 1", "jz      short loc_3A90"], ["test~<TAG>,0", "jz~FOO"]], [3, 0, 10, 0, 2, 14, 3, 3, 1, 2, 0.03787878787878788, ["lea     rdx, msgid2; \"%lu truncated records\\n\"", "lea     rsi, msgid1; \"%lu truncated record\\n\"", "xor     edi, edi; domainname", "mov     r8d, 5; category", "mov     rcx, rbx; n", "call    _dcngettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     rcx, rbx", "xor     eax, eax", "mov     esi, 1", "call    ___fprintf_chk", "test    byte ptr cs:status_flags, 1", "jnz     short loc_3A25"], ["lea~rdx,<TAG>", "lea~rsi,<TAG>", "xor~edi,edi", "mov~r8d,0", "mov~rcx,rbx", "call~FOO", "mov~rdi,<TAG>", "mov~rdx,rax", "mov~rcx,rbx", "xor~eax,eax", "mov~esi,0", "call~FOO", "test~<TAG>,0", "jnz~FOO"]], [3, 1, 12, 2, 3, 34, 4, 4, 0, 3, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 2B0h", "mov     rax, fs:28h", "mov     [rsp+2D8h+var_30], rax", "xor     eax, eax", "call    gethrxtime", "mov     r14, cs:w_partial", "lea     rsi, aLuLuRecordsInL; \"%lu+%lu records in\\n%lu+%lu records out\"...", "mov     rbx, cs:r_full", "xor     edi, edi; domainname", "mov     r13, cs:w_full", "mov     r12, cs:r_partial", "mov     edx, 5; category", "mov     rbp, rax", "call    _dcgettext", "sub     rsp, 8", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "push    r14", "mov     rcx, rbx", "xor     eax, eax", "mov     r9, r13", "mov     r8, r12", "mov     esi, 1", "call    ___fprintf_chk", "mov     rbx, cs:r_truncate", "pop     rax", "pop     rdx", "test    rbx, rbx", "jnz     short loc_3A50"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~r14,<TAG>", "lea~rsi,<TAG>", "mov~rbx,<TAG>", "xor~edi,edi", "mov~r13,<TAG>", "mov~r12,<TAG>", "mov~edx,0", "mov~rbp,rax", "call~FOO", "sub~rsp,0", "mov~rdi,<TAG>", "mov~rdx,rax", "push~r14", "mov~rcx,rbx", "xor~eax,eax", "mov~r9,r13", "mov~r8,r12", "mov~esi,0", "call~FOO", "mov~rbx,<TAG>", "pop~rax", "pop~rdx", "test~rbx,rbx", "jnz~FOO"]], [2, 0, 5, 0, 0, 9, 2, 1, 4, 4, 0.03409090909090909, ["mov     rax, delta_xtime", "mov     rdx, delta_xtime", "pxor    xmm0, xmm0", "shr     rax, 1", "and     edx, 1", "or      rax, rdx", "cvtsi2sd xmm0, rax", "addsd   xmm0, xmm0", "jmp     loc_3B19"], ["mov~rax,delta_xtime", "mov~rdx,delta_xtime", "pxor~xmm0,xmm0", "shr~rax,0", "and~edx,0", "or~rax,rdx", "cvtsi2sd~xmm0,rax", "addsd~xmm0,xmm0", "jmp~FOO"]], [0, 0, 7, 1, 0, 3, 0, 1, 3, 5, 0.09090909090909091, ["mov     r8, now", "sub     r8, rax; to_block_size", "js      loc_3BA8"], ["mov~r8,now", "sub~r8,rax", "js~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.15151515151515152, ["mov     rax, [rsp+2D8h+var_30]", "xor     rax, fs:28h", "jnz     loc_3BC9"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 1, 0, 1, 0, 7, 0, 0, 3, -1, 0.0, ["add     rsp, 2B0h", "pop     rbx", "pop     now", "pop     r12", "pop     r13", "pop     r14", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~now", "pop~r12", "pop~r13", "pop~r14", "retn"]], [1, 0, 4, 0, 1, 7, 1, 1, 3, 3, 0.05303030303030303, ["lea     rsi, aInfinityB; \"Infinity B\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "pxor    xmm1, xmm1", "mov     rbx, rax", "movsd   [rsp+2D8h+delta_s], xmm1"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "pxor~xmm1,xmm1", "mov~rbx,rax", "movsd~[rsp+0],xmm1"]], [2, 0, 4, 0, 1, 9, 0, 2, 5, 3, 0.09090909090909091, ["divsd   xmm0, cs:qword_AC80", "mov     rdi, cs:w_bytes; n", "mov     ecx, 3B9ACA00h; from_block_size", "mov     edx, 1D1h; opts", "mov     rsi, r12; buf", "movsd   [rsp+2D8h+delta_s], xmm0", "call    human_readable", "mov     rbx, rax", "jmp     short loc_3B68"], ["divsd~xmm0,<TAG>", "mov~rdi,<TAG>", "mov~ecx,0", "mov~edx,0", "mov~rsi,r12", "movsd~[rsp+0],xmm0", "call~FOO", "mov~rbx,rax", "jmp~FOO"]], [0, 0, 5, 0, 0, 2, 0, 0, 4, 4, 0.03409090909090909, ["pxor    xmm0, xmm0", "cvtsi2sd xmm0, delta_xtime"], ["pxor~xmm0,xmm0", "cvtsi2sd~xmm0,delta_xtime"]], [3, 0, 3, 0, 2, 12, 1, 3, 4, 2, 0.13636363636363635, ["lea     rsi, aGSSS; \", %g s, %s/s\\n\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "movsd   xmm0, [rsp+2D8h+delta_s]", "mov     rdx, rax", "mov     rcx, bytes_per_second", "mov     esi, 1", "mov     eax, 1", "call    ___fprintf_chk", "jmp     loc_3A25"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rdi,<TAG>", "movsd~xmm0,[rsp+0]", "mov~rdx,rax", "mov~rcx,bytes_per_second", "mov~esi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]]], "func_feature": [13, 15, 22, 1, 13, 17, 5, 128, 0.06177, 18, 4], "succs": [[9, 5], [0, 7], [0, 7], [1, 2], [10], [11, 4], [], [8, 6], [], [12], [12], [10], [7]], "fname": "print_stats", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[2, 0, 4, 0, 4, 16, 2, 5, 0, 0, 0.0, ["mov     rdi, cs:input_file; name", "call    quote", "lea     rsi, aClosingInputFi; \"closing input file %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     rbp, rax", "call    _dcgettext", "mov     rbx, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, rbp", "mov     rdx, rbx; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_3BE1"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~rbp,rax", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,rbp", "mov~rdx,rbx", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 5, 1, 1, 7, 2, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "xor     edi, edi; fd", "sub     rsp, 8", "call    _close", "test    eax, eax", "js      short loc_3C48"], ["push~rbp", "push~rbx", "xor~edi,edi", "sub~rsp,0", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0.0, [], []], [3, 0, 1, 1, 3, 18, 2, 4, 2, 0, 0.15000000000000002, ["mov     rdi, cs:output_file; name", "call    quote", "lea     rsi, aClosingOutputF; \"closing output file %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbp, rax", "call    _dcgettext", "mov     rbx, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "add     rsp, 8", "mov     rcx, rbp", "mov     rdx, rbx; format", "mov     edi, 1; status", "xor     eax, eax", "pop     rbx", "pop     rbp", "jmp     _error"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbp,rax", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~esi,<TAG>", "add~rsp,0", "mov~rcx,rbp", "mov~rdx,rbx", "mov~edi,0", "xor~eax,eax", "pop~rbx", "pop~rbp", "jmp~FOO"]], [1, 0, 3, 0, 1, 4, 1, 2, 1, 0, 0.30000000000000004, ["mov     edi, 1; fd", "call    _close", "test    eax, eax", "js      short loc_3C00"], ["mov~edi,0", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 2, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]]], "func_feature": [9, 7, 13, 0, 6, 6, 2, 49, 0.075, 4, 3], "succs": [[4], [0, 4], [], [2], [3, 5], []], "fname": "cleanup", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[0, 0, 8, 0, 1, 8, 2, 2, 0, 0, 0.25, ["xor     edi, edi; how", "mov     rdx, rbp; oset", "mov     rsi, r12; set", "call    _sigprocmask", "mov     ebx, cs:interrupt_signal", "mov     eax, cs:info_signal_count", "test    eax, eax", "jz      short loc_3D0B"], ["xor~edi,edi", "mov~rdx,rbp", "mov~rsi,r12", "call~FOO", "mov~ebx,<TAG>", "mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [0, 0, 8, 0, 0, 3, 0, 1, 1, 5, 0.06944444444444445, ["mov     rbp, rsp", "lea     r12, caught_signals", "jmp     short loc_3CE5"], ["mov~rbp,rsp", "lea~r12,<TAG>", "jmp~FOO"]], [0, 0, 8, 0, 3, 8, 1, 4, 4, 2, 0.10416666666666666, ["call    cleanup", "call    print_stats", "mov     edi, ebx; sig", "call    _raise", "mov     edx, cs:interrupt_signal", "mov     eax, cs:info_signal_count", "or      edx, eax", "jnz     short loc_3CE5"], ["call~FOO", "call~FOO", "mov~edi,ebx", "call~FOO", "mov~edx,<TAG>", "mov~eax,<TAG>", "or~edx,eax", "jnz~FOO"]], [0, 0, 8, 0, 1, 5, 1, 2, 4, 2, 0.10416666666666666, ["call    print_stats", "mov     edx, cs:interrupt_signal", "mov     eax, cs:info_signal_count", "or      edx, eax", "jz      short loc_3D3F"], ["call~FOO", "mov~edx,<TAG>", "mov~eax,<TAG>", "or~edx,eax", "jz~FOO"]], [1, 0, 8, 0, 1, 6, 2, 2, 3, 3, 0.2777777777777778, ["xor     edx, edx; oset", "mov     rsi, rbp; set", "mov     edi, 2; how", "call    _sigprocmask", "test    ebx, ebx", "jz      short loc_3CD0"], ["xor~edx,edx", "mov~rsi,rbp", "mov~edi,0", "call~FOO", "test~ebx,ebx", "jz~FOO"]], [1, 0, 8, 1, 0, 2, 0, 0, 3, 4, 0.0, ["sub     eax, 1", "mov     cs:info_signal_count, eax"], ["sub~eax,0", "mov~<TAG>,eax"]], [0, 1, 9, 1, 0, 11, 2, 1, 0, 2, 0.0, ["push    r12", "push    rbp", "push    rbx", "sub     rsp, 90h", "mov     rax, fs:28h", "mov     [rsp+0A8h+var_20], rax", "xor     eax, eax", "mov     eax, cs:interrupt_signal", "mov     edx, cs:info_signal_count", "or      edx, eax", "jz      loc_3D3F"], ["push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~eax,<TAG>", "mov~edx,<TAG>", "or~edx,eax", "jz~FOO"]], [0, 1, 0, 1, 0, 5, 0, 0, 2, -1, 0.0, ["add     rsp, 90h", "pop     rbx", "pop     rbp", "pop     r12", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 1, 0.19444444444444442, ["mov     rax, [rsp+0A8h+var_20]", "xor     rax, fs:28h", "jnz     short loc_3D5E"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [7, 9, 14, 1, 10, 14, 3, 52, 0.1, 4, 3], "succs": [[4, 5], [0], [0, 8], [0, 8], [2, 3], [4], [8, 1], [], [9, 7], []], "fname": "process_signals", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[1, 0, 3, 0, 1, 3, 0, 2, 0, 0, 0.0, ["call    ___errno_location", "cmp     dword ptr [rax], 4", "jnz     short loc_3DAD"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 3, 0, 2, 8, 1, 3, 1, 1, 0.3333333333333333, ["call    process_signals", "mov     rdx, size; nbytes", "mov     rsi, buf; buf", "mov     edi, r13d; fd", "call    _read", "test    rax, rax", "mov     rbx, rax", "js      short loc_3D88"], ["call~FOO", "mov~rdx,size", "mov~rsi,buf", "mov~edi,r13d", "call~FOO", "test~rax,rax", "mov~rbx,rax", "js~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 2, 0, 0.0, ["add     rsp, 8", "mov     rax, rbx", "pop     rbx", "pop     size", "pop     buf", "pop     fd", "retn"], ["add~rsp,0", "mov~rax,rbx", "pop~rbx", "pop~size", "pop~buf", "pop~fd", "retn"]], [1, 0, 3, 1, 0, 9, 0, 1, 0, 2, 0.0, ["push    r13", "push    r12", "mov     r13d, edi", "push    rbp", "push    rbx", "mov     r12, buf", "mov     rbp, size", "sub     rsp, 8", "jmp     short loc_3D92"], ["push~r13", "push~r12", "mov~r13d,edi", "push~rbp", "push~rbx", "mov~r12,buf", "mov~rbp,size", "sub~rsp,0", "jmp~FOO"]]], "func_feature": [3, 1, 6, 0, 4, 5, 2, 27, 0.08333, 0, 2], "succs": [[1, 2], [0, 2], [], [1]], "fname": "iread", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[0, 0, 0, 0, 4, 7, 0, 4, 0, 0, 0.0, ["push    rbx", "mov     ebx, edi", "call    cleanup", "call    print_stats", "call    process_signals", "mov     edi, ebx; status", "call    _exit"], ["push~rbx", "mov~ebx,edi", "call~FOO", "call~FOO", "call~FOO", "mov~edi,ebx", "call~FOO"]]], "func_feature": [4, 0, 4, 0, 1, 0, 4, 7, 0.0, 0, 0], "succs": [[]], "fname": "quit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[1, 0, 7, 0, 1, 7, 2, 2, 0, 0, 0.1111111111111111, ["lea     rdx, [rsp+98h+s2]", "xor     eax, eax", "mov     esi, 80306D02h; request", "mov     edi, ebx; fd", "call    _ioctl", "test    eax, eax", "jnz     short loc_3E60"], ["lea~rdx,[rsp+0]", "xor~eax,eax", "mov~esi,0", "mov~edi,ebx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 1, 2, 0.06944444444444445, ["test    new_position, new_position", "js      short loc_3E60"], ["test~new_position,new_position", "js~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 1, 1, 0.19444444444444442, ["mov     rcx, [rsp+98h+var_30]", "xor     rcx, fs:28h", "mov     rax, rbp", "jnz     short loc_3EBB"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~rax,rbp", "jnz~FOO"]], [3, 0, 9, 1, 2, 23, 2, 3, 0, 2, 0.0, ["push    r13", "push    r12", "mov     r13, filename", "push    rbp", "push    rbx", "mov     ebx, esi", "mov     rbp, offset", "mov     esi, 80306D02h; request", "mov     edi, ebx; fd", "sub     rsp, 78h", "mov     rax, fs:28h", "mov     [rsp+98h+var_30], rax", "xor     eax, eax", "mov     offset, rsp", "call    _ioctl", "mov     rsi, offset; offset", "mov     r12d, eax", "mov     edx, 1; whence", "mov     edi, ebx; fd", "call    _lseek", "test    r12d, r12d", "mov     offset, rax", "jnz     short loc_3E60"], ["push~r13", "push~r12", "mov~r13,filename", "push~rbp", "push~rbx", "mov~ebx,esi", "mov~rbp,offset", "mov~esi,0", "mov~edi,ebx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~offset,rsp", "call~FOO", "mov~rsi,offset", "mov~r12d,eax", "mov~edx,0", "mov~edi,ebx", "call~FOO", "test~r12d,r12d", "mov~offset,rax", "jnz~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 3, 2, 0.125, ["mov     rax, [rsp+98h+s2.mt_resid]", "cmp     [rsp+98h+s1.mt_resid], rax", "jnz     short loc_3E60"], ["mov~rax,[rsp+0]", "cmp~[rsp+0],rax", "jnz~FOO"]], [3, 0, 3, 0, 3, 16, 5, 4, 5, 2, 0.020833333333333332, ["mov     fdesc, [rsp+98h+s2.mt_type]", "lea     rsi, aWarningWorking; \"warning: working around lseek kernel bu\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "or      new_position, 0FFFFFFFFFFFFFFFFh", "call    _dcgettext", "mov     r8, rbx", "mov     rdx, rax; format", "mov     rcx, filename", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "call    ___errno_location", "mov     dword ptr [rax], 0", "jmp     short loc_3E60"], ["mov~fdesc,[rsp+0]", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "or~new_position,0", "call~FOO", "mov~r8,rbx", "mov~rdx,rax", "mov~rcx,filename", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 5, 2, 0.020833333333333332, ["nop"], ["nop"]], [1, 0, 0, 1, 0, 6, 0, 0, 2, -1, 0.0, ["add     rsp, 78h", "pop     rbx", "pop     rbp", "pop     r12", "pop     filename", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~filename", "retn"]], [0, 0, 5, 0, 0, 3, 0, 1, 4, 3, 0.1111111111111111, ["mov     rax, qword ptr [rsp+98h+s2.mt_fileno]", "cmp     qword ptr [rsp+98h+s1.mt_fileno], rax", "jz      short loc_3E7E"], ["mov~rax,[word ptr [rsp+0]", "cmp~[word ptr [rsp+0],rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [7, 11, 14, 1, 10, 14, 2, 66, 0.06528, 2, 2], "succs": [[2, 4], [0, 2], [9, 7], [1, 2], [8, 2], [2], [2], [], [5, 6], []], "fname": "skip_via_lseek", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[1, 0, 14, 1, 1, 3, 0, 2, 0, 0, 0.05526315789473684, ["call    print_stats", "sub     rbx, 1", "jnz     short loc_3F3F"], ["call~FOO", "sub~rbx,0", "jnz~FOO"]], [2, 0, 14, 0, 3, 14, 4, 4, 3, 1, 0.07105263157894737, ["call    quote", "lea     rsi, aReadingS; \"reading %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r15, rax", "call    _dcgettext", "mov     esi, [r14]; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "mov     rcx, r15", "call    _error", "test    byte ptr cs:conversions_mask+1, 1", "jz      loc_403D"], ["call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r15,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "mov~rcx,r15", "call~FOO", "test~<TAG>,0", "jz~FOO"]], [0, 0, 14, 1, 0, 6, 2, 1, 4, 5, 0.02894736842105263, ["xor     edx, edx", "add     nread, cs:input_offset", "setb    dl", "mov     cs:input_offset, rax", "test    rdx, rdx", "jz      short loc_3F39"], ["xor~edx,edx", "add~nread,<TAG>", "setb~dl", "mov~<TAG>,rax", "test~rdx,rdx", "jz~FOO"]], [0, 0, 14, 0, 0, 2, 1, 1, 3, 5, 0.09999999999999999, ["test    ebp, ebp", "jnz     short loc_3F39"], ["test~ebp,ebp", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 1, 0, 4, -1, 0.02763157894736842, ["xor     eax, eax"], ["xor~eax,eax"]], [1, 0, 14, 1, 0, 2, 0, 1, 4, 4, 0.10789473684210527, ["sub     rbx, 1", "jz      short loc_3FA2"], ["sub~rbx,0", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 3, -1, 0.02894736842105263, ["test    ebp, ebp", "jnz     short loc_3FA2"], ["test~ebp,ebp", "jnz~FOO"]], [0, 0, 3, 1, 0, 6, 2, 1, 4, -1, 0.010526315789473684, ["xor     eax, eax", "add     rcx, cs:input_offset", "setb    al", "mov     cs:input_offset, rcx", "test    rax, rax", "jz      short loc_3FA2"], ["xor~eax,eax", "add~rcx,<TAG>", "setb~al", "mov~<TAG>,rcx", "test~rax,rax", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 3, -1, 0.010526315789473684, ["mov     nread, records", "jmp     short loc_3FA4"], ["mov~nread,records", "jmp~FOO"]], [0, 0, 14, 0, 0, 1, 0, 1, 2, 6, 0.14210526315789473, ["jz      loc_3FFE"], ["jz~FOO"]], [3, 1, 20, 2, 1, 21, 1, 1, 0, 4, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r13, buf", "push    rbp", "push    rbx", "mov     r12, blocksize", "mov     rbx, records", "mov     ebp, edi", "sub     rsp, 18h", "mov     [rsp+48h+file], file_0", "call    ___errno_location", "xor     edx, edx", "mov     r14, rax", "mov     dword ptr [rax], 0", "mov     rax, 7FFFFFFFFFFFFFFFh", "mov     [rsp+48h+errnum], 0", "div     blocksize", "cmp     rax, records", "jb      short loc_3F3F"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r13,buf", "push~rbp", "push~rbx", "mov~r12,blocksize", "mov~rbx,records", "mov~ebp,edi", "sub~rsp,<STR>", "mov~<TAG>,file_0", "call~FOO", "xor~edx,edx", "mov~r14,rax", "mov~<TAG>,0", "mov~rax,0", "mov~[rsp+0],0", "div~,blocksize", "cmp~rax,records", "jb~FOO"]], [0, 0, 19, 0, 0, 1, 0, 1, 1, 6, 0.015789473684210527, ["jmp     loc_3FB3"], ["jmp~FOO"]], [0, 0, 14, 0, 0, 3, 0, 1, 3, 4, 0.06315789473684211, ["mov     eax, [r14]", "mov     [rsp+48h+errnum], eax", "jmp     loc_3F3F"], ["mov~eax,<TAG>", "mov~[rsp+0],eax", "jmp~FOO"]], [0, 0, 18, 1, 1, 10, 1, 2, 2, 5, 0.060526315789473685, ["mov     rcx, records", "mov     rdi, [rsp+48h+file]; filename", "mov     esi, ebp; fdesc", "imul    rcx, blocksize; whence", "mov     rdx, rcx; offset", "mov     qword ptr [rsp+48h+errnum], rcx", "call    skip_via_lseek", "test    rax, rax", "mov     rcx, qword ptr [rsp+48h+errnum]", "js      short loc_4003"], ["mov~rcx,records", "mov~rdi,<TAG>", "mov~esi,ebp", "imul~rcx,blocksize", "mov~rdx,rcx", "mov~[word ptr [rsp+0],rcx", "call~FOO", "test~rax,rax", "mov~rcx,[word ptr [rsp+0]", "js~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 18h", "pop     records", "pop     fdesc", "pop     blocksize", "pop     buf", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~records", "pop~fdesc", "pop~blocksize", "pop~buf", "pop~r14", "pop~r15", "retn"]], [1, 0, 1, 0, 0, 3, 1, 1, 5, -1, 0.0013157894736842105, ["mov     cs:input_offset_overflow, 1", "xor     eax, eax", "jmp     short loc_3FA4"], ["mov~<TAG>,0", "xor~eax,eax", "jmp~FOO"]], [0, 0, 14, 0, 1, 6, 1, 1, 1, 3, 0.2894736842105263, ["mov     rdx, blocksize; size", "mov     rsi, buf; buf", "mov     edi, ebp; fd", "call    iread", "test    nread, nread", "jns     short loc_3F10"], ["mov~rdx,blocksize", "mov~rsi,buf", "mov~edi,ebp", "call~FOO", "test~nread,nread", "jns~FOO"]], [0, 0, 14, 0, 0, 3, 1, 1, 2, 2, 0.11842105263157894, ["test    ebp, ebp", "mov     rdi, [rsp+48h+file]; name", "jnz     loc_400F"], ["test~ebp,ebp", "mov~rdi,<TAG>", "jnz~FOO"]], [1, 0, 14, 0, 0, 1, 0, 0, 5, 5, 0.0, ["mov     cs:input_offset_overflow, 1"], ["mov~<TAG>,0"]], [1, 0, 1, 0, 3, 12, 3, 3, 3, 1, 0.015789473684210527, ["call    quote", "lea     rsi, aSCannotSeek; \"%s: cannot seek\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     records, rax", "call    _dcgettext", "mov     esi, [rsp+48h+errnum]; errnum", "mov     rdx, rax; format", "mov     rcx, rbx", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~records,rax", "call~FOO", "mov~esi,[rsp+0]", "mov~rdx,rax", "mov~rcx,rbx", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [1, 0, 0, 0, 1, 2, 0, 1, 4, 0, 0.0, ["mov     edi, 1; code", "call    quit"], ["mov~edi,0", "call~FOO"]]], "func_feature": [11, 19, 25, 0, 21, 31, 2, 109, 0.05464, 5, 8], "succs": [[16, 4], [0, 20], [18, 5], [2, 5], [14], [16, 4], [4, 7], [4, 15], [14], [8, 3], [16, 11], [13], [16], [12, 6], [], [14], [9, 17], [1, 19], [5], [20], []], "fname": "skip", "n_num": 21}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[0, 0, 7, 0, 0, 4, 1, 1, 0, 0, 0.08333333333333333, ["mov     rbp, size", "mov     r12, buf", "xor     ebx, ebx", "jmp     short loc_4072"], ["mov~rbp,size", "mov~r12,buf", "xor~ebx,ebx", "jmp~FOO"]], [0, 0, 9, 0, 0, 5, 1, 1, 0, 1, 0.0, ["test    size, size", "push    r12", "push    rbp", "push    rbx", "jz      short loc_40BB"], ["test~size,size", "push~r12", "push~rbp", "push~rbx", "jz~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 2, -1, 0.0, ["mov     rax, rbx", "pop     rbx", "pop     rbp", "pop     r12", "retn"], ["mov~rax,rbx", "pop~rbx", "pop~rbp", "pop~r12", "retn"]], [0, 0, 7, 0, 0, 2, 0, 0, 4, -1, 0.16666666666666666, ["cmp     size, total_written", "jbe     short loc_409A"], ["cmp~size,total_written", "jbe~FOO"]], [0, 0, 1, 0, 0, 2, 1, 1, 1, 0, 0.013888888888888888, ["xor     ebx, ebx", "jmp     short loc_409A"], ["xor~ebx,ebx", "jmp~FOO"]], [1, 0, 7, 0, 1, 3, 0, 2, 3, -1, 0.06944444444444445, ["call    ___errno_location", "cmp     dword ptr [rax], 4", "jz      short loc_406D"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 1, 3, -1, 0.15277777777777776, ["jz      short loc_40A8"], ["jz~FOO"]], [1, 0, 7, 1, 2, 8, 1, 2, 2, -1, 0.3055555555555555, ["call    process_signals", "mov     rdx, size", "lea     rsi, [buf+total_written]; buf", "mov     edi, 1; fd", "sub     rdx, total_written; n", "call    _write", "test    nwritten, nwritten", "jns     short loc_4068"], ["call~FOO", "mov~rdx,size", "lea~rsi,<TAG>", "mov~edi,0", "sub~rdx,total_written", "call~FOO", "test~nwritten,nwritten", "jns~FOO"]], [0, 0, 7, 1, 0, 1, 0, 0, 4, -1, 0.05555555555555555, ["add     total_written, nwritten"], ["add~total_written,nwritten"]], [1, 0, 0, 0, 1, 7, 0, 1, 4, -1, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 1Ch", "mov     rax, total_written", "pop     total_written", "pop     size", "pop     buf", "retn"], ["call~FOO", "mov~<TAG>,0", "mov~rax,total_written", "pop~total_written", "pop~size", "pop~buf", "retn"]]], "func_feature": [4, 4, 9, 0, 10, 13, 4, 38, 0.08472, 0, 2], "succs": [[7], [0, 4], [], [2, 7], [2], [2, 3], [8, 9], [5, 6], [3], []], "fname": "iwrite", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[1, 0, 2, 0, 4, 18, 4, 5, 0, 0, 0.16666666666666666, ["mov     rdi, cs:output_file; name", "mov     rbx, nwritten", "call    quote", "lea     rsi, aWritingToS; \"writing to %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r12, rax", "call    _dcgettext", "mov     rbp, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "xor     edi, edi; status", "xor     eax, eax", "mov     rcx, r12", "mov     rdx, rbp; format", "call    _error", "test    nwritten, nwritten", "jz      short loc_414A"], ["mov~rdi,<TAG>", "mov~rbx,nwritten", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r12,rax", "call~FOO", "mov~rbp,rax", "call~FOO", "mov~esi,<TAG>", "xor~edi,edi", "xor~eax,eax", "mov~rcx,r12", "mov~rdx,rbp", "call~FOO", "test~nwritten,nwritten", "jz~FOO"]], [0, 0, 4, 1, 1, 9, 0, 2, 0, 2, 0.0, ["mov     rsi, cs:output_blocksize; buf", "mov     rdi, cs:obuf; fd", "push    r12", "push    rbp", "push    rbx", "call    iwrite", "add     cs:w_bytes, nwritten", "cmp     cs:output_blocksize, nwritten", "jnz     short loc_40FF"], ["mov~rsi,<TAG>", "mov~rdi,<TAG>", "push~r12", "push~rbp", "push~rbx", "call~FOO", "add~<TAG>,nwritten", "cmp~<TAG>,nwritten", "jnz~FOO"]], [1, 0, 1, 1, 0, 1, 0, 0, 2, 1, 0.0, ["add     cs:w_partial, 1"], ["add~<TAG>,0"]], [2, 0, 0, 1, 0, 6, 0, 0, 1, -1, 0.0, ["pop     rbx", "add     cs:w_full, 1", "mov     cs:oc, 0", "pop     rbp", "pop     r12", "retn"], ["pop~rbx", "add~<TAG>,0", "mov~<TAG>,0", "pop~rbp", "pop~r12", "retn"]], [1, 0, 0, 0, 1, 2, 0, 1, 2, 0, 0.0, ["mov     edi, 1; code", "call    quit"], ["mov~edi,0", "call~FOO"]]], "func_feature": [6, 4, 8, 0, 5, 5, 8, 36, 0.03333, 8, 3], "succs": [[2, 4], [0, 3], [4], [], []], "fname": "write_output", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[0, 0, 14, 0, 0, 5, 0, 1, 0, 0, 0.5208333333333334, ["movzx   eax, byte ptr [buf+0]", "mov     rbx, cs:col", "cmp     al, byte ptr cs:newline_character; \"\\n\"", "mov     rdx, cs:conversion_blocksize", "jnz     short loc_4180"], ["movzx~eax,[yte ptr [buf+0]", "mov~rbx,<TAG>", "cmp~al,<TAG>", "mov~rdx,<TAG>", "jnz~FOO"]], [0, 0, 14, 0, 0, 6, 0, 1, 1, -1, 0.058333333333333334, ["push    r12", "lea     r12, [buf+i]", "push    rbp", "mov     rbp, buf", "push    rbx", "jmp     short loc_41C8"], ["push~r12", "lea~r12,<TAG>", "push~rbp", "mov~rbp,buf", "push~rbx", "jmp~FOO"]], [2, 0, 14, 1, 0, 4, 0, 1, 4, -1, 0.19583333333333333, ["add     buf, 1", "mov     cs:col, 0", "cmp     r12, buf", "jnz     short loc_41C8"], ["add~buf,0", "mov~<TAG>,0", "cmp~r12,buf", "jnz~FOO"]], [2, 0, 14, 2, 0, 5, 0, 1, 5, -1, 0.22083333333333333, ["add     buf, 1", "add     rbx, 1", "cmp     r12, rbp", "mov     cs:col, rbx", "jz      short loc_41FB"], ["add~buf,0", "add~rbx,0", "cmp~r12,rbp", "mov~<TAG>,rbx", "jz~FOO"]], [0, 0, 14, 0, 1, 1, 0, 1, 6, -1, 0.05, ["call    write_output"], ["call~FOO"]], [0, 0, 14, 0, 0, 1, 0, 1, 5, -1, 0.05416666666666667, ["jmp     short loc_4200"], ["jmp~FOO"]], [0, 0, 16, 0, 0, 2, 1, 1, 0, 1, 0.0, ["test    i, i", "jz      locret_4270"], ["test~i,i", "jz~FOO"]], [0, 0, 14, 0, 1, 3, 0, 2, 6, -1, 0.0, ["call    write_output", "mov     rbx, cs:col", "jmp     loc_41B4"], ["call~FOO", "mov~rbx,<TAG>", "jmp~FOO"]], [0, 0, 14, 0, 0, 7, 0, 0, 5, -1, 0.05416666666666667, ["mov     rcx, cs:oc", "mov     rsi, cs:obuf", "lea     rdx, [rcx+1]", "cmp     rdx, cs:output_blocksize", "mov     [rsi+rcx], al", "mov     cs:oc, rdx", "jnb     loc_4258"], ["mov~rcx,<TAG>", "mov~rsi,<TAG>", "lea~rdx,[rcx+0]", "cmp~rdx,<TAG>", "mov~<TAG>,al", "mov~<TAG>,rdx", "jnb~FOO"]], [0, 0, 14, 0, 0, 2, 0, 1, 3, -1, 0.21666666666666667, ["cmp     rdx, rbx", "ja      short loc_4212"], ["cmp~rdx,rbx", "ja~FOO"]], [0, 0, 14, 0, 0, 1, 0, 0, 4, -1, 0.14166666666666666, ["jbe     short loc_41B4"], ["jbe~FOO"]], [1, 0, 14, 1, 0, 2, 0, 1, 4, -1, 0.0375, ["add     cs:r_truncate, 1", "jmp     loc_41B4"], ["add~<TAG>,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 14, 0, 0, 2, 0, 1, 3, -1, 0.24166666666666667, ["cmp     rdx, rbx", "jz      loc_4248"], ["cmp~rdx,rbx", "jz~FOO"]], [1, 0, 14, 1, 0, 3, 0, 0, 5, -1, 0.1375, ["add     j, 1", "cmp     cs:conversion_blocksize, j", "jbe     short loc_41E7"], ["add~j,0", "cmp~<TAG>,j", "jbe~FOO"]], [0, 0, 14, 0, 0, 8, 0, 0, 4, -1, 0.15, ["mov     rdx, cs:oc", "movzx   esi, byte ptr cs:space_character; \" \"", "mov     rcx, cs:obuf", "lea     rax, [rdx+1]", "cmp     rax, cs:output_blocksize", "mov     [rcx+rdx], sil", "mov     cs:oc, rax", "jb      short loc_4205"], ["mov~rdx,<TAG>", "movzx~esi,<TAG>", "mov~rcx,<TAG>", "lea~rax,[rdx+0]", "cmp~rax,<TAG>", "mov~<TAG>,sil", "mov~<TAG>,rax", "jb~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 5, -1, 0.0, ["pop     rbx", "pop     buf", "pop     r12", "retn"], ["pop~rbx", "pop~buf", "pop~r12", "retn"]]], "func_feature": [2, 1, 12, 0, 17, 25, 2, 57, 0.1223, 8, 5], "succs": [[9, 13], [0], [0, 16], [0, 16], [14], [4], [1, 12], [3], [3, 7], [2, 15], [8, 3], [3], [], [10, 11], [2, 15], [5, 14], []], "fname": "copy_with_block", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[0, 0, 15, 0, 0, 2, 0, 0, 0, 0, 0.014705882352941176, ["movzx   ecx, byte ptr cs:space_character; \" \"", "mov     rax, rdx"], ["movzx~ecx,<TAG>", "mov~rax,rdx"]], [1, 0, 15, 1, 1, 6, 0, 2, 6, -1, 0.08486519607843136, ["call    write_output", "sub     cs:pending_spaces_6752, 1", "mov     rdi, cs:obuf", "mov     rdx, cs:oc", "mov     rsi, cs:output_blocksize", "jnz     short loc_435A"], ["call~FOO", "sub~<TAG>,0", "mov~rdi,<TAG>", "mov~rdx,<TAG>", "mov~rsi,<TAG>", "jnz~FOO"]], [1, 0, 15, 1, 0, 2, 0, 1, 6, -1, 0.08486519607843136, ["sub     cs:pending_spaces_6752, 1", "jz      short loc_439B"], ["sub~<TAG>,0", "jz~FOO"]], [0, 0, 17, 0, 0, 2, 1, 1, 0, 1, 0.0, ["test    nread, nread", "jz      locret_43E8"], ["test~nread,nread", "jz~FOO"]], [3, 0, 15, 1, 0, 11, 0, 0, 3, -1, 0.04503676470588235, ["mov     rdx, cs:oc", "sub     i, 1", "movzx   esi, byte ptr cs:newline_character; \"\\n\"", "mov     rcx, cs:obuf", "mov     cs:pending_spaces_6752, 0", "mov     cs:col, 0", "lea     rax, [rdx+1]", "cmp     rax, cs:output_blocksize", "mov     [rcx+rdx], sil", "mov     cs:oc, rax", "jnb     loc_43B3"], ["mov~rdx,<TAG>", "sub~i,0", "movzx~esi,<TAG>", "mov~rcx,<TAG>", "mov~<TAG>,0", "mov~<TAG>,0", "lea~rax,[rdx+0]", "cmp~rax,<TAG>", "mov~<TAG>,sil", "mov~<TAG>,rax", "jnb~FOO"]], [0, 0, 15, 0, 0, 6, 0, 0, 2, -1, 0.47150735294117646, ["mov     rax, cs:col", "cmp     rax, cs:conversion_blocksize", "movzx   r13d, byte ptr [buf+i]", "lea     rdx, [rax+1]", "mov     cs:col, rdx", "jnb     short loc_42A0"], ["mov~rax,<TAG>", "cmp~rax,<TAG>", "movzx~r13d,<TAG>", "lea~rdx,[rax+0]", "mov~<TAG>,rdx", "jnb~FOO"]], [0, 0, 15, 0, 0, 5, 1, 1, 4, -1, 0.2931985294117647, ["test    rdx, rdx", "mov     rdi, cs:obuf", "mov     rax, cs:oc", "mov     rsi, cs:output_blocksize", "jnz     short loc_4364"], ["test~rdx,rdx", "mov~rdi,<TAG>", "mov~rax,<TAG>", "mov~rsi,<TAG>", "jnz~FOO"]], [0, 0, 15, 0, 0, 4, 0, 1, 3, -1, 0.3676470588235294, ["movzx   ecx, byte ptr cs:space_character; \" \"", "mov     rdx, cs:pending_spaces_6752", "cmp     cl, r13b", "jz      loc_43D0"], ["movzx~ecx,<TAG>", "mov~rdx,<TAG>", "cmp~cl,r13b", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 15, 0, 0, 5, 0, 0, 7, -1, 0.26746323529411764, ["lea     rax, [rdx+1]", "mov     [rdi+rdx], r13b", "cmp     rax, rsi", "mov     cs:oc, rax", "jb      loc_42EB"], ["lea~rax,[rdx+0]", "mov~<TAG>,r13b", "cmp~rax,rsi", "mov~<TAG>,rax", "jb~FOO"]], [0, 0, 15, 0, 0, 2, 0, 1, 6, -1, 0.06832107843137254, ["mov     rdx, rax", "jmp     short loc_439B"], ["mov~rdx,rax", "jmp~FOO"]], [1, 0, 15, 1, 0, 3, 0, 1, 4, -1, 0.015625, ["add     rdx, 1", "mov     cs:pending_spaces_6752, rdx", "jmp     loc_42EB"], ["add~rdx,0", "mov~<TAG>,rdx", "jmp~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 5, -1, 0.0, ["add     rsp, 8", "pop     i", "pop     nread", "pop     buf", "pop     c", "retn"], ["add~rsp,0", "pop~i", "pop~nread", "pop~buf", "pop~c", "retn"]], [1, 0, 15, 1, 0, 3, 0, 0, 4, -1, 0.21599264705882354, ["add     i, 1", "cmp     nread, i", "jbe     loc_43C5"], ["add~i,0", "cmp~nread,i", "jbe~FOO"]], [1, 0, 15, 1, 1, 4, 0, 2, 4, -1, 0.15625, ["add     i, 1", "call    write_output", "cmp     nread, i", "ja      loc_42F8"], ["add~i,0", "call~FOO", "cmp~nread,i", "ja~FOO"]], [0, 0, 15, 0, 0, 1, 0, 1, 5, -1, 0.07199754901960784, ["jmp     loc_43E0"], ["jmp~FOO"]], [0, 0, 15, 0, 0, 5, 0, 0, 5, -1, 0.22855392156862742, ["lea     rdx, [rax+1]", "mov     [rdi+rax], cl", "cmp     rdx, rsi", "mov     cs:oc, rdx", "jb      short loc_4350"], ["lea~rdx,[rax+0]", "mov~<TAG>,cl", "cmp~rdx,rsi", "mov~<TAG>,rdx", "jb~FOO"]], [1, 0, 15, 1, 0, 9, 1, 1, 1, -1, 0.05514705882352941, ["push    r13", "push    r12", "mov     r12, buf", "push    rbp", "push    rbx", "mov     rbp, nread", "xor     ebx, ebx", "sub     rsp, 8", "jmp     short loc_42F8"], ["push~r13", "push~r12", "mov~r12,buf", "push~rbp", "push~rbx", "mov~rbp,nread", "xor~ebx,ebx", "sub~rsp,0", "jmp~FOO"]]], "func_feature": [2, 3, 12, 0, 18, 27, 2, 77, 0.13562, 8, 8], "succs": [[16], [0, 9], [0, 9], [8, 17], [13, 14], [4, 7], [16, 15], [11, 6], [], [13, 14], [9], [13], [], [12, 5], [12, 5], [10], [1, 2], [5]], "fname": "copy_with_unblock", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[0, 0, 64, 0, 0, 3, 1, 1, 0, 0, 0.06197311460469356, ["test    valid_suffixes, valid_suffixes", "mov     [rsp+58h+var_50], rcx", "jnz     short loc_4500"], ["test~valid_suffixes,valid_suffixes", "mov~[rsp+0],rcx", "jnz~FOO"]], [1, 0, 71, 0, 2, 13, 1, 3, 4, 10, 0.05724538619275462, ["call    ___errno_location", "xor     ecx, ecx; group", "mov     dword ptr [rax], 0", "mov     edx, r15d; base", "mov     rsi, p; endptr", "mov     rdi, s; nptr", "mov     [rsp+58h+var_50], rax", "call    ___strtoul_internal", "mov     rcx, [p+0]", "mov     ch_0, rax", "mov     r8, [rsp+58h+var_50]", "cmp     rcx, s", "jz      short loc_44B8"], ["call~FOO", "xor~ecx,ecx", "mov~<TAG>,0", "mov~edx,r15d", "mov~rsi,p", "mov~rdi,s", "mov~[rsp+0],rax", "call~FOO", "mov~rcx,[p+0]", "mov~ch_0,rax", "mov~r8,[rsp+0]", "cmp~rcx,s", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 5, -1, 0.025290498974709502, ["mov     rdi, [rsp+58h+var_40]", "xor     rdi, fs:28h", "mov     eax, r12d", "jnz     loc_4776"], ["mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "mov~eax,r12d", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 1, 0, 13, -1, 0.016404647983595352, ["mov     r8d, 6; jumptable 00000000000045AE case 3", "xor     r9d, r9d"], ["mov~r8d,0", "xor~r9d,r9d"]], [0, 0, 50, 1, 0, 5, 0, 1, 12, 2, 0.18079289131920712, ["lea     rdx, off_ACC0", "movzx   r15d, r15b", "movsxd  rax, dword ptr [rdx+r15*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movzx~r15d,r15b", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [2, 0, 52, 0, 0, 3, 0, 1, 11, 4, 0.013328776486671225, ["mov     edi, 2", "mov     esi, 3E8h", "jmp     short loc_4592"], ["mov~edi,0", "mov~esi,0", "jmp~FOO"]], [1, 0, 57, 0, 0, 3, 0, 1, 10, 5, 0.010936431989063569, ["movzx   eax, byte ptr [rcx+1]", "cmp     al, 44h ; 'D'", "jz      short loc_4577"], ["movzx~eax,[yte ptr [rcx+0]", "cmp~al,0", "jz~FOO"]], [1, 0, 54, 0, 0, 2, 0, 1, 12, 5, 0.0005126452494873548, ["cmp     al, 42h ; 'B'", "jnz     short loc_4588"], ["cmp~al,0", "jnz~FOO"]], [0, 0, 62, 0, 0, 3, 1, 1, 6, 8, 0.06994759626338574, ["movzx   r15d, byte ptr [s]", "test    r15b, r15b", "jz      short loc_44C8"], ["movzx~r15d,<TAG>", "test~r15b,r15b", "jz~FOO"]], [0, 0, 9, 1, 0, 4, 0, 0, 14, -1, 0.01384142173615858, ["mov     rax, tmp", "mul     rsi", "mov     tmp, rax", "jo      loc_47B4"], ["mov~rax,tmp", "mul~,rsi", "mov~tmp,rax", "jo~FOO"]], [1, 0, 9, 1, 0, 2, 0, 1, 15, -1, 0.007347915242652085, ["sub     r8d, 1", "jnz     short loc_4680"], ["sub~r8d,0", "jnz~FOO"]], [1, 0, 9, 0, 0, 3, 1, 0, 13, -1, 0.016404647983595352, ["mov     r8d, 8; jumptable 00000000000045AE case 23", "xor     r9d, r9d", "nop     word ptr [rax+rax+00000000h]"], ["mov~r8d,0", "xor~r9d,r9d", "nop~[ord ptr [rax+0]"]], [2, 0, 9, 0, 0, 3, 1, 1, 15, -1, 0.0, ["mov     r9d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_468F"], ["mov~r9d,0", "or~rbx,0", "jmp~FOO"]], [2, 0, 8, 0, 0, 3, 1, 1, 15, -1, 0.0, ["mov     r9d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_465F"], ["mov~r9d,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 8, 1, 0, 4, 0, 0, 14, -1, 0.013670539986329461, ["mov     rax, tmp", "mul     rsi", "mov     tmp, rax", "jo      loc_47D2"], ["mov~rax,tmp", "mul~,rsi", "mov~tmp,rax", "jo~FOO"]], [1, 0, 72, 0, 0, 2, 0, 1, 3, 11, 0.04921394395078606, ["cmp     bl, 2Dh ; '-'", "jz      short loc_44C8"], ["cmp~bl,0", "jz~FOO"]], [2, 0, 52, 0, 0, 6, 1, 1, 12, 4, 0.00888585099111415, ["xor     edi, edi", "cmp     byte ptr [rcx+2], 42h ; 'B'", "mov     esi, 400h", "setz    dil", "lea     edi, [rdi+rdi+1]", "jmp     loc_4592"], ["xor~edi,edi", "cmp~[yte ptr [rcx+0],0", "mov~esi,0", "setz~dil", "lea~edi,[rdi+0]", "jmp~FOO"]], [1, 0, 56, 0, 0, 2, 0, 1, 11, 5, 0.00598086124401914, ["cmp     al, 69h ; 'i'", "jz      loc_45FB"], ["cmp~al,0", "jz~FOO"]], [2, 0, 77, 1, 0, 12, 1, 1, 0, 14, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 28h", "mov     rax, fs:28h", "mov     [rsp+58h+var_40], rax", "xor     eax, eax", "cmp     edx, 24h ; '$'", "ja      loc_4757"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~edx,0", "ja~FOO"]], [0, 0, 66, 0, 0, 3, 1, 1, 5, 10, 0.0053542948279790385, ["mov     eax, [r8]", "test    eax, eax", "jz      short loc_44F8"], ["mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 16, -1, 0.0034176349965823654, ["jmp     short loc_4665"], ["jmp~FOO"]], [2, 0, 51, 1, 0, 3, 0, 1, 11, 3, 0.1814764183185236, ["sub     r15d, 42h ; 'B'", "cmp     r15b, 35h ; '5'; switch 54 cases", "ja      short loc_45EF; jumptable 00000000000045AE default case"], ["sub~r15d,0", "cmp~r15b,0", "ja~FOO"]], [2, 0, 52, 0, 0, 2, 0, 0, 10, 4, 0.13636363636363638, ["mov     edi, 1", "mov     esi, 400h"], ["mov~edi,0", "mov~esi,0"]], [2, 0, 9, 0, 0, 3, 1, 1, 15, -1, 0.0, ["mov     r9d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_46AF"], ["mov~r9d,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 9, 1, 0, 4, 0, 0, 14, -1, 0.01384142173615858, ["mov     rax, tmp", "mul     rsi", "mov     tmp, rax", "jo      loc_4787"], ["mov~rax,tmp", "mul~,rsi", "mov~tmp,rax", "jo~FOO"]], [1, 0, 9, 0, 0, 2, 1, 0, 13, -1, 0.016404647983595352, ["mov     r8d, 4; jumptable 00000000000045AE cases 18,50", "xor     r9d, r9d"], ["mov~r8d,0", "xor~r9d,r9d"]], [1, 0, 6, 1, 0, 4, 0, 0, 13, -1, 0.005126452494873548, ["mov     edx, 2; jumptable 00000000000045AE case 53", "mov     rax, rdx", "mul     tmp", "jo      loc_46C6"], ["mov~edx,0", "mov~rax,rdx", "mul~,tmp", "jo~FOO"]], [2, 0, 64, 0, 0, 3, 0, 1, 6, 9, 0.007575757575757577, ["cmp     eax, 22h ; '\"'", "mov     r12d, 1", "jnz     short loc_44C8"], ["cmp~eax,0", "mov~r12d,0", "jnz~FOO"]], [2, 0, 5, 0, 0, 3, 1, 1, 16, -1, 0.00589542036910458, ["mov     r8d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_45CB"], ["mov~r8d,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 7, 1, 0, 2, 0, 0, 15, -1, 0.021872863978127138, ["mul     rsi", "jo      loc_4796"], ["mul~,rsi", "jo~FOO"]], [0, 0, 62, 0, 0, 2, 1, 1, 7, 8, 0.032809295967190705, ["test    valid_suffixes, valid_suffixes", "jz      short loc_44AF"], ["test~valid_suffixes,valid_suffixes", "jz~FOO"]], [0, 0, 63, 0, 0, 2, 1, 1, 6, 9, 0.006664388243335612, ["xor     r12d, r12d", "jmp     short loc_44A1"], ["xor~r12d,r12d", "jmp~FOO"]], [1, 0, 6, 1, 0, 4, 0, 0, 13, -1, 0.005126452494873548, ["mov     edx, 400h; jumptable 00000000000045AE case 0", "mov     rax, rdx", "mul     tmp", "jo      short loc_46C6"], ["mov~edx,0", "mov~rax,rdx", "mul~,tmp", "jo~FOO"]], [1, 0, 61, 0, 1, 8, 2, 2, 7, 7, 0.07792207792207793, ["movsx   esi, r15b; c", "mov     rdi, valid_suffixes; s", "xor     r12d, r12d", "call    _strchr", "test    rax, rax", "mov     ebx, 1", "mov     rcx, [rsp+58h+var_50]", "jz      short loc_44C8"], ["movsx~esi,r15b", "mov~rdi,valid_suffixes", "xor~r12d,r12d", "call~FOO", "test~rax,rax", "mov~ebx,0", "mov~rcx,[rsp+0]", "jz~FOO"]], [0, 0, 4, 1, 0, 2, 0, 1, 14, -1, 0.0003417634996582365, ["add     tmp, tmp", "jmp     short loc_45D0; jumptable 00000000000045AE case 33"], ["add~tmp,tmp", "jmp~FOO"]], [1, 0, 9, 1, 0, 2, 0, 1, 15, -1, 0.007347915242652085, ["sub     r8d, 1", "jnz     short loc_46A0"], ["sub~r8d,0", "jnz~FOO"]], [1, 0, 4, 1, 0, 2, 0, 1, 14, -1, 0.0003417634996582365, ["shl     tmp, 0Ah", "jmp     loc_45D0; jumptable 00000000000045AE case 33"], ["shl~tmp,0", "jmp~FOO"]], [0, 0, 61, 0, 0, 3, 1, 1, 8, 7, 0.03896103896103897, ["movzx   r15d, byte ptr [rcx]", "test    r15b, r15b", "jnz     short loc_4528"], ["movzx~r15d,<TAG>", "test~r15b,r15b", "jnz~FOO"]], [2, 0, 8, 0, 0, 3, 1, 1, 14, -1, 0.00888585099111415, ["or      rax, 0FFFFFFFFFFFFFFFFh", "mov     r8d, 1", "jmp     loc_45BF"], ["or~rax,0", "mov~r8d,0", "jmp~FOO"]], [0, 0, 10, 1, 0, 3, 0, 0, 13, -1, 0.02460697197539303, ["mov     rax, tmp; jumptable 00000000000045AE cases 11,43", "mul     rsi", "jo      loc_47A5"], ["mov~rax,tmp", "mul~,rsi", "jo~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 16, -1, 0.00589542036910458, ["mov     rbx, rax"], ["mov~rbx,rax"]], [0, 0, 3, 0, 0, 2, 0, 1, 8, -1, 0.0015379357484620643, ["mov     [val], tmp", "jmp     short loc_44CE"], ["mov~<TAG>,tmp", "jmp~FOO"]], [0, 1, 6, 1, 0, 4, 0, 0, 13, -1, 0.005126452494873548, ["mov     edx, 200h; jumptable 00000000000045AE case 32", "mov     rax, rdx", "mul     tmp", "jo      loc_46C6"], ["mov~edx,<STR>", "mov~rax,rdx", "mul~,tmp", "jo~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 16, -1, 0.0034176349965823654, ["jmp     short loc_4665"], ["jmp~FOO"]], [0, 0, 5, 1, 0, 4, 0, 0, 13, -1, 0.0010252904989747095, ["mov     rax, tmp; jumptable 00000000000045AE cases 9,41", "mul     rsi", "mov     tmp, rax", "jno     loc_45D0; jumptable 00000000000045AE case 33"], ["mov~rax,tmp", "mul~,rsi", "mov~tmp,rax", "jno~FOO"]], [0, 0, 8, 0, 0, 1, 1, 0, 14, -1, 0.00888585099111415, ["xor     r8d, r8d"], ["xor~r8d,r8d"]], [1, 0, 4, 1, 0, 2, 0, 1, 14, -1, 0.0003417634996582365, ["shl     tmp, 9", "jmp     short loc_45D0; jumptable 00000000000045AE case 33"], ["shl~tmp,0", "jmp~FOO"]], [0, 0, 75, 0, 1, 13, 1, 2, 1, 13, 0.01281613123718387, ["lea     rax, [rsp+58h+t_ptr]", "mov     r12, s", "mov     rbp, ptr", "test    ptr, ptr", "mov     r14, val", "mov     r15d, edx", "mov     r13, valid_suffixes", "cmovz   rbp, rax", "movzx   ebx, byte ptr [q]", "call    ___ctype_b_loc", "mov     rcx, [rax]", "mov     rax, q", "jmp     short loc_444F"], ["lea~rax,[rsp+0]", "mov~r12,s", "mov~rbp,ptr", "test~ptr,ptr", "mov~r14,val", "mov~r15d,edx", "mov~r13,valid_suffixes", "cmovz~rbp,rax", "movzx~ebx,<TAG>", "call~FOO", "mov~rcx,<TAG>", "mov~rax,q", "jmp~FOO"]], [0, 0, 59, 0, 1, 7, 1, 2, 8, 6, 0.1339712918660287, ["movsx   esi, r15b; c", "mov     rdi, valid_suffixes; s", "mov     [rsp+58h+var_50], rcx", "call    _strchr", "test    rax, rax", "mov     rcx, [rsp+58h+var_50]", "jz      loc_45EF; jumptable 00000000000045AE default case"], ["movsx~esi,r15b", "mov~rdi,valid_suffixes", "mov~[rsp+0],rcx", "call~FOO", "test~rax,rax", "mov~rcx,[rsp+0]", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 6, -1, 0.0005696058327637275, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 9, 1, 0, 4, 0, 0, 14, -1, 0.01384142173615858, ["mov     rax, tmp", "mul     rsi", "mov     tmp, rax", "jo      short loc_477B"], ["mov~rax,tmp", "mul~,rsi", "mov~tmp,rax", "jo~FOO"]], [1, 0, 9, 1, 0, 2, 0, 1, 15, -1, 0.007347915242652085, ["sub     r8d, 1", "jnz     short loc_4704"], ["sub~r8d,0", "jnz~FOO"]], [0, 0, 10, 0, 0, 1, 1, 0, 14, -1, 0.004955570745044429, ["xor     r8d, r8d"], ["xor~r8d,r8d"]], [0, 0, 12, 1, 0, 3, 0, 0, 13, 1, 0.016404647983595352, ["mov     rax, tmp; jumptable 00000000000045AE cases 5,37", "mul     rsi", "jo      loc_47E1"], ["mov~rax,tmp", "mul~,rsi", "jo~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 4, -1, 0.006151742993848257, ["mov     r12d, 4"], ["mov~r12d,0"]], [1, 0, 8, 0, 0, 3, 1, 0, 13, -1, 0.016404647983595352, ["mov     r8d, 7; jumptable 00000000000045AE case 24", "xor     r9d, r9d", "nop     dword ptr [rax+00000000h]"], ["mov~r8d,0", "xor~r9d,r9d", "nop~[word ptr [rax+0]"]], [1, 0, 0, 0, 1, 5, 0, 1, 1, -1, 0.0, ["lea     val, __PRETTY_FUNCTION___4894; \"xstrtoumax\"", "lea     ptr, file; \"xstrtol.c\"", "lea     s, assertion; \"0 <= strtol_base && strtol_base <= 36\"", "mov     edx, 53h ; 'S'; line", "call    ___assert_fail"], ["lea~val,<TAG>", "lea~ptr,<TAG>", "lea~s,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 75, 1, 0, 2, 0, 0, 3, 13, 0.0, ["add     q, 1", "movzx   ebx, byte ptr [q]"], ["add~q,0", "movzx~ebx,<TAG>"]], [0, 1, 75, 0, 0, 3, 1, 1, 2, 12, 0.03776486671223513, ["movzx   edx, bl", "test    byte ptr [rcx+rdx*2+1], 20h", "jnz     short loc_4448"], ["movzx~edx,bl", "test~[yte ptr [rcx+0],<STR>", "jnz~FOO"]], [2, 0, 9, 0, 0, 3, 1, 1, 15, -1, 0.0, ["mov     r9d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_46F0"], ["mov~r9d,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 9, 1, 0, 4, 0, 0, 14, -1, 0.01384142173615858, ["mov     rax, tmp", "mul     rsi", "mov     tmp, rax", "jo      loc_47C3"], ["mov~rax,tmp", "mul~,rsi", "mov~tmp,rax", "jo~FOO"]], [0, 0, 4, 0, 0, 2, 1, 0, 17, -1, 0.0075187969924812035, ["or      r12d, r8d", "xchg    ax, ax"], ["or~r12d,r8d", "xchg~ax,ax"]], [1, 0, 58, 0, 1, 7, 1, 2, 9, 5, 0.1384142173615858, ["mov     esi, 30h ; '0'; c", "mov     rdi, valid_suffixes; s", "mov     [rsp+58h+var_50], rcx", "call    _strchr", "test    rax, rax", "mov     rcx, [rsp+58h+var_50]", "jz      short loc_4588"], ["mov~esi,0", "mov~rdi,valid_suffixes", "mov~[rsp+0],rcx", "call~FOO", "test~rax,rax", "mov~rcx,[rsp+0]", "jz~FOO"]], [2, 0, 4, 0, 0, 3, 1, 1, 14, -1, 0.0010252904989747095, ["mov     r12d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_45D0; jumptable 00000000000045AE case 33"], ["mov~r12d,0", "or~rbx,0", "jmp~FOO"]], [2, 0, 8, 0, 0, 3, 1, 1, 16, -1, 0.0, ["mov     r8d, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_45BF"], ["mov~r8d,0", "or~rax,0", "jmp~FOO"]], [0, 0, 9, 1, 0, 2, 0, 0, 15, -1, 0.008714969241285031, ["mul     rsi", "jno     loc_45BF"], ["mul~,rsi", "jno~FOO"]], [2, 0, 9, 0, 0, 3, 1, 1, 15, -1, 0.0, ["mov     r9d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     short loc_470F"], ["mov~r9d,0", "or~rbx,0", "jmp~FOO"]], [1, 0, 8, 1, 0, 2, 0, 1, 15, -1, 0.006835269993164731, ["sub     r8d, 1", "jnz     short loc_4650"], ["sub~r8d,0", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 1, 0, 13, -1, 0.016404647983595352, ["mov     r8d, 5; jumptable 00000000000045AE case 14", "xor     r9d, r9d"], ["mov~r8d,0", "xor~r9d,r9d"]], [2, 0, 3, 1, 0, 9, 1, 1, 13, -1, 0.02332535885167464, ["movsxd  suffixes, edi; jumptable 00000000000045AE case 33", "mov     eax, r12d", "add     rcx, suffixes", "or      eax, 2", "mov     [p+0], rcx", "cmp     byte ptr [rcx], 0", "mov     [val], tmp", "cmovnz  r12d, eax", "jmp     loc_44CE"], ["movsxd~suffixes,edi", "mov~eax,r12d", "add~rcx,suffixes", "or~eax,0", "mov~[p+0],rcx", "cmp~<TAG>,0", "mov~<TAG>,tmp", "cmovnz~r12d,eax", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 1, 1, 9, -1, 0.004870129870129871, ["mov     [val], tmp; jumptable 00000000000045AE default case", "or      r12d, 2", "jmp     loc_44CE"], ["mov~<TAG>,tmp", "or~r12d,0", "jmp~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 16, -1, 0.0034176349965823654, ["jmp     loc_4665"], ["jmp~FOO"]], [1, 0, 9, 1, 0, 2, 0, 1, 15, -1, 0.007347915242652085, ["sub     r8d, 1", "jnz     short loc_46E1"], ["sub~r8d,0", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 16, -1, 0.016404647983595352, ["or      r12d, r9d", "jmp     loc_45D0; jumptable 00000000000045AE case 33"], ["or~r12d,r9d", "jmp~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 16, -1, 0.0034176349965823654, ["jmp     loc_4665"], ["jmp~FOO"]], [2, 0, 10, 0, 0, 3, 1, 1, 14, 0, 0.004955570745044429, ["mov     r8d, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_473F"], ["mov~r8d,0", "or~rax,0", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 6, -1, 0.0, ["add     rsp, 28h", "pop     rbx", "pop     p", "pop     r12", "pop     valid_suffixes", "pop     val", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~p", "pop~r12", "pop~valid_suffixes", "pop~val", "pop~r15", "retn"]]], "func_feature": [8, 37, 57, 2, 78, 123, 2, 261, 0.0216, 5, 27], "succs": [[9, 50], [0, 20], [], [2, 77], [51], [33, 4, 69, 70, 71, 40, 43, 12, 45, 54, 56, 26, 27], [22], [18, 6], [6, 23], [34, 55], [11, 13], [10, 21], [10], [11], [68], [68, 14], [1, 55], [22], [8, 17], [48, 57], [32, 28], [74], [5, 71], [22], [36], [24, 36], [25], [64, 35], [55, 31], [62], [41, 29], [42, 38], [31], [64, 37], [49, 55], [70], [25, 44], [70], [49, 42], [30], [46, 39], [62], [3], [64, 47], [74], [64, 70], [30], [70], [59], [71, 63], [55], [67, 52], [75, 51], [66], [76, 53], [3], [15], [], [59], [16, 58], [73], [73, 60], [70], [7, 23], [70], [30], [65, 30], [52], [74, 15], [61], [3], [3], [74], [72, 61], [70], [74], [66], []], "fname": "xstrtoumax", "n_num": 78}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[1, 0, 2, 2, 0, 5, 1, 1, 0, 0, 0.3333333333333333, ["imul    rax, [rsp+28h+ts.tv_sec], 3B9ACA00h", "add     rax, [rsp+28h+ts.tv_nsec]", "mov     rdx, [rsp+28h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_48F4"], ["imul~rax,<TAG>,0", "add~rax,[rsp+0]", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [1, 1, 4, 1, 1, 11, 2, 2, 0, 2, 0.0, ["push    rbx", "mov     edi, 1; clock_id", "sub     rsp, 20h", "mov     rbx, rsp", "mov     rsi, rbx; tp", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "call    _clock_gettime", "test    eax, eax", "jz      short loc_48D1"], ["push~rbx", "mov~edi,0", "sub~rsp,<STR>", "mov~rbx,rsp", "mov~rsi,rbx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 3, 0, 1, 2, 0, 1, 1, 2, 0.0, ["mov     rdi, rbx; ts", "call    gettime"], ["mov~rdi,rbx", "call~FOO"]], [0, 1, 0, 1, 0, 3, 0, 0, 2, -1, 0.0, ["add     rsp, 20h", "pop     rbx", "retn"], ["add~rsp,<STR>", "pop~rbx", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 3, 5, 1, 5, 5, 2, 22, 0.06667, 1, 4], "succs": [[3, 4], [0, 2], [0], [], []], "fname": "gethrxtime", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[1, 0, 3, 1, 1, 7, 1, 1, 0, 0, 0.0, ["mov     rdi, rsp; tv", "xor     esi, esi; tz", "call    _gettimeofday", "mov     rax, [rsp+28h+tv.tv_sec]", "mov     [ts], rax", "imul    rax, [rsp+28h+tv.tv_usec], 3E8h", "mov     [ts+8], rax"], ["mov~rdi,rsp", "xor~esi,esi", "call~FOO", "mov~rax,<TAG>", "mov~<TAG>,rax", "imul~rax,[rsp+0],0", "mov~[ts+0],rax"]], [0, 1, 4, 1, 1, 11, 3, 2, 0, 2, 0.0, ["push    rbx", "mov     rsi, ts; tp", "mov     rbx, ts", "xor     edi, edi; clock_id", "sub     rsp, 20h", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "call    _clock_gettime", "test    eax, eax", "jz      short loc_4944"], ["push~rbx", "mov~rsi,ts", "mov~rbx,ts", "xor~edi,edi", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 1, 0, 1, 0, 3, 0, 0, 2, -1, 0.0, ["add     rsp, 20h", "pop     ts", "retn"], ["add~rsp,<STR>", "pop~ts", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 1, 0.3333333333333333, ["mov     rax, [rsp+28h+var_10]", "xor     rax, fs:28h", "jnz     short loc_495A"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 5, 5, 1, 5, 5, 1, 25, 0.06667, 1, 3], "succs": [[3], [0, 3], [], [2, 4], []], "fname": "gettime", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[0, 0, 11, 0, 0, 4, 1, 0, 0, 0, 0.18131868131868134, ["mov     [rsp+var_20], rax", "test    rax, rax", "fild    [rsp+var_20]", "jns     short loc_49A8"], ["mov~[rsp+0],rax", "test~rax,rax", "fild~<TAG>,[rsp+0]", "jns~FOO"]], [2, 0, 12, 0, 0, 13, 2, 1, 1, 6, 0.03296703296703297, ["fnstcw  [rsp+var_A]", "movzx   eax, [rsp+var_A]", "fsubr   st(1), st", "fxch    st(1)", "mov     rdx, 8000000000000000h", "or      ah, 0Ch", "mov     [rsp+var_C], ax", "fldcw   [rsp+var_C]", "fistp   [rsp+var_18]", "fldcw   [rsp+var_A]", "mov     rax, [rsp+var_18]", "xor     rax, rdx", "jmp     loc_4994"], ["fnstcw~[rsp+0]", "movzx~eax,[rsp+0]", "fsubr~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "mov~rdx,0", "or~ah,0", "mov~[rsp+0],ax", "fldcw~[rsp+0]", "fistp~<TAG>,[rsp+0]", "fldcw~[rsp+0]", "mov~rax,[rsp+0]", "xor~rax,rdx", "jmp~FOO"]], [1, 0, 12, 0, 0, 10, 1, 0, 1, 6, 0.03296703296703297, ["fstp    st(1)", "fnstcw  [rsp+var_A]", "movzx   eax, [rsp+var_A]", "or      ah, 0Ch", "mov     [rsp+var_C], ax", "fld     st", "fldcw   [rsp+var_C]", "fistp   [rsp+var_18]", "fldcw   [rsp+var_A]", "mov     rax, [rsp+var_18]"], ["fstp~<TAG>,<TAG>", "fnstcw~[rsp+0]", "movzx~eax,[rsp+0]", "or~ah,0", "mov~[rsp+0],ax", "fld~<TAG>,<TAG>", "fldcw~[rsp+0]", "fistp~<TAG>,[rsp+0]", "fldcw~[rsp+0]", "mov~rax,[rsp+0]"]], [1, 0, 3, 1, 0, 5, 1, 1, 6, 1, 0.1208791208791209, ["add     rax, 1", "mov     [rsp+var_20], rax", "test    rax, rax", "fild    [rsp+var_20]", "js      short loc_4A20"], ["add~rax,0", "mov~[rsp+0],rax", "test~rax,rax", "fild~<TAG>,[rsp+0]", "js~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 6, 2, 0.016483516483516484, ["fstp    st", "jmp     short loc_49C0"], ["fstp~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 5, 2, 0.11538461538461539, ["fstp    st", "nop     word ptr [rax+rax+00h]"], ["fstp~<TAG>,<TAG>", "nop~[ord ptr [rax+0]"]], [0, 0, 10, 0, 0, 1, 0, 0, 3, 5, 0.0, ["fadd    cs:flt_AE10"], ["fadd~<TAG>,<TAG>"]], [0, 0, 0, 0, 0, 2, 0, 0, 7, 0, 0.0, ["fadd    cs:flt_AE10", "retn"], ["fadd~<TAG>,<TAG>", "retn"]], [0, 0, 9, 0, 0, 2, 1, 1, 3, 4, 0.24725274725274726, ["test    edi, edi", "jnz     short loc_49D8"], ["test~edi,edi", "jnz~FOO"]], [0, 0, 14, 0, 0, 4, 0, 0, 0, 7, 0.0, ["fld     cs:flt_AE0C", "fld     [rsp+value.value]", "fucomi  st, st(1)", "jnb     short loc_49E0"], ["fld~<TAG>,<TAG>", "fld~<TAG>,[rsp+0]", "fucomi~<TAG>,<TAG>", "jnb~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 7, -1, 0.016483516483516484, ["jmp     short locret_49DA"], ["jmp~FOO"]], [0, 0, 7, 0, 0, 3, 0, 0, 4, 3, 0.19780219780219782, ["fxch    st(1)", "fucomip st, st(1)", "jp      short loc_49B8"], ["fxch~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "jp~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 5, 3, 0.04395604395604396, ["jz      short locret_49DA"], ["jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, -1, 0.03296703296703297, ["fstp    st(1)"], ["fstp~<TAG>,<TAG>"]], [0, 0, 0, 0, 0, 1, 0, 0, 5, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 6, 6, 4, 15, 19, 3, 52, 0.06923, 2, 1], "succs": [[8, 6], [0], [0], [10, 7], [3], [3], [8], [], [11, 13], [1, 2], [14], [12, 5], [4, 14], [14], []], "fname": "adjust_value", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[2, 0, 54, 2, 0, 9, 1, 1, 0, 0, 0.041666666666666664, ["mov     rax, amt", "movsxd  rounding, edi", "and     eax, 1", "add     rax, rounding", "setnz   al", "movzx   eax, al", "add     r9d, eax", "cmp     r9d, 5", "jg      loc_5086"], ["mov~rax,amt", "movsxd~rounding,edi", "and~eax,0", "add~rax,rounding", "setnz~al", "movzx~eax,al", "add~r9d,eax", "cmp~r9d,0", "jg~FOO"]], [1, 0, 57, 0, 0, 2, 0, 1, 5, 10, 0.12826797385620914, ["cmp     r15d, 1", "jz      loc_51F0"], ["cmp~r15d,0", "jz~FOO"]], [3, 0, 45, 1, 2, 18, 1, 3, 12, 9, 0.009767610748002914, ["fstp    [rsp+0C8h+damt.value]", "sub     rsp, 10h", "lea     rcx, a1lf; \"%.1Lf\"", "mov     esi, 1", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "xor     eax, eax", "mov     decimal_point, [rsp+0D8h+buf]", "mov     rdi, r14", "fstp    [rsp+0D8h+value.value]", "call    ___sprintf_chk", "mov     rdi, r14; s", "call    _strlen", "pop     rcx", "pop     rsi", "cmp     rax, [rsp+0C8h+from_block_size]", "mov     r14, rax", "fld     [rsp+0C8h+damt.value]", "ja      loc_51B8"], ["fstp~<TAG>,[rsp+0]", "sub~rsp,0", "lea~rcx,<TAG>", "mov~esi,0", "mov~rdx,0", "xor~eax,eax", "mov~decimal_point,[rsp+0]", "mov~rdi,r14", "fstp~<TAG>,<TAG>", "call~FOO", "mov~rdi,r14", "call~FOO", "pop~rcx", "pop~rsi", "cmp~rax,[rsp+0]", "mov~r14,rax", "fld~<TAG>,[rsp+0]", "ja~FOO"]], [1, 0, 46, 1, 1, 10, 0, 2, 11, 10, 0.00297748729121278, ["sub     rsp, 10h", "mov     edi, r15d; inexact_style", "fld     st", "fstp    [rsp+0D8h+value.value]; value", "fstp    [rsp+0D8h+damt.value]", "call    adjust_value", "pop     rax", "pop     rdx", "fld     [rsp+0C8h+damt.value]", "jmp     loc_4BC9"], ["sub~rsp,0", "mov~edi,r15d", "fld~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "fstp~<TAG>,[rsp+0]", "call~FOO", "pop~rax", "pop~rdx", "fld~<TAG>,[rsp+0]", "jmp~FOO"]], [0, 0, 46, 0, 0, 1, 0, 0, 11, 10, 0.00297748729121278, ["fld     st"], ["fld~<TAG>,<TAG>"]], [0, 0, 79, 0, 0, 5, 3, 0, 12, 15, 0.012445533769063181, ["test    r15d, r15d", "setz    dl", "test    edi, edi", "setnle  r8b", "and     edx, r8d"], ["test~r15d,r15d", "setz~dl", "test~edi,edi", "setnle~r8b", "and~edx,r8d"]], [1, 0, 81, 0, 0, 2, 0, 1, 11, 16, 0.022549019607843137, ["cmp     r15d, 1", "jz      loc_52B2"], ["cmp~r15d,0", "jz~FOO"]], [0, 0, 37, 0, 0, 1, 0, 1, 7, 9, 0.0010076252723311546, ["jmp     loc_50A0"], ["jmp~FOO"]], [0, 0, 35, 0, 0, 5, 0, 1, 13, 7, 0.0009531590413943355, ["mov     edx, [decimal_point]", "mov     [p_0], edx", "mov     edx, [decimal_point+rax-4]", "mov     [p_0+rax-4], edx", "jmp     loc_5276"], ["mov~edx,<TAG>", "mov~<TAG>,edx", "mov~edx,[decimal_point+0]", "mov~[p_0+0],edx", "jmp~FOO"]], [1, 0, 39, 0, 0, 2, 1, 1, 12, 8, 0.011546840958605665, ["and     ebp, 4", "jnz     loc_5401"], ["and~ebp,0", "jnz~FOO"]], [0, 0, 78, 0, 0, 2, 1, 1, 13, 14, 0.032352941176470584, ["test    dl, dl", "jz      loc_5299"], ["test~dl,dl", "jz~FOO"]], [2, 0, 79, 1, 0, 6, 1, 1, 12, 15, 0.012445533769063181, ["mov     edx, eax", "and     edx, 1", "add     edx, edi", "cmp     edx, 2", "setnle  dl", "jmp     loc_5010"], ["mov~edx,eax", "and~edx,0", "add~edx,edi", "cmp~edx,0", "setnle~dl", "jmp~FOO"]], [1, 0, 43, 0, 0, 2, 1, 1, 11, 8, 0.022585330428467693, ["test    r12b, 8", "jz      loc_4D80"], ["test~r12b,0", "jz~FOO"]], [3, 0, 45, 1, 2, 19, 1, 2, 10, 9, 0.022312999273783586, ["sub     rsp, 10h", "lea     rcx, a1lf; \"%.1Lf\"", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "fld     st", "fstp    [rsp+0D8h+value.value]", "mov     decimal_point, [rsp+0D8h+buf]", "mov     esi, 1", "xor     eax, eax", "mov     rdi, r14", "fstp    [rsp+0D8h+damt.value]", "call    ___sprintf_chk", "mov     rdi, r14; s", "call    _strlen", "mov     r14, rax", "pop     buflen", "pop     rdx", "cmp     buflen, [rsp+0C8h+from_block_size]", "fld     [rsp+0C8h+damt.value]", "jbe     loc_4C12"], ["sub~rsp,0", "lea~rcx,<TAG>", "mov~rdx,0", "fld~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "mov~decimal_point,[rsp+0]", "mov~esi,0", "xor~eax,eax", "mov~rdi,r14", "fstp~<TAG>,[rsp+0]", "call~FOO", "mov~rdi,r14", "call~FOO", "mov~r14,rax", "pop~buflen", "pop~rdx", "cmp~buflen,[rsp+0]", "fld~<TAG>,[rsp+0]", "jbe~FOO"]], [0, 0, 7, 0, 0, 8, 1, 1, 16, -1, 0.02080610021786492, ["lea     rcx, power_letter", "movsxd  exponent_0, ebx", "mov     rdi, [rsp+0C8h+psuffix]", "test    eax, eax", "movzx   ecx, byte ptr [rcx+exponent_0]", "lea     rdx, [rdi+1]", "mov     [rdi], cl", "jz      loc_5254"], ["lea~rcx,<TAG>", "movsxd~exponent_0,ebx", "mov~rdi,[rsp+0]", "test~eax,eax", "movzx~ecx,<TAG>", "lea~rdx,[rdi+0]", "mov~<TAG>,cl", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 15, -1, 0.040522875816993466, ["cmp     ebx, 1", "jnz     short loc_4DFC"], ["cmp~ebx,0", "jnz~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 16, -1, 0.006835511982570806, ["mov     r9d, [rsp+0C8h+var_98]", "test    r9d, r9d", "jz      loc_5240"], ["mov~r9d,[rsp+0]", "test~r9d,r9d", "jz~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 15, -1, 0.013997821350762527, ["test    eax, eax", "mov     rdx, [rsp+0C8h+psuffix]", "jnz     loc_4E2B"], ["test~eax,eax", "mov~rdx,[rsp+0]", "jnz~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 14, -1, 0.0673202614379085, ["test    ebx, ebx", "jz      loc_5416"], ["test~ebx,ebx", "jz~FOO"]], [1, 0, 76, 0, 0, 3, 0, 1, 14, 14, 0.011383442265795206, ["lea     r9d, [tenths+1]", "cmp     r9d, 0Ah", "jz      loc_5321"], ["lea~r9d,[tenths+0]", "cmp~r9d,0", "jz~FOO"]], [1, 0, 93, 1, 0, 4, 0, 1, 4, 12, 0.0057461873638344225, ["setb    dil", "movzx   edi, dil", "add     edi, 2", "jmp     use_integer_arithmetic"], ["setb~dil", "movzx~edi,dil", "add~edi,0", "jmp~FOO"]], [0, 0, 95, 4, 0, 13, 2, 0, 3, 13, 0.006753812636165577, ["mov     divisor, n_0", "xor     edx, edx", "div     divisor", "mov     n_0, rax", "lea     rax, [rdx+rdx*4]", "xor     edx, edx", "mov     rsi, rbx", "add     rax, rax", "div     divisor", "add     rdx, rdx", "mov     r9d, eax", "cmp     divisor, r2", "jbe     loc_5218"], ["mov~divisor,n_0", "xor~edx,edx", "div~,divisor", "mov~n_0,rax", "lea~rax,<TAG>", "xor~edx,edx", "mov~rsi,rbx", "add~rax,rax", "div~,divisor", "add~rdx,rdx", "mov~r9d,eax", "cmp~divisor,r2", "jbe~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 17, -1, 0.006998910675381264, ["mov     r8d, [rsp+0C8h+var_98]", "test    r8d, r8d", "jnz     loc_4FE0"], ["mov~r8d,[rsp+0]", "test~r8d,r8d", "jnz~FOO"]], [1, 0, 41, 0, 0, 3, 0, 1, 12, 8, 0.005047204066811911, ["mov     rax, [rsp+0C8h+buf]", "cmp     byte ptr [rax+r14-1], 30h ; '0'", "jnz     loc_4D88"], ["mov~rax,<TAG>", "cmp~[yte ptr [rax+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 3, 0, 0, 16, -1, 0.0007897603485838779, ["lea     rax, [psuffix_0+1]", "mov     byte ptr [psuffix_0], 42h ; 'B'", "mov     [rsp+0C8h+psuffix], rax"], ["lea~rax,[psuffix_0+0]", "mov~<TAG>,0", "mov~[rsp+0],rax"]], [1, 0, 4, 0, 0, 3, 0, 1, 18, -1, 0.0, ["lea     psuffix_0, [rdi+2]", "mov     byte ptr [rdi+1], 69h ; 'i'", "jmp     loc_4E2B"], ["lea~psuffix_0,[rdi+0]", "mov~[yte ptr [rdi+0],0", "jmp~FOO"]], [1, 0, 5, 0, 0, 5, 1, 1, 17, -1, 0.00021786492374727668, ["mov     exponent_0, [rsp+0C8h+psuffix]", "test    eax, eax", "lea     rdx, [rbx+1]", "mov     byte ptr [rbx], 6Bh ; 'k'", "jnz     loc_4E2B"], ["mov~exponent_0,[rsp+0]", "test~eax,eax", "lea~rdx,[rbx+0]", "mov~<TAG>,0", "jnz~FOO"]], [0, 0, 48, 0, 0, 3, 0, 1, 10, 11, 0.005519244734931007, ["fld     cs:tbyte_AE20", "fucomip st, st(1)", "ja      loc_4F98"], ["fld~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "ja~FOO"]], [0, 0, 58, 0, 0, 3, 1, 1, 6, 11, 0.0031590413943355117, ["mov     r8, [rsp+0C8h+psuffix]", "xor     ebx, ebx", "jmp     loc_5070"], ["mov~r8,[rsp+0]", "xor~ebx,ebx", "jmp~FOO"]], [0, 0, 91, 0, 0, 4, 0, 1, 5, 12, 0.017973856209150325, ["mov     r8d, [rsp+0C8h+base]", "cmp     r8, amt", "mov     r11, r8", "ja      loc_5230"], ["mov~r8d,[rsp+0]", "cmp~r8,amt", "mov~r11,r8", "ja~FOO"]], [1, 0, 39, 0, 0, 4, 0, 1, 13, 9, 0.0025417574437182275, ["fld     cs:flt_AE14", "cmp     r15d, 1", "fmul    st(1), st", "jnz     loc_51C0"], ["fld~<TAG>,<TAG>", "cmp~r15d,0", "fmul~<TAG>,<TAG>", "jnz~FOO"]], [0, 0, 36, 0, 0, 1, 0, 1, 14, 8, 0.0010348583877995642, ["jmp     loc_5173"], ["jmp~FOO"]], [1, 0, 68, 1, 0, 7, 0, 0, 16, 13, 0.02080610021786492, ["mov     rax, [rsp+0C8h+buf]", "lea     r8, [rax+287h]", "mov     [rax+287h], r9b", "mov     eax, ebp", "sub     p_0, rbp", "cmp     ebp, 8", "jnb     loc_52D1"], ["mov~rax,<TAG>", "lea~r8,[rax+0]", "mov~[rax+0],r9b", "mov~eax,ebp", "sub~p_0,rbp", "cmp~ebp,0", "jnb~FOO"]], [1, 0, 69, 0, 0, 2, 0, 1, 16, 14, 0.0017429193899782135, ["mov     r9d, 30h ; '0'", "jmp     loc_502A"], ["mov~r9d,0", "jmp~FOO"]], [1, 0, 69, 1, 0, 1, 0, 0, 15, 14, 0.01312636165577342, ["add     r9d, 30h ; '0'"], ["add~r9d,0"]], [1, 0, 60, 0, 0, 4, 1, 1, 19, 12, 0.0017429193899782135, ["movzx   edx, byte ptr [decimal_point]", "test    al, 2", "mov     [p_0], dl", "jnz     loc_53F0"], ["movzx~edx,<TAG>", "test~al,0", "mov~<TAG>,dl", "jnz~FOO"]], [0, 0, 61, 0, 0, 2, 1, 1, 18, 12, 0.004983660130718954, ["test    eax, eax", "jz      short loc_5067"], ["test~eax,eax", "jz~FOO"]], [0, 0, 132, 0, 0, 2, 1, 1, 1, 13, 0.002096949891067538, ["test    rcx, rcx", "jz      loc_4B15"], ["test~rcx,rcx", "jz~FOO"]], [9, 2, 136, 4, 3, 52, 4, 4, 0, 14, 0.0, ["push    r15", "push    r14", "mov     eax, edx", "push    r13", "push    r12", "mov     r15d, edx", "push    rbp", "push    rbx", "and     eax, 20h", "and     r15d, 3", "mov     r12d, edx", "mov     rbx, n_0", "sub     rsp, 98h", "mov     [rsp+0C8h+from_block_size], from_block_size_0", "mov     [rsp+0C8h+var_98], eax", "mov     from_block_size_0, fs:28h", "mov     [rsp+0C8h+var_40], from_block_size_0", "xor     ecx, ecx", "cmp     eax, 1", "mov     [rsp+0C8h+buf], buf_0", "mov     [rsp+0C8h+to_block_size], to_block_size_0", "sbb     eax, eax", "and     eax, 0FFFFFFE8h", "add     eax, 400h", "mov     [rsp+0C8h+base], eax", "call    _localeconv", "mov     r14, [rax]", "mov     r13, rax", "mov     rdi, r14; s", "call    _strlen", "mov     rcx, [l+10h]", "mov     l, [l+8]", "mov     rbp, rax", "sub     pointlen, 1", "mov     edx, 1", "cmp     rax, 10h", "lea     rax, asc_ADAF; \".\"", "mov     rdi, r13; s", "cmovnb  pointlen, rdx", "mov     [rsp+0C8h+grouping], rcx", "cmovnb  r14, rax", "call    _strlen", "cmp     rax, 11h", "lea     rax, aReportBugsToS+16h; \"\"", "mov     rdi, [rsp+0C8h+to_block_size]", "mov     rcx, [rsp+0C8h+from_block_size]", "cmovnb  r13, rax", "mov     rax, [rsp+0C8h+buf]", "add     rax, 288h", "cmp     rdi, rcx", "mov     [rsp+0C8h+psuffix], rax", "ja      loc_4C48"], ["push~r15", "push~r14", "mov~eax,edx", "push~r13", "push~r12", "mov~r15d,edx", "push~rbp", "push~rbx", "and~eax,<STR>", "and~r15d,0", "mov~r12d,edx", "mov~rbx,n_0", "sub~rsp,0", "mov~[rsp+0],from_block_size_0", "mov~[rsp+0],eax", "mov~from_block_size_0,<TAG>", "mov~[rsp+0],from_block_size_0", "xor~ecx,ecx", "cmp~eax,0", "mov~<TAG>,buf_0", "mov~[rsp+0],to_block_size_0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[rsp+0],eax", "call~FOO", "mov~r14,<TAG>", "mov~r13,rax", "mov~rdi,r14", "call~FOO", "mov~rcx,[l+0]", "mov~l,[l+0]", "mov~rbp,rax", "sub~pointlen,0", "mov~edx,0", "cmp~rax,0", "lea~rax,<TAG>", "mov~rdi,r13", "cmovnb~pointlen,rdx", "mov~[rsp+0],rcx", "cmovnb~r14,rax", "call~FOO", "cmp~rax,0", "lea~rax,<TAG>", "mov~rdi,[rsp+0]", "mov~rcx,[rsp+0]", "cmovnb~r13,rax", "mov~rax,<TAG>", "add~rax,<STR>", "cmp~rdi,rcx", "mov~[rsp+0],rax", "ja~FOO"]], [1, 0, 63, 0, 0, 2, 1, 1, 17, 13, 0.006535947712418301, ["test    bpl, 4", "jnz     loc_53D6"], ["test~bpl,0", "jnz~FOO"]], [1, 0, 2, 0, 0, 6, 1, 1, 11, -1, 0.014596949891067537, ["mov     rax, [rsp+0C8h+psuffix]", "mov     rcx, [rsp+0C8h+var_40]", "xor     rcx, fs:28h", "mov     byte ptr [rax], 0", "mov     rax, p_0", "jnz     loc_53EB"], ["mov~rax,[rsp+0]", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~<TAG>,0", "mov~rax,p_0", "jnz~FOO"]], [0, 1, 24, 0, 0, 2, 1, 1, 10, -1, 0.14640522875816994, ["test    r12b, 80h", "jz      short loc_4E37"], ["test~r12b,<STR>", "jz~FOO"]], [1, 0, 16, 0, 0, 5, 2, 1, 12, -1, 0.08611111111111111, ["mov     eax, r12d", "and     eax, 100h", "mov     ecx, eax", "or      ecx, ebx", "jz      short loc_4E37"], ["mov~eax,r12d", "and~eax,0", "mov~ecx,eax", "or~ecx,ebx", "jz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 17, -1, 0.0005174291938997821, ["mov     [rsp+0C8h+psuffix], psuffix_0", "jmp     loc_4E37"], ["mov~[rsp+0],psuffix_0", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 16, -1, 0.000326797385620915, ["jmp     loc_4E37"], ["jmp~FOO"]], [0, 0, 131, 1, 0, 6, 2, 1, 2, 13, 0.003540305010893246, ["mov     psuffix_0, [rsp+0C8h+to_block_size]", "xor     edx, edx", "div     rcx", "test    rdx, rdx", "mov     r8, rax", "jnz     loc_4B15"], ["mov~psuffix_0,[rsp+0]", "xor~edx,edx", "div~,rcx", "test~rdx,rdx", "mov~r8,rax", "jnz~FOO"]], [1, 0, 57, 1, 0, 6, 0, 0, 7, 12, 0.019825708061002176, ["fld     st", "add     ebx, 1", "fmul    st, st(2)", "fxch    st(3)", "fucomi  st, st(3)", "jb      short loc_4B90"], ["fld~<TAG>,<TAG>", "add~ebx,0", "fmul~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fucomi~<TAG>,<TAG>", "jb~FOO"]], [0, 0, 57, 0, 0, 4, 1, 1, 6, 13, 0.01437908496732026, ["fild    [rsp+0C8h+base]", "xor     ebx, ebx", "fld     st", "jmp     short loc_4B74"], ["fild~<TAG>,[rsp+0]", "xor~ebx,ebx", "fld~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 57, 0, 0, 2, 0, 0, 9, 13, 0.00010893246187363834, ["fstp    st(1)", "fxch    st(2)"], ["fstp~<TAG>,<TAG>", "fxch~<TAG>,<TAG>"]], [1, 0, 49, 0, 0, 2, 0, 1, 9, 8, 0.03461328976034858, ["cmp     ebx, 8", "jz      loc_50A0"], ["cmp~ebx,0", "jz~FOO"]], [0, 0, 51, 0, 0, 3, 0, 1, 8, 9, 0.03736383442265795, ["mov     eax, [rsp+0C8h+base]", "cmp     rax, amt", "jz      loc_5260"], ["mov~eax,[rsp+0]", "cmp~rax,amt", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 12, -1, 0.0, ["add     rsp, 98h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 58, 0, 0, 3, 2, 0, 17, 11, 0.04738562091503268, ["xor     edi, edi", "xor     r9d, r9d", "nop     dword ptr [rax+00h]"], ["xor~edi,edi", "xor~r9d,r9d", "nop~[word ptr [rax+0]"]], [3, 0, 62, 3, 0, 15, 2, 0, 17, 12, 0.014705882352941176, ["mov     rax, [decimal_point]", "mov     r9, decimal_point", "mov     [p_0], rax", "mov     eax, ebp", "mov     rdx, [decimal_point+rax-8]", "mov     [p_0+rax-8], rdx", "lea     rdx, [p_0+8]", "mov     rax, p_0", "and     rdx, 0FFFFFFFFFFFFFFF8h", "sub     rax, rdx", "sub     r9, rax", "add     eax, ebp", "and     eax, 0FFFFFFF8h", "cmp     eax, 8", "jb      loc_5067"], ["mov~rax,<TAG>", "mov~r9,decimal_point", "mov~<TAG>,rax", "mov~eax,ebp", "mov~rdx,[decimal_point+0]", "mov~[p_0+0],rdx", "lea~rdx,[p_0+0]", "mov~rax,p_0", "and~rdx,0", "sub~rax,rdx", "sub~r9,rax", "add~eax,ebp", "and~eax,0", "cmp~eax,0", "jb~FOO"]], [0, 0, 59, 0, 0, 1, 0, 1, 20, 12, 0.006427015250544662, ["jmp     loc_5067"], ["jmp~FOO"]], [0, 0, 59, 0, 0, 2, 0, 1, 16, 12, 0.007625272331154684, ["mov     r8, [rsp+0C8h+psuffix]", "jmp     loc_5067"], ["mov~r8,[rsp+0]", "jmp~FOO"]], [0, 0, 59, 0, 0, 5, 0, 1, 18, 12, 0.0016067538126361654, ["mov     edx, [decimal_point]", "mov     [p_0], edx", "mov     edx, [decimal_point+rax-4]", "mov     [p_0+rax-4], edx", "jmp     loc_5067"], ["mov~edx,<TAG>", "mov~<TAG>,edx", "mov~edx,[decimal_point+0]", "mov~[p_0+0],edx", "jmp~FOO"]], [0, 0, 59, 0, 0, 3, 0, 1, 20, 12, 0.0, ["movzx   edx, word ptr [decimal_point+rax-2]", "mov     [p_0+rax-2], dx", "jmp     loc_5067"], ["movzx~edx,[ord ptr [decimal_point+0]", "mov~[p_0+0],dx", "jmp~FOO"]], [2, 0, 20, 1, 0, 3, 0, 1, 15, -1, 0.006372549019607843, ["add     ebx, 1", "cmp     ebx, 8", "jnz     short loc_50FD"], ["add~ebx,0", "cmp~ebx,0", "jnz~FOO"]], [0, 0, 20, 1, 0, 3, 0, 0, 14, -1, 0.014025054466230936, ["imul    power, rdx", "cmp     rcx, power", "jbe     loc_4DC9"], ["imul~power,rdx", "cmp~rcx,power", "jbe~FOO"]], [2, 0, 45, 1, 0, 3, 1, 1, 10, 7, 0.03425925925925926, ["add     ebx, 1", "test    r12b, 8", "jz      loc_5332"], ["add~ebx,0", "test~r12b,0", "jz~FOO"]], [2, 0, 92, 0, 0, 5, 1, 1, 4, 11, 0.03676470588235294, ["mov     ecx, r12d", "mov     r8, [rsp+0C8h+psuffix]", "mov     ebx, 0FFFFFFFFh", "and     ecx, 10h", "jz      loc_5070"], ["mov~ecx,r12d", "mov~r8,[rsp+0]", "mov~ebx,0", "and~ecx,0", "jz~FOO"]], [0, 0, 58, 0, 0, 2, 0, 1, 11, 11, 0.022113289760348584, ["mov     r8, [rsp+0C8h+psuffix]", "jmp     loc_5070"], ["mov~r8,[rsp+0]", "jmp~FOO"]], [0, 0, 58, 0, 0, 3, 1, 1, 16, 11, 0.022113289760348584, ["mov     r8, [rsp+0C8h+psuffix]", "xor     r9d, r9d", "jmp     loc_5070"], ["mov~r8,[rsp+0]", "xor~r9d,r9d", "jmp~FOO"]], [0, 0, 38, 0, 0, 2, 0, 0, 13, 9, 0.002033405954974582, ["fld     cs:flt_AE14", "fmul    st(1), st"], ["fld~<TAG>,<TAG>", "fmul~<TAG>,<TAG>"]], [1, 0, 71, 0, 0, 2, 1, 1, 15, 12, 0.022930283224400872, ["test    r12b, 8", "jnz     short loc_52C4"], ["test~r12b,0", "jnz~FOO"]], [0, 0, 54, 0, 0, 2, 1, 1, 6, 9, 0.08480392156862746, ["test    r15d, r15d", "jnz     short loc_50A0"], ["test~r15d,r15d", "jnz~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 11, 6, 0.024074074074074074, ["lea     inexact_style, [integerlim_0-1]", "mov     byte ptr [integerlim_0-1], 31h ; '1'", "jmp     do_grouping"], ["lea~inexact_style,[integerlim_0-1]+0]", "mov~[yte ptr [integerlim_0-1]+0],0", "jmp~FOO"]], [0, 0, 37, 0, 0, 2, 1, 1, 13, 7, 0.006835511982570806, ["test    eax, eax", "jz      loc_5276"], ["test~eax,eax", "jz~FOO"]], [1, 0, 36, 0, 0, 4, 1, 1, 14, 7, 0.0029956427015250544, ["movzx   edx, byte ptr [decimal_point]", "test    al, 2", "mov     [p_0], dl", "jz      loc_5276"], ["movzx~edx,<TAG>", "test~al,0", "mov~<TAG>,dl", "jz~FOO"]], [0, 0, 35, 0, 0, 3, 0, 1, 15, 7, 0.0, ["movzx   edx, word ptr [decimal_point+rax-2]", "mov     [p_0+rax-2], dx", "jmp     loc_5276"], ["movzx~edx,[ord ptr [decimal_point+0]", "mov~[p_0+0],dx", "jmp~FOO"]], [3, 0, 38, 3, 0, 14, 2, 0, 12, 7, 0.01056644880174292, ["mov     rax, [decimal_point]", "lea     rcx, [p_0+8]", "and     rcx, 0FFFFFFFFFFFFFFF8h", "mov     [p_0], rax", "mov     eax, ebp", "mov     rdx, [decimal_point+rax-8]", "mov     [p_0+rax-8], rdx", "mov     rax, p_0", "sub     rax, rcx", "sub     decimal_point, rax", "add     eax, ebp", "and     eax, 0FFFFFFF8h", "cmp     eax, 8", "jb      loc_5276"], ["mov~rax,<TAG>", "lea~rcx,[p_0+0]", "and~rcx,0", "mov~<TAG>,rax", "mov~eax,ebp", "mov~rdx,[decimal_point+0]", "mov~[p_0+0],rdx", "mov~rax,p_0", "sub~rax,rcx", "sub~decimal_point,rax", "add~eax,ebp", "and~eax,0", "cmp~eax,0", "jb~FOO"]], [0, 0, 35, 0, 0, 1, 0, 1, 15, 7, 0.003812636165577342, ["jmp     loc_5276"], ["jmp~FOO"]], [0, 0, 129, 2, 0, 7, 1, 1, 2, 13, 0.006535947712418301, ["mov     rsi, n_0", "xor     edx, edx", "imul    rsi, multiplier", "mov     multiplier, amt", "div     multiplier", "cmp     rax, n_0", "jnz     loc_4B15"], ["mov~rsi,n_0", "xor~edx,edx", "imul~rsi,multiplier", "mov~multiplier,amt", "div~,multiplier", "cmp~rax,n_0", "jnz~FOO"]], [0, 0, 130, 1, 0, 6, 2, 1, 1, 13, 0.00520152505446623, ["xor     edx, edx", "mov     psuffix_0, rcx", "div     rdi", "test    rdx, rdx", "mov     rdi, rax", "jz      loc_4E70"], ["xor~edx,edx", "mov~psuffix_0,rcx", "div~,rdi", "test~rdx,rdx", "mov~rdi,rax", "jz~FOO"]], [0, 0, 25, 0, 0, 4, 0, 1, 14, 0, 0.0013616557734204792, ["mov     ebx, dword ptr [rsp+0C8h+damt.value]", "mov     r15, rax", "mov     r12d, r14d", "jmp     loc_4DBA"], ["mov~ebx,[word ptr [rsp+0]", "mov~r15,rax", "mov~r12d,r14d", "jmp~FOO"]], [0, 0, 32, 2, 1, 10, 1, 2, 13, 1, 0.011982570806100218, ["mov     rax, [rsp+0C8h+from_block_size]", "sub     r12, rbp", "sub     r8, rbp", "mov     rdi, r8; dest", "mov     rdx, rbp; n", "lea     rsi, [rax+r12]; src", "call    _memcpy", "test    r12, r12", "mov     r8, rax", "jz      loc_5428"], ["mov~rax,[rsp+0]", "sub~r12,rbp", "sub~r8,rbp", "mov~rdi,r8", "mov~rdx,rbp", "lea~rsi,<TAG>", "call~FOO", "test~r12,r12", "mov~r8,rax", "jz~FOO"]], [0, 0, 53, 1, 0, 3, 1, 1, 7, 9, 0.0008714596949891067, ["add     edi, r9d", "test    edi, edi", "jle     short loc_50A0"], ["add~edi,r9d", "test~edi,edi", "jle~FOO"]], [1, 0, 52, 1, 0, 3, 1, 1, 7, 9, 0.04022331154684096, ["add     amt, 1", "test    ecx, ecx", "jz      short loc_50A0"], ["add~amt,0", "test~ecx,ecx", "jz~FOO"]], [0, 0, 93, 0, 0, 3, 2, 1, 3, 12, 0.01056644880174292, ["xor     edi, edi", "xor     r9d, r9d", "jmp     use_integer_arithmetic"], ["xor~edi,edi", "xor~r9d,r9d", "jmp~FOO"]], [0, 0, 17, 0, 0, 2, 1, 1, 13, -1, 0.0009259259259259259, ["xor     ebx, ebx", "jmp     loc_4DC9"], ["xor~ebx,ebx", "jmp~FOO"]], [1, 0, 22, 0, 0, 3, 0, 0, 12, -1, 0.03104575163398693, ["mov     rcx, [rsp+0C8h+to_block_size]", "cmp     rcx, 1", "jbe     loc_5292"], ["mov~rcx,[rsp+0]", "cmp~rcx,0", "jbe~FOO"]], [0, 0, 93, 0, 0, 3, 2, 0, 4, 12, 0.0057461873638344225, ["xor     edi, edi", "test    r2, r2", "setnz   dil"], ["xor~edi,edi", "test~r2,r2", "setnz~dil"]], [0, 0, 37, 0, 0, 1, 0, 0, 9, 9, 8.169934640522875e-05, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 72, 0, 0, 2, 1, 1, 16, 13, 0.0008714596949891067, ["xor     edi, edi", "jmp     loc_52A1"], ["xor~edi,edi", "jmp~FOO"]], [0, 0, 73, 0, 0, 2, 1, 1, 14, 13, 0.022821350762527233, ["test    eax, eax", "jnz     loc_5026"], ["test~eax,eax", "jnz~FOO"]], [1, 0, 36, 0, 0, 3, 0, 0, 7, 8, 0.09188453159041395, ["mov     inexact_style, integerlim_0", "mov     rcx, 0CCCCCCCCCCCCCCCDh", "nop     dword ptr [rax]"], ["mov~inexact_style,integerlim_0", "mov~rcx,0", "nop~<TAG>"]], [0, 0, 89, 0, 0, 2, 1, 1, 6, 16, 0.01857298474945534, ["xor     ebx, ebx", "jmp     short loc_4CE7"], ["xor~ebx,ebx", "jmp~FOO"]], [0, 0, 89, 0, 0, 3, 1, 0, 8, 14, 0.01377995642701525, ["test    edi, edi", "setnz   dil", "movzx   edi, dil"], ["test~edi,edi", "setnz~dil", "movzx~edi,dil"]], [1, 0, 89, 3, 0, 16, 2, 1, 7, 15, 0.024509803921568627, ["mov     rax, amt", "xor     edx, edx", "mov     esi, edi", "div     r8", "sar     esi, 1", "mov     r10, rax", "lea     eax, [rdx+rdx*4]", "xor     edx, edx", "lea     eax, [tenths+rax*2]", "div     r11d", "lea     edx, [rsi+rdx*2]", "mov     r9d, eax", "mov     rsi, r10", "add     edi, edx", "cmp     r11d, edx", "ja      short loc_4CC8"], ["mov~rax,amt", "xor~edx,edx", "mov~esi,edi", "div~,r8", "sar~esi,0", "mov~r10,rax", "lea~eax,<TAG>", "xor~edx,edx", "lea~eax,<TAG>", "div~,r11d", "lea~edx,<TAG>", "mov~r9d,eax", "mov~rsi,r10", "add~edi,edx", "cmp~r11d,edx", "ja~FOO"]], [3, 0, 36, 5, 0, 12, 1, 1, 8, 7, 0.09090413943355119, ["mov     rax, amt", "sub     p_0, 1", "mul     rcx", "shr     rdx, 3", "lea     rax, [rdx+rdx*4]", "add     rax, rax", "sub     amt, rax", "add     esi, 30h ; '0'", "test    rdx, rdx", "mov     [p_0], sil", "mov     rsi, rdx", "jnz     short loc_50B0"], ["mov~rax,amt", "sub~p_0,0", "mul~,rcx", "shr~rdx,0", "lea~rax,<TAG>", "add~rax,rax", "sub~amt,rax", "add~esi,0", "test~rdx,rdx", "mov~<TAG>,sil", "mov~rsi,rdx", "jnz~FOO"]], [0, 0, 34, 0, 0, 1, 0, 1, 9, 6, 0.0898148148148148, ["jmp     do_grouping"], ["jmp~FOO"]], [1, 0, 89, 1, 0, 3, 0, 1, 9, 13, 0.036274509803921565, ["add     ebx, 1", "cmp     r8, r10", "ja      loc_4FED"], ["add~ebx,0", "cmp~r8,r10", "ja~FOO"]], [1, 0, 89, 1, 0, 5, 0, 1, 8, 14, 0.01377995642701525, ["cmp     r11d, edi", "setb    dil", "movzx   edi, dil", "add     edi, 2", "jmp     short loc_4CD2"], ["cmp~r11d,edi", "setb~dil", "movzx~edi,dil", "add~edi,0", "jmp~FOO"]], [1, 0, 89, 0, 0, 2, 0, 1, 10, 12, 0.008714596949891067, ["cmp     ebx, 8", "jz      loc_5288"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 37, 0, 0, 2, 2, 0, 13, 9, 0.0058823529411764705, ["and     eax, 0FFFFFFF8h", "xor     edx, edx"], ["and~eax,0", "xor~edx,edx"]], [1, 0, 23, 0, 0, 2, 0, 1, 11, -1, 0.12309368191721133, ["cmp     ebx, 0FFFFFFFFh", "jz      loc_50E0"], ["cmp~ebx,0", "jz~FOO"]], [2, 0, 32, 1, 2, 22, 0, 3, 10, 4, 0.03965141612200435, ["mov     r14, integerlim_0", "mov     rdi, thousands_sep; s", "mov     [rsp+0C8h+integerlim], integerlim_0", "sub     r14, p_0", "mov     rbp, 0FFFFFFFFFFFFFFFFh", "call    _strlen", "lea     rdi, [rsp+0C8h+var_78]", "mov     ecx, 29h ; ')'", "mov     rdx, r14", "mov     rsi, p_0", "mov     [rsp+0C8h+n], rax", "mov     [rsp+0C8h+from_block_size], rdi", "call    ___memcpy_chk", "mov     ecx, r12d", "mov     dword ptr [rsp+0C8h+damt.value], ebx", "mov     opts, r14", "mov     exponent_0, thousands_sep", "mov     r8, [rsp+0C8h+integerlim]", "mov     p_0, [rsp+0C8h+grouping]", "mov     thousands_sep, [rsp+0C8h+n]", "mov     r14d, ecx", "jmp     short loc_4F32"], ["mov~r14,integerlim_0", "mov~rdi,thousands_sep", "mov~[rsp+0],integerlim_0", "sub~r14,p_0", "mov~rbp,0", "call~FOO", "lea~rdi,[rsp+0]", "mov~ecx,0", "mov~rdx,r14", "mov~rsi,p_0", "mov~[rsp+0],rax", "mov~[rsp+0],rdi", "call~FOO", "mov~ecx,r12d", "mov~[word ptr [rsp+0],ebx", "mov~opts,r14", "mov~exponent_0,thousands_sep", "mov~r8,[rsp+0]", "mov~p_0,[rsp+0]", "mov~thousands_sep,[rsp+0]", "mov~r14d,ecx", "jmp~FOO"]], [1, 0, 33, 0, 0, 2, 1, 1, 9, 5, 0.18513071895424837, ["test    r12b, 4", "jnz     loc_4E98"], ["test~r12b,0", "jnz~FOO"]], [2, 0, 20, 0, 0, 3, 0, 0, 13, -1, 0.018790849673202614, ["mov     edx, [rsp+0C8h+base]", "mov     ebx, 1", "mov     eax, 1"], ["mov~edx,[rsp+0]", "mov~ebx,0", "mov~eax,0"]], [1, 0, 61, 0, 0, 2, 2, 0, 18, 14, 0.0033769063180827887, ["and     eax, 0FFFFFFF8h", "xor     edi, edi"], ["and~eax,0", "xor~edi,edi"]], [0, 0, 17, 0, 0, 1, 0, 1, 16, -1, 0.0004629629629629629, ["jmp     loc_4DC9"], ["jmp~FOO"]], [0, 0, 32, 0, 0, 2, 0, 0, 12, 2, 0.029030501089324617, ["cmp     rbp, r12", "jbe     short loc_4EF8"], ["cmp~rbp,r12", "jbe~FOO"]], [1, 0, 61, 1, 0, 6, 0, 0, 19, 13, 0.004956427015250544, ["mov     r10d, edi", "add     edi, 8", "mov     r11, [r9+r10]", "cmp     edi, eax", "mov     [rdx+r10], r11", "jb      short loc_530A"], ["mov~r10d,edi", "add~edi,0", "mov~r11,<TAG>", "cmp~edi,eax", "mov~<TAG>,r11", "jb~FOO"]], [0, 0, 68, 0, 0, 4, 1, 0, 2, 12, 0.017592592592592594, ["mov     [rsp+0C8h+from_block_size], rcx", "test    rcx, rcx", "fild    [rsp+0C8h+from_block_size]", "jns     short loc_4B29"], ["mov~[rsp+0],rcx", "test~rcx,rcx", "fild~<TAG>,[rsp+0]", "jns~FOO"]], [0, 0, 67, 0, 0, 1, 0, 0, 3, 12, 0.0, ["fadd    cs:flt_AE10"], ["fadd~<TAG>,<TAG>"]], [1, 0, 74, 0, 0, 3, 0, 1, 15, 13, 0.007080610021786492, ["lea     rsi, [r10+1]", "cmp     amt, 0Ah", "jz      short loc_5380"], ["lea~rsi,[r10+0]", "cmp~amt,0", "jz~FOO"]], [1, 0, 38, 0, 0, 2, 0, 1, 6, 8, 0.023910675381263617, ["cmp     r15d, 1", "jz      short loc_4D3C"], ["cmp~r15d,0", "jz~FOO"]], [1, 0, 62, 0, 0, 3, 1, 1, 5, 9, 0.03622004357298475, ["test    r12b, 10h", "fmulp   st(1), st", "jz      loc_4D28"], ["test~r12b,0", "fmulp~<TAG>,<TAG>", "jz~FOO"]], [0, 0, 32, 1, 1, 6, 0, 1, 14, 4, 0.0003812636165577342, ["sub     r8, r13", "mov     rdx, r13; n", "mov     rsi, thousands_sep; src", "mov     rdi, r8; dest", "call    _memcpy", "mov     r8, rax"], ["sub~r8,r13", "mov~rdx,r13", "mov~rsi,thousands_sep", "mov~rdi,r8", "call~FOO", "mov~r8,rax"]], [0, 0, 37, 0, 0, 3, 0, 1, 7, 8, 0.0007080610021786493, ["fld     cs:tbyte_AE20", "fucomip st, st(1)", "ja      loc_4FC0"], ["fld~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "ja~FOO"]], [0, 0, 32, 0, 0, 3, 1, 1, 11, 3, 0.037527233115468406, ["movzx   eax, byte ptr [r15]", "test    al, al", "jz      short loc_4F47"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 66, 0, 0, 5, 1, 0, 3, 11, 0.02423747276688453, ["mov     rax, [rsp+0C8h+to_block_size]", "mov     [rsp+0C8h+from_block_size], rax", "test    rax, rax", "fild    [rsp+0C8h+from_block_size]", "jns     short loc_4B42"], ["mov~rax,[rsp+0]", "mov~[rsp+0],rax", "test~rax,rax", "fild~<TAG>,[rsp+0]", "jns~FOO"]], [0, 0, 65, 0, 0, 1, 0, 0, 4, 11, 0.0, ["fadd    cs:flt_AE10"], ["fadd~<TAG>,<TAG>"]], [0, 0, 35, 0, 0, 2, 0, 0, 13, 7, 0.001906318082788671, ["fstp    st", "nop     word ptr [rax+rax+00h]"], ["fstp~<TAG>,<TAG>", "nop~[ord ptr [rax+0]"]], [2, 0, 32, 1, 0, 4, 0, 0, 12, 3, 0.0, ["cmp     al, 7Fh", "movzx   ebp, al", "cmovnb  rbp, r12", "add     r15, 1"], ["cmp~al,0", "movzx~ebp,al", "cmovnb~rbp,r12", "add~r15,0"]], [2, 0, 44, 1, 0, 7, 0, 0, 11, 8, 0.025490196078431372, ["mov     rax, rbp", "mov     byte ptr [r8-1], 30h ; '0'", "not     rax", "add     r8, rax", "cmp     ebp, 8", "mov     eax, ebp", "jnb     short loc_538A"], ["mov~rax,rbp", "mov~[yte ptr [r8-1]+0],0", "not~rax", "add~r8,rax", "cmp~ebp,0", "mov~eax,ebp", "jnb~FOO"]], [1, 0, 83, 0, 0, 2, 0, 1, 10, 12, 0.030555555555555555, ["cmp     r10, 9", "ja      loc_5288"], ["cmp~r10,0", "ja~FOO"]], [0, 0, 64, 0, 0, 5, 1, 0, 4, 10, 0.030446623093681915, ["fdivp   st(1), st", "mov     [rsp+0C8h+from_block_size], n_0", "test    n_0, n_0", "fild    [rsp+0C8h+from_block_size]", "jns     short loc_4B58"], ["fdivp~<TAG>,<TAG>", "mov~[rsp+0],n_0", "test~n_0,n_0", "fild~<TAG>,[rsp+0]", "jns~FOO"]], [0, 0, 63, 0, 0, 1, 0, 0, 5, 10, 0.0, ["fadd    cs:flt_AE10"], ["fadd~<TAG>,<TAG>"]], [2, 0, 51, 1, 0, 10, 2, 1, 9, 10, 0.02712418300653595, ["mov     ecx, [rsp+0C8h+var_98]", "add     rbp, 1", "xor     eax, eax", "fdivrp  st(1), st", "test    ecx, ecx", "setz    al", "cmp     r15d, 1", "lea     rax, [rbp+rax+1]", "mov     [rsp+0C8h+from_block_size], rax", "jz      loc_5120"], ["mov~ecx,[rsp+0]", "add~rbp,0", "xor~eax,eax", "fdivrp~<TAG>,<TAG>", "test~ecx,ecx", "setz~al", "cmp~r15d,0", "lea~rax,[rbp+0]", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 25, 1, 1, 11, 0, 2, 13, -1, 0.006808278867102396, ["mov     eax, r14d", "mov     r15, r8", "mov     opts, r12", "mov     rsi, [rsp+0C8h+from_block_size]; src", "sub     r15, r14", "mov     rdx, r14; n", "mov     rdi, r15; dest", "mov     ebx, dword ptr [rsp+0C8h+damt.value]", "mov     r12d, eax", "call    _memcpy", "jmp     loc_4DBA"], ["mov~eax,r14d", "mov~r15,r8", "mov~opts,r12", "mov~rsi,[rsp+0]", "sub~r15,r14", "mov~rdx,r14", "mov~rdi,r15", "mov~ebx,[word ptr [rsp+0]", "mov~r12d,eax", "call~FOO", "jmp~FOO"]], [0, 0, 36, 0, 0, 2, 0, 0, 11, 8, 0.008714596949891067, ["fld     cs:flt_AE14", "fmul    st(1), st"], ["fld~<TAG>,<TAG>", "fmul~<TAG>,<TAG>"]], [1, 0, 57, 0, 0, 2, 0, 1, 8, 12, 0.0015795206971677559, ["cmp     ebx, 8", "jnz     short loc_4B70"], ["cmp~ebx,0", "jnz~FOO"]], [4, 0, 35, 1, 2, 17, 2, 3, 7, 7, 0.027668845315904137, ["sub     rsp, 10h", "lea     rcx, a0lf; \"%.0Lf\"", "mov     esi, 1", "mov     n_0, [rsp+0D8h+buf]", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "xor     eax, eax", "fstp    [rsp+0D8h+value.value]", "xor     ebp, ebp", "mov     rdi, rbx", "call    ___sprintf_chk", "mov     rdi, rbx; s", "mov     ebx, 0FFFFFFFFh", "call    _strlen", "pop     rsi", "pop     rdi", "mov     decimal_point, rax", "jmp     short loc_4D90"], ["sub~rsp,0", "lea~rcx,<TAG>", "mov~esi,0", "mov~n_0,[rsp+0]", "mov~rdx,0", "xor~eax,eax", "fstp~<TAG>,<TAG>", "xor~ebp,ebp", "mov~rdi,rbx", "call~FOO", "mov~rdi,rbx", "mov~ebx,0", "call~FOO", "pop~rsi", "pop~rdi", "mov~decimal_point,rax", "jmp~FOO"]], [1, 0, 36, 1, 1, 7, 0, 2, 8, 8, 0.0, ["sub     rsp, 10h", "mov     edi, r15d; inexact_style", "fstp    [rsp+0D8h+value.value]; value", "call    adjust_value", "pop     r8", "pop     r9", "jmp     loc_4D3C"], ["sub~rsp,0", "mov~edi,r15d", "fstp~<TAG>,<TAG>", "call~FOO", "pop~r8", "pop~r9", "jmp~FOO"]], [0, 0, 35, 0, 0, 2, 0, 1, 12, 7, 0.017156862745098037, ["fstp    st", "jmp     short loc_4D90"], ["fstp~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 52, 0, 0, 3, 0, 1, 9, 11, 0.002832244008714597, ["fstp    st(2)", "fstp    st(2)", "jmp     short loc_4B94"], ["fstp~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "jmp~FOO"]], [0, 1, 14, 0, 0, 5, 0, 1, 14, -1, 0.0, ["mov     rcx, [rsp+0C8h+buf]", "lea     rdi, [rcx+289h]", "mov     byte ptr [rcx+288h], 20h ; ' '", "mov     [rsp+0C8h+psuffix], rdi", "jmp     loc_4DE1"], ["mov~rcx,<TAG>", "lea~rdi,[rcx+0]", "mov~[yte ptr [rcx+0],<STR>", "mov~[rsp+0],rdi", "jmp~FOO"]], [1, 0, 15, 0, 0, 2, 1, 1, 13, -1, 0.07908496732026143, ["and     r12d, 40h", "jnz     loc_4F78"], ["and~r12d,0", "jnz~FOO"]], [0, 0, 52, 0, 0, 2, 0, 0, 8, 11, 0.0196078431372549, ["fstp    st(2)", "fstp    st(2)"], ["fstp~<TAG>,<TAG>", "fstp~<TAG>,<TAG>"]], [0, 0, 34, 3, 1, 9, 0, 1, 8, 6, 0.07129629629629629, ["mov     inexact_style, [rsp+0C8h+psuffix]", "mov     rsi, [rsp+0C8h+buf]; src", "mov     rdx, buflen; n", "sub     r15, buflen", "sub     buflen, nonintegerlen", "mov     rdi, p_0; dest", "call    _memmove", "mov     r8, r14", "add     r8, p_0"], ["mov~inexact_style,[rsp+0]", "mov~rsi,<TAG>", "mov~rdx,buflen", "sub~r15,buflen", "sub~buflen,nonintegerlen", "mov~rdi,p_0", "call~FOO", "mov~r8,r14", "add~r8,p_0"]], [3, 0, 35, 1, 2, 17, 2, 3, 12, 7, 0.01906318082788671, ["fdivp   st(1), st", "sub     rsp, 10h", "lea     rcx, a0lf; \"%.0Lf\"", "mov     r14, [rsp+0D8h+buf]", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     esi, 1", "xor     eax, eax", "xor     ebp, ebp", "mov     rdi, r14", "fstp    [rsp+0D8h+value.value]", "call    ___sprintf_chk", "mov     rdi, r14; s", "call    _strlen", "pop     r10", "mov     r14, rax", "pop     r11", "jmp     loc_4D90"], ["fdivp~<TAG>,<TAG>", "sub~rsp,0", "lea~rcx,<TAG>", "mov~r14,[rsp+0]", "mov~rdx,0", "mov~esi,0", "xor~eax,eax", "xor~ebp,ebp", "mov~rdi,r14", "fstp~<TAG>,<TAG>", "call~FOO", "mov~rdi,r14", "call~FOO", "pop~r10", "mov~r14,rax", "pop~r11", "jmp~FOO"]], [0, 0, 37, 0, 0, 3, 0, 0, 14, 8, 0.004738562091503268, ["fld     cs:tbyte_AE20", "fucomip st, st(2)", "jbe     short loc_5173"], ["fld~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "jbe~FOO"]], [1, 0, 36, 1, 1, 9, 0, 2, 15, 8, 0.0, ["fstp    dword ptr [rsp+0C8h+from_block_size]", "sub     rsp, 10h", "mov     edi, r15d; inexact_style", "fstp    [rsp+0D8h+value.value]; value", "call    adjust_value", "pop     rbp", "pop     r14", "fld     dword ptr [rsp+0C8h+from_block_size]", "jmp     short loc_5173"], ["fstp~<TAG>,[word ptr [rsp+0]", "sub~rsp,0", "mov~edi,r15d", "fstp~<TAG>,<TAG>", "call~FOO", "pop~rbp", "pop~r14", "fld~<TAG>,[word ptr [rsp+0]", "jmp~FOO"]], [1, 0, 37, 1, 0, 6, 0, 0, 14, 8, 0.004901960784313725, ["mov     esi, edx", "add     edx, 8", "mov     rdi, [r14+rsi]", "cmp     edx, eax", "mov     [rcx+rsi], rdi", "jb      short loc_53C0"], ["mov~esi,edx", "add~edx,0", "mov~rdi,<TAG>", "cmp~edx,eax", "mov~<TAG>,rdi", "jb~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 12, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [21, 82, 117, 3, 137, 209, 2, 652, 0.02032, 9, 61], "succs": [[78, 7], [0, 66], [64, 12], [2], [2], [10], [11, 5], [86], [67], [8, 68], [19, 85], [10], [126, 23], [122, 12], [43, 22], [16, 14], [26, 14], [24, 44], [17, 15], [34, 106], [61], [82, 20], [24, 25], [114, 30], [40], [24], [24, 43], [3, 4], [1], [28, 87], [133, 31], [132], [53, 39], [32], [32], [57, 52], [35, 52], [104, 45], [74, 37], [56, 36], [136, 51], [40, 96], [40, 129], [40], [40], [104, 21], [130, 123], [46], [46], [60, 86], [49, 83], [], [1], [100, 52], [52], [52], [52], [52], [59, 101], [58, 42], [67, 116], [1, 29], [1], [1], [133], [33, 63], [77, 86], [98], [67, 69], [67, 70], [67], [67, 95], [67], [104, 79], [104, 73], [41], [75, 109], [86, 78], [50, 86], [61], [42], [80, 99], [61], [86], [65], [65, 34], [90], [89], [92], [88, 93], [90, 91], [98], [117, 94], [92], [89, 62], [135], [81, 42], [111], [97, 41], [59], [103], [42], [121, 76], [54, 103], [112, 105], [112], [84, 55], [124, 110], [107, 47], [111], [124, 125], [115, 102], [113, 118], [118], [131], [102], [9, 71], [6, 62], [108, 119], [108], [27, 13], [41], [132], [48, 127], [131], [124], [131], [120], [18], [128, 18], [120], [98], [131], [132, 134], [132], [72, 135], []], "fname": "human_readable", "n_num": 137}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[1, 1, 8, 0, 0, 3, 1, 1, 0, 0, 0.03561253561253561, ["or      ebp, 180h", "cmp     byte ptr [rcx-2], 69h ; 'i'", "jnz     loc_5528"], ["or~ebp,<STR>", "cmp~[yte ptr [rcx-2]+0],0", "jnz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 7, 5, 0.07692307692307693, ["cmp     byte ptr [rcx-1], 42h ; 'B'", "jz      short loc_55F8"], ["cmp~[yte ptr [rcx-1]+0],0", "jz~FOO"]], [0, 0, 14, 0, 0, 3, 0, 1, 5, 5, 0.09116809116809117, ["mov     rcx, [rsp+38h+var_38]", "cmp     rbx, rcx", "jnz     short loc_5519"], ["mov~rcx,<TAG>", "cmp~rbx,rcx", "jnz~FOO"]], [1, 0, 15, 0, 0, 4, 0, 0, 4, 4, 0.09971509971509972, ["movzx   esi, byte ptr [rbx]", "lea     edx, [rsi-30h]", "cmp     dl, 9", "jbe     short loc_5528"], ["movzx~esi,<TAG>", "lea~edx,[rsi-30h]+0]", "cmp~dl,0", "jbe~FOO"]], [0, 0, 11, 0, 0, 1, 0, 1, 6, 6, 0.06410256410256411, ["jmp     loc_55E0"], ["jmp~FOO"]], [0, 0, 7, 0, 0, 1, 0, 1, 9, 5, 0.0014245014245014246, ["jmp     short loc_55EA"], ["jmp~FOO"]], [0, 0, 26, 0, 1, 5, 1, 2, 1, 5, 0.005698005698005698, ["lea     rdi, aBlockSize; \"BLOCK_SIZE\"", "call    _getenv", "test    rax, rax", "mov     spec, rax", "jnz     loc_546C"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "mov~spec,rax", "jnz~FOO"]], [0, 1, 27, 1, 0, 13, 2, 1, 0, 5, 0.0, ["push    r13", "push    r12", "mov     r13, opts", "push    rbp", "push    rbx", "mov     r12, block_size", "mov     rbx, spec", "sub     rsp, 18h", "mov     rax, fs:28h", "mov     [rsp+38h+var_30], rax", "xor     eax, eax", "test    spec, spec", "jz      loc_5580"], ["push~r13", "push~r12", "mov~r13,opts", "push~rbp", "push~rbx", "mov~r12,block_size", "mov~rbx,spec", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~spec,spec", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 0, 1, 7, 5, 0.007122507122507123, ["cmp     rbx, rcx", "jz      loc_55E0"], ["cmp~rbx,rcx", "jz~FOO"]], [2, 0, 13, 1, 0, 5, 0, 1, 6, 4, 0.029914529914529916, ["add     rbx, 1", "movzx   edi, byte ptr [rbx]", "lea     edx, [rdi-30h]", "cmp     dl, 9", "ja      short loc_5510"], ["add~rbx,0", "movzx~edi,<TAG>", "lea~edx,[rdi-30h]+0]", "cmp~dl,0", "ja~FOO"]], [1, 0, 19, 0, 1, 7, 1, 2, 2, 3, 0.12820512820512822, ["lea     rdx, block_size_opts; vallist", "lea     rsi, block_size_args; arglist", "mov     ecx, 4; valsize", "mov     rdi, rbx; arg", "call    argmatch", "test    eax, eax", "js      short loc_54D8"], ["lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~ecx,0", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 21, 0, 0, 3, 1, 1, 1, 4, 0.08262108262108263, ["xor     ebp, ebp", "cmp     byte ptr [rbx], 27h ; '''", "jnz     short loc_547C"], ["xor~ebp,ebp", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 20, 1, 0, 2, 0, 0, 2, 4, 0.0, ["add     rbx, 1", "mov     ebp, 4"], ["add~rbx,0", "mov~ebp,0"]], [2, 0, 3, 0, 0, 4, 1, 1, 4, 2, 0.005698005698005698, ["mov     qword ptr [block_size], 400h", "xor     eax, eax", "mov     dword ptr [opts+0], 0", "jmp     loc_54B5"], ["mov~<TAG>,0", "xor~eax,eax", "mov~[word ptr [opts+0],0", "jmp~FOO"]], [0, 0, 5, 0, 1, 4, 1, 2, 3, 3, 0.01566951566951567, ["lea     rdi, name; \"POSIXLY_CORRECT\"", "call    _getenv", "test    rax, rax", "jz      short loc_560A"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 4, 1, 0.07122507122507123, ["mov     rcx, [rsp+38h+var_30]", "xor     rcx, fs:28h", "jnz     loc_5621"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 25, 0, 1, 5, 1, 2, 2, 4, 0.011396011396011397, ["lea     rdi, aBlocksize; \"BLOCKSIZE\"", "call    _getenv", "test    rax, rax", "mov     rbx, rax", "jnz     loc_546C"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jnz~FOO"]], [0, 0, 5, 0, 0, 3, 0, 1, 5, 3, 0.07122507122507123, ["mov     rdx, [block_size]", "mov     [opts+0], ebp", "jmp     short loc_5544"], ["mov~rdx,<TAG>", "mov~[opts+0],ebp", "jmp~FOO"]], [0, 1, 6, 0, 0, 2, 1, 1, 9, 4, 0.017094017094017096, ["or      ebp, 20h", "jmp     loc_5528"], ["or~ebp,<STR>", "jmp~FOO"]], [1, 0, 3, 0, 0, 6, 2, 0, 3, 2, 0.01851851851851852, ["lea     rdx, block_size_opts", "cdqe", "mov     qword ptr [block_size], 1", "or      ebp, [rdx+rax*4]", "xor     eax, eax", "mov     [opts+0], ebp"], ["lea~rdx,<TAG>", "cdqe~", "mov~<TAG>,0", "or~ebp,<TAG>", "xor~eax,eax", "mov~[opts+0],ebp"]], [1, 0, 5, 0, 0, 2, 0, 0, 4, 3, 0.02421652421652422, ["mov     rdx, [block_size]", "mov     dword ptr [opts+0], 0"], ["mov~rdx,<TAG>", "mov~[word ptr [opts+0],0"]], [0, 0, 17, 0, 1, 8, 2, 2, 3, 4, 0.11965811965811966, ["lea     r8, aEeggkkmmppttyy; \"eEgGkKmMpPtTyYzZ0\"", "xor     edx, edx; strtol_base", "mov     rsi, rsp; ptr", "mov     rcx, block_size; val", "mov     rdi, rbx; s", "call    xstrtoumax", "test    eax, eax", "jnz     short loc_5538"], ["lea~r8,<TAG>", "xor~edx,edx", "mov~rsi,rsp", "mov~rcx,block_size", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 5, 2, 0.08262108262108263, ["test    rdx, rdx", "jnz     loc_54B5"], ["test~rdx,rdx", "jnz~FOO"]], [2, 2, 3, 1, 1, 9, 1, 2, 6, 2, 0.0, ["lea     rdi, name; \"POSIXLY_CORRECT\"", "call    _getenv", "cmp     rax, 1", "sbb     rax, rax", "and     eax, 200h", "add     rax, 200h", "mov     [block_size], rax", "mov     eax, 4", "jmp     loc_54B5"], ["lea~rdi,<TAG>", "call~FOO", "cmp~rax,0", "sbb~rax,rax", "and~eax,<STR>", "add~rax,<STR>", "mov~<TAG>,rax", "mov~eax,0", "jmp~FOO"]], [1, 1, 3, 0, 0, 4, 1, 1, 4, 2, 0.005698005698005698, ["mov     qword ptr [block_size], 200h", "xor     eax, eax", "mov     dword ptr [opts+0], 0", "jmp     loc_54B5"], ["mov~<TAG>,<STR>", "xor~eax,eax", "mov~[word ptr [opts+0],0", "jmp~FOO"]], [0, 1, 7, 0, 0, 1, 1, 0, 8, 5, 0.01851851851851852, ["or      bpl, 80h"], ["or~bpl,<STR>"]], [0, 1, 0, 1, 0, 6, 0, 0, 5, -1, 0.0, ["add     rsp, 18h", "pop     rbx", "pop     rbp", "pop     block_size", "pop     opts", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~block_size", "pop~opts", "retn"]]], "func_feature": [7, 19, 28, 2, 28, 41, 0, 111, 0.03872, 7, 5], "succs": [[18, 5], [0, 26], [9, 4], [2, 18], [1], [19], [17, 11], [11, 6], [9, 1], [8, 18], [20, 22], [10, 12], [10], [16], [25, 13], [], [27, 15], [11, 14], [23], [18], [16], [23], [3, 21], [16, 24], [16], [16], [19], []], "fname": "human_options", "n_num": 28}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[0, 0, 1, 0, 1, 3, 1, 2, 0, 0, 0.02777777777777778, ["xor     edi, edi", "call    r9", "jmp     short loc_570F"], ["xor~edi,edi", "call~r9", "jmp~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 3, 3, 0.13333333333333333, ["cmp     eax, 68h ; 'h'", "mov     r9, [rsp+108h+usage_func]", "jz      short loc_5760"], ["cmp~eax,0", "mov~r9,[rsp+0]", "jz~FOO"]], [1, 0, 2, 0, 0, 5, 1, 1, 2, 1, 0.13333333333333333, ["mov     rax, [rsp+108h+var_E0]", "xor     rax, fs:28h", "mov     cs:opterr@@GLIBC_2_2_5, ebx", "mov     cs:optind@@GLIBC_2_2_5, 0", "jnz     loc_5767"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "mov~<TAG>,ebx", "mov~<TAG>,0", "jnz~FOO"]], [1, 0, 7, 0, 1, 7, 1, 2, 2, 2, 0.13333333333333333, ["lea     package, long_options; longopts", "lea     command_name, shortopts; \"+\"", "xor     r8d, r8d; longind", "mov     [rsp+108h+usage_func], usage_func_0", "call    _getopt_long", "cmp     eax, 0FFFFFFFFh", "jz      short loc_56A9"], ["lea~package,<TAG>", "lea~command_name,<TAG>", "xor~r8d,r8d", "mov~[rsp+0],usage_func_0", "call~FOO", "cmp~eax,0", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 4, 2, 0.061111111111111116, ["cmp     eax, 76h ; 'v'", "jnz     short loc_56A9"], ["cmp~eax,0", "jnz~FOO"]], [2, 0, 8, 0, 0, 7, 1, 1, 1, 2, 0.17777777777777778, ["mov     rax, fs:28h", "mov     [rsp+108h+var_E0], rax", "xor     eax, eax", "cmp     edi, 2", "mov     ebx, cs:opterr@@GLIBC_2_2_5", "mov     cs:opterr@@GLIBC_2_2_5, 0", "jz      short loc_56E0"], ["mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~edi,0", "mov~ebx,<TAG>", "mov~<TAG>,0", "jz~FOO"]], [1, 0, 10, 1, 0, 10, 1, 1, 0, 3, 0.0, ["push    r13", "push    r12", "mov     r13, version", "push    rbp", "push    rbx", "mov     rbp, command_name", "mov     r12, package", "sub     rsp, 0E8h", "test    al, al", "jz      short loc_5684"], ["push~r13", "push~r12", "mov~r13,version", "push~rbp", "push~rbx", "mov~rbp,command_name", "mov~r12,package", "sub~rsp,0", "test~al,al", "jz~FOO"]], [0, 0, 9, 0, 0, 8, 0, 0, 1, 3, 0.0, ["movaps  [rsp+108h+var_A8], xmm0", "movaps  [rsp+108h+var_98], xmm1", "movaps  [rsp+108h+var_88], xmm2", "movaps  [rsp+108h+var_78], xmm3", "movaps  [rsp+108h+var_68], xmm4", "movaps  [rsp+108h+var_58], xmm5", "movaps  [rsp+108h+var_48], xmm6", "movaps  [rsp+108h+var_38], xmm7"], ["movaps~[rsp+0],xmm0", "movaps~[rsp+0],xmm1", "movaps~[rsp+0],xmm2", "movaps~[rsp+0],xmm3", "movaps~[rsp+0],xmm4", "movaps~[rsp+0],xmm5", "movaps~[rsp+0],xmm6", "movaps~[rsp+0],xmm7"]], [2, 0, 0, 0, 2, 14, 1, 2, 5, -1, 0.0, ["lea     rax, [rsp+108h+arg_0]", "mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "lea     r8, [rsp+108h+authors]; authors", "mov     rcx, version; version", "mov     rdx, package; package", "mov     rsi, command_name; command_name", "mov     [rsp+108h+authors.overflow_arg_area], rax", "lea     rax, [rsp+108h+var_D8]", "mov     [rsp+108h+authors.gp_offset], 30h ; '0'", "mov     [rsp+108h+authors.fp_offset], 30h ; '0'", "mov     [rsp+108h+authors.reg_save_area], rax", "call    version_etc_va", "xor     edi, edi; status", "call    _exit"], ["lea~rax,[rsp+0]", "mov~rdi,<TAG>", "lea~r8,[rsp+0]", "mov~rcx,version", "mov~rdx,package", "mov~rsi,command_name", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "call~FOO", "xor~edi,edi", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 3, -1, 0.0, ["add     rsp, 0E8h", "pop     saved_opterr", "pop     command_name", "pop     package", "pop     version", "retn"], ["add~rsp,0", "pop~saved_opterr", "pop~command_name", "pop~package", "pop~version", "retn"]]], "func_feature": [5, 6, 12, 10, 11, 14, 1, 66, 0.06061, 6, 2], "succs": [[8], [0, 4], [9, 10], [1, 2], [8, 2], [2, 3], [5, 7], [5], [], [], []], "fname": "parse_long_options", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    eax, eax", "js      short loc_6B19"], ["test~eax,eax", "js~FOO"]], [1, 0, 3, 1, 1, 14, 1, 2, 0, 1, 0.0, ["push    r13", "push    r12", "xor     eax, eax", "push    rbp", "push    rbx", "mov     ebp, edi", "mov     desired_fd, file; file", "mov     esi, edx; oflag", "mov     edx, ecx", "sub     rsp, 8", "call    _open", "cmp     ebp, eax", "mov     ebx, eax", "jz      short loc_6B19"], ["push~r13", "push~r12", "xor~eax,eax", "push~rbp", "push~rbx", "mov~ebp,edi", "mov~desired_fd,file", "mov~esi,edx", "mov~edx,ecx", "sub~rsp,0", "call~FOO", "cmp~ebp,eax", "mov~ebx,eax", "jz~FOO"]], [0, 0, 1, 0, 3, 11, 0, 3, 2, 1, 0.0, ["mov     esi, ebp; fd2", "mov     edi, eax; fd", "call    _dup2", "mov     r12d, eax", "call    ___errno_location", "mov     r13d, [rax]", "mov     desired_fd, rax", "mov     edi, ebx; fd", "call    _close", "mov     ebx, r12d", "mov     [rbp+0], r13d"], ["mov~esi,ebp", "mov~edi,eax", "call~FOO", "mov~r12d,eax", "call~FOO", "mov~r13d,<TAG>", "mov~desired_fd,rax", "mov~edi,ebx", "call~FOO", "mov~ebx,r12d", "mov~[rbp+0],r13d"]], [1, 0, 0, 1, 0, 7, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "mov     eax, ebx", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "mov~eax,ebx", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]]], "func_feature": [4, 2, 6, 0, 4, 5, 3, 34, 0.04167, 0, 2], "succs": [[2, 3], [0, 3], [3], []], "fname": "fd_reopen", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     edi, 1; status", "xor     eax, eax", "jmp     usage"], ["mov~edi,0", "xor~eax,eax", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[], [0]], "fname": "__argmatch_die", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[1, 0, 12, 2, 0, 6, 1, 1, 0, 0, 0.10683760683760685, ["mov     [rsp+58h+var_58], i", "add     matchind, 1", "add     rbp, valsize", "mov     r14, [arglist+i*8]", "test    r14, r14", "jnz     short loc_6F07"], ["mov~<TAG>,i", "add~matchind,0", "add~rbp,valsize", "mov~r14,<TAG>", "test~r14,r14", "jnz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 4, 4, 0.26282051282051283, ["cmp     [rsp+58h+var_58], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_6EC0"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 6, -1, 0.03205128205128205, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [2, 0, 13, 1, 1, 17, 1, 2, 0, 4, 0.0, ["push    r15", "push    r14", "mov     r15, arglist", "push    r13", "push    r12", "mov     r13, valsize", "push    rbp", "push    rbx", "mov     rbp, vallist_0", "sub     rsp, 28h", "mov     [rsp+58h+arg], arg_0", "mov     [rsp+58h+vallist], vallist_0", "call    _strlen", "mov     r14, [arglist]", "mov     [rsp+58h+var_58], 0FFFFFFFFFFFFFFFFh", "test    r14, r14", "jz      loc_6F5D"], ["push~r15", "push~r14", "mov~r15,arglist", "push~r13", "push~r12", "mov~r13,valsize", "push~rbp", "push~rbx", "mov~rbp,vallist_0", "sub~rsp,0", "mov~[rsp+0],arg_0", "mov~[rsp+0],vallist_0", "call~FOO", "mov~r14,<TAG>", "mov~<TAG>,0", "test~r14,r14", "jz~FOO"]], [1, 0, 12, 2, 0, 5, 1, 1, 3, 3, 0.20512820512820512, ["add     i, 1", "add     rbp, valsize", "mov     r14, [arglist+i*8]", "test    r14, r14", "jz      short loc_6F48"], ["add~i,0", "add~rbp,valsize", "mov~r14,<TAG>", "test~r14,r14", "jz~FOO"]], [0, 0, 12, 0, 1, 6, 1, 2, 2, 2, 0.3696581196581197, ["mov     rsi, [rsp+58h+arg]; s2", "mov     rdx, arglen; n", "mov     rdi, r14; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_6EF7"], ["mov~rsi,[rsp+0]", "mov~rdx,arglen", "mov~rdi,r14", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 6, 4, 0.03311965811965812, ["mov     [rsp+58h+ambiguous], 1", "jmp     short loc_6EF7"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 12, 2, 1, 11, 1, 1, 6, 4, 0.03311965811965812, ["mov     rdi, [rsp+58h+var_58]", "mov     rdx, valsize; n", "mov     rsi, rbp; s2", "imul    rdi, valsize", "add     rdi, rax; s1", "call    _memcmp", "test    eax, eax", "movzx   eax, [rsp+58h+ambiguous]", "mov     ecx, 1", "cmovnz  eax, ecx", "mov     [rsp+58h+ambiguous], al"], ["mov~rdi,<TAG>", "mov~rdx,valsize", "mov~rsi,rbp", "imul~rdi,valsize", "add~rdi,rax", "call~FOO", "test~eax,eax", "movzx~eax,[rsp+0]", "mov~ecx,0", "cmovnz~eax,ecx", "mov~[rsp+0],al"]], [0, 0, 12, 0, 1, 4, 0, 2, 3, 1, 0.3269230769230769, ["mov     rdi, r14; s", "call    _strlen", "cmp     rax, arglen", "jz      short loc_6F80"], ["mov~rdi,r14", "call~FOO", "cmp~rax,arglen", "jz~FOO"]], [0, 0, 12, 0, 0, 3, 1, 1, 5, 5, 0.1111111111111111, ["mov     rax, [rsp+58h+vallist]", "test    rax, rax", "jz      loc_6F70"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 1, -1, 0.0, ["mov     rax, [rsp+58h+var_58]", "add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     r12", "pop     valsize", "pop     r14", "pop     arglist", "retn"], ["mov~rax,<TAG>", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~valsize", "pop~r14", "pop~arglist", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 4, 0, 0.01282051282051282, ["mov     [rsp+58h+var_58], i", "jmp     short loc_6F5D"], ["mov~<TAG>,i", "jmp~FOO"]], [2, 0, 1, 0, 0, 4, 0, 0, 4, -1, 0.05128205128205128, ["cmp     [rsp+58h+ambiguous], 0", "mov     rax, 0FFFFFFFFFFFFFFFEh", "cmovz   rax, [rsp+58h+var_58]", "mov     [rsp+58h+var_58], rax"], ["cmp~[rsp+0],0", "mov~rax,0", "cmovz~rax,<TAG>", "mov~<TAG>,rax"]], [1, 0, 12, 0, 0, 4, 1, 1, 1, 3, 0.07051282051282051, ["mov     r12, arglen", "mov     [rsp+58h+ambiguous], 0", "xor     ebx, ebx", "jmp     short loc_6F07"], ["mov~r12,arglen", "mov~[rsp+0],0", "xor~ebx,ebx", "jmp~FOO"]]], "func_feature": [4, 7, 14, 1, 14, 20, 2, 76, 0.11538, 0, 8], "succs": [[2, 5], [0, 9], [12], [10, 13], [12, 5], [8, 4], [4], [4], [1, 11], [6, 7], [], [10], [10], [5]], "fname": "argmatch", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[2, 0, 1, 0, 2, 18, 4, 3, 0, 0, 0.25, ["mov     rsi, context; name", "mov     edi, 1; n", "call    quote_n", "mov     rdx, value; arg", "mov     context, rax", "mov     esi, 6; s", "xor     edi, edi; n", "call    quotearg_n_style", "mov     r8, rbp", "mov     rdx, format; format", "mov     rcx, rax", "pop     format", "pop     rbp", "pop     value", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "jmp     _error"], ["mov~rsi,context", "mov~edi,0", "call~FOO", "mov~rdx,value", "mov~context,rax", "mov~esi,0", "xor~edi,edi", "call~FOO", "mov~r8,rbp", "mov~rdx,format", "mov~rcx,rax", "pop~format", "pop~rbp", "pop~value", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "jmp~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 1, 0, 0.08333333333333333, ["lea     value, aInvalidArgumen; \"invalid argument %s for %s\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax", "jmp     short loc_6FB6"], ["lea~value,<TAG>", "xor~edi,edi", "call~FOO", "mov~rbx,rax", "jmp~FOO"]], [0, 0, 2, 0, 1, 4, 1, 1, 1, -1, 0.08333333333333333, ["lea     value, aAmbiguousArgum; \"ambiguous argument %s for %s\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax"], ["lea~value,<TAG>", "xor~edi,edi", "call~FOO", "mov~rbx,rax"]], [2, 0, 4, 0, 0, 8, 0, 1, 0, 1, 0.0, ["cmp     problem, 0FFFFFFFFFFFFFFFFh", "push    r12", "mov     edx, 5; category", "push    rbp", "mov     r12, value", "push    rbx", "mov     rbp, context", "jz      short loc_6FF0"], ["cmp~problem,0", "push~r12", "mov~edx,0", "push~rbp", "mov~r12,value", "push~rbx", "mov~rbp,context", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []]], "func_feature": [4, 6, 7, 0, 5, 5, 1, 35, 0.08333, 2, 0], "succs": [[4], [0], [0], [1, 2], []], "fname": "argmatch_invalid", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[0, 0, 9, 0, 0, 3, 2, 1, 0, 0, 0.05555555555555556, ["xor     r13d, r13d", "xor     ebx, ebx", "jmp     short loc_7091"], ["xor~r13d,r13d", "xor~ebx,ebx", "jmp~FOO"]], [2, 1, 10, 1, 2, 22, 3, 3, 0, 2, 0.0, ["push    r15", "push    r14", "mov     r14, arglist", "push    r13", "push    r12", "xor     edi, edi; domainname", "push    rbp", "push    rbx", "mov     rbp, vallist", "lea     vallist, aValidArguments; \"Valid arguments are:\"", "mov     r12, valsize", "mov     edx, 5; category", "sub     rsp, 18h", "call    _dcgettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "mov     rcx, [arglist]", "test    rcx, rcx", "jz      loc_70E0"], ["push~r15", "push~r14", "mov~r14,arglist", "push~r13", "push~r12", "xor~edi,edi", "push~rbp", "push~rbx", "mov~rbp,vallist", "lea~vallist,<TAG>", "mov~r12,valsize", "mov~edx,0", "sub~rsp,<STR>", "call~FOO", "mov~rdi,<TAG>", "mov~rdx,rax", "mov~esi,0", "xor~eax,eax", "call~FOO", "mov~rcx,<TAG>", "test~rcx,rcx", "jz~FOO"]], [1, 1, 1, 1, 0, 9, 0, 1, 2, 0, 0.08888888888888889, ["add     rsp, 18h", "mov     esi, 0Ah; int", "pop     rbx", "pop     rbp", "pop     valsize", "pop     r13", "pop     arglist", "pop     r15", "jmp     ___overflow"], ["add~rsp,<STR>", "mov~esi,0", "pop~rbx", "pop~rbp", "pop~valsize", "pop~r13", "pop~arglist", "pop~r15", "jmp~FOO"]], [0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 0.23333333333333334, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_7110"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [2, 0, 9, 2, 1, 11, 2, 2, 3, 2, 0.1388888888888889, ["lea     rdx, aS; \"\\n  - `%s'\"", "xor     eax, eax", "add     i, 1", "mov     esi, 1", "mov     rdi, r15", "mov     last_val, rbp", "call    ___fprintf_chk", "mov     rcx, [arglist+i*8]", "add     last_val, valsize", "test    rcx, rcx", "jz      short loc_70E0"], ["lea~rdx,<TAG>", "xor~eax,eax", "add~i,0", "mov~esi,0", "mov~rdi,r15", "mov~last_val,rbp", "call~FOO", "mov~rcx,<TAG>", "add~last_val,valsize", "test~rcx,rcx", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 5, 2, 0.044444444444444446, ["nop"], ["nop"]], [1, 1, 0, 1, 0, 11, 0, 0, 2, -1, 0.0, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah", "add     rsp, 18h", "pop     rbx", "pop     rbp", "pop     valsize", "pop     r13", "pop     arglist", "pop     r15", "retn"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0", "add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~valsize", "pop~r13", "pop~arglist", "pop~r15", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [0, 0, 9, 0, 0, 3, 1, 1, 2, 3, 0.18888888888888888, ["test    i, i", "mov     r15, cs:stderr@@GLIBC_2_2_5", "jz      short loc_7068"], ["test~i,i", "mov~r15,<TAG>", "jz~FOO"]], [0, 0, 9, 0, 1, 8, 1, 2, 3, 3, 0.08888888888888889, ["mov     rdx, valsize; n", "mov     rsi, rbp; s2", "mov     rdi, last_val; s1", "mov     [rsp+48h+var_40], rcx", "call    _memcmp", "test    eax, eax", "mov     rcx, [rsp+48h+var_40]", "jnz     short loc_7068"], ["mov~rdx,valsize", "mov~rsi,rbp", "mov~rdi,last_val", "mov~[rsp+0],rcx", "call~FOO", "test~eax,eax", "mov~rcx,[rsp+0]", "jnz~FOO"]], [2, 0, 9, 2, 1, 10, 2, 2, 4, 3, 0.061111111111111116, ["lea     rdx, unk_B5F7", "xor     eax, eax", "add     i, 1", "mov     esi, 1", "mov     rdi, r15", "add     rbp, valsize", "call    ___fprintf_chk", "mov     rcx, [arglist+i*8]", "test    rcx, rcx", "jnz     short loc_7091"], ["lea~rdx,<TAG>", "xor~eax,eax", "add~i,0", "mov~esi,0", "mov~rdi,r15", "add~rbp,valsize", "call~FOO", "mov~rcx,<TAG>", "test~rcx,rcx", "jnz~FOO"]]], "func_feature": [5, 11, 12, 1, 11, 15, 1, 82, 0.08182, 4, 7], "succs": [[8], [0, 3], [7], [2, 6], [8, 3], [3], [], [], [9, 4], [10, 4], [8, 5]], "fname": "argmatch_valid", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[1, 0, 0, 1, 0, 8, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "pop     arglist", "pop     vallist", "pop     arg", "pop     exit_fn", "pop     context", "pop     valsize", "retn"], ["add~rsp,0", "pop~arglist", "pop~vallist", "pop~arg", "pop~exit_fn", "pop~context", "pop~valsize", "retn"]], [1, 0, 1, 0, 3, 11, 0, 4, 1, 0, 0.0, ["mov     rdx, res; problem", "mov     rsi, arg; value", "mov     rdi, context; context", "call    argmatch_invalid", "mov     rdx, valsize; valsize", "mov     rsi, vallist; vallist", "mov     rdi, arglist; arglist", "call    argmatch_valid", "call    exit_fn", "mov     rax, 0FFFFFFFFFFFFFFFFh", "jmp     short loc_7166"], ["mov~rdx,res", "mov~rsi,arg", "mov~rdi,context", "call~FOO", "mov~rdx,valsize", "mov~rsi,vallist", "mov~rdi,arglist", "call~FOO", "call~exit_fn", "mov~rax,0", "jmp~FOO"]], [1, 0, 2, 1, 1, 20, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r14, context", "push    r13", "push    r12", "mov     r12, arg", "push    rbp", "push    rbx", "mov     rbp, vallist", "mov     rbx, arglist", "mov     vallist, valsize; valsize", "mov     arglist, vallist; vallist", "sub     rsp, 8", "mov     arg, arglist; arglist", "mov     context, arg; arg", "mov     r15, valsize", "mov     r13, exit_fn", "call    argmatch", "test    res, res", "js      short loc_7175"], ["push~r15", "push~r14", "mov~r14,context", "push~r13", "push~r12", "mov~r12,arg", "push~rbp", "push~rbx", "mov~rbp,vallist", "mov~rbx,arglist", "mov~vallist,valsize", "mov~arglist,vallist", "sub~rsp,0", "mov~arg,arglist", "mov~context,arg", "mov~r15,valsize", "mov~r13,exit_fn", "call~FOO", "test~res,res", "js~FOO"]]], "func_feature": [4, 1, 6, 0, 3, 3, 0, 39, 0.0, 0, 2], "succs": [[], [0], [0, 1]], "fname": "__xargmatch_internal", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[0, 0, 3, 0, 1, 6, 1, 2, 0, 0, 0.25, ["mov     rdx, valsize; n", "mov     rsi, rbp; s2", "mov     rdi, value; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_71C0"], ["mov~rdx,valsize", "mov~rsi,rbp", "mov~rdi,value", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 1, 2, 0.16666666666666666, ["mov     r12, valsize", "mov     r13, value", "mov     rbp, vallist", "lea     rbx, [arglist+8]", "jmp     short loc_71CF"], ["mov~r12,valsize", "mov~r13,value", "mov~rbp,vallist", "lea~rbx,[arglist+0]", "jmp~FOO"]], [1, 0, 3, 2, 0, 5, 1, 1, 3, 1, 0.0, ["mov     r14, [rbx]", "add     rbp, valsize", "add     rbx, 8", "test    r14, r14", "jz      short loc_71E1"], ["mov~r14,<TAG>", "add~rbp,valsize", "add~rbx,0", "test~r14,r14", "jz~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 1, 0, 0.0, ["pop     rbx", "mov     rax, r14", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "retn"], ["pop~rbx", "mov~rax,r14", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "retn"]], [0, 0, 4, 0, 0, 8, 1, 1, 0, 1, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     r14, [arglist]", "test    r14, r14", "jz      short loc_71E1"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~r14,<TAG>", "test~r14,r14", "jz~FOO"]]], "func_feature": [1, 3, 5, 0, 5, 7, 0, 31, 0.08333, 0, 2], "succs": [[2, 3], [0], [0, 3], [], [1, 3]], "fname": "argmatch_to_argument", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigaction_0:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigaction_0", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0.0, ["push    cs:qword_20DDC0", "jmp     cs:qword_20DDC8"], ["push~<TAG>", "jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 62, 2, 0.0, 2, 0], "succs": [[]], "fname": "sub_1800", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:group_member_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "group_member", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:unlinkat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "unlinkat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:isatty_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "isatty", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__lxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__lxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:openat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "openat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:_obstack_begin_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "_obstack_begin", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fxstatat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fxstatat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:geteuid_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "geteuid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:rewinddir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "rewinddir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:closedir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 6, 1, 0.0, 1, 0], "succs": [[]], "fname": "closedir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strndup_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strndup", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:_setjmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "_setjmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__getdelim_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__getdelim", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dirfd_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 7, 1, 0.0, 1, 0], "succs": [[]], "fname": "dirfd", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:rpmatch_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "rpmatch", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:obstack_free_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 6, 1, 0.0, 1, 0], "succs": [[]], "fname": "obstack_free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:readdir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "readdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fflush_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fflush", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getegid_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getegid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:_obstack_newchunk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 8, 1, 0.0, 1, 0], "succs": [[]], "fname": "_obstack_newchunk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__longjmp_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "__longjmp_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mempcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "mempcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fseeko_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fseeko", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fdopendir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "fdopendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:euidaccess_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "euidaccess", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     free"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 1, 0.0, 0, 0], "succs": [[1], []], "fname": "hash_freer", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[2, 0, 0, 2, 1, 6, 1, 1, 0, 0, 0.0, ["sub     rsp, 8", "call    _strcmp", "test    eax, eax", "setz    al", "add     rsp, 8", "retn"], ["sub~rsp,0", "call~FOO", "test~eax,eax", "setz~al", "add~rsp,0", "retn"]]], "func_feature": [1, 1, 1, 0, 1, 0, 0, 6, 0.0, 0, 2], "succs": [[]], "fname": "hash_compare_strings", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[1, 0, 2, 1, 3, 13, 0, 4, 0, 0, 0.13392857142857142, ["mov     rdx, rm_dir_len; n", "mov     rsi, rm_dir_name; src", "mov     rdi, rbp; dest", "call    _mempcpy", "lea     rdx, [filename_len+1]; n", "mov     rsi, r13; src", "mov     rdi, rax; dest", "call    _memcpy", "mov     rdi, rbp; s", "call    _strlen", "add     rax, 1", "cmp     rax, n_bytes_needed", "jnz     short loc_24DE"], ["mov~rdx,rm_dir_len", "mov~rsi,rm_dir_name", "mov~rdi,rbp", "call~FOO", "lea~rdx,[filename_len+0]", "mov~rsi,r13", "mov~rdi,rax", "call~FOO", "mov~rdi,rbp", "call~FOO", "add~rax,0", "cmp~rax,n_bytes_needed", "jnz~FOO"]], [2, 0, 5, 0, 0, 8, 1, 1, 1, 2, 0.23214285714285712, ["lea     rdi, asc_A85B+1; \".\"", "mov     ecx, 2", "mov     rsi, filename", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     short loc_245B"], ["lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,filename", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 2, 2, 0.07142857142857142, ["test    rm_dir_len, rm_dir_len", "jnz     short loc_24A0"], ["test~rm_dir_len,rm_dir_len", "jnz~FOO"]], [0, 0, 7, 0, 1, 6, 1, 2, 1, 4, 0.03571428571428571, ["mov     rdi, rbp; ptr", "mov     rsi, n_bytes_needed; size", "call    _realloc", "test    rax, rax", "mov     rbp, rax", "jz      short loc_248A"], ["mov~rdi,rbp", "mov~rsi,n_bytes_needed", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jz~FOO"]], [1, 0, 8, 2, 1, 18, 0, 1, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r13, filename", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r14, [__o+10h]", "mov     rbx, [__o+18h]", "mov     __o, filename; s", "call    _strlen", "sub     ebx, r14d", "mov     r12, rax", "mov     rbp, cs:g_buf", "lea     r15, [rm_dir_len+filename_len+1]", "cmp     cs:g_n_allocated, n_bytes_needed", "jb      short loc_24B8"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r13,filename", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r14,[__o+0]", "mov~rbx,[__o+0]", "mov~__o,filename", "call~FOO", "sub~ebx,r14d", "mov~r12,rax", "mov~rbp,<TAG>", "lea~r15,[rm_dir_len+0]", "cmp~<TAG>,n_bytes_needed", "jb~FOO"]], [1, 0, 1, 0, 1, 6, 0, 2, 3, -1, 0.008928571428571428, ["lea     rdx, [rm_dir_len-1]; n", "mov     rsi, rm_dir_name; src", "mov     rdi, rbp; dest", "call    _mempcpy", "mov     byte ptr [rax], 0", "jmp     short loc_248A"], ["lea~rdx,[rm_dir_len-1]+0]", "mov~rsi,rm_dir_name", "mov~rdi,rbp", "call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 2, 3, 0.08928571428571427, ["mov     cs:g_buf, new_buf", "mov     cs:g_n_allocated, n_bytes_needed", "jmp     loc_243C"], ["mov~<TAG>,new_buf", "mov~<TAG>,n_bytes_needed", "jmp~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 3, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___6563; \"full_filename0\"", "lea     rsi, aRemoveC; \"remove.c\"", "lea     rdi, aStrlenGBuf1NBy; \"strlen (g_buf) + 1 == n_bytes_needed\"", "mov     edx, 15Bh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "mov     rax, rbp", "pop     rm_dir_len", "pop     rbp", "pop     filename_len", "pop     r13", "pop     rm_dir_name", "pop     n_bytes_needed", "retn"], ["add~rsp,0", "mov~rax,rbp", "pop~rm_dir_len", "pop~rbp", "pop~filename_len", "pop~r13", "pop~rm_dir_name", "pop~n_bytes_needed", "retn"]]], "func_feature": [7, 3, 13, 0, 9, 12, 3, 70, 0.06349, 6, 4], "succs": [[8, 7], [0, 2], [0, 5], [8, 6], [1, 3], [8], [1], [], []], "fname": "full_filename0", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 1, 0, 5, 0, 1, 3, -1, 0.09523809523809523, ["add     rsp, 8", "mov     rdi, filename; ptr", "pop     filename", "pop     ht", "jmp     free"], ["add~rsp,0", "mov~rdi,filename", "pop~filename", "pop~ht", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 2, -1, 0.21428571428571427, ["cmp     filename, ent", "jz      short loc_2538"], ["cmp~filename,ent", "jz~FOO"]], [0, 0, 5, 0, 1, 4, 1, 2, 1, 1, 0.20238095238095238, ["mov     rsi, filename; entry", "call    hash_insert", "test    ent, ent", "jz      short loc_256D"], ["mov~rsi,filename", "call~FOO", "test~ent,ent", "jz~FOO"]], [1, 0, 6, 0, 1, 10, 2, 2, 1, 1, 0.011904761904761904, ["lea     rdx, hash_pjw; hasher", "lea     r8, hash_freer; data_freer", "lea     rcx, hash_compare_strings; comparator", "xor     esi, esi; tuning", "mov     edi, 0Dh; candidate", "call    hash_initialize", "test    rax, rax", "mov     rdi, rax", "mov     [ht+0], rax", "jnz     short loc_2514"], ["lea~rdx,<TAG>", "lea~r8,<TAG>", "lea~rcx,<TAG>", "xor~esi,esi", "mov~edi,0", "call~FOO", "test~rax,rax", "mov~rdi,rax", "mov~[ht+0],rax", "jnz~FOO"]], [1, 0, 7, 1, 0, 8, 1, 1, 0, 2, 0.0, ["push    rbp", "push    rbx", "mov     rbp, ht", "mov     rbx, filename", "sub     rsp, 8", "mov     ht, [ht]; table", "test    rdi, rdi", "jz      short loc_2540"], ["push~rbp", "push~rbx", "mov~rbp,ht", "mov~rbx,filename", "sub~rsp,0", "mov~ht,<TAG>", "test~rdi,rdi", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 3, -1, 0.0, ["add     rsp, 8", "pop     filename", "pop     ht", "retn"], ["add~rsp,0", "pop~filename", "pop~ht", "retn"]]], "func_feature": [3, 4, 8, 0, 8, 9, 4, 34, 0.06548, 3, 3], "succs": [[], [0], [1, 7], [2, 6], [3, 6], [3, 4], [], []], "fname": "AD_mark_helper", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[1, 0, 1, 0, 1, 5, 1, 1, 0, 0, 0.017857142857142856, ["call    ___errno_location", "test    r12d, r12d", "mov     subdir_sb, rax", "mov     eax, 14h", "cmovz   r12d, eax"], ["call~FOO", "test~r12d,r12d", "mov~subdir_sb,rax", "mov~eax,0", "cmovz~r12d,eax"]], [2, 0, 5, 0, 0, 4, 1, 1, 2, -1, 0.10714285714285714, ["mov     eax, [subdir_sb+18h]", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     short loc_25D8"], ["mov~eax,[subdir_sb+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [0, 0, 3, 0, 1, 4, 1, 2, 3, -1, 0.07142857142857142, ["mov     edi, ebx; fd", "call    _fdopendir", "test    subdir_dirp, subdir_dirp", "jz      short loc_2600"], ["mov~edi,ebx", "call~FOO", "test~subdir_dirp,subdir_dirp", "jz~FOO"]], [0, 0, 1, 0, 1, 4, 0, 2, 2, -1, 0.05357142857142857, ["call    ___errno_location", "mov     subdir_sb, rax", "mov     r12d, [rax]", "jmp     short loc_25EC"], ["call~FOO", "mov~subdir_sb,rax", "mov~r12d,<TAG>", "jmp~FOO"]], [1, 0, 6, 0, 1, 7, 1, 2, 1, -1, 0.10714285714285714, ["mov     rdx, subdir_sb; stat_buf", "mov     esi, eax; fildes", "mov     edi, 1; ver", "mov     ebx, eax", "call    ___fxstat", "test    eax, eax", "jnz     short loc_2600"], ["mov~rdx,subdir_sb", "mov~esi,eax", "mov~edi,0", "mov~ebx,eax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 8, 0, 1, 11, 3, 2, 0, 1, 0.0, ["push    r12", "push    rbp", "xor     eax, eax", "push    rbx", "mov     r12d, edx", "mov     rbp, subdir_sb", "mov     edx, 20900h; oflag", "xor     ecx, ecx", "call    _openat", "test    eax, eax", "js      short loc_2610"], ["push~r12", "push~rbp", "xor~eax,eax", "push~rbx", "mov~r12d,edx", "mov~rbp,subdir_sb", "mov~edx,0", "xor~ecx,ecx", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 4, -1, 0.0, ["pop     rbx", "pop     subdir_sb", "pop     prev_errno", "retn"], ["pop~rbx", "pop~subdir_sb", "pop~prev_errno", "retn"]], [0, 0, 0, 0, 0, 5, 1, 0, 1, 0, 0.0, ["pop     rbx", "xor     eax, eax", "pop     subdir_sb", "pop     prev_errno", "retn"], ["pop~rbx", "xor~eax,eax", "pop~subdir_sb", "pop~prev_errno", "retn"]], [0, 0, 0, 0, 1, 8, 1, 1, 3, -1, 0.0, ["mov     edi, ebx; fd", "call    _close", "mov     [rbp+0], r12d", "xor     eax, eax", "pop     rbx", "pop     rbp", "pop     saved_errno", "retn"], ["mov~edi,ebx", "call~FOO", "mov~[rbp+0],r12d", "xor~eax,eax", "pop~rbx", "pop~rbp", "pop~saved_errno", "retn"]]], "func_feature": [6, 9, 11, 0, 9, 10, 2, 52, 0.03968, 0, 0], "succs": [[8], [0, 2], [3, 6], [8], [1, 3], [4, 7], [], [], []], "fname": "fd_to_subdirp", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[1, 0, 0, 0, 1, 5, 0, 1, 0, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___6677; \"AD_mark_current_as_unremovable\"", "lea     rsi, aRemoveC; \"remove.c\"", "lea     rdi, a1AdStackHeight; \"1 < AD_stack_height (ds)\"", "mov     edx, 27Ch; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [4, 0, 3, 4, 2, 26, 0, 2, 0, 0, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, ds_0", "sub     rsp, 8", "mov     rdx, [ds_0+68h]", "mov     rax, [ds_0+70h]", "mov     r13, [ds_0+18h]", "mov     r12, [ds_0+0C8h]", "sub     rax, rdx", "shr     eax, 3", "mov     rbp, [rdx+rax*8-8]", "mov     ds_0, rbp; n", "sub     r13, rbp", "call    xmalloc", "lea     rdx, [rbp-1]; n", "mov     rsi, r13; src", "mov     rdi, rax; dest", "call    _memcpy", "mov     rcx, rax", "mov     byte ptr [rax+rbp-1], 0", "mov     rax, [ds_0+0C8h]", "sub     rax, [ds_0+0C0h]", "cmp     eax, 3Fh ; '?'", "jbe     short loc_2697"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,ds_0", "sub~rsp,0", "mov~rdx,[ds_0+0]", "mov~rax,[ds_0+0]", "mov~r13,[ds_0+0]", "mov~r12,[ds_0+0]", "sub~rax,rdx", "shr~eax,0", "mov~rbp,[rdx+0]", "mov~ds_0,rbp", "sub~r13,rbp", "call~FOO", "lea~rdx,[rbp-1]+0]", "mov~rsi,r13", "mov~rdi,rax", "call~FOO", "mov~rcx,rax", "mov~[yte ptr [rax+0],0", "mov~rax,[ds_0+0]", "sub~rax,[ds_0+0]", "cmp~eax,0", "jbe~FOO"]], [1, 0, 1, 1, 0, 8, 0, 1, 1, 0, 0.16666666666666666, ["add     rsp, 8", "lea     rdi, [r12-40h]", "mov     rsi, rcx", "pop     ds_0", "pop     rbp", "pop     r12", "pop     r13", "jmp     AD_mark_helper"], ["add~rsp,0", "lea~rdi,[r12-40h]+0]", "mov~rsi,rcx", "pop~ds_0", "pop~rbp", "pop~r12", "pop~r13", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0.0, [], []]], "func_feature": [3, 0, 4, 0, 4, 3, 2, 39, 0.04167, 3, 5], "succs": [[], [0, 2], [3], []], "fname": "AD_mark_current_as_unremovable", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 4, 0, 0, 4, 1, 1, 0, 0, 0.13333333333333333, ["mov     rbx, ds_0", "mov     ds_0, [rax-20h]; table", "test    rdi, rdi", "jz      short loc_26EF"], ["mov~rbx,ds_0", "mov~ds_0,[rax-20h]+0]", "test~rdi,rdi", "jz~FOO"]], [1, 0, 6, 1, 0, 6, 0, 0, 0, 1, 0.0, ["push    rbx", "mov     rax, [ds_0+0C8h]", "mov     rdx, rax", "sub     rdx, [ds_0+0C0h]", "cmp     edx, 1Fh", "jbe     short loc_2724"], ["push~rbx", "mov~rax,[ds_0+0]", "mov~rdx,rax", "sub~rdx,[ds_0+0]", "cmp~edx,0", "jbe~FOO"]], [0, 1, 0, 1, 0, 4, 0, 0, 3, -1, 0.0, ["sub     rax, 20h", "mov     [ds_0+0C8h], rax", "pop     ds_0", "retn"], ["sub~rax,<STR>", "mov~[ds_0+0],rax", "pop~ds_0", "retn"]], [1, 0, 2, 1, 0, 4, 0, 1, 2, -1, 0.2, ["mov     rdx, [ds_0+0D0h]", "sub     rdx, rax", "cmp     rdx, 0FFFFFFFFFFFFFFE0h", "jge     short loc_2717"], ["mov~rdx,[ds_0+0]", "sub~rdx,rax", "cmp~rdx,0", "jge~FOO"]], [1, 0, 1, 0, 1, 4, 0, 1, 3, -1, 0.0, ["lea     rdi, [ds_0+0B0h]; struct obstack *", "mov     esi, 0FFFFFFE0h; int", "call    __obstack_newchunk", "mov     rax, [ds_0+0C8h]"], ["lea~rdi,[ds_0+0]", "mov~esi,0", "call~FOO", "mov~rax,[ds_0+0]"]], [0, 0, 3, 0, 1, 2, 0, 1, 2, -1, 0.0, ["call    hash_free", "mov     rax, [ds_0+0C8h]"], ["call~FOO", "mov~rax,[ds_0+0]"]], [1, 0, 0, 0, 1, 5, 0, 1, 1, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___6595; \"AD_stack_pop\"", "lea     rsi, aRemoveC; \"remove.c\"", "lea     ds_0, a0AdStackHeight; \"0 < AD_stack_height (ds)\"", "mov     edx, 1ABh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~ds_0,<TAG>", "mov~edx,0", "call~FOO"]]], "func_feature": [3, 1, 5, 0, 7, 8, 4, 29, 0.04762, 3, 3], "succs": [[3, 5], [0, 6], [], [2, 4], [2], [3], []], "fname": "AD_stack_pop", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 3, 0, 0, 2, 1, 1, 0, 0, 0.17857142857142855, ["test    rax, rax", "js      short loc_27B6"], ["test~rax,rax", "js~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 2, 2, 0.07142857142857142, ["mov     rax, [st+30h]", "jmp     short loc_275E"], ["mov~rax,[st+0]", "jmp~FOO"]], [1, 0, 7, 0, 0, 5, 0, 1, 0, 2, 0.0, ["push    rbx", "mov     rax, [st+30h]", "mov     rbx, st", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      short loc_2770"], ["push~rbx", "mov~rax,[st+0]", "mov~rbx,st", "cmp~rax,0", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 1, 0, 2, -1, 0.0, ["xor     eax, eax", "pop     st", "retn"], ["xor~eax,eax", "pop~st", "retn"]], [1, 0, 0, 0, 0, 4, 0, 0, 3, -1, 0.0, ["mov     [rax], edx", "mov     eax, 0FFFFFFFFh", "pop     st", "retn"], ["mov~<TAG>,edx", "mov~eax,0", "pop~st", "retn"]], [0, 0, 1, 0, 1, 3, 0, 2, 2, 0, 0.05952380952380952, ["call    ___errno_location", "mov     rdx, [st+8]", "jmp     short loc_27A0"], ["call~FOO", "mov~rdx,[st+0]", "jmp~FOO"]], [1, 0, 1, 0, 1, 4, 0, 1, 2, -1, 0.03571428571428571, ["mov     qword ptr [st+30h], 0FFFFFFFFFFFFFFFEh", "call    ___errno_location", "movsxd  rdx, dword ptr [rax]", "mov     [st+8], rdx"], ["mov~[word ptr [st+0],0", "call~FOO", "movsxd~rdx,<TAG>", "mov~[st+0],rdx"]], [2, 0, 6, 0, 1, 8, 1, 2, 1, 3, 0.05952380952380952, ["mov     rcx, st; stat_buf", "mov     r8d, 100h; flag", "mov     st, file; filename", "mov     esi, edi; fildes", "mov     edi, 1; ver", "call    ___fxstatat", "test    eax, eax", "jz      short loc_27B0"], ["mov~rcx,st", "mov~r8d,0", "mov~st,file", "mov~esi,edi", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]]], "func_feature": [3, 3, 8, 0, 8, 9, 6, 31, 0.0506, 0, 0], "succs": [[3, 5], [0], [0, 7], [], [], [4], [4], [1, 6]], "fname": "cache_fstatat", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[1, 0, 12, 0, 0, 8, 1, 1, 0, 0, 0.04963235294117647, ["lea     r8, static_buf_6575", "test    rm_dir_len, rm_dir_len", "lea     rsi, [filename+rax-1FFh]", "mov     ecx, 40h ; '@'", "mov     rdi, r8", "mov     rax, r8", "rep movsq", "jz      short loc_2908"], ["lea~r8,<TAG>", "test~rm_dir_len,rm_dir_len", "lea~rsi,[filename+0]", "mov~ecx,0", "mov~rdi,r8", "mov~rax,r8", "movsq~<TAG>,<TAG>", "jz~FOO"]], [0, 1, 16, 1, 2, 11, 0, 3, 1, 2, 0.05514705882352941, ["mov     r8, [ds_0+18h]", "mov     rdi, cs:g_buf; ptr", "mov     r13, [ds_0+10h]", "mov     ebx, r8d", "call    free", "mov     rdi, filename; s", "sub     ebx, r13d", "call    _strlen", "lea     rdx, [rax+1]; n", "cmp     rdx, 200h", "ja      short loc_2890"], ["mov~r8,[ds_0+0]", "mov~rdi,<TAG>", "mov~r13,[ds_0+0]", "mov~ebx,r8d", "call~FOO", "mov~rdi,filename", "sub~ebx,r13d", "call~FOO", "lea~rdx,[rax+0]", "cmp~rdx,<STR>", "ja~FOO"]], [1, 0, 5, 1, 0, 3, 0, 0, 7, -1, 0.0, ["movzx   ecx, word ptr [rsi+rax]", "mov     [rdi+rax], cx", "add     rax, 2"], ["movzx~ecx,<TAG>", "mov~<TAG>,cx", "add~rax,0"]], [1, 0, 6, 0, 0, 2, 1, 1, 6, -1, 0.1948529411764706, ["test    dl, 2", "jz      short loc_28F5"], ["test~dl,0", "jz~FOO"]], [0, 0, 11, 1, 0, 2, 0, 1, 3, 0, 0.06985294117647059, ["sub     rm_dir_len, r15", "jmp     short loc_28B5"], ["sub~rm_dir_len,r15", "jmp~FOO"]], [0, 1, 13, 1, 1, 10, 0, 2, 2, 1, 0.04963235294117647, ["lea     r8, static_buf_6575", "mov     r15d, 200h", "mov     rsi, filename; src", "sub     r15, rdx", "lea     rdi, [r8+r15]; dest", "mov     [rsp+48h+var_40], r8", "call    _memcpy", "cmp     rm_dir_len, r15", "mov     r8, [rsp+48h+var_40]", "ja      loc_2920"], ["lea~r8,<TAG>", "mov~r15d,<STR>", "mov~rsi,filename", "sub~r15,rdx", "lea~rdi,<TAG>", "mov~[rsp+0],r8", "call~FOO", "cmp~rm_dir_len,r15", "mov~r8,[rsp+0]", "ja~FOO"]], [1, 0, 17, 1, 2, 17, 1, 3, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r14, filename", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, ds_0", "sub     rsp, 18h", "call    ___errno_location", "mov     rsi, filename; filename", "mov     rdi, ds_0; ds_0", "mov     rbp, rax", "mov     r12d, [rax]", "call    full_filename0", "test    full_name, full_name", "jz      short loc_2818"], ["push~r15", "push~r14", "mov~r14,filename", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,ds_0", "sub~rsp,0", "call~FOO", "mov~rsi,filename", "mov~rdi,ds_0", "mov~rbp,rax", "mov~r12d,<TAG>", "call~FOO", "test~full_name,full_name", "jz~FOO"]], [1, 0, 9, 0, 0, 3, 0, 0, 5, -1, 0.0, ["shr     r15d, 3", "mov     ecx, r15d", "rep movsq"], ["shr~r15d,0", "mov~ecx,r15d", "movsq~<TAG>,<TAG>"]], [1, 0, 10, 0, 0, 5, 0, 0, 4, -1, 0.1948529411764706, ["cmp     r15d, 8", "mov     edx, r15d", "lea     rdi, static_buf_6575", "lea     rsi, [r13+rbx+0]", "jb      short loc_28D4"], ["cmp~r15d,0", "mov~edx,r15d", "lea~rdi,<TAG>", "lea~rsi,[r13+0]", "jb~FOO"]], [0, 0, 1, 1, 1, 6, 0, 2, 3, -1, 0.005514705882352941, ["sub     r15, rm_dir_len", "mov     rdx, rm_dir_len; n", "mov     rsi, r13; src", "lea     rdi, [r8+r15]; dest", "call    _memcpy", "jmp     loc_27FF"], ["sub~r15,rm_dir_len", "mov~rdx,rm_dir_len", "mov~rsi,r13", "lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 8, 0, 0, 3, 2, 1, 5, -1, 0.20955882352941177, ["xor     eax, eax", "test    dl, 4", "jz      short loc_28E4"], ["xor~eax,eax", "test~dl,0", "jz~FOO"]], [1, 0, 7, 0, 0, 3, 0, 0, 6, -1, 0.0, ["mov     eax, [rsi]", "mov     [rdi], eax", "mov     eax, 4"], ["mov~eax,<TAG>", "mov~<TAG>,eax", "mov~eax,0"]], [0, 0, 2, 0, 0, 1, 0, 0, 8, -1, 0.07720588235294118, ["lea     rax, static_buf_6575"], ["lea~rax,<TAG>"]], [1, 0, 4, 0, 0, 2, 1, 1, 7, -1, 0.15073529411764705, ["and     edx, 1", "jz      short loc_2901"], ["and~edx,0", "jz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 0, 8, -1, 0.0, ["movzx   edx, byte ptr [rsi+rax]", "mov     [rdi+rax], dl"], ["movzx~edx,<TAG>", "mov~<TAG>,dl"]], [1, 0, 0, 1, 0, 9, 0, 0, 1, -1, 0.0, ["mov     [rbp+0], r12d", "add     rsp, 18h", "pop     rbx", "pop     rbp", "pop     saved_errno", "pop     r13", "pop     filename", "pop     r15", "retn"], ["mov~[rbp+0],r12d", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~saved_errno", "pop~r13", "pop~filename", "pop~r15", "retn"]], [2, 0, 1, 0, 0, 3, 0, 1, 3, -1, 0.04595588235294117, ["mov     cs:static_buf_6575, 2E2E2E5Bh", "mov     cs:byte_20E0A4, 5Dh ; ']'", "jmp     loc_27FF"], ["mov~<TAG>,0", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 11, 0, 0, 1, 1, 0, 3, -1, 0.0661764705882353, ["xor     r15d, r15d"], ["xor~r15d,r15d"]]], "func_feature": [6, 7, 16, 1, 18, 25, 23, 91, 0.06495, 3, 7], "succs": [[16, 17], [0, 5], [13], [2, 13], [8], [9, 4], [1, 15], [10], [10, 7], [15], [11, 3], [3], [16], [12, 14], [12], [], [15], [8]], "fname": "full_filename_", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[3, 0, 2, 3, 0, 11, 0, 1, 0, 0, 0.0935672514619883, ["lea     rax, [rcx+20h]", "mov     [ds_0+0C8h], rax", "sub     rax, [ds_0+0C0h]", "shr     eax, 5", "mov     edx, eax", "mov     rax, [ds_0+70h]", "sub     rax, [ds_0+68h]", "shr     eax, 3", "add     rax, 1", "cmp     rdx, rax", "jnz     loc_2B1F"], ["lea~rax,[rcx+0]", "mov~[ds_0+0],rax", "sub~rax,[ds_0+0]", "shr~eax,0", "mov~edx,eax", "mov~rax,[ds_0+0]", "sub~rax,[ds_0+0]", "shr~eax,0", "add~rax,0", "cmp~rdx,rax", "jnz~FOO"]], [0, 1, 3, 0, 1, 5, 0, 2, 7, 2, 0.0, ["lea     rdi, [ds_0+0B0h]; struct obstack *", "mov     esi, 20h ; ' '; int", "call    __obstack_newchunk", "mov     rcx, [ds_0+0C8h]", "jmp     loc_2A17"], ["lea~rdi,[ds_0+0]", "mov~esi,<STR>", "call~FOO", "mov~rcx,[ds_0+0]", "jmp~FOO"]], [1, 0, 4, 1, 0, 5, 0, 1, 6, 2, 0.16374269005847952, ["mov     rcx, [ds_0+0C8h]", "mov     rax, [ds_0+0D0h]", "sub     rax, rcx", "cmp     rax, 1Fh", "jle     short loc_2A90"], ["mov~rcx,[ds_0+0]", "mov~rax,[ds_0+0]", "sub~rax,rcx", "cmp~rax,0", "jle~FOO"]], [1, 0, 6, 1, 1, 7, 1, 2, 5, 3, 0.22807017543859648, ["mov     [rax], rbx", "add     qword ptr [ds_0+70h], 8", "lea     rdi, [ds_0+108h]; state", "mov     rsi, dir_sb_from_parent; sb", "call    cycle_check", "test    al, al", "jnz     loc_2AD0"], ["mov~<TAG>,rbx", "add~[word ptr [ds_0+0],0", "lea~rdi,[ds_0+0]", "mov~rsi,dir_sb_from_parent", "call~FOO", "test~al,al", "jnz~FOO"]], [2, 0, 8, 1, 0, 7, 0, 0, 4, 4, 0.2573099415204678, ["mov     [ds_0+18h], rax", "mov     byte ptr [rdx], 2Fh ; '/'", "add     rbx, 1", "mov     rax, [ds_0+70h]", "lea     rdx, [rax+8]", "cmp     [ds_0+78h], rdx", "jnb     short loc_29E1"], ["mov~[ds_0+0],rax", "mov~<TAG>,0", "add~rbx,0", "mov~rax,[ds_0+0]", "lea~rdx,[rax+0]", "cmp~[ds_0+0],rdx", "jnb~FOO"]], [1, 0, 7, 0, 1, 4, 0, 1, 5, 4, 0.0, ["lea     rdi, [ds_0+58h]; struct obstack *", "mov     esi, 8; int", "call    __obstack_newchunk", "mov     rax, [ds_0+70h]"], ["lea~rdi,[ds_0+0]", "mov~esi,0", "call~FOO", "mov~rax,[ds_0+0]"]], [1, 0, 9, 0, 1, 6, 0, 2, 4, 5, 0.0, ["mov     esi, 1; int", "mov     rdi, ds_0; struct obstack *", "call    __obstack_newchunk", "mov     rdx, [ds_0+18h]", "lea     rax, [rdx+1]", "jmp     loc_29B6"], ["mov~esi,0", "mov~rdi,ds_0", "call~FOO", "mov~rdx,[ds_0+0]", "lea~rax,[rdx+0]", "jmp~FOO"]], [0, 0, 10, 1, 1, 9, 0, 2, 3, 5, 0.2631578947368421, ["mov     rdx, r14; n", "mov     rsi, dir; src", "call    _memcpy", "mov     rdx, [ds_0+18h]", "add     rdx, r14", "lea     rax, [rdx+1]", "cmp     rax, [ds_0+20h]", "mov     [ds_0+18h], rdx", "ja      loc_2A70"], ["mov~rdx,r14", "mov~rsi,dir", "call~FOO", "mov~rdx,[ds_0+0]", "add~rdx,r14", "lea~rax,[rdx+0]", "cmp~rax,[ds_0+0]", "mov~[ds_0+0],rdx", "ja~FOO"]], [1, 0, 0, 0, 0, 11, 0, 0, 8, -1, 0.0, ["mov     rax, [dir_sb_from_parent]", "mov     [rcx+18h], rax", "mov     rax, [dir_sb_from_parent+8]", "mov     qword ptr [rcx], 0", "mov     [rcx+10h], rax", "pop     rbx", "pop     ds_0", "pop     dir_sb_from_parent", "pop     dir", "pop     r14", "retn"], ["mov~rax,<TAG>", "mov~[rcx+0],rax", "mov~rax,[dir_sb_from_parent+0]", "mov~<TAG>,0", "mov~[rcx+0],rax", "pop~rbx", "pop~ds_0", "pop~dir_sb_from_parent", "pop~dir", "pop~r14", "retn"]], [2, 0, 0, 0, 5, 19, 4, 5, 6, -1, 0.0, ["lea     rsi, asc_A85B+1; filename", "mov     rdi, ds_0; ds_0", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "lea     rsi, aWarningCircula; \"WARNING: Circular directory structure.\"...", "mov     rbx, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "mov     rcx, rbx", "xor     eax, eax", "call    _error", "lea     rdi, [ds_0+128h]", "mov     esi, 1", "call    ___longjmp_chk"], ["lea~rsi,<TAG>", "mov~rdi,ds_0", "call~FOO", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "xor~edi,edi", "mov~rcx,rbx", "xor~eax,eax", "call~FOO", "lea~rdi,[ds_0+0]", "mov~esi,0", "call~FOO"]], [0, 0, 13, 0, 0, 2, 0, 1, 1, 7, 0.07602339181286549, ["mov     rbx, rax", "jmp     loc_297D"], ["mov~rbx,rax", "jmp~FOO"]], [1, 0, 19, 0, 1, 12, 0, 1, 0, 8, 0.0, ["push    r14", "push    r13", "mov     r13, dir", "push    r12", "push    rbp", "mov     rbp, ds_0", "push    rbx", "mov     ds_0, dir; s", "mov     r12, dir_sb_from_parent", "call    _strlen", "cmp     rax, 1", "jbe     loc_2AC8"], ["push~r14", "push~r13", "mov~r13,dir", "push~r12", "push~rbp", "mov~rbp,ds_0", "push~rbx", "mov~ds_0,dir", "mov~r12,dir_sb_from_parent", "call~FOO", "cmp~rax,0", "jbe~FOO"]], [0, 0, 14, 0, 0, 1, 0, 1, 2, 8, 0.0029239766081871343, ["jmp     loc_2AC8"], ["jmp~FOO"]], [0, 0, 12, 0, 0, 5, 0, 0, 2, 6, 0.24561403508771928, ["mov     rdi, [ds_0+18h]; dest", "movsxd  r14, ebx", "lea     rax, [rdi+r14]", "cmp     [ds_0+20h], rax", "jb      loc_2AB0"], ["mov~rdi,[ds_0+0]", "movsxd~r14,ebx", "lea~rax,<TAG>", "cmp~[ds_0+0],rax", "jb~FOO"]], [1, 0, 16, 0, 0, 3, 0, 1, 3, 7, 0.008771929824561403, ["cmp     byte ptr [dir+rbx-1], 2Fh ; '/'", "lea     rax, [rbx-1]", "jnz     short loc_297D"], ["cmp~[yte ptr [dir+0],0", "lea~rax,[rbx-1]+0]", "jnz~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 2, 7, 0.09064327485380116, ["cmp     rbx, 1", "jnz     short loc_2968"], ["cmp~rbx,0", "jnz~FOO"]], [0, 0, 11, 0, 1, 5, 0, 2, 3, 6, 0.0, ["mov     rdi, ds_0; struct obstack *", "mov     esi, ebx; int", "call    __obstack_newchunk", "mov     rdi, [ds_0+18h]", "jmp     loc_2992"], ["mov~rdi,ds_0", "mov~esi,ebx", "call~FOO", "mov~rdi,[ds_0+0]", "jmp~FOO"]], [0, 0, 16, 0, 0, 1, 0, 0, 4, 8, 0.0029239766081871343, ["mov     rbx, rax"], ["mov~rbx,rax"]], [1, 0, 0, 0, 1, 5, 0, 1, 8, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___6698; \"AD_push\"", "lea     rsi, aRemoveC; \"remove.c\"", "lea     rdi, aAdStackHeightD; \"AD_stack_height (ds) == 1 + obstack_obj\"...", "mov     edx, 2CBh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 18, 0, 0, 3, 0, 1, 1, 8, 0.011695906432748537, ["cmp     byte ptr [dir+rax-1], 2Fh ; '/'", "lea     rbx, [rax-1]", "jz      short loc_2977"], ["cmp~[yte ptr [dir+0],0", "lea~rbx,[rax-1]+0]", "jz~FOO"]]], "func_feature": [13, 5, 25, 0, 20, 27, 2, 123, 0.07222, 5, 7], "succs": [[8, 18], [0], [0, 1], [9, 2], [3, 5], [3], [4], [4, 6], [], [], [13], [10, 19], [10], [16, 7], [17, 13], [13, 14], [7], [15], [], [12, 15]], "fname": "AD_push", "n_num": 20}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 10, 0, 2, 6, 0, 2, 0, 0, 0.04489981785063752, ["mov     rdi, ds_0; ds_0", "mov     rsi, filename; filename", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "mov     ds_0, rax"], ["mov~rdi,ds_0", "mov~rsi,filename", "call~FOO", "mov~rdi,rax", "call~FOO", "mov~ds_0,rax"]], [0, 0, 11, 0, 0, 1, 0, 1, 5, -1, 0.014754098360655738, ["jmp     loc_2BF0"], ["jmp~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 8, -1, 0.007923497267759563, ["mov     dword ptr [rcx], 0", "jmp     loc_2BF0"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 6, -1, 0.0336976320582878, ["cmp     r10d, 0Ah", "jz      loc_2C95"], ["cmp~r10d,0", "jz~FOO"]], [1, 0, 28, 0, 0, 2, 0, 1, 6, -1, 0.14007285974499084, ["cmp     byte ptr [x+9], 0", "jz      loc_2EA8"], ["cmp~[yte ptr [x+0],0", "jz~FOO"]], [1, 0, 33, 0, 0, 2, 0, 1, 5, -1, 0.1540983606557377, ["cmp     r10d, 4", "jz      loc_2D00"], ["cmp~r10d,0", "jz~FOO"]], [1, 0, 29, 0, 0, 2, 0, 0, 8, -1, 0.015300546448087432, ["mov     dword ptr [rcx], 4", "nop     word ptr [rax+rax+00000000h]"], ["mov~<TAG>,0", "nop~[ord ptr [rax+0]"]], [3, 0, 0, 1, 4, 25, 3, 4, 7, -1, 0.0, ["mov     rsi, filename; filename", "mov     rdi, ds_0; ds_0", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "mov     filename, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, quoted_name", "mov     rdx, rax; format", "mov     esi, r13d; errnum", "xor     eax, eax", "xor     edi, edi; status", "call    _error", "add     rsp, 18h", "mov     eax, 4", "pop     quoted_name", "pop     sbuf", "pop     fd_cwd", "pop     wp_errno", "pop     x", "pop     ds_0", "retn"], ["mov~rsi,filename", "mov~rdi,ds_0", "call~FOO", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "mov~filename,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,quoted_name", "mov~rdx,rax", "mov~esi,r13d", "xor~eax,eax", "xor~edi,edi", "call~FOO", "add~rsp,0", "mov~eax,0", "pop~quoted_name", "pop~sbuf", "pop~fd_cwd", "pop~wp_errno", "pop~x", "pop~ds_0", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 7, -1, 0.001366120218579235, ["mov     r13d, 15h", "jmp     short loc_2E38"], ["mov~r13d,0", "jmp~FOO"]], [1, 0, 43, 0, 1, 6, 0, 2, 10, -1, 0.025683060109289616, ["mov     [rsp+48h+pdirent_type], rcx", "mov     [rsp+48h+fd], r10d", "call    ___errno_location", "mov     r13d, [rax]", "cmp     r13d, 0Dh", "jnz     loc_2E38"], ["mov~[rsp+0],rcx", "mov~<TAG>,r10d", "call~FOO", "mov~r13d,<TAG>", "cmp~r13d,0", "jnz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 6, -1, 0.004371584699453552, ["call    ___errno_location", "mov     r13d, [rax]"], ["call~FOO", "mov~r13d,<TAG>"]], [1, 0, 10, 0, 0, 3, 0, 1, 13, -1, 0.01459016393442623, ["mov     rax, [rsp+48h+is_empty]", "mov     dword ptr [rax], 4", "jmp     loc_2C06"], ["mov~rax,[rsp+0]", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 15, 0, 1, 8, 1, 2, 12, -1, 0.026748633879781422, ["mov     rax, qword ptr [rsp+48h+fd]", "mov     rdi, r14; dirp", "mov     edx, [rax]", "mov     [rsp+48h+fd], edx", "call    _closedir", "mov     edx, [rsp+48h+fd]", "test    edx, edx", "jnz     loc_2DA5"], ["mov~rax,<TAG>", "mov~rdi,r14", "mov~edx,<TAG>", "mov~<TAG>,edx", "call~FOO", "mov~edx,<TAG>", "test~edx,edx", "jnz~FOO"]], [1, 0, 57, 0, 0, 2, 0, 1, 3, 7, 0.001366120218579235, ["cmp     byte ptr [x+18h], 0", "jz      short loc_2BB8"], ["cmp~[yte ptr [x+0],0", "jz~FOO"]], [1, 0, 59, 0, 0, 2, 0, 1, 2, 7, 0.014754098360655738, ["cmp     eax, 3", "jz      loc_2C88"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 56, 0, 0, 2, 0, 1, 4, 6, 0.014754098360655738, ["cmp     r10d, 0Ah", "jz      short loc_2BB8"], ["cmp~r10d,0", "jz~FOO"]], [1, 0, 56, 0, 0, 3, 1, 1, 3, 6, 0.027868852459016394, ["xor     r13d, r13d", "cmp     r10d, 0Ah", "jnz     loc_2B90"], ["xor~r13d,r13d", "cmp~r10d,0", "jnz~FOO"]], [1, 0, 47, 0, 1, 9, 1, 2, 9, -1, 0.01953551912568306, ["mov     esi, 2; type", "mov     rdi, rax; name", "mov     [rsp+48h+pdirent_type], rcx", "mov     [rsp+48h+fd], r10d", "call    _euidaccess", "test    eax, eax", "mov     r10d, [rsp+48h+fd]", "mov     rcx, [rsp+48h+pdirent_type]", "jz      loc_2BAF"], ["mov~esi,0", "mov~rdi,rax", "mov~[rsp+0],rcx", "mov~<TAG>,r10d", "call~FOO", "test~eax,eax", "mov~r10d,<TAG>", "mov~rcx,[rsp+0]", "jz~FOO"]], [0, 0, 49, 0, 1, 9, 1, 2, 8, 1, 0.012158469945355192, ["mov     rsi, filename; filename", "mov     rdi, ds_0; ds_0", "mov     [rsp+48h+pdirent_type], rcx", "mov     [rsp+48h+fd], r10d", "call    full_filename0", "test    rax, rax", "mov     r10d, [rsp+48h+fd]", "mov     rcx, [rsp+48h+pdirent_type]", "jz      loc_3039"], ["mov~rsi,filename", "mov~rdi,ds_0", "mov~[rsp+0],rcx", "mov~<TAG>,r10d", "call~FOO", "test~rax,rax", "mov~r10d,<TAG>", "mov~rcx,[rsp+0]", "jz~FOO"]], [2, 0, 53, 0, 0, 6, 1, 1, 6, 3, 0.029234972677595627, ["mov     eax, [sbuf+18h]", "mov     r10d, [rsp+48h+fd]", "mov     rcx, [rsp+48h+pdirent_type]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_2BAF"], ["mov~eax,[sbuf+0]", "mov~r10d,<TAG>", "mov~rcx,[rsp+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 54, 0, 1, 8, 1, 2, 5, 4, 0.020491803278688523, ["mov     rdx, sbuf; st", "mov     rsi, filename; file", "mov     edi, r12d; fd", "mov     [rsp+48h+pdirent_type], rcx", "mov     [rsp+48h+fd], r10d", "call    cache_fstatat", "test    eax, eax", "jnz     loc_2E30"], ["mov~rdx,sbuf", "mov~rsi,filename", "mov~edi,r12d", "mov~[rsp+0],rcx", "mov~<TAG>,r10d", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 9, 0, 1, 6, 1, 2, 7, -1, 0.07747723132969034, ["mov     rdx, sbuf; st", "mov     rsi, filename; file", "mov     edi, r12d; fd", "call    cache_fstatat", "test    eax, eax", "jnz     loc_2DF8"], ["mov~rdx,sbuf", "mov~rsi,filename", "mov~edi,r12d", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 25, 0, 2, 8, 0, 3, 7, -1, 0.13214936247723127, ["mov     rdi, ds_0; ds_0", "mov     rsi, filename; filename", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "cmp     [rsp+48h+mode], 2", "mov     ds_0, rax", "jnz     loc_2C06"], ["mov~rdi,ds_0", "mov~rsi,filename", "call~FOO", "mov~rdi,rax", "call~FOO", "cmp~[rsp+0],0", "mov~ds_0,rax", "jnz~FOO"]], [1, 0, 21, 0, 0, 6, 2, 1, 13, -1, 0.011256830601092897, ["xor     edx, edx", "cmp     byte ptr [rax+14h], 2Eh ; '.'", "setz    dl", "movzx   eax, byte ptr [rax+rdx+14h]", "test    al, al", "jz      short loc_2D70"], ["xor~edx,edx", "cmp~[yte ptr [rax+0],0", "setz~dl", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 12, -1, 0.025683060109289616, ["cmp     byte ptr [rax+13h], 2Eh ; '.'", "jnz     short loc_2D9D"], ["cmp~[yte ptr [rax+0],0", "jnz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 7, -1, 0.002185792349726776, ["mov     dword ptr [rcx], 0Ah", "jmp     loc_2C95"], ["mov~<TAG>,0", "jmp~FOO"]], [2, 0, 36, 0, 0, 5, 1, 1, 6, -1, 0.031420765027322405, ["mov     eax, [sbuf+18h]", "mov     rcx, qword ptr [rsp+48h+fd]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_2FD0"], ["mov~eax,[sbuf+0]", "mov~rcx,<TAG>", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 4, -1, 0.02459016393442623, ["cmp     dword ptr [x+4], 3", "jnz     loc_2BB8"], ["cmp~[word ptr [x+0],0", "jnz~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 14, -1, 0.0012295081967213114, ["cmp     al, 2Fh ; '/'", "jz      short loc_2D70"], ["cmp~al,0", "jz~FOO"]], [0, 0, 5, 0, 1, 4, 1, 2, 9, -1, 0.01518670309653916, ["lea     rsi, aSRemoveWritePr; \"%s: remove write-protected %s %s? \"", "xor     edi, edi; domainname", "call    _dcgettext", "jmp     loc_2C4A"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "jmp~FOO"]], [1, 0, 7, 0, 1, 7, 1, 2, 8, -1, 0.052504553734061946, ["mov     rdi, sbuf; st", "call    file_type", "test    r13d, r13d", "mov     sbuf, rax", "mov     filename, cs:program_name", "mov     edx, 5; category", "jnz     loc_2E90"], ["mov~rdi,sbuf", "call~FOO", "test~r13d,r13d", "mov~sbuf,rax", "mov~filename,<TAG>", "mov~edx,0", "jnz~FOO"]], [0, 0, 5, 0, 1, 3, 1, 1, 9, -1, 0.01518670309653916, ["lea     rsi, aSRemoveSS; \"%s: remove %s %s? \"", "xor     edi, edi; domainname", "call    _dcgettext"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO"]], [0, 0, 55, 0, 1, 7, 1, 2, 4, 5, 0.058469945355191254, ["mov     [rsp+48h+pdirent_type], pdirent_type_0", "mov     [rsp+48h+fd], r10d", "call    can_write_any_file", "test    al, al", "mov     r10d, [rsp+48h+fd]", "mov     rcx, [rsp+48h+pdirent_type]; flag", "jz      loc_2EE0"], ["mov~[rsp+0],pdirent_type_0", "mov~<TAG>,r10d", "call~FOO", "test~al,al", "mov~r10d,<TAG>", "mov~rcx,[rsp+0]", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 9, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 44, 0, 0, 1, 0, 0, 5, -1, 0.06775956284153005, ["mov     eax, [x+4]"], ["mov~eax,[x+0]"]], [0, 0, 45, 0, 0, 1, 0, 1, 9, -1, 0.0020491803278688526, ["jmp     loc_2BAF"], ["jmp~FOO"]], [0, 0, 21, 0, 1, 4, 1, 2, 11, -1, 0.06527322404371584, ["mov     rdi, r14; dirp", "call    _readdir", "test    rax, rax", "jz      loc_2FE0"], ["mov~rdi,r14", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 38, 0, 1, 7, 1, 2, 5, -1, 0.03306010928961749, ["mov     rdx, sbuf; st", "mov     rsi, filename; file", "mov     edi, r12d; fd", "mov     qword ptr [rsp+48h+fd], rcx", "call    cache_fstatat", "test    eax, eax", "jnz     loc_2E30"], ["mov~rdx,sbuf", "mov~rsi,filename", "mov~edi,r12d", "mov~<TAG>,rcx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 43, 0, 0, 2, 0, 1, 2, -1, 0.09262295081967213, ["cmp     eax, 3", "jz      short loc_2BD0"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 60, 0, 0, 7, 0, 1, 1, 8, 0.015846994535519125, ["cmp     byte ptr [x], 0", "mov     r14, x", "mov     rbp, sbuf", "mov     rbx, filename", "mov     r15, ds_0", "mov     r12d, edi", "jnz     short loc_2BB3"], ["cmp~<TAG>,0", "mov~r14,x", "mov~rbp,sbuf", "mov~rbx,filename", "mov~r15,ds_0", "mov~r12d,edi", "jnz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, -1, 0.00896174863387978, ["mov     eax, 2"], ["mov~eax,0"]], [3, 0, 61, 1, 0, 13, 0, 1, 0, 9, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "mov     r10d, [pdirent_type_0]", "mov     rax, [rsp+48h+is_empty]", "mov     dword ptr [rax], 2", "mov     eax, [x+4]", "cmp     eax, 5", "jz      short loc_2BB8"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r10d,<TAG>", "mov~rax,[rsp+0]", "mov~<TAG>,0", "mov~eax,[x+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 3, 0, 1, 5, 1, 2, 11, -1, 0.02530054644808743, ["call    yesno", "mov     edx, eax", "mov     eax, 3", "test    dl, dl", "jnz     loc_2BB8"], ["call~FOO", "mov~edx,eax", "mov~eax,0", "test~dl,dl", "jnz~FOO"]], [2, 0, 46, 0, 1, 8, 1, 2, 8, -1, 0.03510928961748634, ["mov     esi, 2; mode", "mov     rdi, sbuf; st", "mov     r13d, 1", "call    euidaccess_stat", "test    al, al", "mov     r10d, [rsp+48h+fd]", "mov     rcx, [rsp+48h+pdirent_type]", "jz      loc_2BD3"], ["mov~esi,0", "mov~rdi,sbuf", "mov~r13d,0", "call~FOO", "test~al,al", "mov~r10d,<TAG>", "mov~rcx,[rsp+0]", "jz~FOO"]], [1, 0, 7, 0, 0, 5, 1, 1, 9, -1, 0.04410746812386157, ["mov     rax, [rsp+48h+is_empty]", "test    r13d, r13d", "mov     filename, cs:program_name", "mov     dword ptr [rax], 3", "jz      loc_2EB0"], ["mov~rax,[rsp+0]", "test~r13d,r13d", "mov~filename,<TAG>", "mov~<TAG>,0", "jz~FOO"]], [1, 0, 24, 0, 1, 7, 2, 2, 8, -1, 0.10760473588342442, ["xor     eax, eax", "mov     edx, 30900h; oflag", "mov     rsi, filename; file", "mov     edi, r12d; fd", "call    _openat", "test    eax, eax", "js      short loc_2DA5"], ["xor~eax,eax", "mov~edx,0", "mov~rsi,filename", "mov~edi,r12d", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 8, 0, 1, 3, 0, 2, 10, -1, 0.0021311475409836063, ["mov     edi, edx; fd", "call    _close", "jmp     loc_2DA5"], ["mov~edi,edx", "call~FOO", "jmp~FOO"]], [0, 0, 8, 0, 1, 2, 0, 1, 13, -1, 0.005, ["mov     rdi, r14; dirp", "call    _closedir"], ["mov~rdi,r14", "call~FOO"]], [0, 0, 41, 0, 0, 2, 1, 1, 4, -1, 0.18688524590163935, ["test    r10d, r10d", "jz      loc_2CA8"], ["test~r10d,r10d", "jz~FOO"]], [1, 0, 5, 0, 1, 5, 1, 2, 10, -1, 0.012627504553734063, ["lea     rsi, aSDescendIntoDi; \"%s: descend into directory %s? \"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "jmp     loc_2DD3"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "jmp~FOO"]], [1, 0, 52, 2, 1, 11, 0, 2, 7, 2, 0.038524590163934426, ["mov     rdi, filename; s", "mov     [rsp+48h+pdirent_type], rcx", "mov     [rsp+48h+fd], r10d", "call    _strlen", "mov     rdx, [ds_0+18h]", "sub     edx, [ds_0+10h]", "mov     r10d, [rsp+48h+fd]", "mov     rcx, [rsp+48h+pdirent_type]", "add     rax, rdx", "cmp     rax, 0FFFh", "ja      loc_3010"], ["mov~rdi,filename", "mov~[rsp+0],rcx", "mov~<TAG>,r10d", "call~FOO", "mov~rdx,[ds_0+0]", "sub~edx,[ds_0+0]", "mov~r10d,<TAG>", "mov~rcx,[rsp+0]", "add~rax,rdx", "cmp~rax,0", "ja~FOO"]], [2, 0, 42, 0, 0, 5, 0, 1, 11, -1, 0.032513661202185795, ["mov     dword ptr [rax], 0", "mov     r13d, 1", "mov     r10d, [rsp+48h+fd]", "mov     rcx, [rsp+48h+pdirent_type]", "jmp     loc_2BD3"], ["mov~<TAG>,0", "mov~r13d,0", "mov~r10d,<TAG>", "mov~rcx,[rsp+0]", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 2, -1, 0.0, ["add     rsp, 18h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 1, 0, 0, 1, 0, 1, 12, -1, 0.0018579234972677598, ["jmp     loc_2BBD"], ["jmp~FOO"]], [2, 0, 1, 0, 3, 14, 3, 4, 8, -1, 0.003934426229508197, ["lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     filename, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, quoted_name", "xor     eax, eax", "mov     rdx, rbx; format", "xor     edi, edi; status", "call    _error", "mov     eax, 4", "jmp     loc_2BBD"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~filename,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,quoted_name", "xor~eax,eax", "mov~rdx,rbx", "xor~edi,edi", "call~FOO", "mov~eax,0", "jmp~FOO"]], [1, 0, 5, 0, 1, 4, 1, 1, 10, -1, 0.012627504553734063, ["lea     rsi, aSDescendIntoWr; \"%s: descend into write-protected direct\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO"]], [0, 0, 42, 0, 0, 1, 1, 0, 3, -1, 0.09398907103825137, ["xor     r13d, r13d"], ["xor~r13d,r13d"]], [0, 0, 23, 0, 1, 7, 1, 2, 9, -1, 0.07049180327868852, ["mov     edi, eax; fd", "mov     [rsp+48h+fd], eax", "call    _fdopendir", "test    rax, rax", "mov     x, rax", "mov     edx, [rsp+48h+fd]", "jz      loc_2ED0"], ["mov~edi,eax", "mov~<TAG>,eax", "call~FOO", "test~rax,rax", "mov~x,rax", "mov~edx,<TAG>", "jz~FOO"]], [1, 0, 21, 0, 1, 4, 0, 1, 10, -1, 0.05879781420765027, ["call    ___errno_location", "mov     qword ptr [rsp+48h+fd], rax", "mov     dword ptr [rax], 0", "nop     word ptr [rax+rax+00h]"], ["call~FOO", "mov~<TAG>,rax", "mov~<TAG>,0", "nop~[ord ptr [rax+0]"]], [1, 0, 32, 0, 0, 2, 0, 1, 7, -1, 0.027049180327868853, ["cmp     eax, 4000h", "jz      short loc_2CF0"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 4, 0, 1, 8, 1, 2, 11, -1, 0.01705828779599271, ["mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     r8, quoted_name", "mov     rcx, rbx", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_2C69"], ["mov~rdi,<TAG>", "mov~rdx,rax", "mov~r8,quoted_name", "mov~rcx,rbx", "mov~esi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 4, 0, 1, 8, 1, 1, 10, -1, 0.020537340619307825, ["mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     r9, quoted_name", "mov     r8, rbp", "mov     rcx, rbx", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk"], ["mov~rdi,<TAG>", "mov~rdx,rax", "mov~r9,quoted_name", "mov~r8,rbp", "mov~rcx,rbx", "mov~esi,0", "xor~eax,eax", "call~FOO"]]], "func_feature": [37, 34, 85, 0, 62, 94, 2, 305, 0.03472, 7, 5], "succs": [[21], [0], [0], [0, 27], [8, 22], [3, 4], [4], [], [7], [51, 7], [7], [21], [11, 44], [40, 15], [16, 13], [32, 40], [32, 27], [9, 34], [17, 33], [34, 50], [10, 19], [54, 30], [21, 45], [36, 28], [47, 23], [27], [25, 59], [40, 1], [36, 47], [61], [29, 31], [61], [34, 20], [], [38], [34], [24, 12], [10, 26], [40, 56], [14, 38], [52], [40, 39], [40, 53], [48, 35], [49, 55], [57, 44], [44], [44], [37, 5], [60], [18, 43], [48], [], [52], [52], [60], [48], [58, 46], [36], [2, 6], [42], [42]], "fname": "prompt", "n_num": 62}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[1, 0, 48, 0, 0, 2, 0, 1, 0, 0, 0.01315020455873758, ["cmp     eax, 14h", "jz      loc_308C"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 49, 0, 0, 2, 0, 1, 5, 2, 0.0029222676797194622, ["cmp     eax, 2", "jz      loc_308C"], ["cmp~eax,0", "jz~FOO"]], [3, 0, 3, 0, 4, 18, 3, 5, 3, 2, 0.0017533606078316772, ["mov     rsi, filename; filename", "mov     rdi, ds_0; ds_0", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "mov     s, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 15h; errnum", "xor     edi, edi; status", "xor     eax, eax", "mov     ebx, 4", "call    _error", "jmp     loc_308C"], ["mov~rsi,filename", "mov~rdi,ds_0", "call~FOO", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "mov~s,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "xor~edi,edi", "xor~eax,eax", "mov~ebx,0", "call~FOO", "jmp~FOO"]], [1, 0, 56, 0, 0, 2, 0, 1, 2, 3, 0.0026300409117475157, ["cmp     byte ptr [x+9], 0", "jz      loc_32C0"], ["cmp~[yte ptr [x+0],0", "jz~FOO"]], [2, 0, 3, 0, 4, 20, 3, 5, 8, 2, 0.009059029807130333, ["mov     rsi, filename; filename", "mov     rdi, ds_0; ds_0", "mov     [rsp+58h+var_58], r8", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     s, rax", "call    _dcgettext", "mov     r8, [rsp+58h+var_58]", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "mov     ebx, 4", "mov     esi, [r8]; errnum", "call    _error", "jmp     loc_308C"], ["mov~rsi,filename", "mov~rdi,ds_0", "mov~<TAG>,r8", "call~FOO", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~s,rax", "call~FOO", "mov~r8,<TAG>", "mov~rcx,rbx", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "mov~ebx,0", "mov~esi,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 9, 3, 0.012857977790765633, ["cmp     ecx, 14h", "jnz     loc_313D"], ["cmp~ecx,0", "jnz~FOO"]], [2, 0, 19, 0, 0, 3, 0, 1, 8, 3, 0.031560490940970194, ["cmp     byte ptr [x+9], 0", "mov     dword ptr [r8], 1", "jz      loc_313D"], ["cmp~[yte ptr [x+0],0", "mov~<TAG>,0", "jz~FOO"]], [2, 0, 12, 0, 0, 3, 0, 1, 9, 3, 0.021332554061952072, ["cmp     byte ptr [x+9], 0", "mov     dword ptr [r8], 15h", "jz      loc_313D"], ["cmp~[yte ptr [x+0],0", "mov~<TAG>,0", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 7, 3, 0.05406195207481005, ["cmp     byte ptr [x+0], 0", "jnz     loc_32A0"], ["cmp~[yte ptr [x+0],0", "jnz~FOO"]], [1, 0, 36, 0, 0, 3, 0, 1, 5, 5, 0.16043249561659848, ["cmp     ecx, 1", "movzx   eax, byte ptr [x+9]", "jnz     loc_3240"], ["cmp~ecx,0", "movzx~eax,[yte ptr [x+0]", "jnz~FOO"]], [1, 0, 39, 0, 1, 5, 0, 2, 4, 3, 0.14377556984219753, ["call    ___errno_location", "cmp     byte ptr [x+0], 0", "mov     r8, rax", "mov     ecx, [rax]; flag", "jz      short loc_30FF"], ["call~FOO", "cmp~[yte ptr [x+0],0", "mov~r8,rax", "mov~ecx,<TAG>", "jz~FOO"]], [1, 0, 37, 0, 0, 2, 0, 1, 6, 2, 0.009935710111046171, ["cmp     ecx, 14h", "jz      short loc_308C"], ["cmp~ecx,0", "jz~FOO"]], [0, 0, 25, 0, 1, 8, 1, 2, 7, 4, 0.05669199298655757, ["mov     rdx, st; st", "mov     rsi, filename; file", "mov     edi, r13d; fd", "mov     [rsp+58h+var_58], r8", "call    cache_fstatat", "test    eax, eax", "mov     r8, [rsp+58h+var_58]", "jnz     short loc_339A"], ["mov~rdx,st", "mov~rsi,filename", "mov~edi,r13d", "mov~<TAG>,r8", "call~FOO", "test~eax,eax", "mov~r8,<TAG>", "jnz~FOO"]], [1, 0, 33, 0, 0, 2, 0, 1, 6, 5, 0.12799532437171243, ["cmp     al, 1", "jnz     loc_3370"], ["cmp~al,0", "jnz~FOO"]], [1, 0, 47, 0, 0, 2, 0, 1, 5, 3, 0.07860900058445353, ["cmp     eax, 27h ; '''", "jz      short loc_3231"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 50, 0, 1, 6, 0, 2, 4, 3, 0.04529514903565166, ["mov     dword ptr [rsp+58h+var_58], ecx", "call    ___errno_location", "cmp     byte ptr [x+0], 0", "mov     eax, [rax]", "mov     ecx, dword ptr [rsp+58h+var_58]", "jz      short loc_3207"], ["mov~<TAG>,ecx", "call~FOO", "cmp~[yte ptr [x+0],0", "mov~eax,<TAG>", "mov~ecx,<TAG>", "jz~FOO"]], [1, 0, 46, 0, 0, 2, 0, 1, 6, 3, 0.08679135008766803, ["cmp     eax, 11h", "jz      short loc_3231"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 12, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___6765; \"remove_entry\"", "lea     rsi, aRemoveC; \"remove.c\"", "lea     rdi, aCacheStatOkStS; \"!cache_stat_ok (st) || S_ISDIR (st->st_\"...", "mov     edx, 459h; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [2, 0, 5, 0, 0, 4, 1, 1, 11, 3, 0.010812390414962009, ["mov     eax, [st+18h]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_3231"], ["mov~eax,[st+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [2, 0, 24, 0, 0, 4, 1, 1, 8, 4, 0.024254821741671536, ["mov     eax, [st+18h]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_3418"], ["mov~eax,[st+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 8, 4, 0.04850964348334307, ["cmp     ecx, 1", "jz      short loc_331E"], ["cmp~ecx,0", "jz~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 7, 5, 0.07977790765634131, ["cmp     qword ptr [st+30h], 0", "js      loc_3310"], ["cmp~[word ptr [st+0],0", "js~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 4, 2, 0.009059029807130333, ["cmp     byte ptr [x+19h], 0", "jz      loc_308C"], ["cmp~[yte ptr [x+0],0", "jz~FOO"]], [0, 0, 43, 0, 1, 6, 2, 2, 3, 3, 0.14845119812974866, ["xor     edx, edx; flag", "mov     rsi, filename; name", "mov     edi, r13d; fd", "call    _unlinkat", "test    eax, eax", "jz      loc_3190"], ["xor~edx,edx", "mov~rsi,filename", "mov~edi,r13d", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 3, 0, 2, 8, 2, 3, 6, 2, 0.0017533606078316772, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, rbp", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_308C"], ["xor~edi,edi", "call~FOO", "mov~rdx,rbp", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 4, 0, 2, 9, 0, 3, 5, 3, 0.0030683810637054353, ["mov     rsi, filename; filename", "mov     rdi, ds_0; ds_0", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "mov     edx, 5", "mov     x, rax", "lea     rsi, aRemovedS; \"removed %s\\n\"", "jmp     loc_327C"], ["mov~rsi,filename", "mov~rdi,ds_0", "call~FOO", "mov~rdi,rax", "call~FOO", "mov~edx,0", "mov~x,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 4, 0, 2, 8, 0, 2, 5, 3, 0.0016072472238457041, ["mov     rsi, filename; filename", "mov     rdi, ds_0; ds_0", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "lea     rsi, aRemovedDirecto; \"removed directory: %s\\n\"", "mov     x, rax", "mov     edx, 5; category"], ["mov~rsi,filename", "mov~rdi,ds_0", "call~FOO", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "mov~x,rax", "mov~edx,0"]], [0, 0, 44, 0, 0, 1, 0, 1, 8, 4, 0.10432495616598479, ["jmp     loc_30D0"], ["jmp~FOO"]], [1, 0, 45, 0, 0, 2, 0, 1, 7, 3, 0.09585037989479836, ["cmp     ecx, 4", "jz      short loc_3231"], ["cmp~ecx,0", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 9, 3, 0.004675628287551139, ["cmp     ecx, 0Dh", "jnz     loc_3231"], ["cmp~ecx,0", "jnz~FOO"]], [0, 0, 22, 0, 0, 1, 0, 1, 7, 6, 0.004091174751607247, ["jmp     loc_3114"], ["jmp~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 1, 1, 0.03272939801285798, ["mov     rdx, [rsp+58h+var_40]", "xor     rdx, fs:28h", "mov     eax, ebx", "jnz     loc_345C"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [1, 0, 38, 0, 0, 2, 0, 1, 5, 2, 0.0052600818234950315, ["cmp     ecx, 2", "jz      short loc_308C"], ["cmp~ecx,0", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, 2, 0.015195791934541203, ["mov     ebx, 5", "jmp     loc_308C"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 4, 2, 0.004383401519579193, ["cmp     byte ptr [x+19h], 0", "jz      loc_308C"], ["cmp~[yte ptr [x+0],0", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 8, 2, 0.0287843366452367, ["cmp     ecx, 2", "jz      loc_308C"], ["cmp~ecx,0", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 10, 2, 0.0004383401519579193, ["jmp     loc_308C"], ["jmp~FOO"]], [3, 0, 59, 1, 1, 26, 1, 2, 0, 2, 0.0, ["push    r15", "push    r14", "mov     r15, ds_0", "push    r13", "push    r12", "mov     r13d, edi", "push    rbp", "push    rbx", "mov     r12, filename", "mov     r14, st", "mov     rbp, x", "sub     rsp, 28h", "mov     rax, fs:28h", "mov     [rsp+58h+var_40], rax", "xor     eax, eax", "lea     rax, [rsp+58h+is_empty_directory]", "mov     [rsp+58h+dirent_type], ecx", "lea     dirent_type_arg, [rsp+58h+dirent_type]; pdirent_type", "push    rax; is_empty", "push    2; mode", "call    prompt", "cmp     eax, 2", "mov     ebx, eax", "pop     rdx", "pop     rcx", "jz      short loc_30B8"], ["push~r15", "push~r14", "mov~r15,ds_0", "push~r13", "push~r12", "mov~r13d,edi", "push~rbp", "push~rbx", "mov~r12,filename", "mov~r14,st", "mov~rbp,x", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "mov~[rsp+0],ecx", "lea~dirent_type_arg,[rsp+0]", "push~rax", "push~0", "call~FOO", "cmp~eax,0", "mov~ebx,eax", "pop~rdx", "pop~rcx", "jz~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 9, 6, 0.026592635885447104, ["cmp     qword ptr [st+30h], 0", "js      loc_3452"], ["cmp~[word ptr [st+0],0", "js~FOO"]], [1, 0, 58, 0, 0, 3, 0, 1, 1, 4, 0.016072472238457043, ["mov     ecx, [rsp+58h+dirent_type]", "cmp     ecx, 4", "jz      loc_3220"], ["mov~ecx,[rsp+0]", "cmp~ecx,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [2, 0, 18, 0, 0, 4, 1, 1, 8, 4, 0.024547048509643482, ["mov     eax, [st+18h]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_3360"], ["mov~eax,[st+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 10, 3, 0.016656925774400935, ["cmp     qword ptr [st+30h], 0", "js      loc_3231"], ["cmp~[word ptr [st+0],0", "js~FOO"]], [1, 0, 54, 0, 0, 2, 0, 1, 3, 3, 0.01548801870251315, ["cmp     [rsp+58h+is_empty_directory], 4", "jz      short loc_31C8"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 2, -1, 0.0, ["add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     filename", "pop     fd_cwd", "pop     st", "pop     ds_0", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~filename", "pop~fd_cwd", "pop~st", "pop~ds_0", "retn"]], [0, 1, 53, 0, 1, 8, 1, 2, 3, 3, 0.037697253068381065, ["mov     edx, 200h; flag", "mov     rsi, filename; name", "mov     edi, r13d; fd", "mov     dword ptr [rsp+58h+var_58], ecx", "call    _unlinkat", "test    eax, eax", "mov     ecx, dword ptr [rsp+58h+var_58]", "jz      short loc_3250"], ["mov~edx,<STR>", "mov~rsi,filename", "mov~edi,r13d", "mov~<TAG>,ecx", "call~FOO", "test~eax,eax", "mov~ecx,<TAG>", "jz~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 10, 3, 0.00847457627118644, ["cmp     ecx, 0Dh", "jnz     loc_3231"], ["cmp~ecx,0", "jnz~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 10, 3, 0.02688486265341905, ["cmp     qword ptr [st+30h], 0", "mov     [r8], ecx", "js      loc_3231"], ["cmp~[word ptr [st+0],0", "mov~<TAG>,ecx", "js~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 12, 3, 0.0005844535359438924, ["jmp     loc_3231"], ["jmp~FOO"]], [0, 0, 23, 0, 0, 2, 1, 1, 6, 4, 0.03243717124488603, ["test    al, al", "jz      loc_3133"], ["test~al,al", "jz~FOO"]], [0, 0, 8, 0, 0, 2, 0, 1, 11, 4, 0.011689070718877849, ["mov     [r8], ecx", "jmp     loc_3133"], ["mov~<TAG>,ecx", "jmp~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 11, 4, 0.0061367621274108705, ["mov     ecx, 1", "jmp     loc_3133"], ["mov~ecx,0", "jmp~FOO"]], [3, 0, 10, 0, 0, 5, 1, 1, 11, 4, 0.011104617182933957, ["mov     eax, [st+18h]", "mov     ecx, 15h", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     loc_3133"], ["mov~eax,[st+0]", "mov~ecx,0", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [0, 0, 14, 0, 1, 10, 1, 2, 9, 4, 0.0619520748100526, ["mov     rdx, st; st", "mov     rsi, filename; file", "mov     edi, r13d; fd", "mov     [rsp+58h+var_50], ecx", "mov     [rsp+58h+var_58], r8", "call    cache_fstatat", "test    eax, eax", "mov     r8, [rsp+58h+var_58]", "mov     ecx, [rsp+58h+var_50]", "jnz     loc_33D4"], ["mov~rdx,st", "mov~rsi,filename", "mov~edi,r13d", "mov~[rsp+0],ecx", "mov~<TAG>,r8", "call~FOO", "test~eax,eax", "mov~r8,<TAG>", "mov~ecx,[rsp+0]", "jnz~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 9, 4, 0.01548801870251315, ["cmp     ecx, 1", "jz      short loc_331E"], ["cmp~ecx,0", "jz~FOO"]], [0, 0, 15, 0, 0, 1, 0, 1, 11, 5, 0.0032144944476914083, ["jmp     short loc_331E"], ["jmp~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 10, 5, 0.009935710111046171, ["mov     ecx, 1", "jmp     loc_331E"], ["mov~ecx,0", "jmp~FOO"]], [2, 0, 17, 0, 0, 4, 1, 1, 10, 5, 0.010520163646990063, ["mov     eax, [st+18h]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_3452"], ["mov~eax,[st+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 54, 0, 0, 2, 0, 1, 2, 4, 0.029222676797194622, ["cmp     [rsp+58h+is_empty_directory], 4", "jz      loc_31C8"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 13, 0, 0, 4, 1, 1, 10, 4, 0.020455873758036234, ["mov     eax, [st+18h]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_33D4"], ["mov~eax,[st+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]]], "func_feature": [23, 22, 79, 3, 60, 100, 2, 251, 0.03112, 7, 2], "succs": [[14, 31], [0, 31], [31], [2, 43], [31], [36, 4], [4, 38], [42, 4], [35, 4], [49, 13], [32, 9], [9, 31], [19, 6], [12, 21], [16, 33], [1, 14], [33, 28], [], [17, 33], [6, 7], [29, 53], [41, 20], [25, 31], [10, 22], [31], [24], [24], [23], [33, 27], [33, 53], [21], [40, 44], [11, 31], [31], [26, 31], [5, 31], [31], [39, 31], [56, 57], [58, 3], [], [8, 54], [33, 52], [33, 45], [], [34, 15], [33, 55], [33, 18], [33], [8, 30], [8], [8], [8, 48], [59, 47], [53, 46], [53], [53], [56, 51], [45, 23], [50, 47]], "fname": "remove_entry", "n_num": 60}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[1, 0, 146, 0, 0, 3, 0, 1, 0, 0, 0.08692550543379272, ["cmp     byte ptr [rax+13h], 2Eh ; '.'", "lea     r15, [rax+13h]", "jnz     short loc_3A22"], ["cmp~[yte ptr [rax+0],0", "lea~r15,[rax+0]", "jnz~FOO"]], [0, 0, 146, 0, 1, 4, 1, 2, 9, -1, 0.25478113047173817, ["mov     rdi, rbx; dirp", "call    _readdir", "test    rax, rax", "jz      loc_3E20"], ["mov~rdi,rbx", "call~FOO", "test~rax,rax", "jz~FOO"]], [3, 0, 146, 3, 3, 34, 1, 4, 15, -1, 0.21398215044623883, ["mov     rax, [r14+0C8h]", "mov     rdx, [r14+68h]", "mov     rsi, [r14+18h]", "mov     rcx, [rax-10h]", "mov     r13d, [rax-18h]", "mov     [rsp+328h+var_2E0], rcx", "mov     rcx, [rax-8]", "mov     rax, [r14+70h]", "mov     [rsp+328h+var_2C8], rcx", "sub     rax, rdx", "shr     eax, 3", "mov     r15, [rdx+rax*8-8]", "sub     rsi, r15", "mov     rdi, r15; n", "mov     [rsp+328h+src], rsi", "call    xmalloc", "mov     rsi, [rsp+328h+src]; src", "lea     rdx, [r15-1]; n", "mov     rdi, rax; dest", "mov     [rsp+328h+ptr], rax", "call    _memcpy", "mov     rax, [rsp+328h+ptr]", "mov     rdi, r14; ds_0", "mov     byte ptr [rax+r15-1], 0", "call    AD_stack_pop", "mov     rax, [r14+70h]", "mov     rcx, [r14+68h]", "mov     rdx, rax", "mov     rdi, rax", "sub     rdx, rcx", "shr     edx, 3", "test    edx, edx", "mov     esi, edx", "jz      loc_4602"], ["mov~rax,[r14+0]", "mov~rdx,[r14+0]", "mov~rsi,[r14+0]", "mov~rcx,[rax-10h]+0]", "mov~r13d,[rax-18h]+0]", "mov~[rsp+0],rcx", "mov~rcx,[rax-8]+0]", "mov~rax,[r14+0]", "mov~[rsp+0],rcx", "sub~rax,rdx", "shr~eax,0", "mov~r15,[rdx+0]", "sub~rsi,r15", "mov~rdi,r15", "mov~[rsp+0],rsi", "call~FOO", "mov~rsi,[rsp+0]", "lea~rdx,[r15-1]+0]", "mov~rdi,rax", "mov~[rsp+0],rax", "call~FOO", "mov~rax,[rsp+0]", "mov~rdi,r14", "mov~[yte ptr [rax+0],0", "call~FOO", "mov~rax,[r14+0]", "mov~rcx,[r14+0]", "mov~rdx,rax", "mov~rdi,rax", "sub~rdx,rcx", "shr~edx,0", "test~edx,edx", "mov~esi,edx", "jz~FOO"]], [0, 0, 146, 0, 0, 2, 1, 1, 14, -1, 0.23192277335923744, ["test    r13, r13", "jz      short loc_3B85"], ["test~r13,r13", "jz~FOO"]], [3, 0, 146, 0, 6, 22, 4, 6, 17, -1, 0.005707000182138303, ["mov     rsi, r13; filename", "mov     rdi, r14; ds_0", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "lea     rsi, aSkippingSSince; \"skipping %s, since it's on a different \"...", "mov     rbp, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     eax, eax", "xor     edi, edi; status", "mov     ebp, 4", "call    _error", "mov     rdi, r13; ptr", "call    free", "mov     rdi, r14; ds_0", "call    AD_mark_current_as_unremovable", "mov     [rsp+328h+var_2E4], 4"], ["mov~rsi,r13", "mov~rdi,r14", "call~FOO", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rbp,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbp", "mov~rdx,rax", "xor~esi,esi", "xor~eax,eax", "xor~edi,edi", "mov~ebp,0", "call~FOO", "mov~rdi,r13", "call~FOO", "mov~rdi,r14", "call~FOO", "mov~[rsp+0],0"]], [2, 1, 35, 0, 1, 7, 1, 2, 7, -1, 0.0019428085726428267, ["mov     rsi, [rsp+328h+filename]; name", "mov     edx, 200h; flag", "mov     edi, 0FFFFFF9Ch; fd", "mov     r15d, 2", "call    _unlinkat", "test    eax, eax", "jnz     loc_4442"], ["mov~rsi,[rsp+0]", "mov~edx,<STR>", "mov~edi,0", "mov~r15d,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 38, 0, 1, 5, 0, 2, 6, -1, 0.0029749256268593286, ["call    ___errno_location", "mov     ebx, [rax]", "mov     rax, [rsp+328h+x]", "cmp     byte ptr [rax], 0", "jz      short loc_3DF3"], ["call~FOO", "mov~ebx,<TAG>", "mov~rax,[rsp+0]", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 36, 0, 0, 2, 0, 1, 8, -1, 9.106915184263251e-05, ["cmp     ebx, 14h", "jz      loc_3836"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 2, 0, 2, 9, 0, 2, 31, -1, 0.00015178191973772083, ["mov     r14, [rsp+328h+ptr]", "mov     rdi, [rsp+328h+ds_0]; ds_0", "mov     rsi, r14; filename", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "lea     rsi, aFatalCannotOpe; \"FATAL: cannot open .. from %s\"", "mov     rbx, rax", "mov     edx, 5; category"], ["mov~r14,[rsp+0]", "mov~rdi,[rsp+0]", "mov~rsi,r14", "call~FOO", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0"]], [1, 0, 146, 0, 1, 8, 3, 1, 30, -1, 0.007558739602938498, ["xor     edx, edx; oflag", "mov     rsi, rax; file", "mov     edi, 0FFFFFF9Ch; fd", "xor     eax, eax", "call    _openat", "test    eax, eax", "mov     r13d, eax", "jns     loc_3D04"], ["xor~edx,edx", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "test~eax,eax", "mov~r13d,eax", "jns~FOO"]], [4, 0, 146, 0, 1, 16, 0, 2, 31, -1, 0.049389836682654356, ["lea     rax, [rsp+328h+is_empty]", "mov     [rsp+328h+var_28C], 4", "mov     [rsp+328h+var_138], 0FFFFFFFFFFFFFFFFh", "mov     rsi, r14; ds_0", "mov     edi, r13d; fd_cwd", "push    rax; is_empty", "push    3; mode", "mov     r9, [rsp+338h+x]; x", "mov     r8, [rsp+338h+sbuf]; sbuf", "mov     rcx, [rsp+338h+pdirent_type]; pdirent_type", "mov     rdx, [rsp+338h+ptr]; filename", "call    prompt", "cmp     eax, 2", "pop     rdx", "pop     rcx", "jnz     loc_4418"], ["lea~rax,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~rsi,r14", "mov~edi,r13d", "push~rax", "push~0", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "call~FOO", "cmp~eax,0", "pop~rdx", "pop~rcx", "jnz~FOO"]], [1, 0, 146, 0, 0, 2, 0, 1, 32, -1, 0.07874445995992957, ["cmp     ebp, 2", "jz      loc_3FC7"], ["cmp~ebp,0", "jz~FOO"]], [1, 0, 146, 0, 0, 1, 0, 0, 30, -1, 0.03776334163074494, ["mov     r13d, 0FFFFFF9Ch"], ["mov~r13d,0"]], [1, 0, 146, 0, 0, 1, 0, 0, 17, -1, 0.002140125068301864, ["mov     ebp, 2"], ["mov~ebp,0"]], [1, 0, 146, 0, 0, 2, 0, 1, 16, -1, 0.0036124096897577557, ["cmp     ebp, 3", "jz      loc_3F1E"], ["cmp~ebp,0", "jz~FOO"]], [0, 1, 165, 0, 1, 6, 0, 2, 3, 8, 0.0, ["mov     rbx, [rsp+328h+ds_0]", "mov     esi, 20h ; ' '; int", "lea     rdi, [rbx+0B0h]; struct obstack *", "call    __obstack_newchunk", "mov     rax, [rbx+0C8h]", "jmp     loc_35D8"], ["mov~rbx,[rsp+0]", "mov~esi,<STR>", "lea~rdi,[rbx+0]", "call~FOO", "mov~rax,[rbx+0]", "jmp~FOO"]], [1, 0, 166, 1, 0, 8, 0, 1, 2, 8, 0.039675793819440225, ["mov     rcx, [rsp+328h+ds_0]", "mov     rax, [rcx+0C8h]", "mov     rcx, [rcx+0D0h]", "mov     rdx, rcx", "mov     [rsp+328h+var_2D0], rcx", "sub     rdx, rax", "cmp     rdx, 1Fh", "jle     loc_37FB"], ["mov~rcx,[rsp+0]", "mov~rax,[rcx+0]", "mov~rcx,[rcx+0]", "mov~rdx,rcx", "mov~[rsp+0],rcx", "sub~rdx,rax", "cmp~rdx,0", "jle~FOO"]], [1, 0, 146, 0, 0, 3, 0, 0, 16, -1, 0.21191791633780582, ["mov     rsi, [rcx+rsi*8-8]", "cmp     rsi, 1", "jbe     loc_4640"], ["mov~rsi,[rcx+0]", "cmp~rsi,0", "jbe~FOO"]], [0, 0, 32, 0, 0, 2, 0, 1, 8, -1, 0.0019428085726428267, ["mov     rbx, [rsp+328h+ds_0]", "jmp     loc_3850"], ["mov~rbx,[rsp+0]", "jmp~FOO"]], [1, 0, 146, 0, 0, 6, 2, 1, 11, -1, 0.006648048084512173, ["xor     edx, edx", "cmp     byte ptr [rax+14h], 2Eh ; '.'", "setz    dl", "movzx   edx, byte ptr [rax+rdx+14h]", "test    dl, dl", "jz      short loc_39F0"], ["xor~edx,edx", "cmp~[yte ptr [rax+0],0", "setz~dl", "movzx~edx,[yte ptr [rax+0]", "test~dl,dl", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 16, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___6527; \"pop_dir\"", "lea     rsi, aRemoveC; \"remove.c\"", "lea     rdi, aNLengths0; \"n_lengths > 0\"", "mov     edx, 10Ch; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 146, 0, 0, 2, 0, 1, 12, -1, 0.0008803351344787809, ["cmp     dl, 2Fh ; '/'", "jz      short loc_39F0"], ["cmp~dl,0", "jz~FOO"]], [0, 0, 146, 0, 0, 3, 1, 1, 10, -1, 0.16582174731346, ["mov     eax, [r12]", "test    eax, eax", "jnz     short loc_3E34"], ["mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [5, 0, 164, 0, 1, 17, 1, 2, 3, 7, 0.04914698561107401, ["mov     rsi, [rsp+328h+ds_0]; ds_0", "lea     rdx, [rax+20h]", "mov     r9, [rsp+328h+x]; x", "lea     r8, [rsp+328h+st]; st", "xor     ecx, ecx; dirent_type_arg", "mov     edi, 0FFFFFF9Ch; fd_cwd", "mov     [rsi+0C8h], rdx", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     qword ptr [rax], 0", "mov     [rax+18h], rdx", "mov     [rax+10h], rdx", "mov     rdx, [rsp+328h+filename]; filename", "mov     dword ptr [rax+8], 2", "call    remove_entry", "cmp     eax, 5", "mov     r15d, eax", "jz      loc_381D"], ["mov~rsi,[rsp+0]", "lea~rdx,[rax+0]", "mov~r9,[rsp+0]", "lea~r8,[rsp+0]", "xor~ecx,ecx", "mov~edi,0", "mov~[rsi+0],rdx", "mov~rdx,0", "mov~<TAG>,0", "mov~[rax+0],rdx", "mov~[rax+0],rdx", "mov~rdx,[rsp+0]", "mov~[word ptr [rax+0],0", "call~FOO", "cmp~eax,0", "mov~r15d,eax", "jz~FOO"]], [0, 0, 1, 0, 2, 8, 3, 2, 29, -1, 0.0031874203144921375, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     esi, [r12]; errnum", "mov     rdx, rax; format", "mov     rcx, rbx", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["xor~edi,edi", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rax", "mov~rcx,rbx", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [1, 0, 2, 0, 2, 10, 0, 3, 28, -1, 0.006223058709246554, ["mov     r14, [rsp+328h+ptr]", "mov     rdi, [rsp+328h+ds_0]; ds_0", "mov     rsi, r14; filename", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "mov     edx, 5", "mov     rbx, rax", "lea     rsi, aFatalFailedToC; \"FATAL: failed to close directory %s\"", "jmp     loc_4215"], ["mov~r14,[rsp+0]", "mov~rdi,[rsp+0]", "mov~rsi,r14", "call~FOO", "mov~rdi,rax", "call~FOO", "mov~edx,0", "mov~rbx,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 34, 0, 1, 6, 0, 2, 32, -1, 0.016210309027988586, ["mov     r14, [rsp+328h+ptr]", "mov     ebx, eax", "mov     rdi, r14; ptr", "call    free", "cmp     r13d, 0FFFFFF9Ch", "jz      short loc_4435"], ["mov~r14,[rsp+0]", "mov~ebx,eax", "mov~rdi,r14", "call~FOO", "cmp~r13d,0", "jz~FOO"]], [0, 0, 146, 1, 0, 5, 0, 1, 17, -1, 0.2098536822293728, ["mov     rdx, [r14+18h]", "mov     ecx, edx", "sub     ecx, [r14+10h]", "cmp     rsi, rcx", "ja      loc_4621"], ["mov~rdx,[r14+0]", "mov~ecx,edx", "sub~ecx,[r14+0]", "cmp~rsi,rcx", "ja~FOO"]], [0, 1, 146, 0, 1, 6, 1, 2, 32, -1, 0.03111529354623277, ["mov     rsi, [rsp+328h+ptr]; name", "mov     edx, 200h; flag", "mov     edi, r13d; fd", "call    _unlinkat", "test    eax, eax", "jnz     loc_4250"], ["mov~rsi,[rsp+0]", "mov~edx,<STR>", "mov~edi,r13d", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 146, 0, 0, 2, 0, 1, 11, -1, 0.004204359176734867, ["cmp     [rsp+328h+var_2F0], 9", "ja      loc_41A2"], ["cmp~[rsp+0],0", "ja~FOO"]], [0, 0, 163, 0, 1, 5, 1, 2, 4, 6, 0.0447453099386801, ["mov     status, [rsp+328h+ds_0]", "lea     rdi, [rax+128h]; env", "call    __setjmp", "test    eax, eax", "jz      loc_3908"], ["mov~status,[rsp+0]", "lea~rdi,[rax+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 146, 0, 0, 5, 1, 1, 11, -1, 0.08000424989375265, ["mov     r13, rax", "mov     rax, [r14+0C8h]", "mov     rdi, [rax-20h]; table", "test    rdi, rdi", "jz      short loc_3A42"], ["mov~r13,rax", "mov~rax,[r14+0]", "mov~rdi,[rax-20h]+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 146, 0, 0, 2, 1, 1, 11, -1, 0.16292271264646954, ["xor     r13d, r13d", "jmp     loc_3AC0"], ["xor~r13d,r13d", "jmp~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 18, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___6527; \"pop_dir\"", "lea     rsi, aRemoveC; \"remove.c\"", "lea     rdi, aObstackObjectS_0; \"obstack_object_size (&ds->dir_stack) >=\"...", "mov     edx, 111h; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 146, 0, 0, 3, 0, 1, 33, -1, 0.016134418068119726, ["mov     rax, [rsp+328h+x]", "cmp     byte ptr [rax+19h], 0", "jnz     loc_42C7"], ["mov~rax,[rsp+0]", "cmp~[yte ptr [rax+0],0", "jnz~FOO"]], [1, 0, 146, 0, 0, 2, 0, 1, 13, -1, 0.22600327848946633, ["cmp     ebp, 2", "jz      short loc_3B07"], ["cmp~ebp,0", "jz~FOO"]], [0, 0, 146, 0, 1, 2, 0, 1, 16, -1, 0.013053245097443992, ["mov     rdi, r14; ds_0", "call    AD_mark_current_as_unremovable"], ["mov~rdi,r14", "call~FOO"]], [0, 0, 28, 0, 0, 5, 0, 1, 4, -1, 0.10815979600509987, ["mov     rax, [rsp+328h+ds_0]", "mov     rsi, [rax+10h]; block", "mov     rdx, [rax+18h]", "cmp     rsi, rdx", "jz      loc_387B"], ["mov~rax,[rsp+0]", "mov~rsi,[rax+0]", "mov~rdx,[rax+0]", "cmp~rsi,rdx", "jz~FOO"]], [0, 0, 29, 0, 0, 1, 0, 1, 7, -1, 0.10211887559953858, ["jmp     loc_362F"], ["jmp~FOO"]], [0, 0, 146, 0, 1, 4, 1, 2, 12, -1, 0.003688300649626616, ["mov     rsi, r15; entry", "call    hash_lookup", "test    rax, rax", "jnz     short loc_39E0"], ["mov~rsi,r15", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 146, 1, 0, 6, 0, 1, 18, -1, 0.20778944812093983, ["mov     rcx, [r14+20h]", "neg     esi; int", "movsxd  r8, esi", "sub     rcx, rdx", "cmp     rcx, r8", "jl      loc_40A7"], ["mov~rcx,[r14+0]", "neg~esi", "movsxd~r8,esi", "sub~rcx,rdx", "cmp~rcx,r8", "jl~FOO"]], [1, 0, 146, 0, 0, 2, 0, 1, 13, -1, 0.04699168235079837, ["cmp     eax, 5", "jnz     loc_3F38"], ["cmp~eax,0", "jnz~FOO"]], [2, 0, 146, 0, 2, 14, 0, 3, 12, -1, 0.07507133750227672, ["mov     [rsp+328h+var_1C8], 0FFFFFFFFFFFFFFFFh", "movzx   r13d, byte ptr [r13+12h]", "mov     rdi, rbx; dirp", "call    _dirfd", "mov     r9, [rsp+328h+x]; x", "mov     r8, [rsp+328h+subdir_sb]; st", "mov     rdx, r15; filename", "mov     rsi, r14; ds_0", "mov     edi, eax; fd_cwd", "mov     ecx, r13d; dirent_type_arg", "call    remove_entry", "cmp     eax, 4", "mov     r13d, eax", "ja      loc_3E40"], ["mov~[rsp+0],0", "movzx~r13d,[yte ptr [r13+0]", "mov~rdi,rbx", "call~FOO", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "mov~rdx,r15", "mov~rsi,r14", "mov~edi,eax", "mov~ecx,r13d", "call~FOO", "cmp~eax,0", "mov~r13d,eax", "ja~FOO"]], [2, 0, 0, 1, 2, 6, 0, 2, 30, -1, 0.0, ["mov     rdi, r14; ptr", "call    free", "mov     rdi, [rsp+328h+ds_0]", "mov     esi, 1", "add     rdi, 128h", "call    ___longjmp_chk"], ["mov~rdi,r14", "call~FOO", "mov~rdi,[rsp+0]", "mov~esi,0", "add~rdi,0", "call~FOO"]], [0, 0, 1, 0, 1, 3, 0, 2, 31, -1, 0.00018213830368526501, ["mov     edi, r13d; fd", "call    _close", "jmp     loc_422F"], ["mov~edi,r13d", "call~FOO", "jmp~FOO"]], [0, 0, 146, 1, 0, 2, 0, 0, 19, -1, 0.10126889684900735, ["add     rdx, r8", "mov     [r14+18h], rdx"], ["add~rdx,r8", "mov~[r14+0],rdx"]], [0, 0, 32, 0, 1, 2, 0, 1, 7, -1, 0.0, ["mov     rdi, rbx; ds_0", "call    AD_stack_pop"], ["mov~rdi,rbx", "call~FOO"]], [1, 0, 32, 1, 0, 4, 0, 1, 6, -1, 0.10885799283589338, ["mov     rax, [rbx+0C8h]", "sub     rax, [rbx+0C0h]", "cmp     eax, 1Fh", "ja      short loc_3848"], ["mov~rax,[rbx+0]", "sub~rax,[rbx+0]", "cmp~eax,0", "ja~FOO"]], [2, 0, 37, 0, 1, 14, 1, 2, 9, 1, 0.0049480905834497, ["mov     status, [rsp+328h+filename]", "mov     r14, [rsp+328h+ds_0]", "mov     rsi, r15; filename", "mov     rdi, r14; ds_0", "call    full_filename_", "lea     rdx, filename; \"/\"", "mov     rsi, rax", "mov     ecx, 2", "mov     rdi, rdx", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     loc_4697"], ["mov~status,[rsp+0]", "mov~r14,[rsp+0]", "mov~rsi,r15", "mov~rdi,r14", "call~FOO", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~ecx,0", "mov~rdi,rdx", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [0, 0, 153, 0, 0, 3, 0, 1, 8, 2, 0.004280250136603728, ["mov     rax, [rax+8]", "cmp     [rsp+328h+st.st_dev], rax", "jnz     loc_3959"], ["mov~rax,[rax+0]", "cmp~[rsp+0],rax", "jnz~FOO"]], [1, 0, 146, 0, 1, 4, 0, 2, 34, -1, 0.03585088944204966, ["mov     rdi, [rsp+328h+ptr]; ptr", "call    free", "cmp     r13d, 0FFFFFF9Ch", "jnz     loc_3D58"], ["mov~rdi,[rsp+0]", "call~FOO", "cmp~r13d,0", "jnz~FOO"]], [3, 0, 146, 0, 6, 27, 3, 7, 33, -1, 0.012946997753627587, ["mov     r15, [rsp+328h+ptr]", "mov     rdi, r14; ds_0", "mov     rsi, r15; filename", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "lea     rsi, aCannotRemoveDi; \"cannot remove directory %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbx, rax", "call    _dcgettext", "mov     esi, [r12]; errnum", "mov     rdx, rax; format", "mov     rcx, rbx", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     rdi, r15; string", "call    xstrdup", "mov     rcx, [r14+0C8h]", "mov     rsi, rax; filename", "lea     rdi, [rcx-20h]; ht", "call    AD_mark_helper", "mov     rax, [r14+0C8h]", "mov     [rsp+328h+var_2E4], 4", "mov     dword ptr [rax-18h], 4", "jmp     loc_4042"], ["mov~r15,[rsp+0]", "mov~rdi,r14", "mov~rsi,r15", "call~FOO", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbx,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rax", "mov~rcx,rbx", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~rdi,r15", "call~FOO", "mov~rcx,[r14+0]", "mov~rsi,rax", "lea~rdi,[rcx-20h]+0]", "call~FOO", "mov~rax,[r14+0]", "mov~[rsp+0],0", "mov~[word ptr [rax-18h]+0],0", "jmp~FOO"]], [2, 0, 146, 0, 4, 16, 2, 5, 34, -1, 0.0, ["mov     rsi, [rsp+328h+ptr]; filename", "mov     rdi, r14; ds_0", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "lea     rsi, aRemovedDirecto; \"removed directory: %s\\n\"", "mov     rbx, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rdx, rbx", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_4042"], ["mov~rsi,[rsp+0]", "mov~rdi,r14", "call~FOO", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rdx,rbx", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 33, 0, 0, 1, 0, 0, 35, -1, 0.0053123671908202295, ["mov     r15d, [rsp+328h+var_2E4]"], ["mov~r15d,[rsp+0]"]], [1, 0, 146, 1, 0, 4, 0, 1, 20, -1, 0.20809301196041527, ["mov     rdx, [r14+78h]", "sub     rdx, rdi", "cmp     rdx, 0FFFFFFFFFFFFFFF8h", "jge     short loc_3C6D"], ["mov~rdx,[r14+0]", "sub~rdx,rdi", "cmp~rdx,0", "jge~FOO"]], [1, 0, 146, 2, 1, 11, 0, 2, 19, -1, 0.10448667354744702, ["mov     rdi, r14; struct obstack *", "mov     [rsp+328h+var_2B8], r8", "call    __obstack_newchunk", "mov     rax, [r14+70h]", "mov     r8, [rsp+328h+var_2B8]", "add     [r14+18h], r8", "mov     rdx, rax", "sub     rdx, [r14+68h]", "mov     rdi, rax", "cmp     edx, 7", "ja      loc_3C4E"], ["mov~rdi,r14", "mov~[rsp+0],r8", "call~FOO", "mov~rax,[r14+0]", "mov~r8,[rsp+0]", "add~[r14+0],r8", "mov~rdx,rax", "sub~rdx,[r14+0]", "mov~rdi,rax", "cmp~edx,0", "ja~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 17, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___6527; \"pop_dir\"", "lea     rsi, aRemoveC; \"remove.c\"", "lea     rdi, aTopLen2; \"top_len >= 2\"", "mov     edx, 10Eh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 32, 0, 0, 3, 0, 1, 5, -1, 0.013630016392447332, ["mov     r15d, 4", "mov     rbx, [rsp+328h+ds_0]", "jmp     short loc_3850"], ["mov~r15d,0", "mov~rbx,[rsp+0]", "jmp~FOO"]], [0, 0, 32, 0, 1, 4, 0, 2, 31, -1, 0.08062655576467731, ["mov     rbx, [rsp+328h+ds_0]", "mov     rdi, rbx; ds_0", "call    AD_stack_pop", "jmp     loc_3850"], ["mov~rbx,[rsp+0]", "mov~rdi,rbx", "call~FOO", "jmp~FOO"]], [0, 0, 32, 0, 0, 3, 0, 1, 33, -1, 0.011656851435856961, ["mov     r15d, ebx", "mov     rbx, [rsp+328h+ds_0]", "jmp     loc_3850"], ["mov~r15d,ebx", "mov~rbx,[rsp+0]", "jmp~FOO"]], [0, 0, 33, 0, 1, 5, 0, 2, 30, -1, 0.07661951308360147, ["mov     r14, [rsp+328h+ptr]", "mov     r15d, [rsp+328h+var_2E4]", "mov     rdi, r14; ptr", "call    free", "jmp     loc_405B"], ["mov~r14,[rsp+0]", "mov~r15d,[rsp+0]", "mov~rdi,r14", "call~FOO", "jmp~FOO"]], [1, 0, 146, 0, 1, 4, 0, 1, 21, -1, 0.0, ["lea     rdi, [r14+58h]; struct obstack *", "mov     esi, 0FFFFFFF8h; int", "call    __obstack_newchunk", "mov     rax, [r14+70h]"], ["lea~rdi,[r14+0]", "mov~esi,0", "call~FOO", "mov~rax,[r14+0]"]], [0, 0, 146, 0, 2, 10, 1, 3, 14, -1, 0.02556007528383219, ["mov     r13d, [r12]", "mov     rdi, rbx; dirp", "call    _dirfd", "mov     rcx, [rsp+328h+subdir_sb]; subdir_sb", "mov     rsi, r15; f", "mov     edi, eax; fd_cwd", "mov     edx, r13d; prev_errno", "call    fd_to_subdirp", "test    rax, rax", "jz      loc_40F8"], ["mov~r13d,<TAG>", "mov~rdi,rbx", "call~FOO", "mov~rcx,[rsp+0]", "mov~rsi,r15", "mov~edi,eax", "mov~edx,r13d", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 33, 0, 4, 17, 4, 5, 12, -1, 0.0, ["mov     rdi, [rsp+328h+ds_0]; ds_0", "lea     rsi, asc_A85B+1; filename", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "lea     rsi, aFailedToCloseD; \"failed to close directory %s\"", "mov     rbx, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_3836"], ["mov~rdi,[rsp+0]", "lea~rsi,<TAG>", "call~FOO", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 34, 0, 3, 13, 5, 4, 11, -1, 0.006587335316617084, ["lea     rsi, aUseNoPreserveR; \"use --no-preserve-root to override this\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     rdi, rbx; dirp", "call    _closedir", "test    eax, eax", "jz      loc_3836"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 3, 0, 0, 3, 0, 1, 17, -1, 4.5534575921316254e-05, ["mov     [rdi+0C0h], rsi", "mov     [rdi+0C8h], rsi", "jmp     loc_37CF"], ["mov~[rdi+0],rsi", "mov~[rdi+0],rsi", "jmp~FOO"]], [0, 0, 5, 0, 0, 2, 0, 0, 16, -1, 0.004583813976079169, ["cmp     rsi, rcx", "jb      loc_3868"], ["cmp~rsi,rcx", "jb~FOO"]], [0, 0, 26, 3, 0, 16, 1, 1, 5, -1, 0.10196709367980086, ["mov     rbx, [rsp+328h+ds_0]", "movsxd  rax, dword ptr [rbx+30h]", "mov     rcx, rax", "add     rax, rdx", "mov     rdx, [rbx+20h]", "not     ecx", "movsxd  rcx, ecx", "and     rax, rcx", "mov     rcx, [rbx+8]", "mov     rdi, rdx", "mov     r8, rax", "mov     [rbx+18h], rax", "sub     r8, rcx", "sub     rdi, rcx", "cmp     r8, rdi", "jle     short loc_3680"], ["mov~rbx,[rsp+0]", "movsxd~rax,[word ptr [rbx+0]", "mov~rcx,rax", "add~rax,rdx", "mov~rdx,[rbx+0]", "not~ecx", "movsxd~rcx,ecx", "and~rax,rcx", "mov~rcx,[rbx+0]", "mov~rdi,rdx", "mov~r8,rax", "mov~[rbx+0],rax", "sub~r8,rcx", "sub~rdi,rcx", "cmp~r8,rdi", "jle~FOO"]], [1, 0, 27, 0, 0, 2, 1, 1, 5, -1, 0.0, ["or      byte ptr [rax+50h], 2", "jmp     loc_3645"], ["or~[yte ptr [rax+0],0", "jmp~FOO"]], [0, 0, 146, 0, 0, 3, 0, 1, 23, -1, 0.0031874203144921375, ["mov     rax, [rsp+328h+var_2C8]", "cmp     rax, [r14+110h]", "jnz     loc_3C9C"], ["mov~rax,[rsp+0]", "cmp~rax,[r14+0]", "jnz~FOO"]], [0, 0, 146, 0, 0, 3, 0, 1, 22, -1, 0.2083965757998907, ["mov     rax, [rsp+328h+var_2E0]", "cmp     rax, [r14+108h]", "jz      loc_406D"], ["mov~rax,[rsp+0]", "cmp~rax,[r14+0]", "jz~FOO"]], [0, 0, 25, 0, 0, 2, 0, 0, 6, -1, 0.0, ["mov     [rbx+18h], rdx", "mov     rax, rdx"], ["mov~[rbx+0],rdx", "mov~rax,rdx"]], [1, 0, 33, 0, 4, 17, 3, 5, 8, -1, 3.0356383947544167e-05, ["mov     rsi, [rsp+328h+filename]; filename", "mov     rdi, [rsp+328h+ds_0]; ds_0", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "mov     rbp, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rax; format", "mov     esi, ebx; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_3836"], ["mov~rsi,[rsp+0]", "mov~rdi,[rsp+0]", "call~FOO", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rbp,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rbp", "mov~rdx,rax", "mov~esi,ebx", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 146, 0, 0, 2, 0, 0, 13, -1, 0.026045777426992895, ["cmp     eax, 3", "jnb     loc_3EED"], ["cmp~eax,0", "jnb~FOO"]], [0, 0, 146, 0, 3, 11, 3, 4, 27, -1, 0.09170663590553092, ["call    _dirfd", "lea     rsi, asc_A85B; \"..\"", "xor     edx, edx; oflag", "mov     edi, eax; fd", "xor     eax, eax", "call    _openat", "mov     rdi, rbx; dirp", "mov     r13d, eax", "call    _closedir", "test    eax, eax", "jnz     loc_465F"], ["call~FOO", "lea~rsi,<TAG>", "xor~edx,edx", "mov~edi,eax", "xor~eax,eax", "call~FOO", "mov~rdi,rbx", "mov~r13d,eax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 146, 0, 1, 3, 1, 2, 27, -1, 0.12206301985307509, ["call    _closedir", "test    eax, eax", "jnz     loc_465F"], ["call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 24, 0, 0, 4, 0, 0, 6, -1, 0.09553154028292149, ["mov     rdi, [rsp+328h+ds_0]", "cmp     rsi, rdx", "mov     [rdi+10h], rax", "jnb     short loc_36A0"], ["mov~rdi,[rsp+0]", "cmp~rsi,rdx", "mov~[rdi+0],rax", "jnb~FOO"]], [1, 0, 146, 0, 0, 2, 0, 1, 14, -1, 0.0032987270556331326, ["cmp     eax, 2", "jnz     loc_3F38"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 23, 0, 0, 2, 0, 0, 7, -1, 0.004037399065023374, ["cmp     rsi, rcx", "jbe     short loc_36A0"], ["cmp~rsi,rcx", "jbe~FOO"]], [0, 0, 146, 0, 2, 10, 1, 3, 15, -1, 0.006739117236354805, ["mov     rdi, r15; string", "mov     [rsp+328h+var_2B0], rax", "call    xstrdup", "mov     rdi, rbx; dirp", "mov     r13, rax", "call    _closedir", "mov     rdx, [rsp+328h+var_2B0]", "test    eax, eax", "mov     rbx, rdx", "jz      loc_3A9C"], ["mov~rdi,r15", "mov~[rsp+0],rax", "call~FOO", "mov~rdi,rbx", "mov~r13,rax", "call~FOO", "mov~rdx,[rsp+0]", "test~eax,eax", "mov~rbx,rdx", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 18, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___6787; \"remove_cwd_entries\"", "lea     rsi, aRemoveC; \"remove.c\"", "lea     rdi, assertion; \"VALID_STATUS (status)\"", "mov     edx, 4D1h; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 146, 0, 0, 5, 0, 1, 17, -1, 0.12534150931940988, ["mov     rax, [rsp+328h+var_310]", "mov     ebp, [rax-18h]", "lea     eax, [rbp-2]", "cmp     eax, 2", "ja      loc_44A9"], ["mov~rax,[rsp+0]", "mov~ebp,[rax-18h]+0]", "lea~eax,[rbp-2]+0]", "cmp~eax,0", "ja~FOO"]], [0, 0, 146, 0, 0, 5, 0, 1, 24, -1, 0.0, ["mov     rax, [r15-8]", "mov     [r14+110h], rax", "mov     rax, [r15-10h]", "mov     [r14+108h], rax", "jmp     loc_3C9C"], ["mov~rax,[r15-8]+0]", "mov~[r14+0],rax", "mov~rax,[r15-10h]+0]", "mov~[r14+0],rax", "jmp~FOO"]], [2, 0, 146, 1, 0, 5, 0, 1, 21, -1, 0.21046080990832372, ["sub     rax, 8", "cmp     qword ptr [r14+118h], 0", "mov     r15, [r14+0C8h]", "mov     [r14+70h], rax", "jz      loc_468D"], ["sub~rax,0", "cmp~[word ptr [r14+0],0", "mov~r15,[r14+0]", "mov~[r14+0],rax", "jz~FOO"]], [1, 0, 146, 1, 0, 2, 1, 0, 15, -1, 0.002210956630846133, ["add     [rsp+328h+var_2F0], 1", "xor     r13d, r13d"], ["add~[rsp+0],0", "xor~r13d,r13d"]], [0, 0, 21, 0, 0, 3, 0, 1, 8, -1, 0.00031874203144921374, ["mov     [rdi+10h], rsi", "mov     [rdi+18h], rsi", "jmp     short loc_36AA"], ["mov~[rdi+0],rsi", "mov~[rdi+0],rsi", "jmp~FOO"]], [1, 0, 146, 0, 0, 2, 0, 1, 15, -1, 0.03386254629348552, ["cmp     ebp, 4", "jz      loc_3EE0"], ["cmp~ebp,0", "jz~FOO"]], [1, 0, 146, 0, 0, 3, 1, 1, 15, -1, 0.01713111934106409, ["xor     r13d, r13d", "cmp     ebp, 2", "jnz     loc_3A9C"], ["xor~r13d,r13d", "cmp~ebp,0", "jnz~FOO"]], [0, 0, 146, 0, 0, 2, 1, 1, 14, -1, 0.02166939874122194, ["xor     r13d, r13d", "jmp     loc_3A9C"], ["xor~r13d,r13d", "jmp~FOO"]], [1, 0, 146, 0, 0, 2, 0, 1, 23, -1, 0.21194827272175337, ["cmp     r13d, 4", "jz      loc_3F88"], ["cmp~r13d,0", "jz~FOO"]], [1, 0, 146, 0, 0, 2, 0, 1, 15, -1, 0.0037338352255479323, ["mov     [rsp+328h+var_2E4], 4", "jmp     loc_3AFF"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 146, 0, 0, 2, 0, 1, 14, -1, 0.009501548175581324, ["cmp     ebp, 4", "jz      loc_409A"], ["cmp~ebp,0", "jz~FOO"]], [1, 0, 146, 0, 0, 2, 0, 1, 29, -1, 0.11644708882277942, ["cmp     ebp, 2", "jnz     loc_4309"], ["cmp~ebp,0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 4, -1, 0.00983546839900431, ["mov     rcx, [rsp+328h+var_40]", "xor     rcx, fs:28h", "mov     eax, r15d", "jnz     loc_44A4"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~eax,r15d", "jnz~FOO"]], [0, 0, 21, 0, 1, 2, 0, 1, 7, -1, 0.08446663833404164, ["mov     rdi, [rsp+328h+ds_0]; obstack", "call    _obstack_free"], ["mov~rdi,[rsp+0]", "call~FOO"]], [1, 0, 146, 0, 0, 2, 0, 1, 24, -1, 0.10817497419707364, ["cmp     r13d, 3", "jz      loc_3F78"], ["cmp~r13d,0", "jz~FOO"]], [2, 0, 182, 1, 1, 17, 1, 2, 0, 10, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 2F8h", "mov     [rsp+328h+ds_0], ds_0_0", "mov     ds_0_0, filename_0; name", "mov     [rsp+328h+filename], filename_0", "mov     rax, fs:28h", "mov     [rsp+328h+var_40], rax", "xor     eax, eax", "mov     [rsp+328h+x], x_0", "call    last_component", "cmp     byte ptr [base], 2Eh ; '.'", "jnz     short loc_34D1"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~[rsp+0],ds_0_0", "mov~ds_0_0,filename_0", "mov~[rsp+0],filename_0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~[rsp+0],x_0", "call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 146, 0, 3, 12, 0, 4, 16, -1, 0.019458442110375812, ["mov     rdi, rbx; dirp", "call    _dirfd", "mov     rdx, [rsp+328h+subdir_sb]; dir", "mov     rdi, r14; fd_cwd", "mov     rsi, r13; ds_0", "call    AD_push", "mov     rax, [r14+0C8h]", "mov     rdi, r13; ptr", "mov     dword ptr [rax-18h], 2", "mov     [rsp+328h+var_310], rax", "call    free", "jmp     loc_3D78"], ["mov~rdi,rbx", "call~FOO", "mov~rdx,[rsp+0]", "mov~rdi,r14", "mov~rsi,r13", "call~FOO", "mov~rax,[r14+0]", "mov~rdi,r13", "mov~[word ptr [rax-18h]+0],0", "mov~[rsp+0],rax", "call~FOO", "jmp~FOO"]], [1, 0, 146, 0, 0, 3, 0, 1, 15, -1, 0.026015421043045352, ["mov     rax, [rsp+328h+x]", "cmp     byte ptr [rax+8], 0", "jz      loc_3F40"], ["mov~rax,[rsp+0]", "cmp~[yte ptr [rax+0],0", "jz~FOO"]], [0, 0, 146, 0, 0, 3, 0, 1, 16, -1, 0.006040920405561289, ["mov     rax, [rsp+328h+var_2C0]", "cmp     rax, [rsp+328h+var_1F8]", "jz      loc_3F40"], ["mov~rax,[rsp+0]", "cmp~rax,[rsp+0]", "jz~FOO"]], [0, 0, 146, 0, 0, 2, 1, 1, 17, -1, 0.07042681075830247, ["test    r13, r13", "jz      loc_39E0"], ["test~r13,r13", "jz~FOO"]], [0, 0, 146, 0, 0, 3, 0, 1, 16, -1, 0.04089004917734199, ["mov     rax, [rsp+328h+var_310]", "mov     [rax-18h], ebp", "jmp     loc_3AB3"], ["mov~rax,[rsp+0]", "mov~[rax-18h]+0],ebp", "jmp~FOO"]], [2, 0, 146, 0, 0, 4, 0, 1, 16, -1, 0.020687875660251348, ["mov     rax, [rsp+328h+var_310]", "mov     ebp, 3", "cmp     dword ptr [rax-18h], 2", "jnz     loc_3AB3"], ["mov~rax,[rsp+0]", "mov~ebp,0", "cmp~[word ptr [rax-18h]+0],0", "jnz~FOO"]], [0, 0, 20, 0, 0, 5, 0, 1, 8, -1, 0.0819318802744217, ["mov     rax, [rsp+328h+ds_0]", "mov     rsi, [rax+68h]; block", "mov     rdx, [rax+70h]", "cmp     rsi, rdx", "jz      loc_38EB"], ["mov~rax,[rsp+0]", "mov~rsi,[rax+0]", "mov~rdx,[rax+0]", "cmp~rsi,rdx", "jz~FOO"]], [0, 0, 146, 0, 0, 1, 0, 0, 18, -1, 0.059559225305081655, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 146, 0, 1, 5, 1, 2, 29, -1, 0.009622973711371502, ["lea     rsi, asc_A85B+1; filename", "mov     rdi, r14; ds_0", "call    full_filename0", "test    rax, rax", "jz      loc_4692"], ["lea~rsi,<TAG>", "mov~rdi,r14", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 146, 0, 0, 2, 1, 1, 28, -1, 0.08815493898366826, ["test    r13d, r13d", "js      loc_41B8"], ["test~r13d,r13d", "js~FOO"]], [1, 0, 146, 1, 0, 5, 1, 1, 25, -1, 0.21786776759152449, ["mov     rax, r15", "sub     rax, [r14+0C0h]", "shr     eax, 5", "test    eax, eax", "jz      loc_44C8"], ["mov~rax,r15", "sub~rax,[r14+0]", "shr~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 146, 0, 0, 2, 0, 1, 25, -1, 0.003217776698439682, ["cmp     dword ptr [r15-18h], 2", "jnz     loc_3CB0"], ["cmp~[word ptr [r15-18h]+0],0", "jnz~FOO"]], [0, 0, 146, 0, 0, 2, 0, 1, 24, -1, 0.10620180924048327, ["mov     [r15-18h], r13d", "jmp     loc_3CB0"], ["mov~[r15-18h]+0],r13d", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 22, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 181, 0, 0, 7, 2, 1, 1, 11, 0.00018213830368526501, ["mov     rbx, base", "xor     eax, eax", "cmp     byte ptr [base+1], 2Eh ; '.'", "setz    al", "movzx   eax, byte ptr [base+rax+1]", "test    al, al", "jz      loc_3884"], ["mov~rbx,base", "xor~eax,eax", "cmp~[yte ptr [base+0],0", "setz~al", "movzx~eax,[yte ptr [base+0]", "test~al,al", "jz~FOO"]], [1, 0, 180, 0, 0, 2, 0, 1, 2, 10, 0.0053123671908202295, ["cmp     al, 2Fh ; '/'", "jz      loc_3884"], ["cmp~al,0", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 29, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___6820; \"remove_dir\"", "lea     rsi, aRemoveC; \"remove.c\"", "lea     rdi, aFdAtFdcwdAdSta; \"fd != AT_FDCWD || AD_stack_height (ds) \"...", "mov     edx, 5BBh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [2, 0, 146, 1, 0, 5, 0, 1, 28, -1, 0.11851132293121243, ["mov     rax, [r14+0C8h]", "sub     rax, [r14+0C0h]", "shr     eax, 5", "cmp     eax, 1", "jnz     loc_4485"], ["mov~rax,[r14+0]", "sub~rax,[r14+0]", "shr~eax,0", "cmp~eax,0", "jnz~FOO"]], [1, 0, 146, 0, 2, 8, 2, 3, 12, -1, 0.2280675125978993, ["mov     rdi, rbx; dirp", "call    _dirfd", "mov     esi, 1; cmd", "mov     edi, eax; fd", "xor     eax, eax", "call    _fcntl", "test    eax, eax", "js      loc_45E3"], ["mov~rdi,rbx", "call~FOO", "mov~esi,0", "mov~edi,eax", "xor~eax,eax", "call~FOO", "test~eax,eax", "js~FOO"]], [2, 0, 4, 0, 4, 24, 5, 5, 2, -1, 0.00036427660737053003, ["mov     r14, [rsp+328h+filename]", "mov     edi, 1; n", "mov     rsi, r14; name", "call    quote_n", "mov     rsi, base; name", "xor     edi, edi; n", "mov     r12, rax", "call    quote_n", "lea     rsi, aCannotRemoveSD; \"cannot remove %s directory %s\"", "mov     rbp, rax", "lea     rax, aCannotRemoveDi; \"cannot remove directory %s\"", "cmp     r14, base", "mov     edx, 5; category", "cmovz   rsi, rax; msgid", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, r12", "mov     rdx, rax; format", "mov     rcx, rbp", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_356C"], ["mov~r14,[rsp+0]", "mov~edi,0", "mov~rsi,r14", "call~FOO", "mov~rsi,base", "xor~edi,edi", "mov~r12,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rbp,rax", "lea~rax,<TAG>", "cmp~r14,base", "mov~edx,0", "cmovz~rsi,rax", "xor~edi,edi", "call~FOO", "mov~r8,r12", "mov~rdx,rax", "mov~rcx,rbp", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 26, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___6655; \"AD_pop_and_chdir\"", "lea     rsi, aRemoveC; \"remove.c\"", "lea     rdi, a0AdStackHeight+4; assertion", "mov     edx, 20Fh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 146, 0, 0, 1, 0, 1, 17, -1, 6.0712767895088334e-05, ["jmp     short loc_3EE0"], ["jmp~FOO"]], [2, 0, 146, 0, 4, 18, 4, 4, 16, -1, 0.003809726185416793, ["lea     rsi, asc_A85B+1; filename", "mov     rdi, r14; ds_0", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "lea     rsi, aFailedToCloseD; \"failed to close directory %s\"", "mov     rbp, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "mov     ebp, 4", "call    _error", "nop     dword ptr [rax+rax+00h]"], ["lea~rsi,<TAG>", "mov~rdi,r14", "call~FOO", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rbp,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbp", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "mov~ebp,0", "call~FOO", "nop~[word ptr [rax+0]"]], [2, 0, 35, 0, 5, 23, 5, 6, 10, 0, 0.002519579867646166, ["mov     rsi, rdx; name", "mov     edi, 1; n", "call    quote_n", "mov     rsi, [rsp+328h+filename]; filename", "mov     rdi, [rsp+328h+ds_0]; ds_0", "mov     r12, rax", "call    full_filename_", "xor     edi, edi; n", "mov     rsi, rax; name", "call    quote_n", "lea     rsi, aItIsDangerousT_0; \"it is dangerous to operate recursively \"...", "mov     rbp, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     r8, r12", "mov     rdx, rax; format", "mov     rcx, rbp", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_43A2"], ["mov~rsi,rdx", "mov~edi,0", "call~FOO", "mov~rsi,[rsp+0]", "mov~rdi,[rsp+0]", "mov~r12,rax", "call~FOO", "xor~edi,edi", "mov~rsi,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rbp,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~r8,r12", "mov~rdx,rax", "mov~rcx,rbp", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 20, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___6527; \"pop_dir\"", "lea     rsi, aRemoveC; \"remove.c\"", "lea     rdi, aObstackObjectS; \"obstack_object_size (&ds->len_stack) >=\"...", "mov     edx, 115h; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 19, 0, 0, 2, 1, 1, 9, -1, 0.0, ["or      byte ptr [rax+0A8h], 2", "jmp     loc_36C0"], ["or~[yte ptr [rax+0],0", "jmp~FOO"]], [0, 0, 18, 3, 0, 16, 1, 1, 9, -1, 0.07476777366280128, ["mov     rbx, [rsp+328h+ds_0]", "movsxd  rax, dword ptr [rbx+88h]", "mov     rcx, rax", "add     rax, rdx", "mov     rdx, [rbx+78h]", "not     ecx", "movsxd  rcx, ecx", "and     rax, rcx", "mov     rcx, [rbx+60h]", "mov     rdi, rdx", "mov     r8, rax", "mov     [rbx+70h], rax", "sub     r8, rcx", "sub     rdi, rcx", "cmp     r8, rdi", "jle     short loc_36FE"], ["mov~rbx,[rsp+0]", "movsxd~rax,[word ptr [rbx+0]", "mov~rcx,rax", "add~rax,rdx", "mov~rdx,[rbx+0]", "not~ecx", "movsxd~rcx,ecx", "and~rax,rcx", "mov~rcx,[rbx+0]", "mov~rdi,rdx", "mov~r8,rax", "mov~[rbx+0],rax", "sub~r8,rcx", "sub~rdi,rcx", "cmp~r8,rdi", "jle~FOO"]], [2, 0, 178, 0, 1, 7, 0, 2, 1, 9, 0.015846032420618054, ["mov     rax, [rsp+328h+ds_0]", "mov     [rsp+328h+st.st_size], 0FFFFFFFFFFFFFFFFh", "lea     rdi, [rax+108h]; state", "call    cycle_check_init", "mov     r14, [rsp+328h+x]", "cmp     qword ptr [r14+10h], 0", "jz      loc_35B0"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "lea~rdi,[rax+0]", "call~FOO", "mov~r14,[rsp+0]", "cmp~[word ptr [r14+0],0", "jz~FOO"]], [2, 0, 146, 0, 0, 5, 0, 0, 15, -1, 0.0037338352255479323, ["mov     ecx, [rsp+328h+var_2E4]", "mov     eax, 3", "cmp     ecx, 2", "cmovnz  eax, ecx", "mov     [rsp+328h+var_2E4], eax"], ["mov~ecx,[rsp+0]", "mov~eax,0", "cmp~ecx,0", "cmovnz~eax,ecx", "mov~[rsp+0],eax"]], [1, 0, 9, 0, 0, 3, 1, 1, 14, -1, 0.0, ["mov     rcx, [rsp+328h+ds_0]", "or      byte ptr [rcx+100h], 2", "jmp     loc_375A"], ["mov~rcx,[rsp+0]", "or~[yte ptr [rcx+0],0", "jmp~FOO"]], [0, 0, 10, 0, 0, 2, 0, 1, 13, -1, 0.043682836500516055, ["cmp     rax, rsi", "jz      loc_38F7"], ["cmp~rax,rsi", "jz~FOO"]], [1, 0, 146, 0, 0, 4, 0, 1, 15, -1, 0.016787080322991924, ["mov     rax, [rsp+328h+x]", "mov     r13d, [r12]", "cmp     byte ptr [rax], 0", "jz      short loc_4112"], ["mov~rax,[rsp+0]", "mov~r13d,<TAG>", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 16, 0, 0, 4, 0, 0, 10, -1, 0.0673608159796005, ["mov     rbx, [rsp+328h+ds_0]", "cmp     rsi, rdx", "mov     [rbx+68h], rax", "jnb     short loc_3720"], ["mov~rbx,[rsp+0]", "cmp~rsi,rdx", "mov~[rbx+0],rax", "jnb~FOO"]], [0, 0, 17, 0, 0, 2, 0, 0, 10, -1, 0.0, ["mov     [rbx+70h], rdx", "mov     rax, rdx"], ["mov~[rbx+0],rdx", "mov~rax,rdx"]], [1, 0, 146, 0, 2, 8, 0, 3, 14, -1, 0.020713172646874303, ["mov     rdi, r15; string", "call    xstrdup", "mov     rcx, [r14+0C8h]", "mov     rsi, rax; filename", "lea     rdi, [rcx-20h]; ht", "call    AD_mark_helper", "cmp     r13d, 4", "jz      loc_418C"], ["mov~rdi,r15", "call~FOO", "mov~rcx,[r14+0]", "mov~rsi,rax", "lea~rdi,[rcx-20h]+0]", "call~FOO", "cmp~r13d,0", "jz~FOO"]], [1, 0, 146, 0, 1, 4, 0, 2, 12, -1, 0.002049055916459231, ["mov     rdi, rbx; dirp", "call    _rewinddir", "mov     [rsp+328h+var_2F0], 0", "jmp     loc_39E0"], ["mov~rdi,rbx", "call~FOO", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 15, 0, 0, 2, 0, 0, 11, -1, 0.004280250136603728, ["cmp     rsi, rcx", "jbe     short loc_3720"], ["cmp~rsi,rcx", "jbe~FOO"]], [1, 0, 146, 0, 0, 2, 0, 1, 17, -1, 0.00218565964422318, ["cmp     r13d, 14h", "jz      short loc_4171"], ["cmp~r13d,0", "jz~FOO"]], [1, 0, 146, 0, 0, 2, 0, 1, 16, -1, 0.006374840628984275, ["cmp     r13d, 2", "jz      short loc_4171"], ["cmp~r13d,0", "jz~FOO"]], [1, 0, 177, 0, 1, 6, 1, 2, 2, 10, 0.0012142553579017666, ["mov     rsi, [rsp+328h+filename]; file", "lea     rdx, [rsp+328h+st]; st", "mov     edi, 0FFFFFF9Ch; fd", "call    cache_fstatat", "test    eax, eax", "jz      short loc_3580"], ["mov~rsi,[rsp+0]", "lea~rdx,[rsp+0]", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 13, 0, 0, 3, 0, 1, 12, -1, 0.0001973164956590371, ["mov     [rbx+68h], rsi", "mov     [rbx+70h], rsi", "jmp     short loc_3738"], ["mov~[rbx+0],rsi", "mov~[rbx+0],rsi", "jmp~FOO"]], [1, 0, 146, 0, 1, 6, 1, 2, 29, -1, 0.08505858782101876, ["lea     rdx, [rsp+328h+stat_buf]; stat_buf", "mov     esi, r13d; fildes", "mov     edi, 1; ver", "call    ___fxstat", "test    eax, eax", "jnz     loc_459A"], ["lea~rdx,[rsp+0]", "mov~esi,r13d", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 33, 0, 1, 2, 0, 1, 33, -1, 0.0, ["mov     edi, r13d; fd", "call    _close"], ["mov~edi,r13d", "call~FOO"]], [1, 0, 8, 0, 1, 5, 0, 2, 3, -1, 0.0008499787505312367, ["call    ___errno_location", "cmp     byte ptr [r14], 0", "mov     rbx, rax", "mov     eax, [rax]", "jz      short loc_353B"], ["call~FOO", "cmp~<TAG>,0", "mov~rbx,rax", "mov~eax,<TAG>", "jz~FOO"]], [0, 0, 146, 0, 2, 6, 0, 2, 17, -1, 0.006678404468459717, ["mov     rdi, r15; string", "call    xstrdup", "mov     rcx, [r14+0C8h]", "mov     rsi, rax; filename", "lea     rdi, [rcx-20h]; ht", "call    AD_mark_helper"], ["mov~rdi,r15", "call~FOO", "mov~rcx,[r14+0]", "mov~rsi,rax", "lea~rdi,[rcx-20h]+0]", "call~FOO"]], [1, 0, 146, 0, 4, 16, 3, 4, 17, -1, 6.0712767895088334e-05, ["mov     rsi, r15; filename", "mov     rdi, r14; ds_0", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "mov     rbp, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rax; format", "mov     esi, r13d; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rsi,r15", "mov~rdi,r14", "call~FOO", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rbp,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbp", "mov~rdx,rax", "mov~esi,r13d", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 4, -1, 0.0005008803351344788, ["cmp     eax, 2", "jz      loc_38E0"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 146, 0, 0, 3, 0, 1, 30, -1, 0.07974622063019852, ["mov     rax, [r15-10h]", "cmp     [rsp+328h+stat_buf.st_ino], rax", "jnz     loc_4548"], ["mov~rax,[r15-10h]+0]", "cmp~[rsp+0],rax", "jnz~FOO"]], [0, 0, 13, 0, 1, 4, 0, 2, 11, -1, 0.05520308420860907, ["mov     rbx, [rsp+328h+ds_0]", "lea     rdi, [rbx+58h]; obstack", "call    _obstack_free", "jmp     short loc_3738"], ["mov~rbx,[rsp+0]", "lea~rdi,[rbx+0]", "call~FOO", "jmp~FOO"]], [1, 1, 146, 0, 2, 9, 1, 3, 16, -1, 0.014904984518244187, ["mov     rdi, rbx; dirp", "mov     ebp, 2", "call    _dirfd", "mov     edx, 200h; flag", "mov     rsi, r15; name", "mov     edi, eax; fd", "call    _unlinkat", "test    eax, eax", "jz      loc_39E0"], ["mov~rdi,rbx", "mov~ebp,0", "call~FOO", "mov~edx,<STR>", "mov~rsi,r15", "mov~edi,eax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 13, 0, 1, 2, 0, 1, 13, -1, 0.0, ["mov     rdi, rbx; ds_0", "call    AD_stack_pop"], ["mov~rdi,rbx", "call~FOO"]], [1, 0, 13, 1, 0, 6, 0, 1, 12, -1, 0.052152267621880875, ["mov     rax, [rbx+0C8h]", "mov     rsi, [rbx+0C0h]; block", "mov     rdx, rax", "sub     rdx, rsi", "cmp     edx, 1Fh", "ja      short loc_3730"], ["mov~rax,[rbx+0]", "mov~rsi,[rbx+0]", "mov~rdx,rax", "sub~rdx,rsi", "cmp~edx,0", "ja~FOO"]], [1, 0, 162, 0, 1, 10, 2, 2, 5, 5, 0.04699168235079837, ["mov     rax, [rsp+328h+st.st_dev]", "mov     rsi, [rsp+328h+filename]; f", "lea     rcx, [rsp+328h+st]; subdir_sb", "xor     edx, edx; prev_errno", "mov     edi, 0FFFFFF9Ch; fd_cwd", "mov     [rsp+328h+var_2C0], rax", "call    fd_to_subdirp", "test    rax, rax", "mov     rbx, rax", "jz      loc_3DD0"], ["mov~rax,[rsp+0]", "mov~rsi,[rsp+0]", "lea~rcx,[rsp+0]", "xor~edx,edx", "mov~edi,0", "mov~[rsp+0],rax", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 5, -1, 6.0712767895088334e-05, ["cmp     eax, 14h", "jz      loc_38E0"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 146, 0, 0, 3, 0, 1, 31, -1, 0.07765163013781798, ["mov     rax, [r15-8]", "cmp     [rsp+328h+stat_buf.st_dev], rax", "jnz     loc_4548"], ["mov~rax,[r15-8]+0]", "cmp~[rsp+0],rax", "jnz~FOO"]], [3, 0, 0, 1, 6, 23, 3, 6, 35, -1, 0.0, ["mov     r14, [rsp+328h+ds_0]", "lea     rsi, asc_A85B+1; filename", "mov     rdi, r14; ds_0", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "lea     rsi, aFatalCannotRet; \"FATAL: cannot return to .. from %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbx, rax", "call    _dcgettext", "mov     esi, [r12]; errnum", "mov     rdx, rax; format", "mov     rcx, rbx", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     edi, r13d; fd", "call    _close", "mov     rdi, r14", "mov     esi, 1", "add     rdi, 128h", "call    ___longjmp_chk"], ["mov~r14,[rsp+0]", "lea~rsi,<TAG>", "mov~rdi,r14", "call~FOO", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbx,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rax", "mov~rcx,rbx", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~edi,r13d", "call~FOO", "mov~rdi,r14", "mov~esi,0", "add~rdi,0", "call~FOO"]], [0, 0, 146, 0, 1, 5, 1, 2, 34, -1, 0.10236172667111892, ["mov     edi, r13d; fd", "call    _fdopendir", "test    rax, rax", "mov     rbx, rax", "jz      loc_44E7"], ["mov~edi,r13d", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 155, 0, 0, 4, 1, 1, 6, 4, 0.048145224940805045, ["mov     rax, [rsp+328h+x]", "mov     rax, [rax+10h]", "test    rax, rax", "jz      short loc_3959"], ["mov~rax,[rsp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 154, 0, 0, 3, 0, 1, 7, 3, 0.0035516969218626674, ["mov     rcx, [rax]", "cmp     [rsp+328h+st.st_ino], rcx", "jz      loc_4320"], ["mov~rcx,<TAG>", "cmp~[rsp+0],rcx", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 5, -1, 0.00031874203144921374, ["mov     r15d, 2", "jmp     loc_37CF"], ["mov~r15d,0", "jmp~FOO"]], [0, 0, 146, 0, 1, 2, 0, 1, 33, -1, 0.0694857628559286, ["mov     rdi, [rsp+328h+ptr]; ptr", "call    free"], ["mov~rdi,[rsp+0]", "call~FOO"]], [1, 0, 4, 0, 3, 13, 3, 3, 4, -1, 0.0002883856475016696, ["mov     rdi, [rsp+328h+filename]; name", "call    quote", "lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbp, rax", "call    _dcgettext", "mov     esi, [rbx]; errnum", "mov     rdx, rax; format", "mov     rcx, rbp", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rdi,[rsp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbp,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rax", "mov~rcx,rbp", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 30, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, -1, 0.0008651569425050088, ["mov     r15d, 4", "jmp     loc_37CF"], ["mov~r15d,0", "jmp~FOO"]], [1, 0, 4, 0, 3, 14, 4, 4, 5, -1, 0.00024285107158035334, ["mov     rdi, [rsp+328h+filename]; name", "call    quote", "lea     rsi, aCannotRemoveRo; \"cannot remove root directory %s\"", "mov     rbx, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_356C"], ["mov~rdi,[rsp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 146, 0, 0, 2, 0, 0, 35, -1, 0.10029749256268593, ["mov     rax, [r14+0C8h]", "mov     [rsp+328h+var_310], rax"], ["mov~rax,[r14+0]", "mov~[rsp+0],rax"]], [1, 0, 2, 0, 4, 18, 3, 5, 30, -1, 0.003248133082387226, ["mov     rdi, [rsp+328h+ds_0]; ds_0", "lea     rsi, asc_A85B+1; filename", "mov     r14, [rsp+328h+ptr]", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "lea     rsi, aFatalCannotEns; \"FATAL: cannot ensure %s (returned to vi\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     rbx, rax", "call    _dcgettext", "mov     esi, [r12]; errnum", "mov     rdx, rax; format", "mov     rcx, rbx", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     short loc_458D"], ["mov~rdi,[rsp+0]", "lea~rsi,<TAG>", "mov~r14,[rsp+0]", "call~FOO", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~rbx,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rax", "mov~rcx,rbx", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 2, 0, 4, 17, 4, 4, 31, -1, 0.00012142553579017667, ["mov     rdi, [rsp+328h+ds_0]; ds_0", "lea     rsi, asc_A85B+1; filename", "mov     r14, [rsp+328h+ptr]", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "lea     rsi, aFatalDirectory; \"FATAL: directory %s changed dev/ino\"", "mov     rbx, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rdi,[rsp+0]", "lea~rsi,<TAG>", "mov~r14,[rsp+0]", "call~FOO", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [0, 0, 146, 0, 0, 1, 0, 0, 26, -1, 6.0712767895088334e-05, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 37, 0, 0, 2, 0, 1, 7, -1, 0.0014571064294821201, ["cmp     ebx, 2", "jz      loc_3836"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 146, 0, 0, 3, 0, 1, 26, -1, 0.21580353348309148, ["cmp     eax, 1", "mov     rdi, rbx; dirp", "jz      loc_3F91"], ["cmp~eax,0", "mov~rdi,rbx", "jz~FOO"]], [0, 0, 171, 0, 0, 5, 0, 1, 3, 9, 0.005433792726610406, ["mov     rax, [rsp+328h+x]", "mov     rax, [rax+10h]", "mov     rcx, [rax]", "cmp     [rsp+328h+st.st_ino], rcx", "jnz     short loc_35B0"], ["mov~rax,[rsp+0]", "mov~rax,[rax+0]", "mov~rcx,<TAG>", "cmp~[rsp+0],rcx", "jnz~FOO"]], [1, 0, 146, 0, 0, 2, 0, 1, 18, -1, 0.12327727521097687, ["mov     [rsp+328h+var_2F0], 0", "jmp     loc_39E0"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 8, 3, 0, 16, 1, 1, 14, -1, 0.03530447453099387, ["mov     rbx, [rsp+328h+ds_0]", "movsxd  rdx, dword ptr [rbx+0E0h]", "mov     rcx, rdx", "add     rax, rdx", "mov     rdx, [rbx+0B8h]", "not     ecx", "movsxd  rcx, ecx", "and     rax, rcx", "mov     rcx, [rbx+0D0h]", "mov     r8, rax", "mov     [rbx+0C8h], rax", "sub     r8, rdx", "mov     rdi, rcx", "sub     rdi, rdx", "cmp     r8, rdi", "jle     short loc_37A4"], ["mov~rbx,[rsp+0]", "movsxd~rdx,[word ptr [rbx+0]", "mov~rcx,rdx", "add~rax,rdx", "mov~rdx,[rbx+0]", "not~ecx", "movsxd~rcx,ecx", "and~rax,rcx", "mov~rcx,[rbx+0]", "mov~r8,rax", "mov~[rbx+0],rax", "sub~r8,rdx", "mov~rdi,rcx", "sub~rdi,rdx", "cmp~r8,rdi", "jle~FOO"]], [2, 0, 146, 0, 0, 4, 0, 1, 15, -1, 0.012628255722178374, ["mov     rax, [rsp+328h+var_310]", "mov     ebp, 4", "mov     dword ptr [rax-18h], 4", "jmp     loc_39E0"], ["mov~rax,[rsp+0]", "mov~ebp,0", "mov~[word ptr [rax-18h]+0],0", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 0, 15, -1, 0.0, ["mov     [rbx+0C8h], rcx", "mov     rax, rcx"], ["mov~[rbx+0],rcx", "mov~rax,rcx"]], [0, 0, 170, 0, 0, 3, 0, 1, 4, 10, 0.00048570214316070667, ["mov     rax, [rax+8]", "cmp     [rsp+328h+st.st_dev], rax", "jz      loc_3D9A"], ["mov~rax,[rax+0]", "cmp~[rsp+0],rax", "jz~FOO"]], [0, 0, 167, 0, 0, 1, 0, 0, 5, 9, 0.004978446967397243, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 35, 0, 4, 16, 4, 4, 10, -1, 0.002519579867646166, ["mov     rsi, r15; filename", "mov     rdi, r14; ds_0", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "lea     rsi, aItIsDangerousT; \"it is dangerous to operate recursively \"...", "mov     rbp, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rsi,r15", "mov~rdi,r14", "call~FOO", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rbp,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbp", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [0, 0, 6, 0, 0, 4, 0, 0, 15, -1, 0.026683261489891322, ["mov     rdi, [rsp+328h+ds_0]", "cmp     rsi, rdx", "mov     [rdi+0C0h], rax", "jbe     short loc_37BE"], ["mov~rdi,[rsp+0]", "cmp~rsi,rdx", "mov~[rdi+0],rax", "jbe~FOO"]], [1, 0, 3, 1, 1, 3, 0, 1, 16, -1, 0.013159492441260396, ["mov     rdi, [rsp+328h+ds_0]", "add     rdi, 0B0h; obstack", "call    _obstack_free"], ["mov~rdi,[rsp+0]", "add~rdi,0", "call~FOO"]], [4, 0, 146, 0, 3, 23, 0, 3, 7, -1, 0.05537004432032056, ["mov     rdi, rbx; dirp", "mov     r15d, 2", "mov     ebp, 2", "call    _dirfd", "mov     r14, [rsp+328h+ds_0]", "mov     rsi, [rsp+328h+filename]; ds_0", "lea     rdx, [rsp+328h+st]; dir", "mov     rdi, r14; fd_cwd", "call    AD_push", "mov     rax, [r14+0C8h]", "mov     dword ptr [rax-18h], 2", "mov     [rsp+328h+var_310], rax", "call    ___errno_location", "mov     r12, rax", "lea     rax, [rsp+328h+var_1F8]", "mov     [rsp+328h+var_2F0], 0", "mov     [rsp+328h+var_2E4], r15d", "mov     [rsp+328h+subdir_sb], rax", "lea     rax, [rsp+328h+var_168]", "mov     [rsp+328h+sbuf], rax", "lea     rax, [rsp+328h+var_28C]", "mov     [rsp+328h+pdirent_type], rax", "nop     dword ptr [rax+00h]"], ["mov~rdi,rbx", "mov~r15d,0", "mov~ebp,0", "call~FOO", "mov~r14,[rsp+0]", "mov~rsi,[rsp+0]", "lea~rdx,[rsp+0]", "mov~rdi,r14", "call~FOO", "mov~rax,[r14+0]", "mov~[word ptr [rax-18h]+0],0", "mov~[rsp+0],rax", "call~FOO", "mov~r12,rax", "lea~rax,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],r15d", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "nop~[word ptr [rax+0]"]], [1, 0, 146, 0, 0, 2, 0, 0, 8, -1, 0.24312427903588124, ["mov     dword ptr [r12], 0", "nop     dword ptr [rax+rax+00000000h]"], ["mov~<TAG>,0", "nop~[word ptr [rax+0]"]], [1, 0, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 2F8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 0, 0, 1, 5, 0, 1, 13, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___6787; \"remove_cwd_entries\"", "lea     rsi, aRemoveC; \"remove.c\"", "lea     rdi, a0FcntlDirfdDir; \"0 <= fcntl (dirfd (*dirp), F_GETFD)\"", "mov     edx, 542h; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]]], "func_feature": [149, 111, 277, 15, 183, 269, 1, 1079, 0.04422, 32, 30], "succs": [[19, 31], [0, 22], [17, 20], [2, 99], [2], [72, 18], [5, 167], [57, 5], [24], [8, 139], [26, 28], [10, 158], [10], [101], [13, 103], [23], [23, 15], [56, 27], [47], [1, 21], [], [1, 31], [32, 29], [37, 30], [43], [24], [59, 140], [40, 33], [34, 51], [32, 133], [57, 150], [42, 39], [116], [], [50, 52], [91, 3], [3], [67, 68], [37], [42, 180], [45, 55], [88, 62], [41, 73], [], [43], [54], [47], [38, 46], [176, 121], [48, 179], [154, 53], [50], [50], [58], [83, 61], [122, 54], [], [47], [47], [47], [58], [83], [129, 79], [57], [57, 63], [94], [65, 178], [76, 71], [67], [89, 82], [89, 69], [76], [57], [132, 77], [25, 107], [25, 115], [78, 95], [88, 84], [85, 95], [120, 86], [], [80, 170], [89], [70, 111], [86], [104], [102, 14], [86, 103], [86], [96, 110], [36], [90, 126], [12, 60], [], [93, 181], [104], [108, 109], [112, 125], [81], [98, 100], [98, 4], [105, 180], [101], [101, 119], [123, 124], [116], [160, 9], [106, 139], [168, 118], [108, 166], [108], [], [113, 117], [117, 125], [], [114, 92], [35, 182], [161], [], [102], [102], [64], [], [124], [130, 131], [16, 137], [36], [171], [171, 127], [136, 147], [146, 134], [130], [172, 87], [180], [138, 146], [147, 142], [142, 135], [169, 141], [149], [145, 164], [59], [144, 159], [172], [142], [157, 151], [152, 165], [149], [180, 143], [149], [128, 148], [155, 6], [157, 159], [11, 165], [], [153, 163], [179, 156], [49, 179], [94], [154], [161], [], [94], [161], [81], [44], [44], [110], [57, 7], [74, 75], [16, 174], [180], [177, 173], [180], [177], [162, 175], [16], [64], [66, 178], [94], [180], [1], [], []], "fname": "rm_1", "n_num": 183}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[1, 0, 8, 0, 0, 2, 0, 1, 0, 0, 0.12222222222222223, ["cmp     eax, 3", "jnz     short loc_478B"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 3, 3, 0.2555555555555556, ["cmp     eax, 4", "jnz     short loc_4780"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 0, 5, 3, 0.0, ["cmp     ebx, 2", "cmovz   ebx, eax"], ["cmp~ebx,0", "cmovz~ebx,eax"]], [2, 0, 8, 1, 0, 4, 0, 1, 4, 2, 0.05555555555555556, ["add     i, 1", "mov     ebx, 4", "cmp     n_files, i", "jnz     short loc_4794"], ["add~i,0", "mov~ebx,0", "cmp~n_files,i", "jnz~FOO"]], [1, 0, 8, 0, 1, 7, 0, 2, 2, 1, 0.34444444444444444, ["mov     rsi, [file+i*8+0]; filename", "mov     rdx, x; x", "mov     rdi, rbp; ds_0", "call    rm_1", "lea     edx, [s-2]", "cmp     edx, 2", "ja      short loc_4800"], ["mov~rsi,[file+0]", "mov~rdx,x", "mov~rdi,rbp", "call~FOO", "lea~edx,[s-2]+0]", "cmp~edx,0", "ja~FOO"]], [1, 0, 8, 0, 0, 3, 1, 1, 1, 2, 0.07777777777777778, ["xor     r15d, r15d", "mov     ebx, 2", "jmp     short loc_4794"], ["xor~r15d,r15d", "mov~ebx,0", "jmp~FOO"]], [1, 0, 8, 1, 0, 3, 0, 1, 5, 2, 0.12222222222222223, ["add     i, 1", "cmp     n_files, i", "jz      short loc_47BF"], ["add~i,0", "cmp~n_files,i", "jz~FOO"]], [2, 0, 10, 1, 4, 39, 7, 5, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r14, x", "push    r13", "push    r12", "mov     r12, n_files", "push    rbp", "push    rbx", "mov     edi, 1F0h; n", "mov     r13, file", "sub     rsp, 18h", "call    xmalloc", "mov     rbx, cs:free_ptr", "mov     r15, cs:malloc_ptr", "mov     rbp, rax", "xor     edx, edx; int", "xor     esi, esi; int", "mov     rdi, rax; struct obstack *", "mov     r8, rbx; void (*)(void *)", "mov     rcx, r15; void *(*)(__int64)", "call    __obstack_begin", "lea     rax, [rbp+58h]", "xor     edx, edx; int", "xor     esi, esi; int", "mov     r8, rbx; void (*)(void *)", "mov     rcx, r15; void *(*)(__int64)", "mov     rdi, rax; struct obstack *", "mov     [rsp+48h+obstack], rax", "call    __obstack_begin", "lea     rax, [rbp+0B0h]", "xor     edx, edx; int", "xor     esi, esi; int", "mov     r8, rbx; void (*)(void *)", "mov     rcx, r15; void *(*)(__int64)", "mov     rdi, rax; struct obstack *", "mov     [rsp+48h+var_40], rax", "call    __obstack_begin", "test    n_files, n_files", "jz      loc_47F9"], ["push~r15", "push~r14", "mov~r14,x", "push~r13", "push~r12", "mov~r12,n_files", "push~rbp", "push~rbx", "mov~edi,0", "mov~r13,file", "sub~rsp,0", "call~FOO", "mov~rbx,<TAG>", "mov~r15,<TAG>", "mov~rbp,rax", "xor~edx,edx", "xor~esi,esi", "mov~rdi,rax", "mov~r8,rbx", "mov~rcx,r15", "call~FOO", "lea~rax,[rbp+0]", "xor~edx,edx", "xor~esi,esi", "mov~r8,rbx", "mov~rcx,r15", "mov~rdi,rax", "mov~<TAG>,rax", "call~FOO", "lea~rax,[rbp+0]", "xor~edx,edx", "xor~esi,esi", "mov~r8,rbx", "mov~rcx,r15", "mov~rdi,rax", "mov~[rsp+0],rax", "call~FOO", "test~n_files,n_files", "jz~FOO"]], [1, 0, 0, 1, 4, 20, 3, 4, 2, -1, 0.0, ["mov     rdi, rbp; obstack", "xor     esi, esi; block", "call    _obstack_free", "mov     rdi, [rsp+48h+obstack]; obstack", "xor     esi, esi; block", "call    _obstack_free", "mov     rdi, [rsp+48h+var_40]; obstack", "xor     esi, esi; block", "call    _obstack_free", "mov     rdi, rbp; ptr", "call    free", "add     rsp, 18h", "mov     eax, ebx", "pop     status", "pop     rbp", "pop     n_files", "pop     file", "pop     x", "pop     r15", "retn"], ["mov~rdi,rbp", "xor~esi,esi", "call~FOO", "mov~rdi,<TAG>", "xor~esi,esi", "call~FOO", "mov~rdi,[rsp+0]", "xor~esi,esi", "call~FOO", "mov~rdi,rbp", "call~FOO", "add~rsp,0", "mov~eax,ebx", "pop~status", "pop~rbp", "pop~n_files", "pop~file", "pop~x", "pop~r15", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, -1, 0.011111111111111112, ["mov     ebx, 2", "jmp     short loc_47BF"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 3, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___6846; \"rm\"", "lea     rsi, aRemoveC; \"remove.c\"", "lea     rdi, aValidStatusS; \"VALID_STATUS (s)\"", "mov     edx, 64Dh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]]], "func_feature": [10, 11, 18, 1, 11, 15, 1, 89, 0.0899, 5, 4], "succs": [[2, 6], [0, 3], [6], [8, 4], [1, 10], [4], [8, 4], [9, 5], [], [8], []], "fname": "rm", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[2, 0, 2, 2, 0, 6, 1, 1, 0, 0, 0.16666666666666666, ["rol     h, 9", "add     s, 1", "add     rax, rcx", "movsx   rcx, byte ptr [s]", "test    cl, cl", "jnz     short loc_4830"], ["rol~h,0", "add~s,0", "add~rax,rcx", "movsx~rcx,<TAG>", "test~cl,cl", "jnz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 0, 1, -1, 0.16666666666666666, ["xor     eax, eax", "nop     word ptr [h+h+00h]"], ["xor~eax,eax", "nop~[ord ptr [h+0]"]], [0, 0, 4, 0, 0, 3, 1, 1, 0, 1, 0.0, ["movsx   rcx, byte ptr [s]", "test    cl, cl", "jz      short loc_4850"], ["movsx~rcx,<TAG>", "test~cl,cl", "jz~FOO"]], [0, 0, 0, 1, 0, 4, 1, 0, 3, -1, 0.0, ["xor     edx, edx", "div     tablesize", "mov     rax, rdx", "retn"], ["xor~edx,edx", "div~,tablesize", "mov~rax,rdx", "retn"]], [0, 0, 0, 0, 0, 3, 1, 0, 1, 0, 0.0, ["xor     edx, edx", "mov     rax, rdx", "retn"], ["xor~edx,edx", "mov~rax,rdx", "retn"]]], "func_feature": [0, 5, 2, 0, 5, 5, 0, 18, 0.06667, 0, 3], "succs": [[0, 3], [0], [1, 4], [], []], "fname": "hash_pjw", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[1, 0, 6, 1, 0, 4, 1, 1, 0, 0, 0.07777777777777778, ["add     p, 1", "movzx   edx, byte ptr [p]", "test    dl, dl", "jz      short locret_4F7A"], ["add~p,0", "movzx~edx,<TAG>", "test~dl,dl", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 4, 2, 0.16666666666666669, ["test    sil, sil", "jz      short loc_4F5A"], ["test~sil,sil", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 0, 5, 2, 0.0, ["mov     base, p", "xor     esi, esi"], ["mov~base,p", "xor~esi,esi"]], [0, 0, 6, 0, 0, 3, 1, 1, 2, 3, 0.22222222222222224, ["mov     rcx, p", "xor     esi, esi", "jmp     short loc_4F65"], ["mov~rcx,p", "xor~esi,esi", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 1, 1, 0.23333333333333334, ["test    dl, dl", "jz      short locret_4F7A"], ["test~dl,dl", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 3, 2, 0.33333333333333337, ["cmp     dl, 2Fh ; '/'", "jnz     short loc_4F50"], ["cmp~dl,0", "jnz~FOO"]], [2, 0, 6, 1, 0, 5, 1, 1, 4, 1, 0.022222222222222223, ["add     p, 1", "movzx   edx, byte ptr [rcx]", "mov     esi, 1", "test    dl, dl", "jnz     short loc_4F65"], ["add~p,0", "movzx~edx,<TAG>", "mov~esi,0", "test~dl,dl", "jnz~FOO"]], [1, 0, 10, 0, 0, 4, 0, 1, 0, 2, 0.0, ["movzx   edx, byte ptr [base]", "mov     rax, base", "cmp     dl, 2Fh ; '/'", "jnz     short loc_4F3C"], ["movzx~edx,<TAG>", "mov~rax,base", "cmp~dl,0", "jnz~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 1, 3, 0.011111111111111112, ["nop     dword ptr [base+base+00h]"], ["nop~[word ptr [base+0]"]], [2, 0, 9, 1, 0, 4, 0, 1, 2, 2, 0.08888888888888889, ["add     base, 1", "movzx   edx, byte ptr [base]", "cmp     dl, 2Fh ; '/'", "jz      short loc_4F30"], ["add~base,0", "movzx~edx,<TAG>", "cmp~dl,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 6, 8, 0, 11, 17, 1, 30, 0.10505, 0, 3], "succs": [[10, 5], [0, 2], [0], [5], [10, 3], [1, 6], [10, 5], [8, 4], [9], [9, 4], []], "fname": "last_component", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[2, 0, 1, 2, 0, 10, 1, 1, 0, 0, 0.016798418972332016, ["xor     edx, edx", "cmp     byte ptr [rbx+rax], 2Fh ; '/'", "mov     rdi, rbx; string", "setz    dl", "add     rsp, 8", "pop     rbx", "pop     name", "add     rax, rdx", "mov     rsi, length; n", "jmp     xstrndup"], ["xor~edx,edx", "cmp~<TAG>,0", "mov~rdi,rbx", "setz~dl", "add~rsp,0", "pop~rbx", "pop~name", "add~rax,rdx", "mov~rsi,length", "jmp~FOO"]], [1, 0, 6, 0, 1, 4, 0, 1, 6, 4, 0.11561264822134387, ["mov     name, rbx; s", "call    _strlen", "cmp     rax, 1", "jbe     short loc_4FF6"], ["mov~name,rbx", "call~FOO", "cmp~rax,0", "jbe~FOO"]], [1, 0, 5, 0, 0, 3, 0, 1, 8, 2, 0.05731225296442687, ["cmp     rdx, 1", "mov     rax, rdx", "jz      short loc_4FF6"], ["cmp~rdx,0", "mov~rax,rdx", "jz~FOO"]], [1, 0, 5, 0, 0, 3, 0, 1, 9, 1, 0.02766798418972332, ["cmp     byte ptr [rbx+rax-1], 2Fh ; '/'", "lea     rdx, [rax-1]", "jnz     short loc_4FF6"], ["cmp~[yte ptr [rbx+0],0", "lea~rdx,[rax-1]+0]", "jnz~FOO"]], [1, 0, 5, 0, 0, 3, 0, 1, 7, 3, 0.07114624505928853, ["cmp     byte ptr [rbx+rax-1], 2Fh ; '/'", "lea     rdx, [rax-1]", "jz      short loc_5060"], ["cmp~[yte ptr [rbx+0],0", "lea~rdx,[rax-1]+0]", "jz~FOO"]], [2, 0, 23, 1, 0, 8, 0, 1, 0, 10, 0.0, ["push    rbp", "push    rbx", "mov     rbp, name", "mov     rbx, name", "sub     rsp, 8", "movzx   eax, byte ptr [name]", "cmp     al, 2Fh ; '/'", "jnz     short loc_4FA3"], ["push~rbp", "push~rbx", "mov~rbp,name", "mov~rbx,name", "sub~rsp,0", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [0, 0, 22, 0, 0, 1, 0, 0, 1, 11, 0.001976284584980237, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [2, 0, 22, 1, 0, 4, 0, 1, 2, 10, 0.04150197628458498, ["add     rbx, 1", "movzx   eax, byte ptr [rbx]", "cmp     al, 2Fh ; '/'", "jz      short loc_4F98"], ["add~rbx,0", "movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [1, 0, 6, 0, 1, 4, 0, 1, 2, -1, 0.12351778656126482, ["mov     name, rbp; s", "call    _strlen", "cmp     rax, 1", "jbe     short loc_5031"], ["mov~name,rbp", "call~FOO", "cmp~rax,0", "jbe~FOO"]], [0, 0, 20, 0, 0, 2, 1, 1, 1, 9, 0.11857707509881422, ["test    al, al", "jz      short loc_5018"], ["test~al,al", "jz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 5, 5, 0.20158102766798416, ["cmp     byte ptr [rbx], 0", "jz      short loc_5018"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 19, 0, 0, 3, 1, 1, 2, 8, 0.09486166007905138, ["mov     rdx, rbx", "xor     ecx, ecx", "jmp     short loc_4FC4"], ["mov~rdx,rbx", "xor~ecx,ecx", "jmp~FOO"]], [1, 0, 5, 0, 0, 3, 0, 1, 3, -1, 0.07114624505928853, ["cmp     byte ptr [name+rax-1], 2Fh ; '/'", "lea     rdx, [rax-1]", "jz      short loc_5048"], ["cmp~[yte ptr [name+0],0", "lea~rdx,[rax-1]+0]", "jz~FOO"]], [0, 0, 19, 0, 0, 2, 1, 1, 4, 7, 0.029644268774703556, ["test    cl, cl", "jz      short loc_4FB9"], ["test~cl,cl", "jz~FOO"]], [1, 0, 19, 0, 0, 2, 0, 1, 3, 7, 0.14031620553359683, ["cmp     al, 2Fh ; '/'", "jnz     short loc_4FB0"], ["cmp~al,0", "jnz~FOO"]], [0, 0, 19, 0, 0, 2, 1, 0, 5, 7, 0.0, ["mov     rbx, rdx", "xor     ecx, ecx"], ["mov~rbx,rdx", "xor~ecx,ecx"]], [0, 0, 5, 0, 0, 1, 0, 1, 10, 0, 0.001976284584980237, ["jmp     short loc_5060"], ["jmp~FOO"]], [1, 0, 1, 1, 0, 6, 0, 1, 3, -1, 0.024703557312252964, ["add     rsp, 8", "mov     rdi, name; string", "mov     rsi, rax; n", "pop     rbx", "pop     name", "jmp     xstrndup"], ["add~rsp,0", "mov~rdi,name", "mov~rsi,rax", "pop~rbx", "pop~name", "jmp~FOO"]], [1, 0, 5, 0, 0, 3, 0, 1, 4, -1, 0.05731225296442687, ["cmp     rdx, 1", "mov     rax, rdx", "jz      short loc_5031"], ["cmp~rdx,0", "mov~rax,rdx", "jz~FOO"]], [1, 0, 5, 0, 0, 3, 0, 1, 5, -1, 0.02766798418972332, ["cmp     byte ptr [name+rax-1], 2Fh ; '/'", "lea     rdx, [rax-1]", "jnz     short loc_5031"], ["cmp~[yte ptr [name+0],0", "lea~rdx,[rax-1]+0]", "jnz~FOO"]], [1, 0, 19, 1, 0, 4, 1, 1, 5, 6, 0.06521739130434782, ["add     rdx, 1", "movzx   eax, byte ptr [rdx]", "test    al, al", "jz      short loc_4FD8"], ["add~rdx,0", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [2, 0, 19, 1, 0, 5, 1, 1, 4, 6, 0.11067193675889328, ["add     rdx, 1", "movzx   eax, byte ptr [rdx]", "mov     ecx, 1", "test    al, al", "jnz     short loc_4FC4"], ["add~rdx,0", "movzx~eax,<TAG>", "mov~ecx,0", "test~al,al", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 6, -1, 0.001976284584980237, ["jmp     short loc_5048"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []]], "func_feature": [2, 7, 21, 0, 24, 39, 0, 79, 0.05838, 0, 7], "succs": [[23], [0, 4], [0, 3], [0, 16], [0, 2], [9, 6], [7], [9, 7], [17, 12], [8, 11], [8, 1], [14], [17, 18], [20, 15], [13, 21], [20], [2], [23], [17, 19], [17, 22], [10, 14], [10, 14], [18], []], "fname": "base_name", "n_num": 24}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 5, 0, 0, 2, 0, 0, 0, 0, 0.047619047619047616, ["mov     len, rax", "nop     dword ptr [rax+rax+00h]"], ["mov~len,rax", "nop~[word ptr [rax+0]"]], [1, 0, 5, 0, 0, 3, 0, 1, 3, 3, 0.16666666666666666, ["cmp     byte ptr [name+len-1], 2Fh ; '/'", "lea     rax, [len-1]", "jz      short loc_50A0"], ["cmp~[yte ptr [name+0],0", "lea~rax,[len-1]+0]", "jz~FOO"]], [1, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0.0, ["mov     eax, 1", "pop     name", "retn"], ["mov~eax,0", "pop~name", "retn"]], [1, 0, 5, 0, 0, 2, 0, 1, 2, 1, 0.2857142857142857, ["cmp     len, 1", "jz      short loc_50C0"], ["cmp~len,0", "jz~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 1, 2, 0.11904761904761904, ["cmp     byte ptr [name+len-1], 2Fh ; '/'", "lea     rdx, [len-1]", "jz      short loc_50A8"], ["cmp~[yte ptr [name+0],0", "lea~rdx,[len-1]+0]", "jz~FOO"]], [1, 0, 7, 0, 1, 5, 0, 1, 0, 3, 0.0, ["push    rbx", "mov     rbx, name", "call    _strlen", "cmp     len, 1", "jbe     short loc_509A"], ["push~rbx", "mov~rbx,name", "call~FOO", "cmp~len,0", "jbe~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     name", "retn"], ["pop~name", "retn"]], [0, 0, 0, 0, 0, 3, 0, 0, 4, -1, 0.0, ["mov     rax, len", "pop     name", "retn"], ["mov~rax,len", "pop~name", "retn"]]], "func_feature": [1, 0, 4, 0, 8, 9, 0, 23, 0.07738, 0, 0], "succs": [[3], [0, 7], [], [1, 2], [3, 6], [4, 6], [], []], "fname": "base_len", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:file_name, file", "retn"], ["mov~<TAG>,file", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdin_set_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[1, 0, 3, 0, 2, 10, 2, 3, 0, 0, 0.13636363636363635, ["lea     rsi, aErrorClosingFi; \"error closing file\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rbx, cs:file_name", "mov     r12, rax", "call    ___errno_location", "mov     rbp, rax", "test    rbx, rbx", "jz      short loc_51D0"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rbx,<TAG>", "mov~r12,rax", "call~FOO", "mov~rbp,rax", "test~rbx,rbx", "jz~FOO"]], [0, 0, 6, 0, 1, 4, 1, 2, 1, 2, 0.045454545454545456, ["mov     rdi, cs:stdin@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jnz     short loc_5138"], ["mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 6, 0, 1, 3, 1, 2, 2, 2, 0.08333333333333334, ["call    close_stream", "test    eax, eax", "jnz     loc_5138"], ["call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 4, 0, 1, 2, 0, 1, 3, 2, 0.015151515151515152, ["call    close_stream", "nop     dword ptr [rax+00000000h]"], ["call~FOO", "nop~[word ptr [rax+0]"]], [0, 0, 8, 0, 1, 4, 1, 2, 2, 3, 0.015151515151515152, ["call    _fflush", "test    eax, eax", "mov     rdi, cs:stdin@@GLIBC_2_2_5; stream", "jz      loc_51BA"], ["call~FOO", "test~eax,eax", "mov~rdi,<TAG>", "jz~FOO"]], [1, 0, 9, 0, 1, 7, 2, 2, 1, 3, 0.030303030303030304, ["mov     rdi, cs:stdin@@GLIBC_2_2_5; stream", "xor     esi, esi; off", "mov     edx, 1; whence", "call    _fseeko", "test    eax, eax", "mov     rdi, cs:stdin@@GLIBC_2_2_5; stream", "jz      loc_5118"], ["mov~rdi,<TAG>", "xor~esi,esi", "mov~edx,0", "call~FOO", "test~eax,eax", "mov~rdi,<TAG>", "jz~FOO"]], [0, 0, 1, 0, 1, 7, 2, 2, 3, 0, 0.026515151515151516, ["mov     esi, [rax]; errnum", "lea     rdx, format+4; format", "mov     rcx, close_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     short loc_5183"], ["mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,close_error", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 12, 0, 1, 7, 1, 2, 0, 3, 0.0, ["mov     rdi, cs:stdin@@GLIBC_2_2_5; fp", "push    r12", "push    rbp", "push    rbx", "call    freadahead", "test    rax, rax", "jnz     loc_5198"], ["mov~rdi,<TAG>", "push~r12", "push~rbp", "push~rbx", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 1, 0, 0, 4, 0, 1, 3, -1, 0.022727272727272728, ["pop     rbx", "pop     rbp", "pop     r12", "jmp     close_stdout"], ["pop~rbx", "pop~rbp", "pop~r12", "jmp~FOO"]], [0, 0, 1, 0, 0, 4, 0, 1, 2, -1, 0.015151515151515152, ["pop     rbx", "pop     rbp", "pop     r12", "jmp     close_stdout"], ["pop~rbx", "pop~rbp", "pop~r12", "jmp~FOO"]], [0, 0, 0, 0, 2, 3, 0, 2, 4, -1, 0.0, ["call    close_stdout", "mov     edi, cs:exit_failure; status", "call    __exit"], ["call~FOO", "mov~edi,<TAG>", "call~FOO"]], [0, 0, 1, 0, 2, 9, 2, 2, 3, -1, 0.026515151515151516, ["mov     rdi, rbx; arg", "call    quotearg_colon", "mov     esi, [rbp+0]; errnum", "lea     rdx, format; \"%s: %s\"", "mov     rcx, rax", "mov     r8, close_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rdi,rbx", "call~FOO", "mov~esi,[rbp+0]", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8,close_error", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []]], "func_feature": [13, 12, 22, 0, 13, 17, 0, 64, 0.03205, 6, 0], "succs": [[11, 6], [0, 9], [0, 8], [0], [2, 3], [2, 4], [10], [1, 5], [12], [12], [], [10], []], "fname": "close_stdin", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[2, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["mov     qword ptr [state+10h], 0", "mov     dword ptr [state+18h], 95F616h", "retn"], ["mov~[word ptr [state+0],0", "mov~[word ptr [state+0],0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 3, 0.0, 0, 0], "succs": [[]], "fname": "cycle_check_init", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.01818181818181818, ["mov     qword ptr [state+10h], 1"], ["mov~[word ptr [state+0],0"]], [0, 0, 9, 0, 0, 4, 1, 1, 1, -1, 0.08181818181818182, ["mov     rdx, [state+10h]", "mov     rcx, [sb+8]", "test    rdx, rdx", "jz      short loc_52E0"], ["mov~rdx,[state+0]", "mov~rcx,[sb+0]", "test~rdx,rdx", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     dword ptr [state+18h], 95F616h", "jnz     short loc_5317"], ["cmp~[word ptr [state+0],0", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 3, 0, 0, 2, 1, 1, 4, -1, 0.08181818181818182, ["test    r8, r8", "jz      short loc_5301"], ["test~r8,r8", "jz~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 3, -1, 0.02727272727272727, ["mov     rax, [state+8]", "cmp     [sb], rax", "jnz     short loc_52CB"], ["mov~rax,[state+0]", "cmp~<TAG>,rax", "jnz~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 2, -1, 0.10909090909090909, ["cmp     [state], rcx", "jz      short loc_52F8"], ["cmp~<TAG>,rcx", "jz~FOO"]], [0, 0, 5, 0, 0, 5, 2, 1, 3, -1, 0.12727272727272726, ["lea     r8, [rdx+1]", "xor     eax, eax", "test    rdx, r8", "mov     [state+10h], r8", "jz      short loc_5310"], ["lea~r8,[rdx+0]", "xor~eax,eax", "test~rdx,r8", "mov~[state+0],r8", "jz~FOO"]], [0, 0, 0, 0, 0, 5, 1, 0, 3, -1, 0.0, ["mov     rax, [sb]", "mov     [state], rcx", "mov     [state+8], rax", "xor     eax, eax", "retn"], ["mov~rax,<TAG>", "mov~<TAG>,rcx", "mov~[state+0],rax", "xor~eax,eax", "retn"]], [0, 0, 1, 0, 0, 1, 0, 1, 5, -1, 0.03636363636363636, ["jmp     short loc_52E8"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 4, -1, 0.0, ["rep retn"], ["retn"]], [2, 0, 0, 1, 1, 6, 0, 1, 1, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___4570; \"cycle_check\"", "lea     sb, aCycleCheckC; \"cycle-check.c\"", "lea     state, aStateMagicCcMa; \"state->magic == CC_MAGIC\"", "sub     rsp, 8", "mov     edx, 3Ch ; '<'; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~sb,<TAG>", "lea~state,<TAG>", "sub~rsp,0", "mov~edx,0", "call~FOO"]]], "func_feature": [1, 5, 8, 0, 12, 14, 1, 34, 0.04015, 3, 1], "succs": [[8], [0, 6], [1, 11], [], [9, 3], [3, 7], [5, 7], [10, 4], [], [8], [], []], "fname": "cycle_check", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[1, 0, 5, 0, 0, 2, 0, 1, 0, 0, 0.07352941176470588, ["cmp     eax, 0A000h", "jz      loc_5420"], ["cmp~eax,0", "jz~FOO"]], [0, 1, 7, 0, 0, 2, 0, 1, 4, 2, 0.08823529411764705, ["cmp     eax, 1000h", "jz      loc_5410"], ["cmp~eax,<STR>", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 2, 4, 0.07352941176470588, ["cmp     eax, 6000h", "jz      short loc_53D0"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 1, 5, 0.04534313725490196, ["cmp     eax, 4000h", "jz      loc_53F0"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, -1, 0.00980392156862745, ["cmp     qword ptr [st+30h], 0", "jnz     short loc_53B8"], ["cmp~[word ptr [st+0],0", "jnz~FOO"]], [3, 0, 17, 0, 0, 5, 1, 1, 0, 6, 0.0, ["mov     eax, [st+18h]", "mov     edx, 5; category", "and     eax, 0F000h", "cmp     eax, 8000h", "jz      short loc_53A0"], ["mov~eax,[st+0]", "mov~edx,0", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 1, 0, 0, 3, 1, 1, 2, -1, 0.003063725490196078, ["lea     rsi, aRegularFile; \"regular file\"", "xor     edi, edi; domainname", "jmp     _dcgettext"], ["lea~rsi,<TAG>", "xor~edi,edi", "jmp~FOO"]], [0, 0, 1, 0, 0, 3, 1, 1, 7, -1, 0.001838235294117647, ["lea     rsi, aSocket; \"socket\"", "xor     edi, edi; domainname", "jmp     _dcgettext"], ["lea~rsi,<TAG>", "xor~edi,edi", "jmp~FOO"]], [0, 1, 3, 0, 0, 2, 0, 1, 6, -1, 0.044117647058823525, ["cmp     eax, 0C000h", "jz      short loc_53E0"], ["cmp~eax,<STR>", "jz~FOO"]], [0, 1, 9, 0, 0, 2, 0, 1, 3, 3, 0.08823529411764705, ["cmp     eax, 2000h", "jz      loc_5400"], ["cmp~eax,<STR>", "jz~FOO"]], [0, 0, 1, 0, 0, 3, 1, 1, 3, -1, 0.003676470588235294, ["lea     rsi, aBlockSpecialFi; \"block special file\"", "xor     edi, edi; domainname", "jmp     _dcgettext"], ["lea~rsi,<TAG>", "xor~edi,edi", "jmp~FOO"]], [0, 0, 1, 0, 0, 3, 1, 1, 2, -1, 0.003063725490196078, ["lea     rsi, aRegularEmptyFi; \"regular empty file\"", "xor     edi, edi; domainname", "jmp     _dcgettext"], ["lea~rsi,<TAG>", "xor~edi,edi", "jmp~FOO"]], [0, 0, 1, 0, 0, 3, 1, 1, 2, -1, 0.004901960784313725, ["lea     rsi, aDirectory; \"directory\"", "xor     edi, edi; domainname", "jmp     _dcgettext"], ["lea~rsi,<TAG>", "xor~edi,edi", "jmp~FOO"]], [0, 0, 1, 0, 0, 3, 1, 1, 4, -1, 0.003676470588235294, ["lea     rsi, aCharacterSpeci; \"character special file\"", "xor     edi, edi; domainname", "jmp     _dcgettext"], ["lea~rsi,<TAG>", "xor~edi,edi", "jmp~FOO"]], [0, 0, 1, 0, 0, 3, 1, 1, 6, 0, 0.003676470588235294, ["lea     rsi, aSymbolicLink; \"symbolic link\"", "xor     edi, edi; domainname", "jmp     _dcgettext"], ["lea~rsi,<TAG>", "xor~edi,edi", "jmp~FOO"]], [0, 0, 1, 0, 0, 3, 1, 1, 7, -1, 0.001838235294117647, ["lea     rsi, aWeirdFile; \"weird file\"", "xor     edi, edi; domainname", "jmp     _dcgettext"], ["lea~rsi,<TAG>", "xor~edi,edi", "jmp~FOO"]], [0, 0, 1, 0, 0, 3, 1, 1, 5, -1, 0.003676470588235294, ["lea     rsi, aFifo; \"fifo\"", "xor     edi, edi; domainname", "jmp     _dcgettext"], ["lea~rsi,<TAG>", "xor~edi,edi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []]], "func_feature": [0, 10, 17, 0, 18, 25, 1, 46, 0.02512, 9, 0], "succs": [[8, 14], [0, 16], [9, 10], [2, 12], [11, 6], [3, 4], [17], [17], [15, 7], [1, 13], [17], [17], [17], [17], [17], [17], [17], []], "fname": "file_type", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 7, 0, 1, 5, 1, 2, 0, 0, 0.07692307692307693, ["mov     rsi, [rax]", "mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_54E0"], ["mov~rsi,<TAG>", "mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 3, -1, 0.1043956043956044, ["mov     rax, [cursor+8]", "test    rax, rax", "jnz     short loc_54B8"], ["mov~rax,[cursor+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 5, -1, 0.01098901098901099, ["mov     cursor, [cursor+8]"], ["mov~cursor,[cursor+0]"]], [0, 0, 3, 0, 0, 3, 1, 1, 4, -1, 0.04395604395604396, ["mov     rdx, [bucket+8]", "test    rdx, rdx", "jz      loc_5510"], ["mov~rdx,[bucket+0]", "test~rdx,rdx", "jz~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 3, -1, 0.05494505494505495, ["test    r12b, r12b", "mov     rax, [bucket]", "jz      short loc_54D5"], ["test~r12b,r12b", "mov~rax,<TAG>", "jz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 5, -1, 0.038461538461538464, ["mov     rdx, [cursor+8]", "test    r12b, r12b", "mov     rax, [rdx]", "jz      short loc_54D5"], ["mov~rdx,[cursor+0]", "test~r12b,r12b", "mov~rax,<TAG>", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 5, -1, 0.005494505494505495, ["mov     qword ptr [bucket], 0", "jmp     short loc_54D5"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 12, 0, 0, 4, 1, 1, 1, -1, 0.06593406593406594, ["mov     [bucket_head], bucket", "mov     rsi, [bucket]", "test    rsi, rsi", "jz      short loc_54D3"], ["mov~<TAG>,bucket", "mov~rsi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [1, 0, 14, 2, 1, 17, 0, 1, 0, 1, 0.0, ["push    r14", "push    r13", "mov     r13, table", "push    r12", "push    rbp", "mov     rbp, entry", "push    rbx", "mov     rbx, [table]", "mov     r14, bucket_head", "mov     entry, [table+10h]", "mov     r12d, ecx", "mov     table, entry", "call    qword ptr [table+30h]", "shl     rax, 4", "add     rbx, rax", "cmp     [table+8], bucket", "jbe     loc_5519"], ["push~r14", "push~r13", "mov~r13,table", "push~r12", "push~rbp", "mov~rbp,entry", "push~rbx", "mov~rbx,<TAG>", "mov~r14,bucket_head", "mov~entry,[table+0]", "mov~r12d,ecx", "mov~table,entry", "call~[word ptr [table+0]", "shl~rax,0", "add~rbx,rax", "cmp~[table+0],bucket", "jbe~FOO"]], [0, 0, 0, 0, 0, 6, 0, 0, 3, -1, 0.0, ["pop     rbx", "pop     entry", "pop     r12", "pop     table", "pop     bucket_head", "retn"], ["pop~rbx", "pop~entry", "pop~r12", "pop~table", "pop~bucket_head", "retn"]], [0, 0, 1, 0, 0, 1, 1, 0, 2, -1, 0.02197802197802198, ["xor     eax, eax"], ["xor~eax,eax"]], [1, 0, 0, 0, 0, 12, 0, 0, 5, -1, 0.0, ["movdqu  xmm0, xmmword ptr [next]", "movups  xmmword ptr [bucket], xmm0", "mov     qword ptr [next], 0", "mov     rcx, [table+48h]", "mov     [next+8], rcx", "mov     [table+48h], next", "pop     bucket", "pop     entry", "pop     r12", "pop     table", "pop     bucket_head", "retn"], ["movdqu~xmm0,<TAG>", "movups~<TAG>,xmm0", "mov~<TAG>,0", "mov~rcx,[table+0]", "mov~[next+0],rcx", "mov~[table+0],next", "pop~bucket", "pop~entry", "pop~r12", "pop~table", "pop~bucket_head", "retn"]], [0, 0, 11, 0, 1, 4, 1, 2, 2, -1, 0.09890109890109891, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jz      short loc_54CA"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 0, 0, 0, 12, 0, 0, 6, -1, 0.0, ["mov     rcx, [next+8]", "mov     [cursor+8], rcx", "mov     qword ptr [next], 0", "mov     rcx, [table+48h]", "mov     [next+8], rcx", "mov     [table+48h], next", "pop     cursor", "pop     entry", "pop     r12", "pop     table", "pop     bucket_head", "retn"], ["mov~rcx,[next+0]", "mov~[cursor+0],rcx", "mov~<TAG>,0", "mov~rcx,[table+0]", "mov~[next+0],rcx", "mov~[table+0],next", "pop~cursor", "pop~entry", "pop~r12", "pop~table", "pop~bucket_head", "retn"]]], "func_feature": [4, 8, 12, 0, 15, 19, 2, 78, 0.0348, 0, 2], "succs": [[2, 5], [0, 10], [1], [11, 6], [9, 3], [9, 14], [9], [10, 12], [13, 7], [], [9], [], [1, 4], [], []], "fname": "hash_find_entry", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[1, 0, 3, 0, 0, 3, 0, 1, 0, 0, 0.09027777777777778, ["ucomiss xmm0, xmm1", "mov     eax, 1", "ja      short locret_5594"], ["ucomiss~xmm0,xmm1", "mov~eax,0", "ja~FOO"]], [0, 0, 4, 0, 0, 3, 0, 0, 5, 2, 0.1388888888888889, ["movss   xmm3, cs:dword_B244", "ucomiss xmm3, xmm2", "jb      short loc_5588"], ["movss~xmm3,<TAG>", "ucomiss~xmm3,xmm2", "jb~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 7, 2, 0.013888888888888888, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 5, 0, 0, 4, 0, 0, 4, 2, 0.16666666666666666, ["addss   xmm1, cs:dword_B234", "movss   xmm2, dword ptr [tuning+4]", "ucomiss xmm2, xmm1", "jbe     short loc_5588"], ["addss~xmm1,<TAG>", "movss~xmm2,[word ptr [tuning+0]", "ucomiss~xmm2,xmm1", "jbe~FOO"]], [0, 0, 6, 0, 0, 3, 0, 0, 3, 2, 0.16666666666666666, ["movss   xmm1, dword ptr [tuning]", "ucomiss xmm1, cs:dword_B240", "jb      short loc_5588"], ["movss~xmm1,<TAG>", "ucomiss~xmm1,<TAG>", "jb~FOO"]], [0, 0, 7, 0, 0, 3, 0, 0, 2, 2, 0.1388888888888889, ["movss   xmm1, dword ptr [tuning+0Ch]", "ucomiss xmm1, cs:dword_B23C", "jbe     short loc_5588"], ["movss~xmm1,[word ptr [tuning+0]", "ucomiss~xmm1,<TAG>", "jbe~FOO"]], [0, 0, 8, 0, 0, 3, 0, 0, 1, 2, 0.08333333333333333, ["movss   xmm1, cs:dword_B238", "ucomiss xmm1, xmm0", "jbe     short loc_5588"], ["movss~xmm1,<TAG>", "ucomiss~xmm1,xmm0", "jbe~FOO"]], [0, 0, 9, 0, 0, 4, 0, 0, 0, 2, 0.0, ["mov     rax, [rdi]", "movss   xmm0, dword ptr [tuning+8]", "ucomiss xmm0, cs:dword_B234", "jbe     short loc_5588"], ["mov~rax,<TAG>", "movss~xmm0,[word ptr [tuning+0]", "ucomiss~xmm0,<TAG>", "jbe~FOO"]], [0, 0, 1, 0, 0, 3, 1, 0, 1, 1, 0.09027777777777778, ["lea     rax, default_tuning", "mov     [rdi], rax", "xor     eax, eax"], ["lea~rax,<TAG>", "mov~<TAG>,rax", "xor~eax,eax"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 1, 1, 0, 10, 16, 4, 28, 0.08889, 6, 0], "succs": [[9, 2], [0, 8], [8], [8, 1], [8, 3], [8, 4], [8, 5], [8, 6], [9], []], "fname": "check_tuning", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+10h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_buckets", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+18h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_buckets_used", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+20h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_entries", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[1, 0, 7, 1, 0, 4, 1, 1, 0, 0, 0.06944444444444445, ["mov     cursor, [cursor+8]", "add     bucket_length, 1", "test    cursor, cursor", "jnz     short loc_55F8"], ["mov~cursor,[cursor+0]", "add~bucket_length,0", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 4, -1, 0.08333333333333333, ["nop     dword ptr [max_bucket_length+00h]"], ["nop~[word ptr [max_bucket_length+0]"]], [1, 0, 7, 0, 0, 2, 0, 1, 2, -1, 0.3055555555555555, ["cmp     qword ptr [bucket], 0", "jz      short loc_560C"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 7, 1, 0, 3, 0, 0, 3, -1, 0.2361111111111111, ["add     bucket, 10h", "cmp     bucket, rdi", "jb      short loc_55E0"], ["add~bucket,0", "cmp~bucket,rdi", "jb~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 1, -1, 0.09722222222222221, ["xchg    ax, ax"], ["xchg~ax,ax"]], [0, 0, 7, 0, 0, 2, 0, 0, 4, -1, 0.16666666666666666, ["cmp     max_bucket_length, rcx", "cmovb   max_bucket_length, rcx"], ["cmp~max_bucket_length,rcx", "cmovb~max_bucket_length,rcx"]], [1, 0, 7, 0, 0, 4, 1, 1, 3, -1, 0.20833333333333331, ["mov     rdx, [cursor+8]", "mov     ecx, 1", "test    cursor, cursor", "jz      short loc_5605"], ["mov~rdx,[cursor+0]", "mov~ecx,0", "test~cursor,cursor", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 4, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 9, 0, 0, 5, 1, 0, 0, 1, 0.0, ["mov     bucket, [table]", "mov     table, [table+8]", "xor     eax, eax", "cmp     bucket, rdi", "jnb     short locret_5617"], ["mov~bucket,<TAG>", "mov~table,[table+0]", "xor~eax,eax", "cmp~bucket,rdi", "jnb~FOO"]]], "func_feature": [0, 3, 3, 0, 10, 13, 0, 24, 0.11667, 0, 2], "succs": [[0, 5], [0], [3, 6], [2, 7], [2], [3], [1, 5], [], [], [8, 4]], "fname": "hash_get_max_bucket_length", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[1, 0, 8, 1, 0, 3, 0, 0, 0, 0, 0.3214285714285714, ["add     bucket, 10h", "cmp     bucket, r8", "jb      short loc_5630"], ["add~bucket,0", "cmp~bucket,r8", "jb~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 1, 3, 0.17857142857142855, ["cmp     qword ptr [bucket], 0", "jz      short loc_565D"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 8, 2, 0, 5, 1, 1, 2, 3, 0.125, ["mov     rax, [cursor+8]", "add     n_buckets_used, 1", "add     n_entries, 1", "test    cursor, cursor", "jz      short loc_565D"], ["mov~rax,[cursor+0]", "add~n_buckets_used,0", "add~n_entries,0", "test~cursor,cursor", "jz~FOO"]], [1, 0, 8, 1, 0, 4, 1, 1, 4, 3, 0.10714285714285714, ["mov     cursor, [cursor+8]", "add     n_entries, 1", "test    cursor, cursor", "jnz     short loc_5650"], ["mov~cursor,[cursor+0]", "add~n_entries,0", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 3, 4, 0.07142857142857142, ["nop     word ptr [cursor+cursor+00000000h]"], ["nop~[ord ptr [cursor+0]"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 1, 0.21428571428571427, ["xor     eax, eax", "cmp     [table+18h], rsi", "jz      short loc_5670"], ["xor~eax,eax", "cmp~[table+0],rsi", "jz~FOO"]], [0, 0, 8, 0, 0, 6, 2, 0, 0, 2, 0.0, ["mov     bucket, [table]", "mov     r8, [table+8]", "xor     edx, edx", "xor     esi, esi", "cmp     bucket, r8", "jnb     short loc_5666"], ["mov~bucket,<TAG>", "mov~r8,[table+0]", "xor~edx,edx", "xor~esi,esi", "cmp~bucket,r8", "jnb~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["cmp     [table+20h], rdx", "setz    al", "retn"], ["cmp~[table+0],rdx", "setz~al", "retn"]]], "func_feature": [0, 5, 4, 0, 9, 13, 0, 28, 0.1131, 0, 4], "succs": [[1, 5], [0, 2], [0, 4], [0, 3], [3], [8, 7], [1, 5], [], []], "fname": "hash_table_ok", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[2, 0, 2, 0, 0, 8, 2, 1, 0, 0, 0.06043956043956045, ["mov     rax, rbp", "pxor    xmm1, xmm1", "shr     rax, 1", "and     ebp, 1", "or      rax, rbp", "cvtsi2sd xmm1, rax", "addsd   xmm1, xmm1", "jmp     loc_5738"], ["mov~rax,rbp", "pxor~xmm1,xmm1", "shr~rax,0", "and~ebp,0", "or~rax,rbp", "cvtsi2sd~xmm1,rax", "addsd~xmm1,xmm1", "jmp~FOO"]], [0, 0, 4, 0, 0, 5, 1, 1, 2, 0, 0.09890109890109891, ["pxor    xmm0, xmm0", "test    rbp, rbp", "cvtsi2sd xmm0, r13", "mulsd   xmm0, cs:qword_B258", "js      short loc_57A9"], ["pxor~xmm0,xmm0", "test~rbp,rbp", "cvtsi2sd~xmm0,r13", "mulsd~xmm0,<TAG>", "js~FOO"]], [2, 0, 4, 0, 0, 11, 3, 0, 2, 0, 0.09890109890109891, ["mov     rax, r13", "mov     rdx, r13", "pxor    xmm0, xmm0", "shr     rax, 1", "and     edx, 1", "or      rax, rdx", "test    rbp, rbp", "cvtsi2sd xmm0, rax", "addsd   xmm0, xmm0", "mulsd   xmm0, cs:qword_B258", "jns     short loc_572F"], ["mov~rax,r13", "mov~rdx,r13", "pxor~xmm0,xmm0", "shr~rax,0", "and~edx,0", "or~rax,rdx", "test~rbp,rbp", "cvtsi2sd~xmm0,rax", "addsd~xmm0,xmm0", "mulsd~xmm0,<TAG>", "jns~FOO"]], [1, 0, 13, 0, 0, 4, 1, 1, 3, 0, 0.08241758241758243, ["mov     rax, [rsi+8]", "mov     edx, 1", "test    rax, rax", "jz      short loc_56D5"], ["mov~rax,[rsi+0]", "mov~edx,0", "test~rax,rax", "jz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 2, 0, 0.14835164835164835, ["cmp     qword ptr [rsi], 0", "jz      short loc_56DC"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 13, 1, 0, 3, 0, 0, 3, 0, 0.28571428571428575, ["add     rsi, 10h", "cmp     rsi, rdi", "jb      short loc_56B0"], ["add~rsi,0", "cmp~rsi,rdi", "jb~FOO"]], [0, 0, 13, 0, 0, 2, 0, 0, 4, 0, 0.16483516483516486, ["cmp     rbx, rdx", "cmovb   rbx, rdx"], ["cmp~rbx,rdx", "cmovb~rbx,rdx"]], [0, 0, 13, 0, 0, 1, 0, 0, 4, 0, 0.03296703296703297, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 14, 1, 0, 14, 1, 0, 0, 0, 0.0, ["push    r13", "push    r12", "mov     r12, stream", "push    rbp", "push    rbx", "xor     ebx, ebx", "sub     rsp, 8", "mov     stream, [table]", "mov     rcx, [table+20h]", "mov     rbp, [table+10h]", "mov     r13, [table+18h]", "mov     table, [table+8]", "cmp     rsi, rdi", "jnb     short loc_56E5"], ["push~r13", "push~r12", "mov~r12,stream", "push~rbp", "push~rbx", "xor~ebx,ebx", "sub~rsp,0", "mov~stream,<TAG>", "mov~rcx,[table+0]", "mov~rbp,[table+0]", "mov~r13,[table+0]", "mov~table,[table+0]", "cmp~rsi,rdi", "jnb~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 1, 0, 0.03296703296703297, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0.0, [], []], [4, 0, 1, 1, 1, 18, 1, 2, 4, 0, 0.07142857142857144, ["divsd   xmm0, xmm1", "lea     rdx, aBucketsUsedLu2; \"# buckets used:    %lu (%.2f%%)\\n\"", "mov     rcx, r13", "mov     rdi, stream", "mov     esi, 1", "mov     eax, 1", "call    ___fprintf_chk", "add     rsp, 8", "mov     rcx, rbx", "mov     rdi, stream", "pop     rbx", "pop     rbp", "pop     stream", "pop     r13", "lea     rdx, aMaxBucketLengt; \"max bucket length: %lu\\n\"", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["divsd~xmm0,xmm1", "lea~rdx,<TAG>", "mov~rcx,r13", "mov~rdi,stream", "mov~esi,0", "mov~eax,0", "call~FOO", "add~rsp,0", "mov~rcx,rbx", "mov~rdi,stream", "pop~rbx", "pop~rbp", "pop~stream", "pop~r13", "lea~rdx,<TAG>", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [2, 0, 6, 0, 2, 13, 3, 3, 1, 0, 0.26373626373626374, ["lea     rdx, aEntriesLu; \"# entries:         %lu\\n\"", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rdx, aBucketsLu; \"# buckets:         %lu\\n\"", "xor     eax, eax", "mov     rcx, rbp", "mov     esi, 1", "mov     rdi, stream", "call    ___fprintf_chk", "test    r13, r13", "js      short loc_5780"], ["lea~rdx,<TAG>", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rdx,<TAG>", "xor~eax,eax", "mov~rcx,rbp", "mov~esi,0", "mov~rdi,stream", "call~FOO", "test~r13,r13", "js~FOO"]], [1, 0, 13, 1, 0, 4, 1, 1, 5, 0, 0.06043956043956045, ["mov     rax, [rax+8]", "add     rdx, 1", "test    rax, rax", "jnz     short loc_56C8"], ["mov~rax,[rax+0]", "add~rdx,0", "test~rax,rax", "jnz~FOO"]], [0, 0, 2, 0, 0, 2, 0, 0, 3, 0, 0.06043956043956045, ["pxor    xmm1, xmm1", "cvtsi2sd xmm1, rbp"], ["pxor~xmm1,xmm1", "cvtsi2sd~xmm1,rbp"]]], "func_feature": [3, 13, 10, 0, 15, 22, 0, 88, 0.09744, 5, 4], "succs": [[11], [0, 14], [0, 14], [6, 7], [3, 5], [12, 4], [5], [13], [9, 12], [4], [], [10], [1, 2], [13, 6], [11]], "fname": "hash_print_statistics", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0.03571428571428571, ["jmp     short loc_5821"], ["jmp~FOO"]], [0, 0, 6, 0, 0, 3, 1, 1, 1, -1, 0.10714285714285714, ["mov     rsi, [bucket+0]", "test    rsi, rsi", "jnz     short loc_580C"], ["mov~rsi,[bucket+0]", "test~rsi,rsi", "jnz~FOO"]], [1, 0, 8, 2, 1, 13, 0, 1, 0, 1, 0.0, ["push    r13", "push    r12", "mov     r13, entry", "push    rbp", "mov     rbp, [table]", "mov     r12, table", "mov     entry, [table+10h]", "mov     table, entry", "call    qword ptr [table+30h]", "shl     rax, 4", "add     rbp, rax", "cmp     [table+8], bucket", "jbe     short loc_583A"], ["push~r13", "push~r12", "mov~r13,entry", "push~rbp", "mov~rbp,<TAG>", "mov~r12,table", "mov~entry,[table+0]", "mov~table,entry", "call~[word ptr [table+0]", "shl~rax,0", "add~rbp,rax", "cmp~[table+0],bucket", "jbe~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 4, -1, 0.03571428571428571, ["mov     rsi, [cursor+0]"], ["mov~rsi,[cursor+0]"]], [0, 0, 5, 0, 0, 3, 1, 1, 3, -1, 0.08928571428571427, ["mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_5808"], ["mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 0, 0, 0, 5, 1, 0, 3, -1, 0.0, ["pop     rbp", "xor     eax, eax", "pop     table", "pop     entry", "retn"], ["pop~rbp", "xor~eax,eax", "pop~table", "pop~entry", "retn"]], [0, 0, 5, 0, 1, 4, 1, 2, 2, -1, 0.17857142857142855, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_5830"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 3, -1, 0.0, ["mov     rax, [cursor+0]", "pop     cursor", "pop     table", "pop     entry", "retn"], ["mov~rax,[cursor+0]", "pop~cursor", "pop~table", "pop~entry", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [3, 4, 7, 0, 9, 10, 1, 36, 0.0496, 0, 2], "succs": [[5], [0, 6], [8, 1], [6], [3, 5], [], [4, 7], [], []], "fname": "hash_lookup", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[1, 0, 9, 0, 0, 2, 0, 1, 0, 0, 0.0, ["cmp     qword ptr [table+20h], 0", "jz      short loc_5873"], ["cmp~[word ptr [table+0],0", "jz~FOO"]], [1, 0, 4, 1, 0, 3, 0, 0, 0, 1, 0.15277777777777776, ["add     bucket, 10h", "cmp     bucket, rcx", "jnb     short loc_5878"], ["add~bucket,0", "cmp~bucket,rcx", "jnb~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 0, 2, 0.06944444444444445, ["mov     rax, [bucket]", "test    rax, rax", "jz      short loc_5860"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 0, 2, 0.1388888888888889, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 7, 0, 0, 4, 0, 0, 0, 1, 0.09722222222222221, ["mov     rdx, [table]", "mov     rcx, [table+8]", "cmp     bucket, rcx", "jnb     short loc_5878"], ["mov~rdx,<TAG>", "mov~rcx,[table+0]", "cmp~bucket,rcx", "jnb~FOO"]], [0, 0, 0, 0, 0, 2, 1, 0, 0, -1, 0.0, ["xor     eax, eax", "retn"], ["xor~eax,eax", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 6, 0, 0, 3, 1, 1, 0, 3, 0.1388888888888889, ["mov     rax, [bucket]", "test    rax, rax", "jnz     short locret_5876"], ["mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 0, 1, 1, 2, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "call    _abort"], ["sub~rsp,0", "call~FOO"]]], "func_feature": [1, 3, 4, 0, 10, 11, 0, 22, 0.05972, 0, 2], "succs": [[4, 5], [9, 2], [8, 1], [1], [9, 7], [], [], [3, 6], [], []], "fname": "hash_get_first", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 9, 0, 0, 3, 1, 1, 0, 0, 0.08181818181818182, ["test    cursor, cursor", "mov     rax, cursor", "jz      short loc_58F8"], ["test~cursor,cursor", "mov~rax,cursor", "jz~FOO"]], [1, 0, 11, 1, 1, 14, 0, 1, 0, 1, 0.0, ["push    r12", "push    rbp", "mov     r12, table", "push    rbx", "mov     rbx, [table]", "mov     rbp, entry", "mov     entry, [table+10h]", "mov     table, entry", "call    qword ptr [table+30h]", "mov     rsi, [table+8]", "shl     rax, 4", "lea     rdx, [rbx+rax]", "cmp     rsi, bucket", "jbe     short loc_5908"], ["push~r12", "push~rbp", "mov~r12,table", "push~rbx", "mov~rbx,<TAG>", "mov~rbp,entry", "mov~entry,[table+0]", "mov~table,entry", "call~[word ptr [table+0]", "mov~rsi,[table+0]", "shl~rax,0", "lea~rdx,<TAG>", "cmp~rsi,bucket", "jbe~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 3, -1, 0.09090909090909091, ["test    rax, rax", "jz      short loc_58F8"], ["test~rax,rax", "jz~FOO"]], [0, 0, 8, 0, 0, 4, 0, 1, 2, -1, 0.07272727272727272, ["mov     rcx, [rax]", "mov     rax, [rax+8]", "cmp     rcx, entry", "jz      short loc_58E0"], ["mov~rcx,<TAG>", "mov~rax,[rax+0]", "cmp~rcx,entry", "jz~FOO"]], [0, 0, 8, 0, 0, 4, 0, 1, 4, -1, 0.01818181818181818, ["mov     rcx, [cursor]", "mov     cursor, [cursor+8]", "cmp     rcx, entry", "jnz     short loc_58CF"], ["mov~rcx,<TAG>", "mov~cursor,[cursor+0]", "cmp~rcx,entry", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, -1, 0.02727272727272727, ["mov     rax, [rax]"], ["mov~rax,<TAG>"]], [0, 0, 0, 0, 0, 5, 1, 0, 3, -1, 0.0, ["pop     rbx", "xor     eax, eax", "pop     entry", "pop     table", "retn"], ["pop~rbx", "xor~eax,eax", "pop~entry", "pop~table", "retn"]], [1, 0, 4, 1, 0, 3, 0, 1, 2, -1, 0.14545454545454545, ["add     bucket, 10h", "cmp     rsi, bucket", "ja      short loc_58F0"], ["add~bucket,0", "cmp~rsi,bucket", "ja~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 4, -1, 0.0, ["pop     rbx", "pop     entry", "pop     table", "retn"], ["pop~rbx", "pop~entry", "pop~table", "retn"]], [0, 0, 4, 0, 0, 3, 1, 1, 3, -1, 0.03636363636363636, ["mov     rax, [bucket]", "test    rax, rax", "jnz     short loc_58E8"], ["mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 3, -1, 0.05454545454545454, ["test    rax, rax", "jz      short loc_58F8"], ["test~rax,rax", "jz~FOO"]]], "func_feature": [2, 5, 9, 0, 12, 17, 0, 46, 0.04394, 0, 2], "succs": [[3, 7], [0, 8], [5, 7], [2, 11], [2, 11], [9], [], [10, 6], [], [], [9, 7], [4, 7]], "fname": "hash_get_next", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 10, 0, 0, 3, 1, 1, 0, 0, 0.30303030303030304, ["mov     rcx, [bucket]", "test    rcx, rcx", "jz      short loc_595D"], ["mov~rcx,<TAG>", "test~rcx,rcx", "jz~FOO"]], [1, 0, 10, 1, 0, 3, 0, 1, 3, -1, 0.20833333333333334, ["add     bucket, 10h", "cmp     [table+8], bucket", "ja      short loc_591C"], ["add~bucket,0", "cmp~[table+0],bucket", "ja~FOO"]], [0, 0, 10, 0, 0, 1, 1, 0, 1, -1, 0.07575757575757576, ["xor     r8d, r8d"], ["xor~r8d,r8d"]], [0, 0, 10, 0, 0, 2, 0, 1, 6, -1, 0.17424242424242425, ["cmp     buffer_size, counter", "jz      short locret_5970"], ["cmp~buffer_size,counter", "jz~FOO"]], [1, 0, 10, 1, 0, 6, 1, 1, 7, -1, 0.09848484848484848, ["mov     r8, [cursor]", "add     counter, 1", "mov     [buffer+counter*8-8], r8", "mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_5940"], ["mov~r8,<TAG>", "add~counter,0", "mov~[buffer+0],r8", "mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 10, 0, 0, 1, 0, 0, 5, -1, 0.1590909090909091, ["nop     word ptr [counter+counter+00h]"], ["nop~[ord ptr [counter+0]"]], [0, 0, 10, 0, 0, 1, 0, 0, 5, -1, 0.17424242424242425, ["mov     r8, counter"], ["mov~r8,counter"]], [0, 0, 10, 0, 0, 2, 0, 0, 3, -1, 0.2689393939393939, ["cmp     buffer_size, counter", "jbe     short loc_5967"], ["cmp~buffer_size,counter", "jbe~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     rax, counter", "retn"], ["mov~rax,counter", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 7, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 2, 1, 0, 1, 0, 0.0, ["xor     eax, eax", "retn"], ["xor~eax,eax", "retn"]], [0, 0, 12, 0, 0, 3, 0, 0, 0, 1, 0.0, ["mov     bucket, [table]", "cmp     [table+8], bucket", "jbe     short loc_5972"], ["mov~bucket,<TAG>", "cmp~[table+0],bucket", "jbe~FOO"]], [0, 0, 10, 0, 0, 5, 1, 1, 4, -1, 0.25, ["mov     [buffer+counter*8], rcx", "mov     rcx, [cursor+8]", "lea     rax, [counter+1]", "test    cursor, cursor", "jz      short loc_595A"], ["mov~<TAG>,rcx", "mov~rcx,[cursor+0]", "lea~rax,[counter+0]", "test~cursor,cursor", "jz~FOO"]]], "func_feature": [0, 5, 5, 0, 13, 17, 0, 32, 0.1317, 0, 2], "succs": [[1, 7], [0, 8], [0], [9, 4], [3, 6], [3], [1], [8, 12], [], [], [], [10, 2], [5, 6]], "fname": "hash_get_entries", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 7, 0, 0, 4, 1, 0, 0, 0, 0.08333333333333333, ["mov     r13, processor_data", "mov     r12, processor", "mov     r15, table", "xor     ebp, ebp"], ["mov~r13,processor_data", "mov~r12,processor", "mov~r15,table", "xor~ebp,ebp"]], [1, 0, 9, 1, 0, 10, 0, 0, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r14, [table]", "cmp     [table+8], bucket", "jbe     short loc_59E6"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r14,<TAG>", "cmp~[table+0],bucket", "jbe~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     bucket", "pop     r15", "retn"], ["add~rsp,0", "mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~bucket", "pop~r15", "retn"]], [0, 0, 7, 0, 1, 4, 1, 2, 4, -1, 0.25, ["mov     rsi, processor_data", "call    processor", "test    al, al", "jz      short loc_59D4"], ["mov~rsi,processor_data", "call~processor", "test~al,al", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 1, 1, 1, 0, 0.013888888888888888, ["xor     ebp, ebp", "jmp     short loc_59D4"], ["xor~ebp,ebp", "jmp~FOO"]], [1, 0, 7, 1, 0, 3, 0, 1, 3, -1, 0.1388888888888889, ["add     bucket, 10h", "cmp     [table+8], bucket", "ja      short loc_59A2"], ["add~bucket,0", "cmp~[table+0],bucket", "ja~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 2, -1, 0.25, ["mov     rdi, [bucket]", "test    rdi, rdi", "jz      short loc_59CA"], ["mov~rdi,<TAG>", "test~rdi,rdi", "jz~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 3, -1, 0.16666666666666666, ["mov     rbx, bucket", "jmp     short loc_59B3"], ["mov~rbx,bucket", "jmp~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 6, -1, 0.013888888888888888, ["mov     rdi, [cursor]"], ["mov~rdi,<TAG>"]], [1, 0, 7, 1, 0, 4, 1, 1, 5, -1, 0.19444444444444442, ["mov     cursor, [cursor+8]", "add     counter, 1", "test    cursor, cursor", "jnz     short loc_59B0"], ["mov~cursor,[cursor+0]", "add~counter,0", "test~cursor,cursor", "jnz~FOO"]]], "func_feature": [1, 5, 7, 0, 10, 14, 0, 42, 0.11111, 0, 4], "succs": [[6], [0, 4], [], [9, 2], [2], [2, 6], [5, 7], [3], [3], [8, 5]], "fname": "hash_do_for_each", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, rdx", "retn"], ["mov~rax,rdx", "retn"]], [0, 0, 3, 0, 0, 4, 2, 1, 0, 0, 0.0, ["movzx   ecx, byte ptr [string]", "xor     edx, edx", "test    cl, cl", "jz      short loc_5A1D"], ["movzx~ecx,<TAG>", "xor~edx,edx", "test~cl,cl", "jz~FOO"]], [2, 0, 2, 5, 0, 10, 2, 1, 2, 0, 0.16666666666666666, ["mov     rax, value", "add     string, 1", "shl     rax, 5", "sub     rax, value", "xor     edx, edx", "add     rax, ch_0", "movzx   ecx, byte ptr [rdi]", "div     n_buckets", "test    cl, cl", "jnz     short loc_5A00"], ["mov~rax,value", "add~string,0", "shl~rax,0", "sub~rax,value", "xor~edx,edx", "add~rax,ch_0", "movzx~ecx,<TAG>", "div~,n_buckets", "test~cl,cl", "jnz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 1, 0, 0.16666666666666666, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]]], "func_feature": [0, 4, 2, 0, 4, 5, 0, 17, 0.08333, 0, 5], "succs": [[], [0, 3], [0, 2], [2]], "fname": "hash_string", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[3, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0.0, ["mov     rax, 3F80000000000000h", "mov     byte ptr [tuning+10h], 0", "mov     [tuning], rax", "mov     rax, 3FB4FDF43F4CCCCDh", "mov     [tuning+8], rax", "retn"], ["mov~rax,0", "mov~[yte ptr [tuning+0],0", "mov~<TAG>,rax", "mov~rax,0", "mov~[tuning+0],rax", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 6, 0.0, 0, 0], "succs": [[]], "fname": "hash_reset_tuning", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 18, 0, 0, 3, 0, 0, 0, 0, 0.12931034482758622, ["divss   xmm0, xmm1", "ucomiss xmm0, cs:dword_B24C", "jnb     short fail"], ["divss~xmm0,xmm1", "ucomiss~xmm0,<TAG>", "jnb~FOO"]], [2, 0, 19, 0, 0, 8, 2, 1, 6, 0, 0.04802955665024631, ["mov     rax, candidate", "pxor    xmm0, xmm0", "shr     rax, 1", "and     ebx, 1", "or      rax, rbx", "cvtsi2ss xmm0, rax", "addss   xmm0, xmm0", "jmp     short loc_5BFF"], ["mov~rax,candidate", "pxor~xmm0,xmm0", "shr~rax,0", "and~ebx,0", "or~rax,rbx", "cvtsi2ss~xmm0,rax", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 19, 0, 0, 2, 0, 0, 6, -1, 0.04802955665024631, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, candidate"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,candidate"]], [2, 0, 13, 2, 0, 10, 0, 0, 8, -1, 0.2210591133004926, ["mov     rax, rbx", "mov     rcx, rbx", "mul     r8", "mov     rax, rdx", "shr     rax, 1", "lea     rax, [rax+rax*2]", "sub     rcx, rax", "cmp     rbx, 9", "mov     rax, rcx", "jbe     short loc_5B48"], ["mov~rax,rbx", "mov~rcx,rbx", "mul~,r8", "mov~rax,rdx", "shr~rax,0", "lea~rax,<TAG>", "sub~rcx,rax", "cmp~rbx,0", "mov~rax,rcx", "jbe~FOO"]], [1, 0, 13, 1, 0, 2, 0, 1, 10, -1, 0.021551724137931036, ["add     rbx, 2", "jmp     short loc_5AF0"], ["add~rbx,0", "jmp~FOO"]], [4, 0, 13, 0, 0, 6, 1, 0, 7, -1, 0.19704433497536947, ["cmp     candidate, 0Ah", "mov     eax, 0Ah", "mov     r8, 0AAAAAAAAAAAAAAABh", "cmovb   candidate, rax", "or      rbx, 1", "nop     dword ptr [rax+00h]"], ["cmp~candidate,0", "mov~eax,0", "mov~r8,0", "cmovb~candidate,rax", "or~rbx,0", "nop~[word ptr [rax+0]"]], [0, 1, 27, 0, 1, 9, 1, 2, 2, 4, 0.06157635467980296, ["mov     rbx, candidate", "mov     edi, 50h ; 'P'; size", "mov     r15, tuning", "mov     rbp, hasher", "mov     r13, data_freer", "call    malloc", "test    rax, rax", "mov     r14, rax", "jz      loc_5BD0"], ["mov~rbx,candidate", "mov~edi,<STR>", "mov~r15,tuning", "mov~rbp,hasher", "mov~r13,data_freer", "call~FOO", "test~rax,rax", "mov~r14,rax", "jz~FOO"]], [0, 0, 28, 0, 0, 3, 1, 1, 1, 5, 0.03201970443349754, ["test    comparator, comparator", "mov     r12, comparator", "jz      loc_5BD0"], ["test~comparator,comparator", "mov~r12,comparator", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 9, -1, 0.0874384236453202, ["test    rcx, rcx", "jz      short loc_5B4D"], ["test~rcx,rcx", "jz~FOO"]], [0, 0, 17, 0, 0, 2, 0, 0, 8, -1, 0.11822660098522167, ["ucomiss xmm0, cs:dword_B250", "jb      short loc_5C34"], ["ucomiss~xmm0,<TAG>", "jb~FOO"]], [1, 0, 15, 0, 0, 5, 1, 1, 9, -1, 0.053571428571428575, ["subss   xmm0, cs:dword_B250", "mov     rax, 8000000000000000h", "cvttss2si rbx, xmm0", "xor     rbx, rax", "jmp     loc_5ABE"], ["subss~xmm0,<TAG>", "mov~rax,0", "cvttss2si~rbx,xmm0", "xor~rbx,rax", "jmp~FOO"]], [0, 0, 26, 0, 0, 3, 1, 1, 3, 3, 0.08866995073891626, ["test    tuning, tuning", "lea     rdi, [table+28h]; table", "jz      loc_5BD5"], ["test~tuning,tuning", "lea~rdi,[table+0]", "jz~FOO"]], [3, 0, 13, 0, 0, 4, 0, 1, 10, -1, 0.05603448275862069, ["mov     edi, 10h", "mov     esi, 9", "mov     ecx, 3", "jmp     short loc_5B31"], ["mov~edi,0", "mov~esi,0", "mov~ecx,0", "jmp~FOO"]], [4, 0, 1, 2, 0, 9, 0, 0, 12, -1, 0.0067733990147783255, ["shl     rbx, 4", "mov     qword ptr [table+18h], 0", "mov     qword ptr [table+20h], 0", "add     rbx, rax", "mov     [table+30h], hasher", "mov     [table+38h], comparator", "mov     [table+8], rbx", "mov     [table+40h], data_freer", "mov     qword ptr [table+48h], 0"], ["shl~rbx,0", "mov~[word ptr [table+0],0", "mov~[word ptr [table+0],0", "add~rbx,rax", "mov~[table+0],hasher", "mov~[table+0],comparator", "mov~[table+0],rbx", "mov~[table+0],data_freer", "mov~[word ptr [table+0],0"]], [1, 0, 4, 0, 1, 6, 1, 2, 11, -1, 0.03633004926108374, ["mov     esi, 10h; size", "mov     rdi, rbx; nmemb", "call    _calloc", "test    rax, rax", "mov     [table], rax", "jz      short fail"], ["mov~esi,0", "mov~rdi,rbx", "call~FOO", "test~rax,rax", "mov~<TAG>,rax", "jz~FOO"]], [0, 0, 23, 0, 1, 4, 1, 2, 4, 3, 0.07266009852216748, ["mov     [table+28h], tuning", "call    check_tuning", "test    al, al", "jz      fail"], ["mov~[table+0],tuning", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 2, 0, 1, 2, 0, 1, 5, -1, 0.049876847290640396, ["mov     rdi, table; ptr", "call    free"], ["mov~rdi,table", "call~FOO"]], [1, 0, 14, 0, 0, 3, 0, 1, 6, -1, 0.21798029556650247, ["mov     rax, 0FFFFFFFFFFFFFFFh", "cmp     candidate, rax", "ja      fail"], ["mov~rax,0", "cmp~candidate,rax", "ja~FOO"]], [1, 0, 5, 0, 0, 4, 0, 1, 10, -1, 0.08866995073891626, ["mov     rax, 0FFFFFFFFFFFFFFFh", "mov     [table+10h], rbx", "cmp     rbx, rax", "ja      short fail"], ["mov~rax,0", "mov~[table+0],rbx", "cmp~rbx,rax", "ja~FOO"]], [0, 0, 22, 0, 1, 6, 1, 2, 4, 2, 0.038177339901477834, ["lea     table, default_tuning", "mov     [table+28h], rax", "call    check_tuning", "test    al, al", "movss   xmm1, cs:dword_B248", "jz      short fail"], ["lea~table,<TAG>", "mov~[table+0],rax", "call~FOO", "test~al,al", "movss~xmm1,<TAG>", "jz~FOO"]], [1, 0, 13, 1, 0, 3, 1, 1, 12, -1, 0.004310344827586207, ["add     rdi, 8", "test    rdx, rdx", "jz      short loc_5B4D"], ["add~rdi,0", "test~rdx,rdx", "jz~FOO"]], [1, 0, 13, 3, 0, 8, 1, 1, 11, -1, 0.05233990147783251, ["add     rcx, 2", "xor     edx, edx", "mov     rax, rbx", "div     rcx", "add     rsi, rdi", "cmp     rbx, rsi", "mov     rax, rdx", "ja      short loc_5B28"], ["add~rcx,0", "xor~edx,edx", "mov~rax,rbx", "div~,rcx", "add~rsi,rdi", "cmp~rbx,rsi", "mov~rax,rdx", "ja~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 5, 2, 0.0874384236453202, ["cmp     byte ptr [tuning+10h], 0", "jz      loc_5C3E"], ["cmp~[yte ptr [tuning+0],0", "jz~FOO"]], [0, 0, 15, 0, 0, 2, 0, 1, 9, -1, 0.053571428571428575, ["cvttss2si rbx, xmm0", "jmp     loc_5ABE"], ["cvttss2si~rbx,xmm0", "jmp~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "mov     rax, r14", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "mov~rax,r14", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 1, 0, 0, 2, 1, 1, 1, -1, 0.02647783251231527, ["xor     r14d, r14d", "jmp     short loc_5BAF"], ["xor~r14d,r14d", "jmp~FOO"]], [0, 0, 21, 0, 0, 3, 1, 0, 6, 1, 0.014778325123152709, ["test    candidate, candidate", "movss   xmm1, dword ptr [tuning+8]", "jns     short loc_5BF6"], ["test~candidate,candidate", "movss~xmm1,[word ptr [tuning+0]", "jns~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 9, -1, 0.12623152709359606, ["test    rax, rax", "jnz     short loc_5B58"], ["test~rax,rax", "jnz~FOO"]], [1, 0, 29, 1, 0, 9, 1, 1, 0, 6, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "test    hasher, hasher", "jz      loc_5BD0"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "test~hasher,hasher", "jz~FOO"]], [0, 0, 21, 0, 0, 2, 1, 1, 5, 1, 0.05172413793103448, ["test    candidate, candidate", "js      short loc_5C49"], ["test~candidate,candidate", "js~FOO"]]], "func_feature": [5, 18, 26, 0, 30, 48, 2, 135, 0.06966, 4, 11], "succs": [[16, 9], [0], [0], [8, 27], [3], [3], [25, 11], [25, 6], [4, 12], [10, 23], [17], [19, 15], [21], [24], [16, 13], [16, 22], [25], [16, 5], [16, 14], [16, 29], [4, 21], [27, 20], [17, 26], [17], [], [24], [1, 2], [18, 4], [25, 7], [1, 2]], "fname": "hash_initialize", "n_num": 30}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 11, 0, 1, 3, 0, 1, 0, 0, 0.0, ["mov     rdi, [cursor]", "call    rax", "mov     rax, [table+40h]"], ["mov~rdi,<TAG>", "call~rax", "mov~rax,[table+0]"]], [0, 0, 11, 0, 0, 2, 1, 1, 4, 5, 0.21818181818181817, ["test    rax, rax", "jz      short loc_5CA6"], ["test~rax,rax", "jz~FOO"]], [1, 0, 11, 0, 0, 8, 1, 1, 5, 4, 0.21818181818181817, ["mov     rdx, [cursor+8]", "mov     rcx, [table+48h]", "mov     qword ptr [cursor], 0", "test    next, next", "mov     [cursor+8], rcx", "mov     [table+48h], cursor", "mov     rbx, next", "jnz     short loc_5C98"], ["mov~rdx,[cursor+0]", "mov~rcx,[table+0]", "mov~<TAG>,0", "test~next,next", "mov~[cursor+0],rcx", "mov~[table+0],cursor", "mov~rbx,next", "jnz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 1, 2, 0.3818181818181818, ["cmp     qword ptr [bucket], 0", "jz      short loc_5CE1"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 11, 1, 0, 3, 0, 1, 2, 1, 0.3818181818181818, ["add     bucket, 10h", "cmp     [table+8], bucket", "ja      short loc_5C80"], ["add~bucket,0", "cmp~[table+0],bucket", "ja~FOO"]], [0, 0, 11, 0, 0, 7, 0, 0, 0, 1, 0.0, ["push    r12", "push    rbp", "mov     rbp, table", "push    rbx", "mov     r12, [table]", "cmp     bucket, [table+8]", "jnb     short loc_5CEB"], ["push~r12", "push~rbp", "mov~rbp,table", "push~rbx", "mov~r12,<TAG>", "cmp~bucket,[table+0]", "jnb~FOO"]], [0, 0, 11, 0, 0, 2, 1, 1, 3, 3, 0.35454545454545455, ["test    rax, rax", "jz      short loc_5CD0"], ["test~rax,rax", "jz~FOO"]], [0, 0, 11, 0, 0, 4, 1, 1, 2, 4, 0.35454545454545455, ["mov     rbx, [bucket+8]", "mov     rax, [table+40h]", "test    cursor, cursor", "jz      short loc_5CC5"], ["mov~rbx,[bucket+0]", "mov~rax,[table+0]", "test~cursor,cursor", "jz~FOO"]], [2, 0, 11, 0, 0, 2, 0, 0, 4, 2, 0.35454545454545455, ["mov     qword ptr [bucket], 0", "mov     qword ptr [bucket+8], 0"], ["mov~<TAG>,0", "mov~[word ptr [bucket+0],0"]], [0, 0, 11, 0, 1, 2, 0, 1, 4, 3, 0.0, ["mov     rdi, [bucket]", "call    rax"], ["mov~rdi,<TAG>", "call~rax"]], [0, 0, 11, 0, 0, 1, 0, 0, 3, 6, 0.1909090909090909, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [2, 0, 0, 0, 0, 6, 0, 0, 1, 0, 0.0, ["mov     qword ptr [table+18h], 0", "mov     qword ptr [table+20h], 0", "pop     rbx", "pop     table", "pop     bucket", "retn"], ["mov~[word ptr [table+0],0", "mov~[word ptr [table+0],0", "pop~rbx", "pop~table", "pop~bucket", "retn"]]], "func_feature": [2, 4, 8, 0, 12, 18, 0, 42, 0.20455, 0, 1], "succs": [[2], [0, 2], [1, 6], [4, 7], [11, 3], [11, 3], [8, 9], [10, 6], [4], [8], [1], []], "fname": "hash_clear", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 9, 0, 1, 5, 1, 2, 0, 0, 0.01666666666666667, ["mov     rbx, [cursor+8]", "call    free", "test    next, next", "mov     rdi, next", "jnz     short loc_5D80"], ["mov~rbx,[cursor+0]", "call~FOO", "test~next,next", "mov~rdi,next", "jnz~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 4, 4, 0.03571428571428572, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 21, 0, 0, 8, 0, 1, 0, 3, 0.0, ["push    r12", "push    rbp", "mov     r12, table", "push    rbx", "cmp     qword ptr [table+40h], 0", "mov     rbp, [table]", "mov     rax, [table+8]", "jz      short loc_5D63"], ["push~r12", "push~rbp", "mov~r12,table", "push~rbx", "cmp~[word ptr [table+0],0", "mov~rbp,<TAG>", "mov~rax,[table+0]", "jz~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 1, 3, 0.02142857142857143, ["cmp     qword ptr [table+20h], 0", "jz      short loc_5D63"], ["cmp~[word ptr [table+0],0", "jz~FOO"]], [1, 0, 9, 1, 0, 3, 0, 1, 4, 2, 0.05476190476190477, ["add     bucket, 10h", "cmp     [table+8], bucket", "ja      short loc_5D70"], ["add~bucket,0", "cmp~[table+0],bucket", "ja~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 3, 3, 0.11190476190476191, ["mov     rdi, [bucket+8]; ptr", "test    cursor, cursor", "jz      short loc_5D91"], ["mov~rdi,[bucket+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 19, 0, 0, 2, 0, 0, 2, 2, 0.04404761904761905, ["cmp     bucket, rax", "jnb     short loc_5D9C"], ["cmp~bucket,rax", "jnb~FOO"]], [0, 0, 18, 0, 0, 1, 0, 0, 3, 6, 0.0642857142857143, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 4, 0, 0, 3, 1, 1, 2, 1, 0.1619047619047619, ["mov     rdi, [table+48h]; ptr", "test    cursor, cursor", "jz      short loc_5DC1"], ["mov~rdi,[table+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 10, 0, 0, 2, 0, 0, 1, 2, 0.24404761904761907, ["cmp     rbp, rax", "jnb     short loc_5D9C"], ["cmp~rbp,rax", "jnb~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 3, 2, 0.04285714285714286, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 18, 0, 0, 3, 1, 1, 4, 5, 0.11904761904761905, ["mov     rdi, [bucket+0]", "test    rdi, rdi", "jz      short loc_5D56"], ["mov~rdi,[bucket+0]", "test~rdi,rdi", "jz~FOO"]], [1, 0, 18, 1, 0, 3, 0, 1, 5, 4, 0.2142857142857143, ["add     bucket, 10h", "cmp     rax, bucket", "ja      short loc_5D28"], ["add~bucket,0", "cmp~rax,bucket", "ja~FOO"]], [0, 0, 18, 0, 0, 2, 0, 1, 5, 7, 0.04761904761904762, ["mov     rbx, bucket", "jmp     short loc_5D43"], ["mov~rbx,bucket", "jmp~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 4, 1, 0.004761904761904762, ["mov     rbx, [cursor+8]", "call    free", "test    next, next", "mov     rdi, next", "jnz     short loc_5DB0"], ["mov~rbx,[cursor+0]", "call~FOO", "test~next,next", "mov~rdi,next", "jnz~FOO"]], [0, 0, 18, 0, 0, 1, 0, 0, 7, 7, 0.0, ["mov     rdi, [cursor]"], ["mov~rdi,<TAG>"]], [0, 0, 18, 0, 1, 4, 1, 2, 6, 6, 0.10714285714285715, ["call    qword ptr [table+40h]", "mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_5D40"], ["call~[word ptr [table+0]", "mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 1, 0, 1, 7, 0, 2, 3, 0, 0.04761904761904762, ["mov     cursor, [table]; ptr", "call    free", "pop     rbx", "mov     rdi, table; ptr", "pop     rbp", "pop     table", "jmp     free"], ["mov~cursor,<TAG>", "call~FOO", "pop~rbx", "mov~rdi,table", "pop~rbp", "pop~table", "jmp~FOO"]], [0, 0, 18, 0, 0, 1, 0, 0, 7, 5, 0.10476190476190478, ["mov     rax, [table+8]"], ["mov~rax,[table+0]"]], [0, 0, 11, 0, 0, 1, 0, 0, 6, 3, 0.19761904761904764, ["mov     bucket, [table]"], ["mov~bucket,<TAG>"]], [0, 0, 9, 0, 0, 1, 0, 0, 2, 4, 0.1142857142857143, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []]], "func_feature": [4, 6, 16, 0, 22, 33, 1, 59, 0.07976, 0, 2], "succs": [[0, 4], [0], [9, 3], [9, 6], [8, 5], [1, 4], [8, 7], [11], [17, 10], [8, 20], [14], [12, 13], [19, 11], [16], [17, 14], [16], [18, 15], [21], [12], [9], [5], []], "fname": "hash_free", "n_num": 22}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[1, 0, 20, 2, 1, 8, 0, 1, 0, 0, 0.44155844155844154, ["mov     rbx, [new_table]", "mov     rsi, [new_table+10h]", "mov     rdi, r15", "call    qword ptr [new_table+30h]", "shl     rax, 4", "add     rbx, rax", "cmp     [new_table+8], new_bucket", "jbe     loc_5F90"], ["mov~rbx,<TAG>", "mov~rsi,[new_table+0]", "mov~rdi,r15", "call~[word ptr [new_table+0]", "shl~rax,0", "add~rbx,rax", "cmp~[new_table+0],new_bucket", "jbe~FOO"]], [0, 0, 20, 0, 0, 2, 0, 1, 4, 2, 0.19047619047619047, ["mov     r13, bucket", "jmp     short loc_5E71"], ["mov~r13,bucket", "jmp~FOO"]], [0, 0, 20, 0, 0, 2, 0, 0, 9, 2, 0.2077922077922078, ["mov     r15, [next+0]", "mov     r13, next"], ["mov~r15,[next+0]", "mov~r13,next"]], [1, 0, 0, 1, 0, 9, 1, 0, 1, -1, 0.0, ["add     rsp, 18h", "xor     eax, eax", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "xor~eax,eax", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 22, 1, 1, 17, 1, 2, 0, 6, 0.0, ["push    r15", "push    r14", "mov     rax, table_0", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "mov     rcx, [rax+38h]; comparator", "mov     rdx, [rax+30h]; hasher", "mov     [rsp+48h+table], table_0", "mov     r8, [rax+40h]; data_freer", "mov     table_0, candidate; candidate", "mov     candidate, [table_0+28h]; tuning", "call    hash_initialize", "test    new_table, new_table", "jz      loc_5F7F"], ["push~r15", "push~r14", "mov~rax,table_0", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rcx,[rax+0]", "mov~rdx,[rax+0]", "mov~[rsp+0],table_0", "mov~r8,[rax+0]", "mov~table_0,candidate", "mov~candidate,[table_0+0]", "call~FOO", "test~new_table,new_table", "jz~FOO"]], [1, 0, 20, 0, 1, 4, 1, 2, 9, 5, 0.07034632034632035, ["mov     edi, 10h; size", "call    malloc", "test    rax, rax", "jnz     short loc_5F53"], ["mov~edi,0", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 20, 0, 0, 3, 0, 1, 6, 5, 0.4025974025974026, ["cmp     qword ptr [new_bucket], 0", "mov     rbp, [cursor+8]", "jnz     short loc_5E50"], ["cmp~<TAG>,0", "mov~rbp,[cursor+0]", "jnz~FOO"]], [1, 0, 20, 1, 0, 4, 0, 1, 7, 4, 0.16017316017316016, ["mov     [new_bucket], r15", "add     qword ptr [new_table+18h], 1", "cmp     bucket, cursor", "jz      short loc_5E65"], ["mov~<TAG>,r15", "add~[word ptr [new_table+0],0", "cmp~bucket,cursor", "jz~FOO"]], [0, 0, 20, 0, 0, 1, 0, 0, 9, 5, 0.010822510822510822, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 20, 0, 0, 6, 1, 1, 8, 3, 0.06060606060606061, ["mov     qword ptr [cursor+0], 0", "mov     rax, [new_table+48h]", "test    next, next", "mov     [cursor+8], rax", "mov     [new_table+48h], cursor", "jnz     short loc_5E6A"], ["mov~[word ptr [cursor+0],0", "mov~rax,[new_table+0]", "test~next,next", "mov~[cursor+0],rax", "mov~[new_table+0],cursor", "jnz~FOO"]], [0, 0, 21, 0, 0, 7, 0, 0, 1, 5, 0.04329004329004329, ["mov     rcx, [rsp+48h+table]", "mov     r12, new_table", "mov     r14, [rcx]", "cmp     [rcx+8], bucket", "mov     new_table, [rcx+48h]", "mov     [new_table+48h], rax", "jbe     loc_5EE6"], ["mov~rcx,[rsp+0]", "mov~r12,new_table", "mov~r14,<TAG>", "cmp~[rcx+0],bucket", "mov~new_table,[rcx+0]", "mov~[new_table+0],rax", "jbe~FOO"]], [0, 0, 20, 0, 0, 1, 0, 0, 2, 4, 0.08008658008658008, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [2, 0, 0, 1, 2, 24, 0, 2, 2, -1, 0.0, ["mov     rdi, r14; ptr", "call    free", "mov     rax, [new_table]", "mov     rdx, [rsp+48h+table]", "mov     rdi, new_table; ptr", "mov     [rdx], rax", "mov     rax, [new_table+8]", "mov     [rdx+8], rax", "mov     rax, [new_table+10h]", "mov     [rdx+10h], rax", "mov     rax, [new_table+18h]", "mov     [rdx+18h], rax", "mov     rax, [new_table+48h]", "mov     [rdx+48h], rax", "call    free", "add     rsp, 18h", "mov     eax, 1", "pop     rbx", "pop     rbp", "pop     new_table", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~rdi,r14", "call~FOO", "mov~rax,<TAG>", "mov~rdx,[rsp+0]", "mov~rdi,new_table", "mov~<TAG>,rax", "mov~rax,[new_table+0]", "mov~[rdx+0],rax", "mov~rax,[new_table+0]", "mov~[rdx+0],rax", "mov~rax,[new_table+0]", "mov~[rdx+0],rax", "mov~rax,[new_table+0]", "mov~[rdx+0],rax", "call~FOO", "add~rsp,0", "mov~eax,0", "pop~rbx", "pop~rbp", "pop~new_table", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 1, 0, 0, 1, 0, 0, 5, -1, 0.0367965367965368, ["mov     bucket, [rax]"], ["mov~bucket,<TAG>"]], [0, 0, 20, 0, 0, 3, 1, 1, 3, 3, 0.20995670995670995, ["mov     r15, [bucket]", "test    r15, r15", "jz      loc_5ED0"], ["mov~r15,<TAG>", "test~r15,r15", "jz~FOO"]], [1, 0, 20, 1, 0, 4, 0, 1, 4, 4, 0.16233766233766234, ["mov     rax, [rsp+48h+table]", "add     bucket, 10h", "cmp     [rax+8], bucket", "ja      loc_5E38"], ["mov~rax,[rsp+0]", "add~bucket,0", "cmp~[rax+0],bucket", "ja~FOO"]], [0, 0, 20, 0, 0, 3, 1, 1, 8, 6, 0.1406926406926407, ["mov     rax, [new_table+48h]", "test    rax, rax", "jz      short loc_5F70"], ["mov~rax,[new_table+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 20, 0, 0, 2, 0, 1, 7, 5, 0.20562770562770563, ["cmp     bucket, cursor", "jz      loc_5F40"], ["cmp~bucket,cursor", "jz~FOO"]], [0, 0, 20, 0, 0, 2, 0, 0, 9, 5, 0.03354978354978355, ["mov     rcx, [rax+8]", "mov     [new_table+48h], rcx"], ["mov~rcx,[rax+0]", "mov~[new_table+0],rcx"]], [0, 0, 20, 0, 0, 2, 1, 1, 8, 3, 0.2813852813852814, ["test    next, next", "jz      short loc_5ED0"], ["test~next,next", "jz~FOO"]], [0, 0, 20, 0, 0, 3, 0, 0, 8, 4, 0.02813852813852814, ["mov     rax, [new_bucket+8]", "mov     [cursor+8], rax", "mov     [new_bucket+8], cursor"], ["mov~rax,[new_bucket+0]", "mov~[cursor+0],rax", "mov~[new_bucket+0],cursor"]], [0, 0, 20, 0, 0, 5, 0, 1, 10, 4, 0.10822510822510822, ["mov     rdx, [new_bucket+8]", "mov     [rax], r15", "mov     [rax+8], rdx", "mov     [new_bucket+8], rax", "jmp     loc_5E65"], ["mov~rdx,[new_bucket+0]", "mov~<TAG>,r15", "mov~[rax+0],rdx", "mov~[new_bucket+0],rax", "jmp~FOO"]]], "func_feature": [6, 7, 18, 0, 23, 32, 2, 114, 0.12498, 0, 7], "succs": [[6, 7], [0], [0], [], [11, 3], [3, 22], [], [8, 18], [10, 20], [16], [9, 2], [12, 13], [15], [], [13], [16, 1], [14, 15], [19, 5], [17, 21], [22], [16, 2], [20], [20]], "fname": "hash_rehash", "n_num": 23}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[1, 0, 31, 0, 0, 3, 0, 1, 0, 0, 0.049910873440285206, ["mov     r12, [rsp+28h+bucket]", "cmp     qword ptr [r12], 0", "jz      short loc_6030"], ["mov~r12,<TAG>", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 32, 0, 1, 7, 2, 2, 1, -1, 0.0285204991087344, ["xor     ecx, ecx; delete", "mov     rdx, rsp; bucket_head", "mov     rbp, table", "mov     rbx, entry", "call    hash_find_entry", "test    data, data", "jz      short loc_5FF8"], ["xor~ecx,ecx", "mov~rdx,rsp", "mov~rbp,table", "mov~rbx,entry", "call~FOO", "test~data,data", "jz~FOO"]], [0, 0, 10, 0, 0, 2, 0, 0, 14, -1, 0.10606060606060605, ["ucomiss xmm0, cs:dword_B24C", "jnb     short loc_609B"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [1, 0, 12, 0, 0, 3, 0, 1, 13, -1, 0.11853832442067735, ["cmp     byte ptr [tuning+10h], 0", "mulss   xmm0, dword ptr [tuning+0Ch]", "jnz     short loc_6101"], ["cmp~[yte ptr [tuning+0],0", "mulss~xmm0,[word ptr [tuning+0]", "jnz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 0, 14, -1, 0.0, ["mulss   xmm0, xmm2"], ["mulss~xmm0,xmm2"]], [0, 0, 7, 0, 0, 3, 1, 1, 3, -1, 0.013368983957219251, ["mov     data, [table+48h]", "test    rax, rax", "jz      short loc_6088"], ["mov~data,[table+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 4, -1, 0.0035650623885918, ["mov     rdx, [rax+8]", "mov     [table+48h], rdx"], ["mov~rdx,[rax+0]", "mov~[table+0],rdx"]], [0, 0, 8, 0, 0, 2, 0, 0, 15, -1, 0.07397504456327986, ["ucomiss xmm0, cs:dword_B250", "jnb     loc_61BE"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [1, 0, 5, 0, 1, 4, 1, 2, 4, -1, 0.0089126559714795, ["mov     edi, 10h; size", "call    malloc", "test    rax, rax", "jnz     loc_6014"], ["mov~edi,0", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 16, -1, 0.021836007130124777, ["cvttss2si rsi, xmm0; candidate"], ["cvttss2si~rsi,xmm0"]], [2, 0, 14, 0, 0, 8, 2, 1, 11, -1, 0.06818181818181818, ["mov     rcx, rax", "pxor    xmm1, xmm1", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm1, rcx", "addss   xmm1, xmm1", "jmp     loc_60E6"], ["mov~rcx,rax", "pxor~xmm1,xmm1", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm1,rcx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 16, 0, 0, 3, 1, 1, 10, -1, 0.14705882352941177, ["mov     rax, [table+18h]", "test    rax, rax", "js      loc_6180"], ["mov~rax,[table+0]", "test~rax,rax", "js~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 5, -1, 0.011140819964349376, ["xor     eax, eax", "jmp     loc_5FD6"], ["xor~eax,eax", "jmp~FOO"]], [0, 0, 5, 0, 1, 4, 1, 2, 17, -1, 0.0338680926916221, ["mov     rdi, table; table", "call    hash_rehash", "test    al, al", "jnz     loc_607B"], ["mov~rdi,table", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 6, 0, 0, 5, 1, 1, 16, -1, 0.021836007130124777, ["subss   xmm0, cs:dword_B250", "mov     rax, 8000000000000000h", "cvttss2si rsi, xmm0", "xor     rsi, rax", "jmp     loc_611C"], ["subss~xmm0,<TAG>", "mov~rax,0", "cvttss2si~rsi,xmm0", "xor~rsi,rax", "jmp~FOO"]], [1, 0, 3, 1, 0, 7, 0, 1, 5, -1, 0.007575757575757575, ["mov     rdx, [r12+8]", "mov     [rax], entry", "mov     [rax+8], rdx", "mov     [r12+8], rax", "mov     rax, entry", "add     qword ptr [table+20h], 1", "jmp     short loc_5FD6"], ["mov~rdx,[r12+0]", "mov~<TAG>,entry", "mov~[rax+0],rdx", "mov~[r12+0],rax", "mov~rax,entry", "add~[word ptr [table+0],0", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 18, -1, 0.0053475935828877, ["xor     eax, eax", "jmp     loc_5FD6"], ["xor~eax,eax", "jmp~FOO"]], [2, 0, 17, 0, 0, 8, 2, 1, 9, -1, 0.0641711229946524, ["mov     rcx, rax", "pxor    xmm0, xmm0", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm0, rcx", "addss   xmm0, xmm0", "jmp     loc_60D0"], ["mov~rcx,rax", "pxor~xmm0,xmm0", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm0,rcx", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 19, 0, 1, 7, 1, 2, 8, -1, 0.13101604278074866, ["lea     rdi, [table+28h]; table", "call    check_tuning", "mov     rax, [table+10h]", "mov     rdx, [table+28h]", "test    rax, rax", "movss   xmm2, dword ptr [rdx+8]", "js      loc_61A0"], ["lea~rdi,[table+0]", "call~FOO", "mov~rax,[table+0]", "mov~rdx,[table+0]", "test~rax,rax", "movss~xmm2,[word ptr [rdx+0]", "js~FOO"]], [1, 0, 34, 1, 0, 9, 2, 1, 0, 1, 0.0, ["push    r12", "push    rbp", "push    rbx", "sub     rsp, 10h", "mov     rax, fs:28h", "mov     [rsp+28h+var_20], rax", "xor     eax, eax", "test    entry, entry", "jz      loc_61E2"], ["push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~entry,entry", "jz~FOO"]], [2, 0, 24, 0, 0, 8, 2, 1, 4, -1, 0.0374331550802139, ["mov     rdx, rax", "pxor    xmm0, xmm0", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0", "jmp     loc_6057"], ["mov~rdx,rax", "pxor~xmm0,xmm0", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0", "jmp~FOO"]], [2, 0, 26, 2, 0, 7, 1, 1, 3, -1, 0.058823529411764705, ["mov     data, [table+18h]", "mov     [r12], entry", "add     qword ptr [table+20h], 1", "add     rax, 1", "test    rax, rax", "mov     [table+18h], rax", "js      loc_6160"], ["mov~data,[table+0]", "mov~<TAG>,entry", "add~[word ptr [table+0],0", "add~rax,0", "test~rax,rax", "mov~[table+0],rax", "js~FOO"]], [0, 0, 20, 0, 0, 3, 0, 1, 7, -1, 0.1497326203208556, ["mulss   xmm1, dword ptr [rdx+8]", "ucomiss xmm0, xmm1", "ja      short loc_60A8"], ["mulss~xmm1,[word ptr [rdx+0]", "ucomiss~xmm0,xmm1", "ja~FOO"]], [0, 0, 17, 0, 0, 2, 0, 0, 9, -1, 0.0641711229946524, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [2, 0, 21, 0, 0, 8, 2, 1, 6, -1, 0.06016042780748663, ["mov     rcx, rax", "pxor    xmm1, xmm1", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm1, rcx", "addss   xmm1, xmm1", "jmp     loc_6071"], ["mov~rcx,rax", "pxor~xmm1,xmm1", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm1,rcx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 23, 0, 0, 4, 1, 1, 5, -1, 0.1122994652406417, ["mov     rax, [table+10h]", "mov     rdx, [table+28h]", "test    rax, rax", "js      loc_6138"], ["mov~rax,[table+0]", "mov~rdx,[table+0]", "test~rax,rax", "js~FOO"]], [0, 0, 24, 0, 0, 2, 0, 0, 4, -1, 0.0374331550802139, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, -1, 0.0552584670231729, ["mov     rcx, [rsp+28h+var_20]", "xor     rcx, fs:28h", "jnz     loc_61DD"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 14, 0, 0, 2, 0, 0, 11, -1, 0.06818181818181818, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [0, 0, 3, 0, 0, 2, 0, 1, 8, -1, 0.0427807486631016, ["mov     rax, entry", "jmp     loc_5FD6"], ["mov~rax,entry", "jmp~FOO"]], [0, 0, 21, 0, 0, 2, 0, 0, 6, -1, 0.06016042780748663, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [0, 0, 13, 0, 0, 4, 0, 0, 12, -1, 0.14705882352941177, ["movaps  xmm3, xmm2", "mulss   xmm3, xmm0", "ucomiss xmm1, xmm3", "jbe     short loc_607B"], ["movaps~xmm3,xmm2", "mulss~xmm3,xmm0", "ucomiss~xmm1,xmm3", "jbe~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 3, -1, 0.0, ["add     rsp, 10h", "pop     rbx", "pop     table", "pop     r12", "retn"], ["add~rsp,0", "pop~rbx", "pop~table", "pop~r12", "retn"]]], "func_feature": [6, 23, 28, 1, 35, 48, 1, 137, 0.05167, 3, 5], "succs": [[5, 21], [0, 29], [12, 7], [2, 4], [2], [8, 6], [15], [9, 14], [12, 15], [13], [33], [10, 30], [29], [16, 31], [13], [29], [29], [11], [17, 23], [24, 1], [26], [27, 20], [18, 31], [11], [], [22], [32, 25], [26], [], [34, 28], [33], [29], [22], [3, 31], []], "fname": "hash_insert", "n_num": 35}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 3, 0, 1, 3, 0, 2, 0, 0, 0.02717391304347826, ["mov     rdi, table; table", "call    hash_rehash", "jmp     loc_622D"], ["mov~rdi,table", "call~FOO", "jmp~FOO"]], [1, 0, 4, 0, 0, 5, 1, 1, 14, 3, 0.025362318840579712, ["subss   xmm0, cs:dword_B250", "mov     rax, 8000000000000000h", "cvttss2si rsi, xmm0", "xor     rsi, rax", "jmp     short loc_62F8"], ["subss~xmm0,<TAG>", "mov~rax,0", "cvttss2si~rsi,xmm0", "xor~rsi,rax", "jmp~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 14, 3, 0.025362318840579712, ["cvttss2si rsi, xmm0; candidate"], ["cvttss2si~rsi,xmm0"]], [0, 0, 17, 0, 0, 2, 0, 0, 5, 3, 0.08695652173913043, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [0, 0, 19, 0, 0, 4, 1, 1, 4, 4, 0.161231884057971, ["mov     rax, [table+10h]", "mov     rdx, [table+28h]", "test    rax, rax", "js      loc_6308"], ["mov~rax,[table+0]", "mov~rdx,[table+0]", "test~rax,rax", "js~FOO"]], [0, 0, 16, 0, 0, 3, 0, 0, 6, 2, 0.2210144927536232, ["mulss   xmm1, dword ptr [rdx]", "ucomiss xmm1, xmm0", "jbe     short loc_622D"], ["mulss~xmm1,<TAG>", "ucomiss~xmm1,xmm0", "jbe~FOO"]], [2, 0, 17, 0, 0, 8, 2, 1, 5, 3, 0.08695652173913043, ["mov     rcx, rax", "pxor    xmm1, xmm1", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm1, rcx", "addss   xmm1, xmm1", "jmp     loc_6288"], ["mov~rcx,rax", "pxor~xmm1,xmm1", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm1,rcx", "addss~xmm1,xmm1", "jmp~FOO"]], [2, 0, 10, 0, 0, 8, 2, 1, 10, 3, 0.09329710144927536, ["mov     rcx, rax", "pxor    xmm1, xmm1", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm1, rcx", "addss   xmm1, xmm1", "jmp     loc_62CA"], ["mov~rcx,rax", "pxor~xmm1,xmm1", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm1,rcx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 12, 0, 0, 3, 1, 1, 9, 4, 0.21195652173913043, ["mov     rax, [table+18h]", "test    rax, rax", "js      loc_6380"], ["mov~rax,[table+0]", "test~rax,rax", "js~FOO"]], [2, 0, 24, 1, 1, 13, 2, 2, 0, 2, 0.0, ["push    rbp", "push    rbx", "mov     ecx, 1; delete", "mov     rbx, table", "sub     rsp, 18h", "mov     rdx, rsp; bucket_head", "mov     rax, fs:28h", "mov     [rsp+28h+var_20], rax", "xor     eax, eax", "call    hash_find_entry", "test    rax, rax", "mov     rbp, rax", "jz      short loc_622D"], ["push~rbp", "push~rbx", "mov~ecx,0", "mov~rbx,table", "sub~rsp,0", "mov~rdx,rsp", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jz~FOO"]], [0, 0, 15, 0, 1, 6, 1, 2, 7, 6, 0.1956521739130435, ["lea     rdi, [table+28h]; table", "call    check_tuning", "mov     rax, [table+10h]", "mov     rdx, [table+28h]", "test    rax, rax", "js      loc_63A0"], ["lea~rdi,[table+0]", "call~FOO", "mov~rax,[table+0]", "mov~rdx,[table+0]", "test~rax,rax", "js~FOO"]], [2, 0, 23, 1, 0, 4, 0, 1, 1, 2, 0.036231884057971016, ["mov     data, [rsp+28h+bucket]", "sub     qword ptr [table+20h], 1", "cmp     qword ptr [rax], 0", "jz      short loc_6250"], ["mov~data,<TAG>", "sub~[word ptr [table+0],0", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 0, 0, 8, 5, 0.09329710144927536, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [2, 0, 13, 0, 0, 8, 2, 1, 8, 5, 0.09329710144927536, ["mov     rcx, rax", "pxor    xmm0, xmm0", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm0, rcx", "addss   xmm0, xmm0", "jmp     loc_62B4"], ["mov~rcx,rax", "pxor~xmm0,xmm0", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm0,rcx", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 1, 1, 0.07971014492753624, ["mov     rcx, [rsp+28h+var_20]", "xor     rcx, fs:28h", "mov     rax, data", "jnz     loc_63BE"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~rax,data", "jnz~FOO"]], [0, 0, 9, 0, 0, 4, 0, 0, 11, 2, 0.1956521739130435, ["movss   xmm2, dword ptr [rdx]", "mulss   xmm2, xmm0", "ucomiss xmm2, xmm1", "jbe     loc_622D"], ["movss~xmm2,<TAG>", "mulss~xmm2,xmm0", "ucomiss~xmm2,xmm1", "jbe~FOO"]], [0, 0, 10, 0, 0, 2, 0, 0, 10, 3, 0.09329710144927536, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [2, 0, 20, 0, 0, 8, 2, 1, 3, 5, 0.04891304347826087, ["mov     rdx, rax", "pxor    xmm0, xmm0", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0", "jmp     loc_626E"], ["mov~rdx,rax", "pxor~xmm0,xmm0", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0", "jmp~FOO"]], [1, 0, 22, 1, 0, 5, 1, 1, 2, 6, 0.06884057971014493, ["mov     rax, [table+18h]", "sub     rax, 1", "test    rax, rax", "mov     [table+18h], rax", "js      loc_6330"], ["mov~rax,[table+0]", "sub~rax,0", "test~rax,rax", "mov~[table+0],rax", "js~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 2, -1, 0.0, ["add     rsp, 18h", "pop     table", "pop     rbp", "retn"], ["add~rsp,0", "pop~table", "pop~rbp", "retn"]], [1, 0, 8, 0, 0, 3, 0, 1, 12, 5, 0.14492753623188406, ["cmp     byte ptr [tuning+10h], 0", "mulss   xmm0, dword ptr [tuning+4]", "jz      loc_6370"], ["cmp~[yte ptr [tuning+0],0", "mulss~xmm0,[word ptr [tuning+0]", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 20, 0, 0, 2, 0, 0, 3, 5, 0.04891304347826087, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [0, 0, 6, 0, 0, 2, 0, 0, 13, 4, 0.10869565217391304, ["ucomiss xmm0, cs:dword_B250", "jnb     short loc_6350"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 13, 5, 0.0, ["mulss   xmm0, dword ptr [tuning+8]", "jmp     loc_62EA"], ["mulss~xmm0,[word ptr [tuning+0]", "jmp~FOO"]]], "func_feature": [4, 16, 19, 1, 25, 34, 0, 107, 0.08587, 2, 4], "succs": [[14], [0], [0], [5], [3, 6], [10, 14], [5], [15], [16, 7], [11, 14], [12, 13], [18, 14], [8], [8], [19, 21], [20, 14], [15], [4], [17, 22], [], [24, 23], [], [4], [1, 2], [23]], "fname": "hash_delete", "n_num": 25}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[2, 0, 5, 1, 1, 12, 2, 2, 0, 0, 0.0, ["push    rbx", "lea     rsi, filename; \"/\"", "mov     rbx, root_d_i", "mov     edi, 1; ver", "sub     rsp, 0A0h", "mov     rdx, rsp; stat_buf", "mov     rax, fs:28h", "mov     [rsp+0A8h+var_10], rax", "xor     eax, eax", "call    ___lxstat", "test    eax, eax", "jnz     short loc_7678"], ["push~rbx", "lea~rsi,<TAG>", "mov~rbx,root_d_i", "mov~edi,0", "sub~rsp,0", "mov~rdx,rsp", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 0, 1, 0.30000000000000004, ["mov     rcx, [rsp+0A8h+var_10]", "xor     rcx, fs:28h", "jnz     short loc_767C"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 0, 2, 0.07500000000000001, ["xor     eax, eax", "jmp     short loc_7659"], ["xor~eax,eax", "jmp~FOO"]], [0, 0, 3, 0, 0, 5, 0, 0, 0, 2, 0.07500000000000001, ["mov     rax, [rsp+0A8h+statbuf.st_ino]", "mov     [root_d_i], rax", "mov     rax, [rsp+0A8h+statbuf.st_dev]", "mov     [root_d_i+8], rax", "mov     rax, root_d_i"], ["mov~rax,[rsp+0]", "mov~<TAG>,rax", "mov~rax,<TAG>", "mov~[root_d_i+0],rax", "mov~rax,root_d_i"]], [1, 0, 0, 1, 0, 3, 0, 0, 0, -1, 0.0, ["add     rsp, 0A0h", "pop     root_d_i", "retn"], ["add~rsp,0", "pop~root_d_i", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 4, 5, 1, 6, 6, 1, 26, 0.075, 2, 2], "succs": [[2, 3], [4, 5], [1], [1], [], []], "fname": "get_root_dev_ino", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["movzx   eax, cs:can_write_3583", "retn"], ["movzx~eax,<TAG>", "retn"]], [1, 0, 2, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     cs:initialized_3582, 0", "jz      short loc_7798"], ["cmp~<TAG>,0", "jz~FOO"]], [3, 0, 0, 2, 1, 8, 1, 1, 1, 0, 0.0, ["sub     rsp, 8", "call    _geteuid", "test    eax, eax", "mov     cs:initialized_3582, 1", "setz    al", "mov     cs:can_write_3583, al", "add     rsp, 8", "retn"], ["sub~rsp,0", "call~FOO", "test~eax,eax", "mov~<TAG>,0", "setz~al", "mov~<TAG>,al", "add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 2, 1, 12, 0.0, 2, 2], "succs": [[], [0, 2], []], "fname": "can_write_any_file", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 1, 6, 1, 2, 1, 0, 0.3333333333333333, ["mov     rdi, [rsp+28h+response]; ptr", "call    free", "mov     rcx, [rsp+28h+var_10]", "xor     rcx, fs:28h", "mov     eax, ebx", "jnz     short loc_7964"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [1, 0, 3, 0, 1, 6, 1, 1, 1, 0, 0.0, ["mov     rdx, [rsp+28h+response]", "mov     byte ptr [rdx+rax-1], 0", "mov     rdi, [rsp+28h+response]; response", "call    _rpmatch", "test    eax, eax", "setnle  bl"], ["mov~rdx,[rsp+0]", "mov~[yte ptr [rdx+0],0", "mov~rdi,[rsp+0]", "call~FOO", "test~eax,eax", "setnle~bl"]], [3, 1, 4, 1, 1, 15, 3, 2, 0, 0, 0.0, ["push    rbx", "mov     edx, 0Ah; delimiter", "xor     ebx, ebx", "sub     rsp, 20h", "mov     rcx, cs:stdin@@GLIBC_2_2_5; stream", "lea     rsi, [rsp+28h+response_size]; n", "lea     rdi, [rsp+28h+response]; lineptr", "mov     [rsp+28h+response], 0", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "mov     [rsp+28h+response_size], 0", "call    ___getdelim", "test    rax, rax", "jle     short loc_7942"], ["push~rbx", "mov~edx,0", "xor~ebx,ebx", "sub~rsp,<STR>", "mov~rcx,<TAG>", "lea~rsi,[rsp+0]", "lea~rdi,[rsp+0]", "mov~[rsp+0],0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~[rsp+0],0", "call~FOO", "test~rax,rax", "jle~FOO"]], [0, 1, 0, 1, 0, 3, 0, 0, 2, 0, 0.0, ["add     rsp, 20h", "pop     yes", "retn"], ["add~rsp,<STR>", "pop~yes", "retn"]]], "func_feature": [4, 5, 6, 1, 5, 5, 2, 31, 0.06667, 2, 2], "succs": [[], [0, 4], [1], [1, 2], []], "fname": "yesno", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[1, 0, 9, 0, 0, 2, 1, 1, 0, 0, 0.03787878787878788, ["and     ebx, 1", "jz      short loc_797D"], ["and~ebx,0", "jz~FOO"]], [0, 0, 11, 0, 1, 5, 1, 2, 1, 4, 0.07575757575757576, ["mov     ebx, esi", "mov     rbp, st", "call    _geteuid", "test    eax, eax", "jz      short loc_79C0"], ["mov~ebx,esi", "mov~rbp,st", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 5, 0, 0, 2, 0, 1, 3, 2, 0.1893939393939394, ["cmp     [st+1Ch], eax", "jnz     short loc_79D0"], ["cmp~[st+0],eax", "jnz~FOO"]], [1, 0, 8, 0, 0, 3, 1, 1, 3, 3, 0.06818181818181818, ["mov     ebx, [st+18h]", "test    bl, 49h", "jz      short loc_79A1"], ["mov~ebx,[st+0]", "test~bl,0", "jz~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 2, 3, 0.09090909090909091, ["mov     ebx, [st+18h]"], ["mov~ebx,[st+0]"]], [1, 0, 1, 0, 0, 1, 0, 0, 4, -1, 0.045454545454545456, ["shr     ebx, 6"], ["shr~ebx,0"]], [1, 0, 0, 0, 0, 5, 0, 0, 1, -1, 0.0, ["pop     rbx", "mov     eax, 1", "pop     rbp", "pop     mode", "retn"], ["pop~rbx", "mov~eax,0", "pop~rbp", "pop~mode", "retn"]], [0, 0, 1, 0, 0, 1, 0, 1, 4, -1, 0.007575757575757576, ["jmp     short loc_797D"], ["jmp~FOO"]], [1, 0, 12, 0, 0, 6, 1, 1, 0, 5, 0.0, ["push    r12", "mov     r12d, esi", "push    rbp", "and     r12d, 7", "push    rbx", "jnz     short loc_7990"], ["push~r12", "mov~r12d,esi", "push~rbp", "and~r12d,0", "push~rbx", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 5, 0, 0.003787878787878788, ["shr     ebx, 3", "jmp     short loc_79A9"], ["shr~ebx,0", "jmp~FOO"]], [0, 0, 3, 0, 1, 4, 0, 2, 4, 1, 0.09090909090909091, ["call    _getegid", "mov     edi, [st+20h]; gid", "cmp     edi, eax", "jz      short loc_79E5"], ["call~FOO", "mov~edi,[st+0]", "cmp~edi,eax", "jz~FOO"]], [0, 0, 2, 0, 1, 3, 1, 2, 5, 1, 0.003787878787878788, ["call    _group_member", "test    eax, eax", "jz      short loc_79A9"], ["call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 0, 7, 1, 0, 5, -1, 0.0, ["not     ebx", "test    ebx, r12d", "setz    al", "pop     rbx", "pop     st", "pop     mode", "retn"], ["not~ebx", "test~ebx,r12d", "setz~al", "pop~rbx", "pop~st", "pop~mode", "retn"]]], "func_feature": [3, 6, 12, 0, 13, 18, 1, 42, 0.0472, 0, 0], "succs": [[3, 6], [0, 4], [10, 5], [2, 7], [2], [12], [], [6], [1, 6], [12], [9, 11], [9, 12], []], "fname": "euidaccess_stat", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 3, 0, 0, 4, 1, 1, 0, 0, 0.0, ["xor     eax, eax", "mov     rcx, [fp+20h]", "cmp     [fp+28h], rcx", "ja      short locret_7A17"], ["xor~eax,eax", "mov~rcx,[fp+0]", "cmp~[fp+0],rcx", "ja~FOO"]], [0, 0, 1, 2, 0, 3, 0, 0, 0, 1, 0.0, ["mov     rdx, [fp+58h]", "sub     rdx, [fp+48h]", "add     rax, rdx"], ["mov~rdx,[fp+0]", "sub~rdx,[fp+0]", "add~rax,rdx"]], [1, 0, 2, 1, 0, 4, 1, 1, 0, 1, 0.16666666666666666, ["mov     rax, [fp+10h]", "sub     rax, [fp+8]", "test    dword ptr [fp], 100h", "jz      short locret_7A17"], ["mov~rax,[fp+0]", "sub~rax,[fp+0]", "test~<TAG>,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 2, 2, 0, 4, 5, 1, 12, 0.04167, 0, 3], "succs": [[2, 3], [3], [1, 3], []], "fname": "freadahead", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 4, 1, 2, 0, 1, 0.0, ["sub     rsp, 8", "call    _strndup", "test    s, s", "jz      short loc_7A43"], ["sub~rsp,0", "call~FOO", "test~s,s", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 1, 3, 0, 3, 2, 2, 7, 0.0, 0, 2], "succs": [[], [0, 2], []], "fname": "xstrndup", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp_free:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp_free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp_malloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp_malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0.0, ["push    cs:qword_20DDC0", "jmp     cs:qword_20DDC8"], ["push~<TAG>", "jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 62, 2, 0.0, 2, 0], "succs": [[]], "fname": "sub_17B0", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:endgrent_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "endgrent", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "strcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:qsort_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "qsort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:opendir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "opendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getpwuid_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getpwuid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getgrgid_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "getgrgid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strrchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__openat_2_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 7, 1, 0.0, 1, 0], "succs": [[]], "fname": "__openat_2", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getpwnam_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getpwnam", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getgrnam_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getgrnam", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__xstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__xstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:endpwent_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "endpwent", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fchdir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 7, 1, 0.0, 1, 0], "succs": [[]], "fname": "fchdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fchown_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fchown", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strtoul_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strtoul", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fchownat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fchownat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[7, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0.0, ["mov     dword ptr [chopt], 2", "mov     qword ptr [chopt+8], 0", "mov     byte ptr [chopt+10h], 1", "mov     byte ptr [chopt+4], 0", "mov     byte ptr [chopt+11h], 0", "mov     qword ptr [chopt+18h], 0", "mov     qword ptr [chopt+20h], 0", "retn"], ["mov~<TAG>,0", "mov~[word ptr [chopt+0],0", "mov~[yte ptr [chopt+0],0", "mov~[yte ptr [chopt+0],0", "mov~[yte ptr [chopt+0],0", "mov~[word ptr [chopt+0],0", "mov~[word ptr [chopt+0],0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 8, 0.0, 0, 0], "succs": [[]], "fname": "chopt_init", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "chopt_free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[0, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0.07500000000000001, ["mov     rdi, [grp]; string"], ["mov~rdi,<TAG>"]], [0, 1, 5, 1, 1, 9, 2, 2, 0, 3, 0.0, ["push    rbx", "mov     ebx, edi", "sub     rsp, 20h", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "call    _getgrgid", "test    grp, grp", "jz      short loc_24C0"], ["push~rbx", "mov~ebx,edi", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~grp,grp", "jz~FOO"]], [0, 0, 3, 0, 1, 5, 0, 2, 1, 2, 0.07500000000000001, ["mov     edi, ebx; i", "mov     rsi, rsp; buf", "call    umaxtostr", "mov     rdi, rax", "jmp     short loc_24A4"], ["mov~edi,ebx", "mov~rsi,rsp", "call~FOO", "mov~rdi,rax", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 1, 4, 1, 2, 2, 1, 0.30000000000000004, ["call    xstrdup", "mov     rdx, [rsp+28h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_24CF"], ["call~FOO", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [0, 1, 0, 1, 0, 3, 0, 0, 3, -1, 0.0, ["add     rsp, 20h", "pop     gid", "retn"], ["add~rsp,<STR>", "pop~gid", "retn"]]], "func_feature": [4, 3, 7, 1, 6, 6, 1, 23, 0.075, 1, 2], "succs": [[4], [0, 2], [4], [], [3, 5], []], "fname": "gid_to_name", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[0, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0.07500000000000001, ["mov     rdi, [pwd]; string"], ["mov~rdi,<TAG>"]], [0, 1, 5, 1, 1, 9, 2, 2, 0, 3, 0.0, ["push    rbx", "mov     ebx, edi", "sub     rsp, 20h", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "call    _getpwuid", "test    pwd, pwd", "jz      short loc_2520"], ["push~rbx", "mov~ebx,edi", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~pwd,pwd", "jz~FOO"]], [0, 0, 3, 0, 1, 5, 0, 2, 1, 2, 0.07500000000000001, ["mov     edi, ebx; i", "mov     rsi, rsp; buf", "call    umaxtostr", "mov     rdi, rax", "jmp     short loc_2504"], ["mov~edi,ebx", "mov~rsi,rsp", "call~FOO", "mov~rdi,rax", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 1, 4, 1, 2, 2, 1, 0.30000000000000004, ["call    xstrdup", "mov     rdx, [rsp+28h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_252F"], ["call~FOO", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [0, 1, 0, 1, 0, 3, 0, 0, 3, -1, 0.0, ["add     rsp, 20h", "pop     uid", "retn"], ["add~rsp,<STR>", "pop~uid", "retn"]]], "func_feature": [4, 3, 7, 1, 6, 6, 1, 23, 0.075, 1, 2], "succs": [[4], [0, 2], [4], [], [3, 5], []], "fname": "uid_to_name", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[0, 0, 140, 1, 0, 4, 0, 1, 0, 0, 0.1508029008029008, ["movzx   edx, ax", "movsxd  rdx, dword ptr [r15+rdx*4]", "add     rdx, r15", "jmp     rdx; switch jump"], ["movzx~edx,ax", "movsxd~rdx,<TAG>", "add~rdx,r15", "jmp~rdx"]], [1, 0, 140, 0, 0, 4, 0, 1, 3, 7, 0.6477434602434603, ["mov     r12, [ent+30h]", "movzx   eax, word ptr [ent+60h]", "cmp     ax, 0Ah; switch 11 cases", "ja      loc_26FA; jumptable 0000000000002600 default case"], ["mov~r12,[ent+0]", "movzx~eax,[ord ptr [ent+0]", "cmp~ax,0", "ja~FOO"]], [0, 0, 140, 0, 0, 3, 0, 1, 10, 5, 0.009482646982646982, ["mov     rdi, [rdx]", "cmp     [r9+8], rdi", "jnz     loc_279D"], ["mov~rdi,<TAG>", "cmp~[r9+0],rdi", "jnz~FOO"]], [0, 0, 140, 0, 0, 3, 1, 1, 9, 6, 0.014083139083139084, ["mov     rdx, [rbp+8]", "test    rdx, rdx", "jz      loc_279D"], ["mov~rdx,[rbp+0]", "test~rdx,rdx", "jz~FOO"]], [0, 0, 140, 0, 0, 2, 1, 1, 8, 11, 0.044552091427091434, ["test    eax, eax", "jnz     loc_2674"], ["test~eax,eax", "jnz~FOO"]], [1, 0, 140, 0, 1, 6, 2, 2, 7, 11, 0.08167411292411292, ["xor     eax, eax", "xor     edi, edi; status", "call    _error", "mov     eax, [rbp+0]", "cmp     eax, 2", "jnz     loc_2C00"], ["xor~eax,eax", "xor~edi,edi", "call~FOO", "mov~eax,[rbp+0]", "cmp~eax,0", "jnz~FOO"]], [0, 0, 140, 0, 0, 1, 0, 0, 18, 12, 0.0038243006993006986, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 140, 0, 0, 2, 0, 1, 20, 13, 0.001116938616938617, ["cmp     [rsp+1B8h+required_gid], 0FFFFFFFFh", "jz      short loc_3218"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 140, 0, 0, 2, 0, 1, 19, 12, 0.0143502331002331, ["cmp     eax, [rsp+1B8h+var_BC]", "jz      loc_3200"], ["cmp~eax,[rsp+0]", "jz~FOO"]], [2, 0, 140, 0, 0, 4, 0, 1, 13, 10, 0.08853600103600102, ["mov     eax, [rbp+0]", "mov     byte ptr [rsp+1B8h+ok], 0", "cmp     eax, 2", "jz      loc_2678"], ["mov~eax,[rbp+0]", "mov~<TAG>,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 140, 0, 0, 4, 1, 1, 12, 11, 0.12835729085729086, ["movzx   eax, byte ptr [rbp+11h]", "test    al, al", "mov     byte ptr [rsp+1B8h+ok], al", "jz      loc_2E00"], ["movzx~eax,[yte ptr [rbp+0]", "test~al,al", "mov~<TAG>,al", "jz~FOO"]], [1, 0, 140, 0, 0, 2, 0, 1, 5, 11, 0.020007770007770008, ["cmp     qword ptr [ent+50h], 0; jumptable 0000000000002600 case 10", "jnz     short loc_261A"], ["cmp~[word ptr [ent+0],0", "jnz~FOO"]], [0, 0, 140, 0, 0, 2, 1, 1, 14, 10, 0.028075628075628075, ["test    eax, eax", "jnz     loc_2678"], ["test~eax,eax", "jnz~FOO"]], [1, 0, 140, 0, 1, 9, 2, 2, 7, 6, 0.018866550116550116, ["mov     esi, [fts+2Ch]; fildes", "mov     rcx, [rsp+1B8h+var_188]; stat_buf", "xor     r8d, r8d; flag", "mov     rdx, r10; filename", "mov     edi, 1; ver", "mov     [rsp+1B8h+s], r10", "call    ___fxstatat", "test    eax, eax", "jnz     loc_30B0"], ["mov~esi,[fts+0]", "mov~rcx,[rsp+0]", "xor~r8d,r8d", "mov~rdx,r10", "mov~edi,0", "mov~[rsp+0],r10", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 140, 0, 0, 4, 1, 1, 6, 5, 0.02598096348096348, ["mov     edx, [ent+80h]", "and     edx, 0F000h", "cmp     edx, 0A000h", "jz      loc_2FF0"], ["mov~edx,[ent+0]", "and~edx,0", "cmp~edx,0", "jz~FOO"]], [0, 0, 140, 0, 0, 3, 0, 1, 19, 12, 0.035037878787878785, ["mov     eax, [rsp+1B8h+required_gid]", "cmp     eax, [rsp+1B8h+var_B8]", "jnz     loc_315B"], ["mov~eax,[rsp+0]", "cmp~eax,[rsp+0]", "jnz~FOO"]], [1, 0, 140, 0, 0, 3, 0, 1, 18, 13, 0.05040792540792541, ["mov     eax, [rsp+1B8h+required_uid]", "cmp     eax, 0FFFFFFFFh", "jz      loc_3207"], ["mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 140, 0, 0, 4, 1, 1, 9, 13, 0.031974391349391354, ["mov     r14, [rbp+18h]", "mov     r8, [rbp+20h]", "test    r14, r14", "jz      loc_2828"], ["mov~r14,[rbp+0]", "mov~r8,[rbp+0]", "test~r14,r14", "jz~FOO"]], [1, 0, 140, 0, 0, 2, 0, 1, 6, 10, 0.012577700077700078, ["cmp     qword ptr [ent+18h], 0", "jz      loc_2F58"], ["cmp~[word ptr [ent+0],0", "jz~FOO"]], [2, 0, 140, 0, 1, 6, 0, 2, 13, 12, 0.03307109557109557, ["mov     rdi, r12; name", "call    quote", "cmp     [rsp+1B8h+uid], 0FFFFFFFFh", "mov     r14, rax", "mov     edx, 5; category", "jz      loc_3030"], ["mov~rdi,r12", "call~FOO", "cmp~[rsp+0],0", "mov~r14,rax", "mov~edx,0", "jz~FOO"]], [0, 1, 140, 0, 5, 17, 0, 5, 17, 12, 0.006628787878787879, ["mov     rdi, rsi; s", "mov     [rsp+1B8h+src], rsi", "call    _strlen", "mov     rdi, [rsp+1B8h+s]; s", "mov     r14, rax", "call    _strlen", "lea     rdi, [r14+rax+2]; n", "call    xmalloc", "mov     rsi, [rsp+1B8h+src]; src", "mov     rdi, rax; dest", "mov     r14, rax", "call    _stpcpy", "mov     rsi, [rsp+1B8h+s]; src", "lea     rdi, [rax+1]; dest", "mov     byte ptr [rax], 3Ah ; ':'", "call    _strcpy", "mov     [rsp+1B8h+s], r14"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "call~FOO", "mov~rdi,[rsp+0]", "mov~r14,rax", "call~FOO", "lea~rdi,[r14+0]", "call~FOO", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~r14,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rdi,[rax+0]", "mov~<TAG>,<STR>", "call~FOO", "mov~[rsp+0],r14"]], [0, 0, 140, 0, 0, 2, 1, 1, 16, 13, 0.020007770007770008, ["test    rax, rax", "jz      loc_3050"], ["test~rax,rax", "jz~FOO"]], [0, 0, 140, 0, 0, 2, 1, 1, 10, 13, 0.023641058016058012, ["test    r8, r8", "jz      loc_2D70"], ["test~r8,r8", "jz~FOO"]], [0, 0, 140, 0, 0, 4, 1, 1, 15, 14, 0.024239186739186746, ["mov     r14, [rbp+18h]", "mov     r8, [rbp+20h]", "test    r14, r14", "jnz     loc_2C19"], ["mov~r14,[rbp+0]", "mov~r8,[rbp+0]", "test~r14,r14", "jnz~FOO"]], [0, 0, 140, 0, 0, 2, 1, 1, 16, 11, 0.008644133644133644, ["test    eax, eax", "jz      loc_2814"], ["test~eax,eax", "jz~FOO"]], [0, 0, 140, 0, 0, 4, 0, 1, 8, 5, 0.004370629370629371, ["movzx   eax, word ptr [ent+60h]", "mov     r9, [rsp+1B8h+var_188]", "mov     r10, [rsp+1B8h+s]", "jmp     loc_2742"], ["movzx~eax,[ord ptr [ent+0]", "mov~r9,[rsp+0]", "mov~r10,[rsp+0]", "jmp~FOO"]], [0, 0, 140, 0, 0, 1, 0, 0, 16, 13, 0.010602013727013731, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [0, 0, 140, 0, 1, 4, 1, 1, 14, 11, 0.01316045066045066, ["lea     rsi, aChangingOwners; \"changing ownership of %s\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, rax; format"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rdx,rax"]], [0, 0, 140, 0, 0, 2, 1, 1, 10, 12, 0.03257252007252007, ["test    r8, r8", "jz      loc_3080"], ["test~r8,r8", "jz~FOO"]], [1, 0, 140, 0, 0, 3, 0, 1, 12, 10, 0.16007349132349133, ["mov     eax, [rbp+0]", "cmp     eax, 2", "jz      loc_2678"], ["mov~eax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 140, 0, 0, 2, 1, 1, 11, 11, 0.14414740352240352, ["test    dl, dl", "jnz     loc_2A28"], ["test~dl,dl", "jnz~FOO"]], [0, 0, 140, 0, 1, 11, 0, 2, 20, 11, 0.025446775446775448, ["mov     rax, [rsp+1B8h+var_1A8]", "mov     edi, r14d; fd", "mov     [rsp+1B8h+src], r9", "mov     edx, [rax]", "mov     dword ptr [rsp+1B8h+s], edx", "call    _close", "mov     rax, [rsp+1B8h+var_1A8]", "mov     edx, dword ptr [rsp+1B8h+s]", "mov     r9, [rsp+1B8h+src]", "mov     [rax], edx", "jmp     loc_2A28"], ["mov~rax,[rsp+0]", "mov~edi,r14d", "mov~[rsp+0],r9", "mov~edx,<TAG>", "mov~[word ptr [rsp+0],edx", "call~FOO", "mov~rax,[rsp+0]", "mov~edx,[word ptr [rsp+0]", "mov~r9,[rsp+0]", "mov~<TAG>,edx", "jmp~FOO"]], [0, 0, 140, 0, 0, 2, 0, 1, 22, 11, 0.006055749805749806, ["mov     r9, [rsp+1B8h+s]", "jmp     loc_2A28"], ["mov~r9,[rsp+0]", "jmp~FOO"]], [0, 0, 140, 0, 0, 1, 0, 0, 13, 11, 0.02347594535094535, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [0, 0, 140, 0, 1, 7, 1, 2, 20, 13, 0.018210955710955712, ["mov     edx, [rsp+1B8h+gid]; group", "mov     esi, [rsp+1B8h+uid]; owner", "mov     edi, r14d; fd", "mov     [rsp+1B8h+s], r9", "call    _fchown", "test    eax, eax", "jnz     loc_2F78"], ["mov~edx,[rsp+0]", "mov~esi,[rsp+0]", "mov~edi,r14d", "mov~[rsp+0],r9", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 140, 0, 1, 6, 0, 2, 6, 13, 0.001456876456876457, ["mov     rdi, r12; name", "call    quote", "mov     edx, 5", "mov     r14, rax", "lea     rsi, aCannotAccessS; \"cannot access %s\"", "jmp     short loc_264F"], ["mov~rdi,r12", "call~FOO", "mov~edx,0", "mov~r14,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 140, 0, 0, 3, 0, 1, 13, 12, 0.08690025252525252, ["mov     ecx, [rsp+1B8h+uid]", "cmp     ecx, 0FFFFFFFFh", "jz      loc_2CC8"], ["mov~ecx,[rsp+0]", "cmp~ecx,0", "jz~FOO"]], [0, 0, 140, 0, 1, 4, 1, 2, 21, 12, 0.013594276094276094, ["mov     edi, r14d; fd", "call    _close", "test    eax, eax", "jnz     loc_27ED"], ["mov~edi,r14d", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 140, 0, 1, 5, 1, 2, 14, 11, 0.01316045066045066, ["lea     rsi, aChangingGroupO; \"changing group of %s\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, rax", "jmp     loc_2E2C"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rdx,rax", "jmp~FOO"]], [0, 0, 140, 0, 0, 2, 0, 1, 14, 12, 0.05317356254856255, ["cmp     ecx, [r9+1Ch]", "jz      loc_2CC8"], ["cmp~ecx,[r9+0]", "jz~FOO"]], [1, 0, 140, 0, 1, 5, 0, 1, 5, 13, 0.026110463610463614, ["mov     rdi, r12; jumptable 0000000000002600 case 7", "call    quote", "lea     rsi, format+4; msgid", "mov     r14, rax", "mov     edx, 5; category"], ["mov~rdi,r12", "call~FOO", "lea~rsi,<TAG>", "mov~r14,rax", "mov~edx,0"]], [1, 0, 140, 0, 1, 9, 2, 2, 15, 10, 0.03307109557109557, ["mov     rax, [rsp+1B8h+var_1A8]", "xor     edi, edi; status", "mov     rcx, r14", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    _error", "mov     eax, [rbp+0]", "cmp     eax, 2", "jz      loc_2678"], ["mov~rax,[rsp+0]", "xor~edi,edi", "mov~rcx,r14", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO", "mov~eax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 1, 6, 1, 2, 4, -1, 0.013791763791763792, ["mov     rdi, fts; sp_0", "call    fts_close", "mov     ent, [rsp+1B8h+var_40]", "xor     ent, fs:28h", "movzx   eax, byte ptr [rsp+1B8h+ok]", "jnz     loc_324F"], ["mov~rdi,fts", "call~FOO", "mov~ent,[rsp+0]", "xor~ent,<TAG>", "movzx~eax,<TAG>", "jnz~FOO"]], [1, 0, 140, 0, 0, 3, 0, 1, 17, 12, 0.006628787878787879, ["mov     r14, rsi", "mov     [rsp+1B8h+s], 0", "jmp     loc_2AB4"], ["mov~r14,rsi", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 140, 0, 0, 1, 0, 1, 17, 10, 0.006216006216006216, ["jmp     loc_2678"], ["jmp~FOO"]], [1, 0, 140, 0, 0, 3, 0, 1, 9, 1, 0.0909228502978503, ["mov     eax, [rbp+0]", "cmp     eax, 2", "jz      loc_2678"], ["mov~eax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 140, 0, 0, 2, 1, 1, 8, 2, 0.10608488733488733, ["test    al, al", "jz      loc_3254"], ["test~al,al", "jz~FOO"]], [0, 0, 140, 0, 0, 3, 1, 1, 9, 2, 0.04025835275835276, ["mov     rdx, [rbp+8]", "test    rdx, rdx", "jz      loc_3254"], ["mov~rdx,[rbp+0]", "test~rdx,rdx", "jz~FOO"]], [0, 0, 140, 0, 0, 2, 1, 1, 9, 2, 0.05305215617715618, ["test    cl, cl", "jz      loc_3254"], ["test~cl,cl", "jz~FOO"]], [0, 0, 140, 0, 0, 5, 1, 1, 15, 13, 0.04771027583527584, ["mov     rsi, [rbp+18h]", "mov     rax, [rbp+20h]", "test    rsi, rsi", "mov     [rsp+1B8h+s], rax", "jz      loc_2D98"], ["mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "test~rsi,rsi", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 140, 0, 0, 2, 0, 1, 15, 11, 0.00041278166278166275, ["cmp     esi, [r9+20h]", "jnz     loc_2A4B"], ["cmp~esi,[r9+0]", "jnz~FOO"]], [0, 0, 140, 0, 1, 5, 1, 1, 6, 12, 0.06717819217819218, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     esi, [ent+38h]; errnum", "mov     rcx, r14", "mov     rdx, rax; format"], ["xor~edi,edi", "call~FOO", "mov~esi,[ent+0]", "mov~rcx,r14", "mov~rdx,rax"]], [1, 0, 140, 0, 1, 6, 0, 2, 5, 13, 0.026110463610463614, ["mov     rdi, r12; jumptable 0000000000002600 case 4", "call    quote", "mov     edx, 5", "mov     r14, rax", "lea     rsi, aCannotReadDire; \"cannot read directory %s\"", "jmp     loc_264F"], ["mov~rdi,r12", "call~FOO", "mov~edx,0", "mov~r14,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [3, 0, 140, 0, 1, 11, 1, 2, 11, 11, 0.01291116291116291, ["lea     rsi, aFailedToChange; \"failed to change group of %s to %s\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     [rsp+1B8h+ok], r8", "call    _dcgettext", "mov     r8, [rsp+1B8h+ok]", "mov     rsi, rax", "mov     byte ptr [rsp+1B8h+ok], 0", "mov     [rsp+1B8h+s], 0", "mov     r14, r8", "jmp     loc_2C90"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~<TAG>,r8", "call~FOO", "mov~r8,<TAG>", "mov~rsi,rax", "mov~<TAG>,0", "mov~[rsp+0],0", "mov~r14,r8", "jmp~FOO"]], [0, 0, 140, 0, 0, 1, 0, 1, 10, 0, 0.044094794094794096, ["jmp     loc_2CDB"], ["jmp~FOO"]], [0, 0, 140, 0, 0, 2, 1, 1, 8, 7, 0.11722189847189846, ["test    al, al", "jz      loc_279D"], ["test~al,al", "jz~FOO"]], [1, 0, 140, 0, 0, 3, 0, 1, 7, 4, 0.15306915306915306, ["mov     ecx, [rsp+1B8h+required_gid]", "cmp     ecx, 0FFFFFFFFh", "jz      loc_2E60"], ["mov~ecx,[rsp+0]", "cmp~ecx,0", "jz~FOO"]], [1, 0, 140, 0, 2, 12, 1, 3, 8, 12, 0.007745726495726496, ["mov     rdi, r12; name", "call    quote", "lea     rsi, aCannotDerefere; \"cannot dereference %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, rax", "call    _dcgettext", "mov     rdx, rax", "mov     rax, [rsp+1B8h+var_1A8]", "mov     rcx, r14", "mov     esi, [rax]", "jmp     loc_265F"], ["mov~rdi,r12", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~rcx,r14", "mov~esi,<TAG>", "jmp~FOO"]], [1, 1, 140, 0, 0, 3, 0, 1, 13, 13, 0.07253626003626003, ["cmp     eax, 4000h", "mov     ecx, 10900h", "jnz     short loc_29F8"], ["cmp~eax,<STR>", "mov~ecx,0", "jnz~FOO"]], [1, 1, 140, 0, 0, 4, 1, 1, 12, 14, 0.14633514633514633, ["mov     eax, [r9+18h]", "and     eax, 0F000h", "cmp     eax, 8000h", "jz      loc_2EF8"], ["mov~eax,[r9+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 140, 0, 0, 1, 0, 0, 8, 10, 0.0719616032116032, ["mov     byte ptr [rsp+1B8h+ok], 0"], ["mov~<TAG>,0"]], [1, 0, 140, 0, 1, 11, 0, 2, 17, 11, 0.022261881636881635, ["mov     rax, [rsp+1B8h+var_1A8]", "mov     edi, r14d; fd", "mov     edx, [rax]", "mov     dword ptr [rsp+1B8h+ok], edx", "call    _close", "mov     rax, [rsp+1B8h+var_1A8]", "mov     edx, dword ptr [rsp+1B8h+ok]", "mov     [rax], edx", "mov     eax, [rbp+0]", "cmp     eax, 2", "jz      loc_2674"], ["mov~rax,[rsp+0]", "mov~edi,r14d", "mov~edx,<TAG>", "mov~<TAG>,edx", "call~FOO", "mov~rax,[rsp+0]", "mov~edx,<TAG>", "mov~<TAG>,edx", "mov~eax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 140, 0, 0, 2, 0, 1, 9, 9, 0.5474949818699819, ["cmp     byte ptr [rbp+4], 0", "jnz     loc_25D0"], ["cmp~[yte ptr [rbp+0],0", "jnz~FOO"]], [1, 0, 140, 0, 3, 12, 1, 4, 12, 10, 0.17166860916860918, ["mov     rdi, r12; name", "mov     [rsp+1B8h+src], rsi", "call    quote", "mov     rsi, [rsp+1B8h+src]", "mov     rdx, rax", "mov     rcx, r14", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     rdi, [rsp+1B8h+s]; ptr", "call    free", "jmp     loc_2678"], ["mov~rdi,r12", "mov~[rsp+0],rsi", "call~FOO", "mov~rsi,[rsp+0]", "mov~rdx,rax", "mov~rcx,r14", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~rdi,[rsp+0]", "call~FOO", "jmp~FOO"]], [0, 0, 140, 0, 0, 2, 1, 1, 11, 10, 0.08328477078477078, ["test    eax, eax", "jnz     loc_2678"], ["test~eax,eax", "jnz~FOO"]], [1, 0, 140, 0, 0, 3, 0, 1, 12, 10, 0.03045438357938358, ["mov     eax, [rbp+0]", "cmp     eax, 2", "jz      loc_2678"], ["mov~eax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 140, 0, 0, 2, 1, 1, 13, 10, 0.006701631701631702, ["test    eax, eax", "jnz     loc_2678"], ["test~eax,eax", "jnz~FOO"]], [2, 0, 140, 0, 3, 13, 2, 4, 14, 10, 0.0, ["mov     rdi, r12; name", "call    quote", "lea     rsi, aNeitherSymboli; \"neither symbolic link %s nor referent h\"...", "mov     r12, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rdx, r12", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_2678"], ["mov~rdi,r12", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rdx,r12", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 140, 0, 0, 2, 0, 1, 7, 3, 0.10967851592851594, ["cmp     ecx, [r9+1Ch]", "jz      loc_2AD0"], ["cmp~ecx,[r9+0]", "jz~FOO"]], [5, 0, 140, 1, 0, 11, 2, 1, 6, 4, 0.26590423465423463, ["mov     edx, eax", "mov     ecx, [rsp+1B8h+required_uid]", "and     edx, 0FFFFFFFDh", "cmp     dx, 4", "setz    dl", "sub     eax, 1", "cmp     ax, 1", "setbe   al", "or      eax, edx", "cmp     ecx, 0FFFFFFFFh", "jz      loc_2AD0"], ["mov~edx,eax", "mov~ecx,[rsp+0]", "and~edx,0", "cmp~dx,0", "setz~dl", "sub~eax,0", "cmp~ax,0", "setbe~al", "or~eax,edx", "cmp~ecx,0", "jz~FOO"]], [0, 0, 140, 0, 0, 2, 0, 1, 11, 4, 0.006131831131831132, ["mov     ecx, eax", "jmp     loc_2B10"], ["mov~ecx,eax", "jmp~FOO"]], [1, 0, 140, 0, 0, 2, 0, 1, 5, 7, 0.045940170940170943, ["cmp     byte ptr [rbp+4], 0; jumptable 0000000000002600 case 1", "jz      loc_26FA; jumptable 0000000000002600 default case"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [2, 0, 140, 0, 1, 7, 1, 1, 12, 11, 0.023641058016058012, ["lea     rsi, aFailedToChange_0; \"failed to change ownership of %s to %s\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     byte ptr [rsp+1B8h+ok], 0", "mov     rsi, rax", "xchg    ax, ax"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~<TAG>,0", "mov~rsi,rax", "xchg~ax,ax"]], [1, 0, 140, 0, 0, 2, 0, 1, 11, 12, 0.00844543188293188, ["mov     [rsp+1B8h+s], 0", "jmp     loc_2C74"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 1, 140, 0, 5, 20, 0, 5, 11, 12, 0.00844543188293188, ["mov     rdi, r14; s", "mov     [rsp+1B8h+ok], r8", "call    _strlen", "mov     r8, [rsp+1B8h+ok]", "mov     [rsp+1B8h+s], rax", "mov     rdi, r8; s", "call    _strlen", "mov     rdx, [rsp+1B8h+s]", "lea     rdi, [rdx+rax+2]; n", "call    xmalloc", "mov     rsi, r14; src", "mov     rdi, rax; dest", "mov     [rsp+1B8h+s], rax", "mov     r14, rax", "call    _stpcpy", "mov     r8, [rsp+1B8h+ok]", "lea     rdi, [rax+1]; dest", "mov     byte ptr [rax], 3Ah ; ':'", "mov     rsi, r8; src", "call    _strcpy"], ["mov~rdi,r14", "mov~<TAG>,r8", "call~FOO", "mov~r8,<TAG>", "mov~[rsp+0],rax", "mov~rdi,r8", "call~FOO", "mov~rdx,[rsp+0]", "lea~rdi,[rdx+0]", "call~FOO", "mov~rsi,r14", "mov~rdi,rax", "mov~[rsp+0],rax", "mov~r14,rax", "call~FOO", "mov~r8,<TAG>", "lea~rdi,[rax+0]", "mov~<TAG>,<STR>", "mov~rsi,r8", "call~FOO"]], [2, 0, 140, 0, 1, 7, 1, 2, 14, 11, 0.006993006993006993, ["lea     rsi, aOwnershipOfSRe_0; \"ownership of %s retained\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     [rsp+1B8h+s], 0", "mov     rsi, rax", "jmp     loc_2C90"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~[rsp+0],0", "mov~rsi,rax", "jmp~FOO"]], [0, 0, 140, 0, 0, 2, 1, 1, 13, 12, 0.020736208236208236, ["test    r14, r14", "jz      loc_2FC8"], ["test~r14,r14", "jz~FOO"]], [0, 0, 140, 0, 0, 3, 1, 1, 6, 9, 0.040306915306915304, ["mov     rax, [rbp+8]", "test    rax, rax", "jz      loc_25D0"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 140, 0, 1, 6, 1, 2, 17, 11, 0.007101058663558663, ["lea     rsi, aChangedGroupOf; \"changed group of %s to %s\\n\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     [rsp+1B8h+s], 0", "mov     rsi, rax", "jmp     loc_2C90"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~[rsp+0],0", "mov~rsi,rax", "jmp~FOO"]], [1, 0, 140, 0, 0, 4, 1, 1, 16, 12, 0.02095231157731157, ["mov     r14, [rsp+1B8h+s]", "mov     edx, 5; category", "test    r14, r14", "jz      loc_2FA0"], ["mov~r14,[rsp+0]", "mov~edx,0", "test~r14,r14", "jz~FOO"]], [1, 0, 140, 0, 2, 9, 1, 3, 10, 8, 0.271029606967107, ["mov     rsi, ent; p", "mov     edx, 4; instr", "mov     rdi, fts; sp_0", "call    fts_set", "mov     rdi, fts; sp_0", "call    fts_read", "test    rax, rax", "mov     ent, rax", "jnz     loc_25E4"], ["mov~rsi,ent", "mov~edx,0", "mov~rdi,fts", "call~FOO", "mov~rdi,fts", "call~FOO", "test~rax,rax", "mov~ent,rax", "jnz~FOO"]], [3, 0, 140, 0, 1, 8, 1, 2, 11, 11, 0.01291116291116291, ["lea     rsi, aFailedToChange_1; \"failed to change ownership of %s\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     byte ptr [rsp+1B8h+ok], 0", "mov     rsi, rax", "mov     [rsp+1B8h+s], 0", "jmp     loc_2C90"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~<TAG>,0", "mov~rsi,rax", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 140, 0, 0, 3, 0, 1, 7, 9, 0.03307109557109557, ["mov     rdi, [rax]", "cmp     [ent+70h], rdi", "jnz     loc_25D0"], ["mov~rdi,<TAG>", "cmp~[ent+0],rdi", "jnz~FOO"]], [0, 0, 4, 0, 0, 4, 1, 1, 3, -1, 0.027195027195027196, ["mov     ent, [rsp+1B8h+var_1A8]", "mov     eax, [rax]", "test    eax, eax", "jnz     loc_2E90"], ["mov~ent,[rsp+0]", "mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [0, 0, 140, 0, 1, 5, 1, 2, 2, 8, 0.4039574430199431, ["mov     rdi, fts; sp_0", "call    fts_read", "test    rax, rax", "mov     rbx, rax", "jz      loc_26A6"], ["mov~rdi,fts", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 140, 0, 0, 3, 0, 1, 8, 9, 0.026563714063714064, ["mov     rax, [rax+8]", "cmp     [ent+68h], rax", "jnz     loc_25D0"], ["mov~rax,[rax+0]", "cmp~[ent+0],rax", "jnz~FOO"]], [1, 0, 140, 0, 0, 3, 0, 1, 14, 12, 0.006628787878787879, ["mov     r14, rsi", "mov     [rsp+1B8h+s], 0", "jmp     loc_2D4C"], ["mov~r14,rsi", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 140, 0, 0, 2, 1, 1, 13, 13, 0.020007770007770008, ["test    r14, r14", "jz      loc_3068"], ["test~r14,r14", "jz~FOO"]], [2, 0, 3, 0, 2, 12, 3, 3, 4, -1, 0.0, ["lea     rsi, aFtsReadFailed; \"fts_read failed\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, rax; format", "mov     rax, [rsp+1B8h+var_1A8]", "xor     edi, edi; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    _error", "mov     byte ptr [rsp+1B8h+ok], 0", "jmp     loc_26B5"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rdx,rax", "mov~rax,[rsp+0]", "xor~edi,edi", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 140, 0, 1, 12, 3, 2, 12, 12, 0.049505471380471386, ["mov     edx, [rsp+1B8h+uid]; owner", "mov     ecx, [rsp+1B8h+gid]; group", "xor     r8d, r8d; flag", "mov     rsi, r10; file", "mov     edi, r11d; fd", "mov     [rsp+1B8h+s], r9", "call    _fchownat", "test    eax, eax", "mov     r9, [rsp+1B8h+s]", "setz    dl", "test    dl, dl", "jz      loc_27ED"], ["mov~edx,[rsp+0]", "mov~ecx,[rsp+0]", "xor~r8d,r8d", "mov~rsi,r10", "mov~edi,r11d", "mov~[rsp+0],r9", "call~FOO", "test~eax,eax", "mov~r9,[rsp+0]", "setz~dl", "test~dl,dl", "jz~FOO"]], [0, 0, 140, 0, 0, 2, 1, 1, 11, 13, 0.17329545454545456, ["test    r14b, r14b", "jnz     loc_29F8"], ["test~r14b,r14b", "jnz~FOO"]], [0, 0, 140, 0, 0, 2, 0, 0, 17, 13, 0.011472902097902098, ["mov     r11d, [fts+2Ch]", "nop     dword ptr [rax]"], ["mov~r11d,[fts+0]", "nop~<TAG>"]], [1, 0, 140, 0, 1, 6, 1, 2, 18, 11, 0.020007770007770008, ["lea     rsi, aChangedOwnersh; \"changed ownership of %s to %s\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rax", "jmp     loc_2C90"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rax", "jmp~FOO"]], [1, 0, 140, 0, 1, 6, 1, 2, 15, 11, 0.020007770007770008, ["lea     rsi, aOwnershipOfSRe; \"ownership of %s retained as %s\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rax", "jmp     loc_2C90"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rax", "jmp~FOO"]], [2, 0, 140, 0, 1, 7, 1, 2, 14, 11, 0.006993006993006993, ["lea     rsi, aGroupOfSRetain; \"group of %s retained as %s\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     [rsp+1B8h+s], 0", "mov     rsi, rax", "jmp     loc_2C90"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~[rsp+0],0", "mov~rsi,rax", "jmp~FOO"]], [1, 0, 140, 0, 1, 7, 2, 2, 17, 11, 0.007101058663558663, ["lea     rsi, aNoChangeToOwne; \"no change to ownership of %s\\n\"", "xor     edi, edi; domainname", "xor     r14d, r14d", "call    _dcgettext", "mov     [rsp+1B8h+s], 0", "mov     rsi, rax", "jmp     loc_2C90"], ["lea~rsi,<TAG>", "xor~edi,edi", "xor~r14d,r14d", "call~FOO", "mov~[rsp+0],0", "mov~rsi,rax", "jmp~FOO"]], [1, 0, 140, 0, 0, 2, 0, 1, 6, 6, 0.22567016317016317, ["cmp     qword ptr [rbp+8], 0", "jnz     loc_2726"], ["cmp~[word ptr [rbp+0],0", "jnz~FOO"]], [1, 0, 140, 0, 0, 2, 0, 1, 5, 6, 0.22936091686091686, ["cmp     dword ptr [rbp+0], 2", "jz      loc_2EC0"], ["cmp~[word ptr [rbp+0],0", "jz~FOO"]], [0, 0, 140, 0, 0, 2, 1, 1, 7, 6, 0.22231934731934733, ["test    dl, dl", "jnz     loc_272A"], ["test~dl,dl", "jnz~FOO"]], [1, 0, 140, 0, 0, 3, 0, 1, 14, 11, 0.03328962703962704, ["mov     esi, [rsp+1B8h+gid]", "cmp     esi, 0FFFFFFFFh", "jz      short loc_2CDB"], ["mov~esi,[rsp+0]", "cmp~esi,0", "jz~FOO"]], [1, 0, 140, 0, 0, 3, 0, 0, 8, 14, 0.21887140637140637, ["lea     ecx, [rax-1]", "cmp     cx, 1", "jbe     short loc_2EE9"], ["lea~ecx,[rax-1]+0]", "cmp~cx,0", "jbe~FOO"]], [2, 0, 140, 0, 0, 3, 1, 1, 9, 14, 0.07561188811188811, ["and     eax, 0FFFFFFFDh", "cmp     ax, 4", "jnz     loc_27A1"], ["and~eax,0", "cmp~ax,0", "jnz~FOO"]], [0, 0, 140, 0, 0, 4, 1, 1, 8, 3, 0.029097060347060347, ["cmp     [r9+20h], ecx", "setz    cl", "test    al, al", "jz      loc_2795"], ["cmp~[r9+0],ecx", "setz~cl", "test~al,al", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 188h", "pop     rbx", "pop     rbp", "pop     r12", "pop     fts", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~fts", "pop~r14", "pop~r15", "retn"]], [2, 0, 140, 0, 0, 8, 1, 1, 9, 11, 0.020007770007770008, ["lea     rdi, filename; \"/\"", "mov     ecx, 2", "mov     rsi, r12", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jz      loc_3188"], ["lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,r12", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jz~FOO"]], [0, 0, 140, 0, 0, 4, 1, 1, 12, 13, 0.047494172494172496, ["mov     rsi, [rbp+18h]", "mov     r14, [rbp+20h]", "test    rsi, rsi", "jz      loc_2DD0"], ["mov~rsi,[rbp+0]", "mov~r14,[rbp+0]", "test~rsi,rsi", "jz~FOO"]], [2, 0, 140, 0, 4, 20, 5, 5, 13, 10, 0.009477386039886041, ["lea     rsi, filename; \"/\"", "mov     edi, 1; n", "call    quote_n", "mov     rsi, r12; name", "xor     edi, edi; n", "mov     r14, rax", "call    quote_n", "lea     rsi, aItIsDangerousT; \"it is dangerous to operate recursively \"...", "mov     ent, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     r8, r14", "mov     rdx, rax; format", "mov     rcx, rbx", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_2B6A"], ["lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,r12", "xor~edi,edi", "mov~r14,rax", "call~FOO", "lea~rsi,<TAG>", "mov~ent,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~r8,r14", "mov~rdx,rax", "mov~rcx,rbx", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 140, 0, 0, 8, 1, 1, 12, 11, 0.02570496632996633, ["lea     rdi, filename; \"/\"", "mov     ecx, 2", "mov     rsi, r12", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     loc_30E0"], ["lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,r12", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [0, 0, 140, 0, 0, 3, 1, 1, 9, 3, 0.013718919968919968, ["mov     rdx, [rbp+8]", "test    rdx, rdx", "jz      loc_2795"], ["mov~rdx,[rbp+0]", "test~rdx,rdx", "jz~FOO"]], [1, 0, 140, 0, 0, 2, 0, 1, 5, 7, 0.0006798756798756799, ["cmp     byte ptr [rbp+4], 0; jumptable 0000000000002600 case 6", "jz      loc_25D0"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [1, 0, 140, 0, 0, 2, 0, 1, 13, 14, 0.06704869204869204, ["mov     ecx, 900h", "jmp     loc_2991"], ["mov~ecx,0", "jmp~FOO"]], [0, 0, 140, 0, 0, 3, 0, 1, 10, 3, 0.007308663558663559, ["mov     rax, [rdx]", "cmp     [r9+8], rax", "jnz     loc_2795"], ["mov~rax,<TAG>", "cmp~[r9+0],rax", "jnz~FOO"]], [0, 0, 140, 0, 0, 1, 0, 0, 11, 4, 0.0008498445998445999, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 140, 0, 0, 3, 0, 1, 11, 11, 0.03249401061901062, ["mov     rax, [rsp+1B8h+var_1A8]", "cmp     dword ptr [rax], 5Fh ; '_'", "jz      loc_2F08"], ["mov~rax,[rsp+0]", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 140, 0, 0, 3, 0, 1, 11, 3, 0.044860463610463606, ["mov     rax, [rdx+8]", "cmp     [r9], rax", "jnz     loc_2795"], ["mov~rax,[rdx+0]", "cmp~<TAG>,rax", "jnz~FOO"]], [0, 0, 140, 0, 0, 4, 1, 1, 10, 3, 0.036778036778036774, ["xor     ecx, ecx", "mov     rax, [rdx]", "cmp     [r9+8], rax", "jz      loc_2B10"], ["xor~ecx,ecx", "mov~rax,<TAG>", "cmp~[r9+0],rax", "jz~FOO"]], [2, 0, 140, 0, 0, 9, 1, 1, 4, 6, 0.506021756021756, ["cmp     [rsp+1B8h+required_uid], 0FFFFFFFFh; jumptable 0000000000002600 default case", "mov     r10, [ent+28h]", "lea     r9, [ent+68h]", "movzx   edx, byte ptr [rbp+10h]", "setz    r14b", "cmp     [rsp+1B8h+required_gid], 0FFFFFFFFh", "setz    cl", "and     r14b, cl", "jz      short loc_2726"], ["cmp~[rsp+0],0", "mov~r10,[ent+0]", "lea~r9,[ent+0]", "movzx~edx,[yte ptr [rbp+0]", "setz~r14b", "cmp~[rsp+0],0", "setz~cl", "and~r14b,cl", "jz~FOO"]], [2, 0, 140, 0, 4, 19, 5, 4, 10, 10, 0.006628787878787879, ["lea     rsi, filename; \"/\"", "mov     edi, 1; n", "call    quote_n", "mov     rsi, r12; name", "xor     edi, edi; n", "mov     r14, rax", "call    quote_n", "lea     rsi, aItIsDangerousT; \"it is dangerous to operate recursively \"...", "mov     r12, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, r14", "mov     rdx, rax; format", "mov     rcx, r12", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,r12", "xor~edi,edi", "mov~r14,rax", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~r8,r14", "mov~rdx,rax", "mov~rcx,r12", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [0, 0, 140, 0, 0, 2, 1, 1, 5, 5, 0.27695221445221446, ["test    dl, dl", "jz      short loc_2742"], ["test~dl,dl", "jz~FOO"]], [0, 0, 140, 0, 0, 3, 0, 1, 17, 12, 0.055118492618492616, ["mov     rax, [rsp+1B8h+var_D8]", "cmp     [r9], rax", "jnz     loc_2BCE"], ["mov~rax,[rsp+0]", "cmp~<TAG>,rax", "jnz~FOO"]], [0, 0, 140, 0, 0, 4, 0, 1, 16, 12, 0.0794200012950013, ["mov     r9, [rsp+1B8h+s]", "mov     rax, [rsp+1B8h+var_D0]", "cmp     [r9+8], rax", "jz      loc_3130"], ["mov~r9,[rsp+0]", "mov~rax,[rsp+0]", "cmp~[r9+0],rax", "jz~FOO"]], [0, 0, 140, 0, 0, 2, 0, 1, 9, 13, 0.13901029526029526, ["mov     r11d, [fts+2Ch]", "jmp     loc_27AD"], ["mov~r11d,[fts+0]", "jmp~FOO"]], [0, 1, 140, 0, 5, 18, 0, 5, 14, 12, 0.006628787878787879, ["mov     rdi, rsi; s", "mov     [rsp+1B8h+src], rsi", "call    _strlen", "mov     rdi, r14; s", "mov     [rsp+1B8h+s], rax", "call    _strlen", "mov     rdx, [rsp+1B8h+s]", "lea     rdi, [rdx+rax+2]; n", "call    xmalloc", "mov     rsi, [rsp+1B8h+src]; src", "mov     rdi, rax; dest", "mov     [rsp+1B8h+s], rax", "call    _stpcpy", "lea     rdi, [rax+1]; dest", "mov     rsi, r14; src", "mov     byte ptr [rax], 3Ah ; ':'", "call    _strcpy", "mov     r14, [rsp+1B8h+s]"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "call~FOO", "mov~rdi,r14", "mov~[rsp+0],rax", "call~FOO", "mov~rdx,[rsp+0]", "lea~rdi,[rdx+0]", "call~FOO", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~[rsp+0],rax", "call~FOO", "lea~rdi,[rax+0]", "mov~rsi,r14", "mov~<TAG>,<STR>", "call~FOO", "mov~r14,[rsp+0]"]], [2, 0, 140, 0, 2, 11, 4, 3, 14, 9, 0.02570496632996633, ["lea     rsi, aUseNoPreserveR; \"use --no-preserve-root to override this\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     byte ptr [rsp+1B8h+ok], 0", "jmp     loc_25D0"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 140, 0, 3, 13, 4, 3, 13, 10, 0.009477386039886041, ["mov     rdi, r12; name", "call    quote", "lea     rsi, aItIsDangerousT_0; \"it is dangerous to operate recursively \"...", "mov     ent, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rdi,r12", "call~FOO", "lea~rsi,<TAG>", "mov~ent,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [3, 0, 140, 0, 4, 17, 4, 5, 11, 9, 0.020007770007770008, ["lea     rsi, aUseNoPreserveR; \"use --no-preserve-root to override this\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     edx, 4; instr", "mov     rsi, ent; p", "mov     rdi, fts; sp_0", "call    fts_set", "mov     rdi, fts; sp_0", "call    fts_read", "mov     byte ptr [rsp+1B8h+ok], 0", "jmp     loc_25D0"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~edx,0", "mov~rsi,ent", "mov~rdi,fts", "call~FOO", "mov~rdi,fts", "call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 140, 0, 3, 14, 4, 4, 10, 10, 0.006628787878787879, ["mov     rdi, r12; name", "call    quote", "lea     rsi, aItIsDangerousT_0; \"it is dangerous to operate recursively \"...", "mov     r12, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_2920"], ["mov~rdi,r12", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,r12", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 140, 0, 0, 3, 1, 1, 10, 13, 0.21563714063714062, ["test    dl, dl", "mov     r11d, [fts+2Ch]", "jnz     loc_2968"], ["test~dl,dl", "mov~r11d,[fts+0]", "jnz~FOO"]], [2, 0, 140, 0, 1, 6, 0, 2, 7, 9, 0.0118006993006993, ["mov     qword ptr [ent+18h], 1", "mov     edx, 1; instr", "mov     rsi, ent; p", "mov     rdi, fts; sp_0", "call    fts_set", "jmp     loc_25D0"], ["mov~[word ptr [ent+0],0", "mov~edx,0", "mov~rsi,ent", "mov~rdi,fts", "call~FOO", "jmp~FOO"]], [2, 0, 144, 1, 0, 17, 1, 1, 0, 10, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 188h", "mov     rbx, fs:28h", "mov     [rsp+1B8h+var_40], rbx", "xor     ebx, ebx", "cmp     r8d, 0FFFFFFFFh", "mov     [rsp+1B8h+uid], edx", "mov     [rsp+1B8h+gid], ecx", "mov     [rsp+1B8h+required_uid], r8d", "mov     [rsp+1B8h+required_gid], r9d", "mov     rbp, [rsp+1B8h+chopt]", "jnz     short loc_2594"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,<TAG>", "mov~[rsp+0],rbx", "xor~ebx,ebx", "cmp~r8d,0", "mov~[rsp+0],edx", "mov~[rsp+0],ecx", "mov~[rsp+0],r8d", "mov~[rsp+0],r9d", "mov~rbp,[rsp+0]", "jnz~FOO"]], [1, 0, 143, 0, 0, 2, 0, 1, 1, 10, 9.712509712509713e-05, ["cmp     r9d, 0FFFFFFFFh", "jnz     short loc_2594"], ["cmp~r9d,0", "jnz~FOO"]], [2, 0, 141, 0, 0, 5, 1, 1, 3, 10, 0.0, ["mov     eax, esi", "or      eax, 8", "cmp     dword ptr [rbp+0], 2", "cmovz   esi, eax", "jmp     loc_2594"], ["mov~eax,esi", "or~eax,0", "cmp~[word ptr [rbp+0],0", "cmovz~esi,eax", "jmp~FOO"]], [1, 0, 142, 0, 0, 2, 0, 1, 2, 10, 9.712509712509713e-05, ["cmp     byte ptr [rbp+10h], 0", "jz      loc_2D80"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [0, 0, 140, 0, 1, 9, 0, 2, 16, 12, 0.00846121471121471, ["mov     rax, [rsp+1B8h+var_1A8]", "mov     edi, r14d; fd", "mov     edx, [rax]", "mov     dword ptr [rsp+1B8h+ok], edx", "call    _close", "mov     rax, [rsp+1B8h+var_1A8]", "mov     edx, dword ptr [rsp+1B8h+ok]", "mov     [rax], edx", "jmp     loc_27ED"], ["mov~rax,[rsp+0]", "mov~edi,r14d", "mov~edx,<TAG>", "mov~<TAG>,edx", "call~FOO", "mov~rax,[rsp+0]", "mov~edx,<TAG>", "mov~<TAG>,edx", "jmp~FOO"]], [1, 0, 140, 0, 1, 7, 1, 2, 15, 13, 0.09001473063973063, ["mov     rdx, [rsp+1B8h+stat_buf]; stat_buf", "mov     esi, r14d; fildes", "mov     edi, 1; ver", "mov     [rsp+1B8h+s], r9", "call    ___fxstat", "test    eax, eax", "jnz     loc_2F78"], ["mov~rdx,[rsp+0]", "mov~esi,r14d", "mov~edi,0", "mov~[rsp+0],r9", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 140, 0, 0, 1, 0, 0, 9, 14, 0.13577602952602952, ["movzx   edx, byte ptr [rbp+10h]"], ["movzx~edx,[yte ptr [rbp+0]"]], [0, 0, 140, 0, 1, 12, 1, 1, 14, 13, 0.13526288526288524, ["mov     edx, ecx", "mov     rsi, r10", "mov     edi, r11d", "mov     [rsp+1B8h+s], r9", "mov     [rsp+1B8h+var_16C], ecx", "mov     [rsp+1B8h+var_178], r10", "mov     dword ptr [rsp+1B8h+src], r11d", "call    ___openat_2", "test    eax, eax", "mov     r14d, eax", "mov     r9, [rsp+1B8h+s]", "jns     loc_2B98"], ["mov~edx,ecx", "mov~rsi,r10", "mov~edi,r11d", "mov~[rsp+0],r9", "mov~[rsp+0],ecx", "mov~[rsp+0],r10", "mov~[word ptr [rsp+0],r11d", "call~FOO", "test~eax,eax", "mov~r14d,eax", "mov~r9,[rsp+0]", "jns~FOO"]], [1, 0, 140, 0, 1, 12, 2, 1, 17, 14, 0.015090811965811966, ["or      ecx, 1", "mov     rsi, r10", "mov     edi, r11d", "mov     edx, ecx", "mov     [rsp+1B8h+src], r9", "mov     [rsp+1B8h+s], r10", "call    ___openat_2", "test    eax, eax", "mov     r14d, eax", "mov     r10, [rsp+1B8h+s]", "mov     r9, [rsp+1B8h+src]", "jns     loc_2B98"], ["or~ecx,0", "mov~rsi,r10", "mov~edi,r11d", "mov~edx,ecx", "mov~[rsp+0],r9", "mov~[rsp+0],r10", "call~FOO", "test~eax,eax", "mov~r14d,eax", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "jns~FOO"]], [1, 0, 140, 0, 0, 6, 0, 1, 15, 12, 0.044110981610981606, ["mov     rax, [rsp+1B8h+var_1A8]", "mov     r11d, dword ptr [rsp+1B8h+src]", "mov     r10, [rsp+1B8h+var_178]", "mov     ecx, [rsp+1B8h+var_16C]", "cmp     dword ptr [rax], 0Dh", "jnz     loc_27ED"], ["mov~rax,[rsp+0]", "mov~r11d,[word ptr [rsp+0]", "mov~r10,[rsp+0]", "mov~ecx,[rsp+0]", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 140, 0, 0, 1, 0, 1, 19, 12, 0.007049663299663299, ["jmp     loc_27ED"], ["jmp~FOO"]], [1, 0, 140, 0, 2, 12, 1, 2, 1, 9, 0.027195027195027196, ["xor     edx, edx; compar", "lea     r15, off_B728", "call    xfts_open", "mov     r13, rax", "call    ___errno_location", "mov     [rsp+1B8h+var_1A8], rax", "lea     rax, [rsp+1B8h+var_D8]", "mov     byte ptr [rsp+1B8h+ok], 1", "mov     [rsp+1B8h+stat_buf], rax", "lea     rax, [rsp+1B8h+var_168]", "mov     [rsp+1B8h+var_188], rax", "nop     word ptr [rax+rax+00h]"], ["xor~edx,edx", "lea~r15,<TAG>", "call~FOO", "mov~r13,rax", "call~FOO", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~<TAG>,0", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "nop~[ord ptr [rax+0]"]], [1, 0, 140, 0, 1, 11, 1, 2, 10, 12, 0.18135198135198136, ["mov     edx, [rsp+1B8h+uid]; owner", "mov     ecx, [rsp+1B8h+gid]; group", "mov     r8d, 100h; flag", "mov     rsi, r10; file", "mov     edi, r11d; fd", "mov     [rsp+1B8h+s], r9", "call    _fchownat", "test    eax, eax", "mov     r9, [rsp+1B8h+s]", "setz    dl", "jz      short loc_27E5"], ["mov~edx,[rsp+0]", "mov~ecx,[rsp+0]", "mov~r8d,0", "mov~rsi,r10", "mov~edi,r11d", "mov~[rsp+0],r9", "call~FOO", "test~eax,eax", "mov~r9,[rsp+0]", "setz~dl", "jz~FOO"]], [1, 1, 140, 0, 0, 4, 1, 1, 16, 14, 0.030885780885780884, ["mov     eax, [r9+18h]", "and     eax, 0F000h", "cmp     eax, 8000h", "jz      loc_31BC"], ["mov~eax,[r9+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 140, 0, 0, 3, 0, 1, 18, 13, 0.009477790727790727, ["mov     rax, [rsp+1B8h+var_1A8]", "cmp     dword ptr [rax], 0Dh", "jz      loc_29F1"], ["mov~rax,[rsp+0]", "cmp~<TAG>,0", "jz~FOO"]]], "func_feature": [82, 108, 205, 10, 145, 239, 1, 761, 0.06327, 23, 4], "succs": [[40, 11, 110, 72, 53, 117], [0, 117], [136, 71], [136, 2], [17, 61], [4, 61], [4], [34, 15], [31, 7], [12, 63], [9, 19], [18, 35], [63, 23], [25, 58], [13, 70], [34, 31], [8, 15], [28, 22], [129, 35], [27, 38], [93], [44, 20], [74, 75], [26, 22], [45, 23], [70], [28], [41], [82, 54], [36, 63], [10, 29], [29], [29], [29], [37, 134], [52], [100, 39], [32, 10], [41], [50, 100], [52], [24, 63], [], [104, 42], [93], [63], [63, 55], [48, 46], [116, 46], [136, 46], [80, 21], [65, 50], [5], [52], [64], [65], [136, 3], [56, 103], [5], [137, 90], [59, 111], [63], [61, 6], [81, 85], [63], [106, 63], [67, 63], [68, 63], [63], [57, 47], [57, 69], [115], [117, 78], [64], [73], [73], [64], [76, 95], [83, 85], [64], [96, 79], [1, 84], [64], [85, 86], [89, 43], [1, 84], [105, 85], [94], [123, 87], [43], [33, 10], [90, 60], [90], [64], [64], [64], [64], [99, 119], [97, 119], [101, 14], [65, 51], [122, 102], [128, 122], [49, 109], [], [118, 127], [88, 77], [124], [107, 125], [112, 49], [117, 85], [137], [113, 49], [115], [66, 30], [49, 108], [49, 115], [98, 119], [126], [70, 14], [16, 62], [120, 62], [142], [94], [85], [124], [85], [126], [91, 142], [85], [131, 141], [133, 141], [141], [132, 141], [10], [121, 134], [128], [139, 135], [144, 135], [10, 143], [10], [85], [114, 30], [138, 92], [140, 92]], "fname": "chown_files", "n_num": 145}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["mov     rax, [ay]", "cmp     [ax_0], rax", "setz    al", "retn"], ["mov~rax,<TAG>", "cmp~<TAG>,rax", "setz~al", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 0, 0, 0.0, ["xor     eax, eax", "mov     rdx, [ay+8]", "cmp     [ax_0+8], rdx", "jz      short loc_3620"], ["xor~eax,eax", "mov~rdx,[ay+0]", "cmp~[ax_0+0],rdx", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 1, 1, 0, 3, 2, 0, 9, 0.0, 0, 0], "succs": [[], [0, 2], []], "fname": "AD_compare", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[0, 0, 0, 1, 0, 5, 1, 0, 0, 0, 0.0, ["mov     rax, [ax_0+8]", "xor     edx, edx", "div     table_size", "mov     rax, rdx", "retn"], ["mov~rax,[ax_0+0]", "xor~edx,edx", "div~,table_size", "mov~rax,rdx", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 0, 1], "succs": [[]], "fname": "AD_hash", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[1, 0, 4, 0, 1, 6, 1, 2, 0, 0, 0.015476190476190477, ["mov     rsi, [p+28h]; filename", "mov     rdx, sbp; stat_buf", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jnz     loc_368D"], ["mov~rsi,[p+0]", "mov~rdx,sbp", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 5, 0, 1, 5, 0, 2, 3, -1, 0.04325396825396825, ["call    ___errno_location", "mov     r12d, [rax]", "mov     r13, rax", "cmp     r12d, 2", "jz      loc_3770"], ["call~FOO", "mov~r12d,<TAG>", "mov~r13,rax", "cmp~r12d,0", "jz~FOO"]], [1, 0, 15, 0, 1, 5, 1, 2, 2, 5, 0.12619047619047621, ["mov     follow, sbp; stat_buf", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jz      loc_36F7"], ["mov~follow,sbp", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 4, -1, 0.013492063492063494, ["mov     [p+38h], r12d"], ["mov~[p+0],r12d"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, -1, 0.03333333333333334, ["cmp     eax, 0A000h", "jz      loc_37A0"], ["cmp~eax,0", "jz~FOO"]], [1, 1, 9, 0, 0, 4, 1, 1, 3, 4, 0.1265873015873016, ["mov     eax, [p+80h]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_3730"], ["mov~eax,[p+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [2, 0, 1, 0, 0, 3, 0, 1, 5, -1, 0.0035714285714285718, ["mov     dword ptr [r13+0], 0", "mov     eax, 0Dh", "jmp     loc_36C2"], ["mov~[word ptr [r13+0],0", "mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 5, -1, 0.002380952380952381, ["mov     eax, 0Ch", "jmp     loc_36C2"], ["mov~eax,0", "jmp~FOO"]], [2, 0, 12, 0, 1, 9, 1, 2, 3, 5, 0.026190476190476195, ["mov     eax, [sp_0+2Ch]", "mov     follow, rsi; filename", "mov     r8d, 100h; flag", "mov     rcx, sbp; stat_buf", "mov     edi, 1; ver", "mov     esi, eax; fildes", "call    ___fxstatat", "test    eax, eax", "jnz     short loc_3760"], ["mov~eax,[sp_0+0]", "mov~follow,rsi", "mov~r8d,0", "mov~rcx,sbp", "mov~edi,0", "mov~esi,eax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 1, 0, 1, 0, 10, 0, 0, 5, -1, 0.0, ["cmp     eax, 8000h", "setz    al", "add     rsp, 8", "movzx   eax, al", "pop     sbp", "lea     eax, [rax+rax*4+3]", "pop     p", "pop     r12", "pop     r13", "retn"], ["cmp~eax,<STR>", "setz~al", "add~rsp,0", "movzx~eax,al", "pop~sbp", "lea~eax,[rax+0]", "pop~p", "pop~r12", "pop~r13", "retn"]], [2, 0, 5, 0, 0, 3, 0, 1, 4, 3, 0.08134920634920635, ["cmp     byte ptr [p+0F8h], 2Eh ; '.'", "mov     eax, 1", "jnz     short loc_36C2"], ["cmp~[yte ptr [p+0],0", "mov~eax,0", "jnz~FOO"]], [5, 0, 1, 1, 0, 10, 2, 0, 5, -1, 0.007936507936507938, ["lea     rdi, [sbp+8]", "mov     qword ptr [p+68h], 0", "mov     qword ptr [sbp+88h], 0", "xor     eax, eax", "and     rdi, 0FFFFFFFFFFFFFFF8h", "sub     sbp, rdi", "lea     ecx, [rbx+90h]", "shr     ecx, 3", "rep stosq", "mov     eax, 0Ah"], ["lea~rdi,[sbp+0]", "mov~[word ptr [p+0],0", "mov~[word ptr [sbp+0],0", "xor~eax,eax", "and~rdi,0", "sub~sbp,rdi", "lea~ecx,[rbx+0]", "shr~ecx,0", "stosq~<TAG>,", "mov~eax,0"]], [0, 0, 2, 0, 1, 4, 0, 2, 4, -1, 0.008730158730158732, ["call    ___errno_location", "mov     eax, [rax]", "mov     [p+38h], eax", "jmp     err"], ["call~FOO", "mov~eax,<TAG>", "mov~[p+0],eax", "jmp~FOO"]], [1, 1, 3, 0, 0, 4, 1, 1, 6, 1, 0.022619047619047622, ["mov     edx, [p+0F8h]", "and     edx, 0FFFF00h", "cmp     edx, 2E00h", "jnz     loc_36C2"], ["mov~edx,[p+0]", "and~edx,0", "cmp~edx,<STR>", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 5, 2, 0.05714285714285715, ["cmp     byte ptr [p+0F9h], 0", "jnz     short loc_37B0"], ["cmp~[yte ptr [p+0],0", "jnz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 1, 7, 0, 0.002380952380952381, ["jmp     loc_3747"], ["jmp~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 5, -1, 0.0, ["add     rsp, 8", "pop     rbx", "pop     p", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "pop~rbx", "pop~p", "pop~r12", "pop~r13", "retn"]], [3, 0, 1, 1, 0, 5, 1, 1, 6, -1, 0.0035714285714285718, ["cmp     qword ptr [p+50h], 1", "sbb     eax, eax", "and     eax, 0FFFFFFFCh", "add     eax, 5", "jmp     loc_36C2"], ["cmp~[word ptr [p+0],0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "jmp~FOO"]], [1, 0, 19, 0, 0, 2, 1, 1, 1, 6, 0.033730158730158735, ["test    al, 2", "jnz     short loc_3663"], ["test~al,0", "jnz~FOO"]], [2, 0, 21, 1, 0, 11, 0, 1, 0, 7, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbp, p", "lea     rbx, [p+68h]", "sub     rsp, 8", "cmp     qword ptr [rbp+50h], 0", "mov     eax, [sp_0+48h]", "mov     p, [p+28h]; filename", "jnz     short loc_36D0"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbp,p", "lea~rbx,[p+0]", "sub~rsp,0", "cmp~[word ptr [rbp+0],0", "mov~eax,[sp_0+0]", "mov~p,[p+0]", "jnz~FOO"]], [1, 0, 20, 0, 0, 2, 1, 1, 1, 6, 0.01865079365079365, ["test    al, 1", "jz      short loc_36D0"], ["test~al,0", "jz~FOO"]], [0, 0, 18, 0, 0, 2, 1, 1, 2, 6, 0.01626984126984127, ["test    dl, dl", "jnz     short loc_3663"], ["test~dl,dl", "jnz~FOO"]]], "func_feature": [5, 11, 23, 0, 22, 33, 7, 99, 0.02922, 0, 5], "succs": [[3, 6], [0, 3], [1, 5], [11], [9, 7], [10, 4], [16], [16], [12, 5], [], [16, 14], [16], [11], [16, 15], [17, 13], [17], [], [16], [2, 21], [18, 20], [18, 2], [8, 2]], "fname": "fts_stat", "n_num": 22}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.004761904761904762, ["mov     rdi, [sp_0+10h]; ptr"], ["mov~rdi,[sp_0+0]"]], [1, 0, 13, 1, 1, 5, 1, 2, 2, 4, 0.06666666666666668, ["shl     rsi, 3; size", "call    _realloc", "test    rax, rax", "mov     rdi, rax; base", "jz      loc_38A0"], ["shl~rsi,0", "call~FOO", "test~rax,rax", "mov~rdi,rax", "jz~FOO"]], [0, 0, 10, 0, 0, 1, 0, 0, 3, 3, 0.09523809523809525, ["mov     [sp_0+10h], a"], ["mov~[sp_0+0],a"]], [2, 0, 4, 2, 0, 5, 0, 1, 4, -1, 0.1, ["mov     rsi, [ap_0+8]", "add     ap_0, 8", "sub     rcx, 1", "mov     [rdi+10h], rsi", "jnz     short loc_3870"], ["mov~rsi,[ap_0+0]", "add~ap_0,0", "sub~rcx,0", "mov~[rdi+0],rsi", "jnz~FOO"]], [0, 0, 4, 0, 0, 3, 0, 1, 3, -1, 0.1142857142857143, ["mov     rdi, head", "mov     rdx, ap_0", "jmp     short loc_3873"], ["mov~rdi,head", "mov~rdx,ap_0", "jmp~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 5, -1, 0.0, ["mov     rdi, [ap_0]"], ["mov~rdi,<TAG>"]], [0, 0, 1, 0, 0, 1, 0, 0, 5, -1, 0.014285714285714287, ["mov     ap_0, [r8+r12*8-8]"], ["mov~ap_0,[r8+0]"]], [1, 0, 14, 0, 0, 5, 0, 1, 1, 5, 0.01904761904761905, ["lea     head, [nitems+28h]", "mov     rax, 1FFFFFFFFFFFFFFFh", "cmp     rsi, rax", "mov     [sp_0+38h], rsi", "ja      loc_38A4"], ["lea~head,[nitems+0]", "mov~rax,0", "cmp~rsi,rax", "mov~[sp_0+0],rsi", "ja~FOO"]], [1, 0, 15, 1, 0, 12, 0, 0, 0, 3, 0.0, ["push    r13", "push    r12", "mov     r12, nitems", "push    rbp", "push    rbx", "mov     rbp, sp_0", "mov     rbx, head", "sub     rsp, 8", "cmp     [rbp+38h], nitems", "mov     r13, [sp_0+40h]", "mov     sp_0, [sp_0+10h]; ptr", "jnb     short loc_3825"], ["push~r13", "push~r12", "mov~r12,nitems", "push~rbp", "push~rbx", "mov~rbp,sp_0", "mov~rbx,head", "sub~rsp,0", "cmp~[rbp+0],nitems", "mov~r13,[sp_0+0]", "mov~sp_0,[sp_0+0]", "jnb~FOO"]], [2, 0, 6, 1, 1, 9, 0, 2, 2, 1, 0.2, ["mov     rcx, compare; compar", "mov     edx, 8; size", "mov     rsi, nitems; nmemb", "call    _qsort", "mov     r8, [sp_0+10h]", "mov     rcx, nitems", "sub     rcx, 1", "mov     rax, [ap_0]", "jz      short loc_38D0"], ["mov~rcx,compare", "mov~edx,0", "mov~rsi,nitems", "call~FOO", "mov~r8,[sp_0+0]", "mov~rcx,nitems", "sub~rcx,0", "mov~rax,<TAG>", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 1, 2, 0.17142857142857143, ["test    p, p", "jz      short loc_3841"], ["test~p,p", "jz~FOO"]], [1, 0, 8, 1, 0, 5, 1, 1, 3, 2, 0.03333333333333334, ["add     ap_0, 8", "mov     [ap_0-8], p", "mov     p, [p+10h]", "test    p, p", "jnz     short loc_3830"], ["add~ap_0,0", "mov~[ap_0-8]+0],p", "mov~p,[p+0]", "test~p,p", "jnz~FOO"]], [3, 0, 0, 1, 1, 10, 0, 1, 2, -1, 0.0, ["call    free", "mov     qword ptr [sp_0+10h], 0", "mov     qword ptr [sp_0+38h], 0", "add     rsp, 8", "mov     rax, head", "pop     head", "pop     sp_0", "pop     nitems", "pop     compare", "retn"], ["call~FOO", "mov~[word ptr [sp_0+0],0", "mov~[word ptr [sp_0+0],0", "add~rsp,0", "mov~rax,head", "pop~head", "pop~sp_0", "pop~nitems", "pop~compare", "retn"]], [0, 0, 8, 0, 0, 2, 0, 0, 2, 3, 0.02380952380952381, ["mov     rdx, rdi", "nop     dword ptr [rax]"], ["mov~rdx,rdi", "nop~<TAG>"]], [0, 0, 1, 0, 0, 2, 0, 1, 3, 0, 0.0380952380952381, ["mov     rdx, head", "jmp     short loc_388A"], ["mov~rdx,head", "jmp~FOO"]], [2, 0, 0, 1, 0, 7, 0, 0, 4, -1, 0.0, ["mov     qword ptr [rdx+10h], 0", "add     rsp, 8", "pop     p", "pop     sp_0", "pop     r12", "pop     compare", "retn"], ["mov~[word ptr [rdx+0],0", "add~rsp,0", "pop~p", "pop~sp_0", "pop~r12", "pop~compare", "retn"]]], "func_feature": [3, 3, 11, 0, 16, 21, 2, 71, 0.05506, 0, 8], "succs": [[12], [0, 2], [10], [5, 6], [3], [3], [15], [1, 12], [10, 7], [4, 14], [9, 13], [9, 11], [], [11], [15], []], "fname": "fts_sort", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[5, 0, 1, 0, 1, 13, 0, 1, 0, 0, 0.0, ["lea     rdi, [p+0F8h]; dest", "mov     rdx, namelen; n", "mov     rsi, name; src", "call    _memcpy", "mov     rax, [sp_0+20h]", "mov     byte ptr [p+namelen+0F8h], 0", "mov     [p+58h], namelen", "mov     [p+48h], sp_0", "mov     dword ptr [p+38h], 0", "mov     dword ptr [p+62h], 30000h", "mov     [p+30h], rax", "mov     qword ptr [p+18h], 0", "mov     qword ptr [p+20h], 0"], ["lea~rdi,[p+0]", "mov~rdx,namelen", "mov~rsi,name", "call~FOO", "mov~rax,[sp_0+0]", "mov~[yte ptr [p+0],0", "mov~[p+0],namelen", "mov~[p+0],sp_0", "mov~[word ptr [p+0],0", "mov~[word ptr [p+0],0", "mov~[p+0],rax", "mov~[word ptr [p+0],0", "mov~[word ptr [p+0],0"]], [1, 0, 2, 1, 1, 13, 1, 2, 0, 1, 0.0, ["push    r13", "push    r12", "mov     r12, sp_0", "push    rbp", "push    rbx", "lea     sp_0, [namelen+100h]; size", "mov     r13, name", "mov     rbp, namelen", "sub     rsp, 8", "call    _malloc", "test    rax, rax", "mov     rbx, rax", "jz      short loc_3950"], ["push~r13", "push~r12", "mov~r12,sp_0", "push~rbp", "push~rbx", "lea~sp_0,[namelen+0]", "mov~r13,name", "mov~rbp,namelen", "sub~rsp,0", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "mov     rax, p", "pop     p", "pop     namelen", "pop     sp_0", "pop     name", "retn"], ["add~rsp,0", "mov~rax,p", "pop~p", "pop~namelen", "pop~sp_0", "pop~name", "retn"]]], "func_feature": [2, 1, 3, 0, 3, 3, 5, 33, 0.0, 0, 2], "succs": [[2], [0, 2], []], "fname": "fts_alloc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     fd_ring", "retn"], ["pop~fd_ring", "retn"]], [0, 0, 4, 0, 1, 4, 1, 2, 1, 2, 0.5, ["mov     rdi, fd_ring; ir", "call    i_ring_empty", "test    al, al", "jz      short loc_3970"], ["mov~rdi,fd_ring", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 1, 1, 2, 1, 0.16666666666666666, ["mov     rdi, fd_ring; ir", "call    i_ring_pop", "test    eax, eax", "jns     short loc_3990"], ["mov~rdi,fd_ring", "call~FOO", "test~eax,eax", "jns~FOO"]], [0, 0, 4, 0, 0, 3, 0, 1, 0, 3, 0.0, ["push    rbx", "mov     rbx, fd_ring", "jmp     short loc_397C"], ["push~rbx", "mov~rbx,fd_ring", "jmp~FOO"]], [0, 0, 4, 0, 1, 3, 0, 2, 3, 0, 0.0, ["mov     edi, eax; fd", "call    _close", "jmp     short loc_397C"], ["mov~edi,eax", "call~FOO", "jmp~FOO"]]], "func_feature": [3, 2, 6, 0, 5, 6, 4, 16, 0.13333, 0, 0], "succs": [[], [0, 2], [1, 4], [1], [1]], "fname": "fd_ring_clear", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[1, 0, 0, 1, 1, 7, 0, 1, 0, 0, 0.0, ["mov     edi, esi; fd", "call    _close", "mov     [sp_0+2Ch], ebp", "add     rsp, 8", "pop     sp_0", "pop     fd", "retn"], ["mov~edi,esi", "call~FOO", "mov~[sp_0+0],ebp", "add~rsp,0", "pop~sp_0", "pop~fd", "retn"]], [0, 0, 2, 0, 0, 2, 1, 0, 3, -1, 0.05555555555555555, ["test    esi, esi", "jns     short loc_39F0"], ["test~esi,esi", "jns~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 1, 1, 0.013888888888888888, ["cmp     esi, 0FFFFFF9Ch", "jnz     short loc_3A01"], ["cmp~esi,0", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 1, 1, 2, -1, 0.10416666666666666, ["test    byte ptr [rbx+48h], 4", "jnz     short loc_39C5"], ["test~[yte ptr [rbx+0],0", "jnz~FOO"]], [1, 0, 0, 1, 1, 7, 0, 1, 3, -1, 0.0, ["mov     edi, eax; fd", "call    _close", "mov     [sp_0+2Ch], ebp", "add     rsp, 8", "pop     sp_0", "pop     fd", "retn"], ["mov~edi,eax", "call~FOO", "mov~[sp_0+0],ebp", "add~rsp,0", "pop~sp_0", "pop~fd", "retn"]], [0, 0, 2, 0, 1, 4, 1, 2, 2, -1, 0.0625, ["lea     rdi, [sp_0+58h]; ir", "call    i_ring_push", "test    eax, eax", "js      short loc_39C5"], ["lea~rdi,[sp_0+0]", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 3, -1, 0.0, ["mov     [sp_0+2Ch], ebp", "add     rsp, 8", "pop     sp_0", "pop     fd", "retn"], ["mov~[sp_0+0],ebp", "add~rsp,0", "pop~sp_0", "pop~fd", "retn"]], [1, 0, 9, 1, 0, 8, 0, 1, 0, 2, 0.0, ["push    rbp", "push    rbx", "mov     ebp, esi", "mov     rbx, sp_0", "sub     rsp, 8", "mov     esi, [sp_0+2Ch]; val", "cmp     esi, ebp", "jnz     short loc_39B7"], ["push~rbp", "push~rbx", "mov~ebp,esi", "mov~rbx,sp_0", "sub~rsp,0", "mov~esi,[sp_0+0]", "cmp~esi,ebp", "jnz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 1, -1, 0.16666666666666666, ["test    dl, dl", "jnz     short loc_39D0"], ["test~dl,dl", "jnz~FOO"]]], "func_feature": [4, 4, 9, 0, 10, 12, 6, 40, 0.04028, 0, 4], "succs": [[], [0, 7], [], [9, 2], [1, 7], [], [5, 7], [], [9, 3], [4, 6]], "fname": "cwd_advance_fd", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[1, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["mov     [rbx], p", "mov     eax, 1", "pop     rbx", "retn"], ["mov~<TAG>,p", "mov~eax,0", "pop~rbx", "retn"]], [0, 0, 2, 0, 1, 5, 1, 2, 1, 1, 0.16666666666666666, ["mov     [rsi], new_len", "mov     rsi, new_len; size", "call    _realloc", "test    p, p", "jz      short loc_3A68"], ["mov~<TAG>,new_len", "mov~rsi,new_len", "call~FOO", "test~p,p", "jz~FOO"]], [1, 0, 0, 0, 1, 6, 1, 1, 2, 0, 0.0, ["mov     rdi, [rbx]; ptr", "call    free", "mov     qword ptr [rbx], 0", "xor     eax, eax", "pop     rbx", "retn"], ["mov~rdi,<TAG>", "call~FOO", "mov~<TAG>,0", "xor~eax,eax", "pop~rbx", "retn"]], [2, 0, 0, 0, 2, 7, 1, 2, 1, -1, 0.0, ["call    free", "mov     qword ptr [rbx], 0", "call    ___errno_location", "mov     dword ptr [rax], 24h ; '$'", "xor     eax, eax", "pop     rbx", "retn"], ["call~FOO", "mov~<TAG>,0", "call~FOO", "mov~<TAG>,0", "xor~eax,eax", "pop~rbx", "retn"]], [0, 0, 4, 0, 0, 7, 0, 1, 0, 2, 0.0, ["push    rbx", "mov     rcx, [rsi]", "mov     rbx, rdi", "mov     rdi, [rdi]; ptr", "lea     rax, [rcx+more+100h]", "cmp     rcx, new_len", "ja      short loc_3A48"], ["push~rbx", "mov~rcx,<TAG>", "mov~rbx,rdi", "mov~rdi,<TAG>", "lea~rax,[rcx+0]", "cmp~rcx,new_len", "ja~FOO"]]], "func_feature": [4, 3, 6, 0, 5, 4, 2, 29, 0.03333, 0, 0], "succs": [[], [0, 2], [], [], [1, 3]], "fname": "fts_palloc", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[0, 0, 5, 0, 0, 3, 0, 1, 0, 0, 0.08333333333333334, ["mov     rsi, [ent+70h]", "cmp     [rcx], rsi", "jz      short loc_3B10"], ["mov~rsi,[ent+0]", "cmp~<TAG>,rsi", "jz~FOO"]], [1, 0, 7, 0, 0, 3, 0, 1, 3, 1, 0.08333333333333334, ["mov     rcx, [rsi]", "cmp     qword ptr [rcx+10h], 0", "jz      short loc_3B30"], ["mov~rcx,<TAG>", "cmp~[word ptr [rcx+0],0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 5, 0, 1, 9, 1, 2, 1, 1, 0.015151515151515152, ["mov     rax, [ent+68h]", "mov     rdi, [rcx]; table", "mov     rsi, rsp; entry", "mov     [rsp+28h+obj.dev], rax", "mov     rax, [ent+70h]", "mov     [rsp+28h+obj.ino], rax", "call    hash_delete", "test    found, found", "jz      short loc_3B30"], ["mov~rax,[ent+0]", "mov~rdi,<TAG>", "mov~rsi,rsp", "mov~<TAG>,rax", "mov~rax,[ent+0]", "mov~[rsp+0],rax", "call~FOO", "test~found,found", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 1, 3, 0.06060606060606061, ["mov     rax, [ent+8]", "test    parent, parent", "jz      short loc_3AC2"], ["mov~rax,[ent+0]", "test~parent,parent", "jz~FOO"]], [2, 0, 12, 1, 0, 7, 2, 1, 0, 2, 0.0, ["sub     rsp, 28h", "mov     rcx, rsi", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "and     edi, 102h", "jnz     short loc_3AE0"], ["sub~rsp,0", "mov~rcx,rsi", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "and~edi,0", "jnz~FOO"]], [0, 0, 3, 0, 1, 3, 0, 2, 2, -1, 0.022727272727272728, ["mov     rdi, found; ptr", "call    free", "jmp     short loc_3AC2"], ["mov~rdi,found", "call~FOO", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, -1, 0.13636363636363635, ["mov     rax, [rsp+28h+var_10]", "xor     rax, fs:28h", "jnz     short loc_3B2B"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 2, 2, 0.06818181818181818, ["cmp     qword ptr [parent+50h], 0", "js      short loc_3AC2"], ["cmp~[word ptr [parent+0],0", "js~FOO"]], [0, 0, 4, 0, 0, 3, 0, 1, 5, -1, 0.03787878787878788, ["mov     rsi, [ent+68h]", "cmp     [rcx+8], rsi", "jnz     short loc_3AC2"], ["mov~rsi,[ent+0]", "cmp~[rcx+0],rsi", "jnz~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 6, -1, 0.0, ["mov     ent, [parent+68h]", "mov     parent, [parent+70h]", "mov     [rcx+8], rdx", "mov     [rcx], rax", "jmp     short loc_3AC2"], ["mov~ent,[parent+0]", "mov~parent,[parent+0]", "mov~[rcx+0],rdx", "mov~<TAG>,rax", "jmp~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 3, -1, 0.0, ["add     rsp, 28h", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [4, 5, 14, 1, 13, 18, 3, 45, 0.03904, 1, 2], "succs": [[8, 10], [0, 2], [], [2, 6], [8, 9], [3, 4], [8], [], [12, 7], [8, 1], [8, 11], [8], []], "fname": "leave_dir", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 4, -1, 0.043434343434343436, ["mov     rcx, [rsp+0E8h+var_40]", "xor     rcx, fs:28h", "mov     eax, ebp", "jnz     loc_3E00"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~eax,ebp", "jnz~FOO"]], [0, 0, 26, 0, 0, 2, 1, 1, 2, 1, 0.03215488215488215, ["test    ebx, ebx", "js      loc_3E1B"], ["test~ebx,ebx", "js~FOO"]], [0, 0, 31, 0, 0, 2, 1, 1, 1, 2, 0.02685185185185185, ["test    r10d, r10d", "jz      short loc_3C80"], ["test~r10d,r10d", "jz~FOO"]], [3, 0, 23, 1, 0, 5, 3, 1, 4, -1, 0.05664983164983165, ["shl     eax, 0Dh", "and     eax, 20000h", "or      eax, 10900h", "test    edx, edx", "jz      loc_3BD1"], ["shl~eax,0", "and~eax,0", "or~eax,0", "test~edx,edx", "jz~FOO"]], [1, 1, 24, 0, 0, 4, 1, 1, 7, -1, 0.00505050505050505, ["mov     edx, eax", "mov     r13d, 1", "and     edx, 200h", "jmp     loc_3D58"], ["mov~edx,eax", "mov~r13d,0", "and~edx,<STR>", "jmp~FOO"]], [0, 1, 24, 0, 0, 4, 2, 1, 3, 0, 0.013215488215488215, ["mov     edx, eax", "xor     r13d, r13d", "and     edx, 200h", "jmp     loc_3D58"], ["mov~edx,eax", "xor~r13d,r13d", "and~edx,<STR>", "jmp~FOO"]], [0, 1, 24, 0, 0, 3, 1, 0, 6, -1, 0.00808080808080808, ["mov     eax, [sp_0+48h]", "mov     edx, eax", "and     edx, 200h"], ["mov~eax,[sp_0+0]", "mov~edx,eax", "and~edx,<STR>"]], [0, 0, 21, 0, 1, 8, 0, 2, 5, -1, 0.028451178451178453, ["mov     edi, [sp_0+2Ch]", "mov     rsi, dir_0", "mov     edx, eax", "mov     [rsp+0E8h+dir], dir_0", "call    ___openat_2", "mov     r8, [rsp+0E8h+dir]", "mov     r12d, eax", "jmp     loc_3BEA"], ["mov~edi,[sp_0+0]", "mov~rsi,dir_0", "mov~edx,eax", "mov~[rsp+0],dir_0", "call~FOO", "mov~r8,[rsp+0]", "mov~r12d,eax", "jmp~FOO"]], [0, 0, 3, 0, 1, 4, 1, 2, 4, -1, 0.0007575757575757576, ["mov     edi, ebx; fd", "xor     ebp, ebp", "call    _close", "jmp     loc_3C54"], ["mov~edi,ebx", "xor~ebp,ebp", "call~FOO", "jmp~FOO"]], [0, 0, 5, 0, 0, 2, 1, 0, 3, -1, 0.002525252525252525, ["test    ebx, ebx", "jns     loc_3D00"], ["test~ebx,ebx", "jns~FOO"]], [0, 0, 29, 0, 1, 8, 1, 2, 5, -1, 0.021212121212121213, ["lea     r12, [sp_0+58h]", "mov     [rsp+0E8h+dir], r8", "mov     rdi, r12; ir", "call    i_ring_empty", "test    al, al", "mov     r13d, eax", "mov     r8, [rsp+0E8h+dir]", "jz      short loc_3DB0"], ["lea~r12,[sp_0+0]", "mov~[rsp+0],r8", "mov~rdi,r12", "call~FOO", "test~al,al", "mov~r13d,eax", "mov~r8,[rsp+0]", "jz~FOO"]], [1, 0, 17, 0, 0, 4, 2, 1, 3, -1, 0.02803030303030303, ["xor     r13d, r13d", "test    al, 2", "mov     r12d, ebx", "jnz     loc_3C00"], ["xor~r13d,r13d", "test~al,0", "mov~r12d,ebx", "jnz~FOO"]], [1, 0, 13, 0, 1, 6, 1, 2, 4, -1, 0.09444444444444444, ["lea     rdx, [rsp+0E8h+sb]; stat_buf", "mov     esi, r12d; fildes", "mov     edi, 1; ver", "call    ___fxstat", "test    eax, eax", "jz      loc_3CD8"], ["lea~rdx,[rsp+0]", "mov~esi,r12d", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 14, 0, 0, 8, 1, 1, 5, -1, 0.025, ["mov     ecx, 3", "mov     rsi, r8", "mov     rdi, r9", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jz      loc_3C00"], ["mov~ecx,0", "mov~rsi,r8", "mov~rdi,r9", "cmpsb~<TAG>,<TAG>", "setnbe~dl", "sbb~dl,0", "test~dl,dl", "jz~FOO"]], [0, 0, 14, 0, 0, 1, 0, 1, 8, -1, 0.012121212121212121, ["jmp     loc_3C00"], ["jmp~FOO"]], [0, 0, 14, 0, 0, 1, 0, 1, 5, -1, 0.005555555555555556, ["jmp     loc_3C00"], ["jmp~FOO"]], [0, 0, 14, 0, 0, 1, 0, 0, 8, -1, 0.031818181818181815, ["xchg    ax, ax"], ["xchg~ax,ax"]], [2, 0, 16, 0, 0, 4, 1, 1, 4, -1, 0.017424242424242425, ["test    al, 2", "mov     r12d, ebx", "mov     r13d, 1", "jz      loc_3CA2"], ["test~al,0", "mov~r12d,ebx", "mov~r13d,0", "jz~FOO"]], [0, 0, 11, 0, 0, 3, 0, 1, 6, -1, 0.022222222222222223, ["mov     rax, [rsp+0E8h+sb.st_ino]", "cmp     [r15], rax", "jnz     loc_3CE6"], ["mov~rax,[rsp+0]", "cmp~<TAG>,rax", "jnz~FOO"]], [0, 0, 12, 0, 0, 3, 0, 1, 5, -1, 0.048484848484848485, ["mov     rax, [rsp+0E8h+sb.st_dev]", "cmp     [r14], rax", "jz      loc_3D90"], ["mov~rax,[rsp+0]", "cmp~<TAG>,rax", "jz~FOO"]], [0, 0, 16, 0, 0, 2, 1, 1, 4, -1, 0.0452020202020202, ["test    r8, r8", "jz      short loc_3CBD"], ["test~r8,r8", "jz~FOO"]], [1, 0, 18, 0, 0, 3, 1, 1, 7, -1, 0.07171717171717172, ["mov     eax, [sp_0+48h]", "test    al, 2", "jz      loc_3C96"], ["mov~eax,[sp_0+0]", "test~al,0", "jz~FOO"]], [1, 0, 5, 0, 0, 1, 0, 0, 5, -1, 0.031060606060606063, ["mov     ebp, 0FFFFFFFFh"], ["mov~ebp,0"]], [1, 0, 6, 0, 1, 3, 0, 2, 6, -1, 0.005303030303030303, ["call    ___errno_location", "mov     dword ptr [rax], 2", "jmp     loc_3C1A"], ["call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 15, 0, 0, 1, 0, 0, 5, -1, 0.011111111111111112, ["lea     r9, dir; \"..\""], ["lea~r9,<TAG>"]], [2, 0, 44, 0, 0, 9, 1, 1, 1, 3, 0.0065656565656565654, ["lea     r9, dir; \"..\"", "mov     ecx, 3", "mov     rsi, dir_0", "mov     sp_0, r9", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jnz     loc_3C40"], ["lea~r9,<TAG>", "mov~ecx,0", "mov~rsi,dir_0", "mov~sp_0,r9", "cmpsb~<TAG>,<TAG>", "setnbe~dl", "sbb~dl,0", "test~dl,dl", "jnz~FOO"]], [2, 0, 45, 1, 0, 19, 3, 1, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r15, rdx", "push    r13", "push    r12", "mov     r14, rsi", "push    rbp", "push    rbx", "mov     rbp, sp_0", "mov     ebx, ecx", "sub     rsp, 0B8h", "mov     rax, fs:28h", "mov     [rsp+0E8h+var_40], rax", "xor     eax, eax", "mov     eax, [sp_0+48h]", "mov     r10d, eax", "and     r10d, 4", "test    dir_0, dir_0", "jz      loc_3C40"], ["push~r15", "push~r14", "mov~r15,rdx", "push~r13", "push~r12", "mov~r14,rsi", "push~rbp", "push~rbx", "mov~rbp,sp_0", "mov~ebx,ecx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~eax,[sp_0+0]", "mov~r10d,eax", "and~r10d,0", "test~dir_0,dir_0", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 0, 6, -1, 0.03207070707070707, ["test    ebx, ebx", "jns     short loc_3C54"], ["test~ebx,ebx", "jns~FOO"]], [0, 0, 5, 0, 1, 4, 0, 2, 6, -1, 0.013636363636363636, ["mov     edi, r12d; fd", "call    _fchdir", "mov     ebp, eax", "jmp     loc_3C1F"], ["mov~edi,r12d", "call~FOO", "mov~ebp,eax", "jmp~FOO"]], [1, 0, 3, 0, 1, 7, 2, 2, 6, -1, 0.01893939393939394, ["xor     r13d, 1", "mov     rdi, sp_0; sp_0", "mov     esi, r12d; fd", "movzx   edx, r13b; chdir_down_one", "xor     ebp, ebp", "call    cwd_advance_fd", "jmp     loc_3C54"], ["xor~r13d,0", "mov~rdi,sp_0", "mov~esi,r12d", "movzx~edx,r13b", "xor~ebp,ebp", "call~FOO", "jmp~FOO"]], [1, 0, 7, 0, 0, 2, 1, 1, 5, -1, 0.06136363636363636, ["test    ah, 2", "jnz     short loc_3D10"], ["test~ah,0", "jnz~FOO"]], [0, 0, 39, 0, 0, 2, 1, 1, 2, -1, 0.015572390572390573, ["test    r10d, r10d", "jnz     loc_3C45"], ["test~r10d,r10d", "jnz~FOO"]], [0, 0, 34, 0, 0, 2, 1, 0, 3, -1, 0.02845117845117845, ["test    ebx, ebx", "jns     loc_3E05"], ["test~ebx,ebx", "jns~FOO"]], [0, 0, 27, 0, 1, 8, 1, 2, 6, -1, 0.021717171717171718, ["mov     rdi, r12; ir", "mov     [rsp+0E8h+dir], r8", "call    i_ring_pop", "mov     r12d, eax", "mov     r8, [rsp+0E8h+dir]", "mov     eax, [sp_0+48h]", "test    r12d, r12d", "js      short loc_3DE3"], ["mov~rdi,r12", "mov~[rsp+0],r8", "call~FOO", "mov~r12d,eax", "mov~r8,[rsp+0]", "mov~eax,[sp_0+0]", "test~r12d,r12d", "js~FOO"]], [1, 0, 31, 0, 0, 2, 1, 1, 4, -1, 0.024158249158249157, ["test    ah, 2", "jnz     loc_3D30"], ["test~ah,0", "jnz~FOO"]], [0, 0, 3, 0, 2, 7, 0, 3, 7, -1, 0.0, ["call    ___errno_location", "mov     r13d, [rax]", "mov     rbx, rax", "mov     edi, r12d; fd", "call    _close", "mov     [rbx], r13d", "jmp     short loc_3C54"], ["call~FOO", "mov~r13d,<TAG>", "mov~rbx,rax", "mov~edi,r12d", "call~FOO", "mov~<TAG>,r13d", "jmp~FOO"]], [0, 0, 8, 0, 0, 2, 0, 1, 7, -1, 0.009848484848484848, ["mov     eax, [sp_0+48h]", "jmp     loc_3CBD"], ["mov~eax,[sp_0+0]", "jmp~FOO"]], [2, 0, 15, 0, 0, 4, 1, 1, 7, -1, 0.023232323232323233, ["test    al, 2", "mov     ebx, r12d", "mov     r13d, 1", "jz      loc_3CBD"], ["test~al,0", "mov~ebx,r12d", "mov~r13d,0", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 1, 1, 2, -1, 0.012121212121212121, ["test    ah, 2", "jz      short loc_3C52"], ["test~ah,0", "jz~FOO"]], [4, 0, 22, 1, 0, 4, 2, 0, 5, -1, 0.013552188552188553, ["shl     eax, 0Dh", "mov     r13d, 1", "and     eax, 20000h", "or      eax, 10900h"], ["shl~eax,0", "mov~r13d,0", "and~eax,0", "or~eax,0"]], [0, 0, 3, 0, 0, 1, 1, 0, 3, -1, 0.008333333333333333, ["xor     ebp, ebp"], ["xor~ebp,ebp"]], [0, 0, 21, 0, 1, 7, 1, 1, 5, -1, 0.050841750841750834, ["mov     esi, eax; flags", "mov     rdi, dir_0; file", "xor     eax, eax", "mov     [rsp+0E8h+dir], dir_0", "call    open_safer", "mov     r8, [rsp+0E8h+dir]", "mov     r12d, eax"], ["mov~esi,eax", "mov~rdi,dir_0", "xor~eax,eax", "mov~[rsp+0],dir_0", "call~FOO", "mov~r8,[rsp+0]", "mov~r12d,eax"]], [1, 0, 3, 0, 0, 2, 0, 1, 7, -1, 0.013636363636363636, ["mov     ebp, 0FFFFFFFFh", "jmp     loc_3C54"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 20, 0, 0, 2, 1, 1, 6, -1, 0.09242424242424242, ["test    r12d, r12d", "js      loc_3DF6"], ["test~r12d,r12d", "js~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 0B8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [12, 39, 46, 1, 46, 69, 4, 184, 0.02466, 2, 4], "succs": [[], [0, 45], [12, 6], [2, 39], [8, 42], [4], [4], [4], [44], [1], [9, 41], [34, 7], [13, 21], [20, 23], [13, 31], [13], [13], [13], [16, 14], [24, 37], [24, 19], [25, 31], [17, 21], [28], [23], [14], [32, 3], [26, 3], [1, 36], [28], [1], [29, 30], [33, 39], [18, 35], [5, 38], [40, 11], [1], [31], [15, 31], [41, 10], [42], [1], [44], [1], [43, 22], []], "fname": "fts_safe_changedir", "n_num": 46}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[1, 0, 82, 0, 0, 9, 1, 1, 0, 0, 0.08305847076461768, ["mov     rax, [rsp+88h+level]", "lea     rsi, [p+0F8h]; src", "mov     [p+50h], rax", "mov     rax, [sp_0]", "mov     [p+40h], rdx", "mov     [p+8], rax", "mov     eax, [sp_0+48h]", "test    al, 4", "jnz     loc_4190"], ["mov~rax,[rsp+0]", "lea~rsi,[p+0]", "mov~[p+0],rax", "mov~rax,<TAG>", "mov~[p+0],rdx", "mov~[p+0],rax", "mov~eax,[sp_0+0]", "test~al,0", "jnz~FOO"]], [0, 0, 82, 1, 0, 2, 0, 0, 12, 2, 0.09793853073463267, ["add     rdx, [rsp+88h+len]", "jb      loc_45B5"], ["add~rdx,[rsp+0]", "jb~FOO"]], [3, 0, 1, 0, 2, 10, 2, 3, 14, 0, 0.0006371814092953523, ["mov     rdi, [rsp+88h+dirp]; dirp", "xor     r13d, r13d", "call    _closedir", "mov     rax, [rsp+88h+cur]", "mov     edi, 7", "mov     [rax+60h], di", "or      dword ptr [sp_0+48h], 2000h", "call    ___errno_location", "mov     dword ptr [rax], 24h ; '$'", "jmp     loc_417D"], ["mov~rdi,[rsp+0]", "xor~r13d,r13d", "call~FOO", "mov~rax,[rsp+0]", "mov~edi,0", "mov~[rax+0],di", "or~[word ptr [sp_0+0],0", "call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 4, 0, 1, 4, 1, 2, 13, 1, 0.01278110944527736, ["mov     rdi, p; ptr", "call    free", "test    head, head", "jz      short loc_45D9"], ["mov~rdi,p", "call~FOO", "test~head,head", "jz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 15, 1, 0.00014992503748125936, ["mov     rbp, [rdi+10h]", "call    free", "test    rbp, rbp", "mov     rdi, rbp", "jnz     short loc_45C8"], ["mov~rbp,[rdi+0]", "call~FOO", "test~rbp,rbp", "mov~rdi,rbp", "jnz~FOO"]], [0, 0, 82, 0, 0, 1, 0, 0, 14, 13, 0.04051724137931034, ["mov     [p+28h], rsi"], ["mov~[p+0],rsi"]], [1, 0, 82, 0, 0, 2, 0, 1, 15, 12, 0.0891304347826087, ["cmp     qword ptr [sp_0+40h], 0", "jz      short loc_401D"], ["cmp~[word ptr [sp_0+0],0", "jz~FOO"]], [0, 0, 82, 0, 1, 8, 0, 2, 14, 13, 0.04051724137931034, ["mov     rax, [p+30h]", "mov     rdi, [rsp+88h+cp]; dest", "mov     [p+28h], rax", "mov     rax, [p+58h]", "lea     rdx, [rax+1]; n", "call    _memmove", "mov     eax, [sp_0+48h]", "jmp     loc_400D"], ["mov~rax,[p+0]", "mov~rdi,[rsp+0]", "mov~[p+0],rax", "mov~rax,[p+0]", "lea~rdx,[rax+0]", "call~FOO", "mov~eax,[sp_0+0]", "jmp~FOO"]], [1, 0, 82, 0, 0, 2, 1, 1, 16, 11, 0.07196401799100449, ["test    ah, 4", "jz      loc_4200"], ["test~ah,0", "jz~FOO"]], [1, 0, 2, 0, 1, 7, 0, 2, 3, -1, 0.0, ["mov     rbx, [rsp+88h+cur]", "mov     r9d, 4", "mov     [rbx+60h], r9w", "call    ___errno_location", "mov     eax, [rax]", "mov     [rbx+38h], eax", "jmp     loc_417A"], ["mov~rbx,[rsp+0]", "mov~r9d,0", "mov~[rbx+0],r9w", "call~FOO", "mov~eax,<TAG>", "mov~[rbx+0],eax", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, -1, 0.0011244377811094452, ["cmp     [rsp+88h+type], 3", "jz      loc_4408"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 82, 0, 0, 3, 1, 1, 16, 12, 0.015517241379310345, ["and     eax, 18h", "cmp     eax, 18h", "jz      loc_41E0"], ["and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 82, 0, 0, 2, 0, 1, 14, 4, 0.0075712143928035975, ["movzx   esi, [rsp+88h+doadjust]", "jmp     loc_410C"], ["movzx~esi,[rsp+0]", "jmp~FOO"]], [0, 0, 82, 0, 0, 3, 0, 1, 13, 5, 0.017166416791604196, ["mov     rax, [sp_0+20h]", "cmp     rax, [rsp+88h+maxlen]", "jz      loc_4220"], ["mov~rax,[sp_0+0]", "cmp~rax,[rsp+0]", "jz~FOO"]], [2, 0, 82, 0, 0, 3, 0, 0, 17, 11, 0.012556221889055471, ["mov     eax, 0Bh", "mov     [p+60h], ax", "mov     eax, 2"], ["mov~eax,0", "mov~[p+0],ax", "mov~eax,0"]], [1, 0, 82, 0, 0, 2, 1, 1, 17, 12, 0.003973013493253373, ["test    byte ptr [dp+12h], 0FBh", "jz      loc_4029"], ["test~[yte ptr [dp+0],0", "jz~FOO"]], [1, 2, 116, 1, 0, 16, 1, 1, 0, 14, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, sp_0", "sub     rsp, 58h", "mov     rax, [sp_0]", "mov     [rsp+88h+type], esi", "mov     [rsp+88h+cur], rax", "mov     sp_0, [cur_0+28h]; name", "mov     eax, [sp_0+48h]", "and     eax, 204h", "cmp     eax, 200h", "jz      loc_4130"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,sp_0", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],esi", "mov~[rsp+0],rax", "mov~sp_0,[cur_0+0]", "mov~eax,[sp_0+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [0, 0, 82, 0, 0, 1, 0, 0, 18, 10, 0.02361319340329835, ["mov     [p+98h], rax"], ["mov~[p+0],rax"]], [2, 0, 82, 0, 0, 4, 0, 1, 18, 11, 0.0029610194902548724, ["mov     edx, 0Bh", "mov     eax, 1", "mov     [p+60h], dx", "jmp     loc_4038"], ["mov~edx,0", "mov~eax,0", "mov~[p+0],dx", "jmp~FOO"]], [1, 0, 44, 0, 1, 4, 0, 2, 9, -1, 0.1373063468265868, ["mov     rdi, [rsp+88h+dirp]; dirp", "call    _closedir", "cmp     [rsp+88h+doadjust], 0", "jnz     loc_4480"], ["mov~rdi,[rsp+0]", "call~FOO", "cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 82, 0, 1, 5, 1, 2, 8, 6, 0.25139930034982494, ["mov     rdi, [rsp+88h+dirp]; dirp", "call    _readdir", "test    rax, rax", "mov     rbp, rax", "jz      loc_4230"], ["mov~rdi,[rsp+0]", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jz~FOO"]], [1, 0, 31, 0, 0, 2, 1, 1, 10, -1, 0.1139180409795103, ["test    byte ptr [sp_0+48h], 4", "jz      short loc_426C"], ["test~[yte ptr [sp_0+0],0", "jz~FOO"]], [1, 0, 38, 0, 0, 2, 0, 1, 12, -1, 0.05037481259370315, ["cmp     qword ptr [rax+50h], 0", "js      loc_4245"], ["cmp~[word ptr [rax+0],0", "js~FOO"]], [1, 0, 82, 0, 0, 3, 1, 1, 18, 9, 0.1053223388305847, ["test    head, head", "mov     qword ptr [p+10h], 0", "jz      loc_41B8"], ["test~head,head", "mov~[word ptr [p+0],0", "jz~FOO"]], [0, 0, 82, 0, 1, 6, 1, 2, 17, 10, 0.07361319340329835, ["xor     edx, edx; follow", "mov     rsi, p; p", "mov     rdi, sp_0; sp_0", "call    fts_stat", "mov     [p+60h], ax", "jmp     loc_403F"], ["xor~edx,edx", "mov~rsi,p", "mov~rdi,sp_0", "call~FOO", "mov~[p+0],ax", "jmp~FOO"]], [0, 0, 82, 0, 0, 1, 0, 0, 19, 8, 0.05164917541229385, ["mov     [tail+10h], p"], ["mov~[tail+0],p"]], [0, 1, 104, 1, 0, 11, 3, 1, 5, 10, 0.007496251874062968, ["mov     rcx, [rsp+88h+cur]", "xor     edx, edx", "test    al, 20h", "setz    dl", "add     rdx, rdx", "cmp     [rcx+78h], rdx", "setnz   r12b", "mov     ecx, r12d", "or      cl, bpl", "mov     [rsp+88h+descend], cl", "jz      loc_3F40"], ["mov~rcx,[rsp+0]", "xor~edx,edx", "test~al,<STR>", "setz~dl", "add~rdx,rdx", "cmp~[rcx+0],rdx", "setnz~r12b", "mov~ecx,r12d", "or~cl,bpl", "mov~[rsp+0],cl", "jz~FOO"]], [4, 0, 105, 0, 0, 8, 1, 1, 4, 11, 0.006821589205397301, ["mov     eax, [sp_0+48h]", "cmp     ecx, 3", "mov     r12d, 1", "setz    bpl", "mov     edx, eax", "and     edx, 18h", "cmp     edx, 18h", "jz      loc_4430"], ["mov~eax,[sp_0+0]", "cmp~ecx,0", "mov~r12d,0", "setz~bpl", "mov~edx,eax", "and~edx,0", "cmp~edx,0", "jz~FOO"]], [0, 0, 30, 0, 0, 3, 0, 1, 11, -1, 0.015517241379310345, ["mov     rax, [rsp+88h+len]", "cmp     [sp_0+30h], rax", "jz      short loc_425E"], ["mov~rax,[rsp+0]", "cmp~[sp_0+0],rax", "jz~FOO"]], [0, 0, 103, 0, 0, 1, 0, 1, 6, 14, 0.0008245877061469265, ["jmp     loc_3EB2"], ["jmp~FOO"]], [1, 0, 82, 1, 0, 2, 0, 0, 20, 7, 0.11139430284857571, ["add     [rsp+88h+nitems], 1", "mov     r14, tail"], ["add~[rsp+0],0", "mov~r14,tail"]], [0, 0, 82, 0, 0, 2, 0, 1, 19, 8, 0.05164917541229385, ["mov     head, p", "jmp     loc_4054"], ["mov~head,p", "jmp~FOO"]], [1, 0, 29, 0, 0, 2, 0, 1, 12, -1, 0.0036356821589205394, ["cmp     [rsp+88h+nitems], 0", "jnz     short loc_4264"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 28, 1, 0, 1, 0, 0, 12, -1, 0.0036356821589205394, ["sub     [rsp+88h+cp], 1"], ["sub~[rsp+0],0"]], [1, 0, 27, 0, 0, 2, 0, 0, 13, -1, 0.006071964017991004, ["mov     rax, [rsp+88h+cp]", "mov     byte ptr [rax], 0"], ["mov~rax,[rsp+0]", "mov~<TAG>,0"]], [1, 0, 26, 0, 0, 2, 0, 1, 11, -1, 0.09817591204397808, ["cmp     [rsp+88h+descend], 0", "jz      loc_4318"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 43, 0, 0, 4, 1, 1, 10, -1, 0.046176911544227886, ["mov     rax, [sp_0+8]", "mov     rcx, [sp_0+20h]", "test    rax, rax", "jz      short loc_44B8"], ["mov~rax,[sp_0+0]", "mov~rcx,[sp_0+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 108, 0, 1, 7, 1, 2, 3, 12, 0.0, ["mov     r14, rax", "xor     edx, edx; follow", "mov     rsi, rax; p", "mov     rdi, sp_0; sp_0", "call    fts_stat", "mov     [r14+60h], ax", "jmp     loc_3E87"], ["mov~r14,rax", "xor~edx,edx", "mov~rsi,rax", "mov~rdi,sp_0", "call~FOO", "mov~[r14+0],ax", "jmp~FOO"]], [1, 0, 109, 0, 0, 3, 0, 1, 2, 12, 0.032083958020989505, ["mov     rax, [rsp+88h+cur]", "cmp     word ptr [rax+60h], 0Bh", "jz      loc_4460"], ["mov~rax,[rsp+0]", "cmp~[ord ptr [rax+0],0", "jz~FOO"]], [0, 1, 82, 0, 0, 2, 1, 1, 9, 5, 0.11199400299850074, ["test    byte ptr [sp_0+48h], 20h", "jnz     short loc_4083"], ["test~[yte ptr [sp_0+0],<STR>", "jnz~FOO"]], [1, 0, 25, 0, 0, 2, 0, 1, 12, -1, 0.04595202398800599, ["cmp     [rsp+88h+type], 1", "jz      short loc_42D8"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 82, 0, 0, 2, 0, 1, 10, 5, 0.015067466266866565, ["cmp     byte ptr [rbp+13h], 2Eh ; '.'", "jz      loc_41C0"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [0, 0, 113, 0, 1, 5, 1, 2, 2, 13, 0.008245877061469264, ["mov     edi, eax; fd", "call    _fdopendir", "test    rax, rax", "mov     [rsp+88h+dirp], rax", "jnz     loc_3E77"], ["mov~edi,eax", "call~FOO", "test~rax,rax", "mov~[rsp+0],rax", "jnz~FOO"]], [0, 0, 112, 0, 1, 4, 1, 2, 1, 13, 0.008245877061469264, ["call    _opendir", "test    rax, rax", "mov     [rsp+88h+dirp], rax", "jz      loc_416F"], ["call~FOO", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 24, 0, 0, 2, 0, 1, 13, -1, 0.0003748125937031484, ["cmp     [rsp+88h+nitems], 0", "jz      short loc_42D8"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 13, -1, 0.02192653673163418, ["cmp     qword ptr [sp_0+40h], 0", "jz      loc_417D"], ["cmp~[word ptr [sp_0+0],0", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 12, -1, 0.0578335832083958, ["cmp     [rsp+88h+nitems], 0", "jnz     loc_4286"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 42, 0, 0, 1, 0, 0, 11, -1, 0.012818590704647675, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [1, 0, 107, 0, 0, 3, 0, 1, 3, 11, 0.047526236881559214, ["mov     ecx, [rsp+88h+type]", "cmp     ecx, 2", "jz      loc_3F38"], ["mov~ecx,[rsp+0]", "cmp~ecx,0", "jz~FOO"]], [2, 0, 82, 0, 0, 5, 2, 1, 7, 7, 0.11181909045477263, ["mov     [rsp+88h+doadjust], 0", "xor     r14d, r14d", "mov     [rsp+88h+nitems], 0", "xor     r13d, r13d", "jmp     loc_405D"], ["mov~[rsp+0],0", "xor~r14d,r14d", "mov~[rsp+0],0", "xor~r13d,r13d", "jmp~FOO"]], [1, 0, 82, 0, 0, 2, 0, 1, 11, 6, 0.014692653673163417, ["cmp     byte ptr [rbp+14h], 0", "jz      loc_405D"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [0, 0, 82, 0, 0, 1, 0, 1, 13, 7, 0.0035982008995502244, ["jmp     loc_405D"], ["jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 0, 14, -1, 0.013343328335832082, ["mov     rax, [rsp+88h+nitems]", "cmp     rax, 1", "jbe     loc_417D"], ["mov~rax,[rsp+0]", "cmp~rax,0", "jbe~FOO"]], [0, 0, 42, 0, 0, 4, 0, 1, 12, -1, 0.01169415292353823, ["mov     rdx, [rax+28h]", "lea     rsi, [rax+0F8h]", "cmp     rdx, rsi", "jz      short loc_44AB"], ["mov~rdx,[rax+0]", "lea~rsi,[rax+0]", "cmp~rdx,rsi", "jz~FOO"]], [0, 0, 42, 0, 0, 4, 1, 1, 13, -1, 0.008845577211394302, ["mov     [rax+30h], rcx", "mov     rax, [rax+10h]", "test    rax, rax", "jnz     short loc_4490"], ["mov~[rax+0],rcx", "mov~rax,[rax+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 0, 14, 2, 0.004197901049475262, ["mov     rdi, head; ptr", "nop     dword ptr [rax]"], ["mov~rdi,head", "nop~<TAG>"]], [0, 0, 82, 0, 2, 10, 1, 3, 10, 4, 0.10209895052473762, ["lea     r12, [rbp+13h]", "mov     rdi, r12; s", "call    _strlen", "mov     rsi, r12; name", "mov     rdx, rax; namelen", "mov     rdi, sp_0; sp_0", "call    fts_alloc", "test    rax, rax", "mov     r15, rax", "jz      mem1"], ["lea~r12,[rbp+0]", "mov~rdi,r12", "call~FOO", "mov~rsi,r12", "mov~rdx,rax", "mov~rdi,sp_0", "call~FOO", "test~rax,rax", "mov~r15,rax", "jz~FOO"]], [1, 0, 82, 0, 0, 2, 0, 1, 12, 5, 0.006371814092953522, ["cmp     word ptr [rbp+14h], 2Eh ; '.'", "jnz     loc_4083"], ["cmp~[ord ptr [rbp+0],0", "jnz~FOO"]], [0, 0, 42, 2, 0, 3, 0, 0, 13, -1, 0.0, ["sub     rdx, [rax+30h]", "add     rdx, rcx", "mov     [rax+28h], rdx"], ["sub~rdx,[rax+0]", "add~rdx,rcx", "mov~[rax+0],rdx"]], [0, 1, 1, 1, 0, 11, 0, 1, 15, -1, 0.006746626686656671, ["add     rsp, 58h", "mov     rsi, r13", "mov     rdi, sp_0", "pop     sp_0", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "mov     rdx, rax", "jmp     fts_sort"], ["add~rsp,<STR>", "mov~rsi,r13", "mov~rdi,sp_0", "pop~sp_0", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "mov~rdx,rax", "jmp~FOO"]], [0, 0, 82, 0, 1, 5, 0, 1, 11, 3, 0.08650674662668666, ["mov     rdi, r12; s", "call    _strlen", "cmp     rax, [rsp+88h+maxlen]", "mov     rdx, rax", "jb      loc_3FD8"], ["mov~rdi,r12", "call~FOO", "cmp~rax,[rsp+0]", "mov~rdx,rax", "jb~FOO"]], [0, 0, 38, 0, 0, 2, 0, 1, 11, -1, 0.03943028485757121, ["mov     rax, head", "jmp     short loc_44C3"], ["mov~rax,head", "jmp~FOO"]], [0, 0, 38, 0, 0, 1, 0, 0, 15, -1, 0.010344827586206896, ["mov     rax, rdx"], ["mov~rax,rdx"]], [0, 0, 38, 0, 0, 4, 1, 1, 14, -1, 0.014842578710644677, ["mov     rdx, [rax+10h]", "mov     [rax+30h], rcx", "test    rdx, rdx", "jnz     short loc_44C0"], ["mov~rdx,[rax+0]", "mov~[rax+0],rcx", "test~rdx,rdx", "jnz~FOO"]], [0, 0, 38, 0, 0, 2, 0, 1, 15, -1, 0.0, ["mov     rdx, [rax+8]", "jmp     short loc_44C0"], ["mov~rdx,[rax+0]", "jmp~FOO"]], [1, 0, 102, 0, 1, 5, 1, 2, 5, 13, 0.014392803598200898, ["mov     rdi, [rsp+88h+dirp]; dirp", "call    _dirfd", "test    byte ptr [sp_0+49h], 2", "mov     r13d, eax", "jz      loc_43C8"], ["mov~rdi,[rsp+0]", "call~FOO", "test~[yte ptr [sp_0+0],0", "mov~r13d,eax", "jz~FOO"]], [1, 0, 25, 0, 0, 3, 1, 1, 8, -1, 0.02669915042478761, ["xor     r13d, r13d", "cmp     [rsp+88h+descend], 0", "jz      short loc_4324"], ["xor~r13d,r13d", "cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 29, 0, 0, 2, 1, 1, 7, -1, 0.050624687656171924, ["test    byte ptr [sp_0+48h], 4", "jz      loc_42BC"], ["test~[yte ptr [sp_0+0],0", "jz~FOO"]], [0, 0, 101, 0, 0, 2, 1, 0, 6, 12, 0.00748375812093953, ["test    eax, eax", "jns     loc_43BE"], ["test~eax,eax", "jns~FOO"]], [1, 0, 24, 0, 0, 3, 1, 0, 9, -1, 0.030534732633683143, ["mov     [rsp+88h+nitems], 0", "xor     r13d, r13d", "nop     word ptr [rax+rax+00h]"], ["mov~[rsp+0],0", "xor~r13d,r13d", "nop~[ord ptr [rax+0]"]], [2, 0, 27, 0, 0, 4, 0, 1, 8, -1, 0.02220139930034982, ["cmp     [rsp+88h+descend], 0", "mov     level_0, [rsp+88h+cp]", "mov     byte ptr [rax-1], 0", "jnz     loc_42C6"], ["cmp~[rsp+0],0", "mov~level_0,[rsp+0]", "mov~[yte ptr [rax-1]+0],0", "jnz~FOO"]], [0, 0, 96, 0, 0, 2, 1, 1, 7, 11, 0.027486256871564217, ["test    bpl, bpl", "jz      short loc_3EEA"], ["test~bpl,bpl", "jz~FOO"]], [0, 0, 99, 0, 0, 2, 1, 1, 6, 12, 0.020477261369315342, ["test    r13d, r13d", "js      loc_3ED1"], ["test~r13d,r13d", "js~FOO"]], [0, 0, 98, 0, 1, 9, 2, 2, 7, 11, 0.012543728135932034, ["mov     dir_fd, [rsp+88h+cur]", "xor     r8d, r8d; dir", "mov     ecx, r13d; fd", "mov     rdi, sp_0; sp_0", "lea     rdx, [rax+70h]; p", "lea     rsi, [rax+68h]; p", "call    fts_safe_changedir", "test    eax, eax", "jnz     loc_3ED1"], ["mov~dir_fd,[rsp+0]", "xor~r8d,r8d", "mov~ecx,r13d", "mov~rdi,sp_0", "lea~rdx,[rax+0]", "lea~rsi,[rax+0]", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 95, 0, 0, 2, 1, 1, 8, 11, 0.0011994002998500749, ["test    r12b, r12b", "jz      short loc_3EEA"], ["test~r12b,r12b", "jz~FOO"]], [0, 0, 38, 0, 0, 4, 0, 1, 13, -1, 0.019340329835082458, ["mov     rdx, [rax+28h]", "lea     rsi, [rax+0F8h]", "cmp     rdx, rsi", "jz      short loc_44E9"], ["mov~rdx,[rax+0]", "lea~rsi,[rax+0]", "cmp~rdx,rsi", "jz~FOO"]], [1, 0, 90, 1, 0, 5, 0, 0, 6, 9, 0.0, ["mov     rax, [sp_0+20h]", "add     rax, len_0", "lea     rcx, [cp_0+1]", "mov     byte ptr [cp_0], 2Fh ; '/'", "mov     [rsp+88h+cp], rcx"], ["mov~rax,[sp_0+0]", "add~rax,len_0", "lea~rcx,[cp_0+0]", "mov~<TAG>,0", "mov~[rsp+0],rcx"]], [3, 0, 91, 0, 0, 10, 1, 1, 5, 9, 0.1494752623688156, ["mov     rcx, [rsp+88h+cur]", "mov     [rsp+88h+cp], 0", "mov     rsi, [rcx+40h]", "mov     rcx, [rcx+30h]", "cmp     byte ptr [rcx+rsi-1], 2Fh ; '/'", "lea     rdx, [rsi-1]", "cmovnz  rdx, rsi", "test    al, 4", "mov     [rsp+88h+var_48], rdx", "jz      short loc_3F7F"], ["mov~rcx,[rsp+0]", "mov~[rsp+0],0", "mov~rsi,[rcx+0]", "mov~rcx,[rcx+0]", "cmp~[yte ptr [rcx+0],0", "lea~rdx,[rsi-1]+0]", "cmovnz~rdx,rsi", "test~al,0", "mov~[rsp+0],rdx", "jz~FOO"]], [1, 0, 23, 0, 0, 3, 0, 1, 10, -1, 0.06959020489755126, ["mov     rax, [rsp+88h+cur]", "cmp     qword ptr [rax+50h], 0", "jnz     loc_453B"], ["mov~rax,[rsp+0]", "cmp~[word ptr [rax+0],0", "jnz~FOO"]], [0, 0, 82, 0, 1, 10, 1, 2, 12, 6, 0.015854572713643177, ["mov     rcx, [sp_0+20h]", "lea     rsi, [sp_0+30h]; sp_0", "lea     rdi, [sp_0+20h]; sp_0", "mov     [rsp+88h+maxlen], rcx", "mov     oldaddr_0, [rsp+88h+var_48]", "lea     rdx, [rcx+rax+2]; more", "call    fts_palloc", "test    al, al", "mov     esi, eax", "jz      mem1"], ["mov~rcx,[sp_0+0]", "lea~rsi,[sp_0+0]", "lea~rdi,[sp_0+0]", "mov~[rsp+0],rcx", "mov~oldaddr_0,[rsp+0]", "lea~rdx,[rcx+0]", "call~FOO", "test~al,al", "mov~esi,eax", "jz~FOO"]], [0, 0, 38, 2, 0, 3, 0, 0, 14, -1, 0.0, ["sub     rdx, [rax+30h]", "add     rdx, rcx", "mov     [rax+28h], rdx"], ["sub~rdx,[rax+0]", "add~rdx,rcx", "mov~[rax+0],rdx"]], [0, 0, 94, 0, 1, 4, 0, 1, 9, 11, 0.0, ["call    ___errno_location", "mov     rcx, [rsp+88h+cur]", "mov     eax, [rax]", "mov     [rcx+38h], eax"], ["call~FOO", "mov~rcx,[rsp+0]", "mov~eax,<TAG>", "mov~[rcx+0],eax"]], [1, 0, 21, 0, 1, 5, 1, 2, 11, -1, 0.02851074462768614, ["lea     rdi, [sp_0+58h]; fd_ring", "call    fd_ring_clear", "mov     eax, [sp_0+48h]", "test    al, 4", "jnz     short loc_4318"], ["lea~rdi,[sp_0+0]", "call~FOO", "mov~eax,[sp_0+0]", "test~al,0", "jnz~FOO"]], [1, 0, 20, 0, 0, 2, 1, 1, 12, -1, 0.012668665667166417, ["test    ah, 2", "jz      loc_45A6"], ["test~ah,0", "jz~FOO"]], [3, 0, 89, 3, 0, 13, 0, 1, 6, 8, 0.15952023988005995, ["mov     rax, [rsp+88h+var_48]", "mov     rcx, [sp_0+30h]", "add     rax, 1", "sub     rcx, rax", "mov     [rsp+88h+len], rax", "mov     len_0, [rsp+88h+cur]", "mov     [rsp+88h+maxlen], rcx", "mov     rax, [rax+50h]", "mov     [rsp+88h+nitems], rax", "add     rax, 1", "cmp     [rsp+88h+dirp], 0", "mov     [rsp+88h+level], rax", "jz      loc_44FC"], ["mov~rax,[rsp+0]", "mov~rcx,[sp_0+0]", "add~rax,0", "sub~rcx,rax", "mov~[rsp+0],rax", "mov~len_0,[rsp+0]", "mov~[rsp+0],rcx", "mov~rax,[rax+0]", "mov~[rsp+0],rax", "add~rax,0", "cmp~[rsp+0],0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 82, 1, 0, 4, 1, 0, 14, 4, 0.0075712143928035975, ["add     rax, [rsp+88h+len]", "test    byte ptr [sp_0+48h], 4", "cmovz   rax, [rsp+88h+cp]", "mov     [rsp+88h+cp], rax"], ["add~rax,[rsp+0]", "test~[yte ptr [sp_0+0],0", "cmovz~rax,[rsp+0]", "mov~[rsp+0],rax"]], [2, 0, 13, 0, 1, 5, 0, 1, 13, -1, 0.0008995502248875561, ["mov     edx, 1; chdir_down_one", "mov     esi, 0FFFFFF9Ch; fd", "mov     rdi, sp_0; sp_0", "call    cwd_advance_fd", "nop     dword ptr [rax+rax+00h]"], ["mov~edx,0", "mov~esi,0", "mov~rdi,sp_0", "call~FOO", "nop~[word ptr [rax+0]"]], [4, 0, 93, 0, 1, 14, 2, 2, 8, 10, 0.045027486256871564, ["mov     rax, [rsp+88h+cur]", "mov     rdi, [rsp+88h+dirp]; dirp", "or      word ptr [rax+62h], 1", "call    _closedir", "mov     eax, [sp_0+48h]", "mov     edx, r13d", "mov     [rsp+88h+dirp], 0", "not     edx", "shr     edx, 1Fh", "mov     ecx, eax", "shr     ecx, 9", "and     cl, dl", "mov     [rsp+88h+descend], cl", "jz      short loc_3F40"], ["mov~rax,[rsp+0]", "mov~rdi,[rsp+0]", "or~[ord ptr [rax+0],0", "call~FOO", "mov~eax,[sp_0+0]", "mov~edx,r13d", "mov~[rsp+0],0", "not~edx", "shr~edx,0", "mov~ecx,eax", "shr~ecx,0", "and~cl,dl", "mov~[rsp+0],cl", "jz~FOO"]], [0, 0, 17, 0, 0, 2, 1, 1, 12, -1, 0.027811094452773612, ["test    al, al", "jz      loc_4318"], ["test~al,al", "jz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 9, -1, 0.005847076461769115, ["cmp     [rsp+88h+type], 3", "jnz     loc_417A"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 7, 0, 0, 1, 1, 0, 10, -1, 0.0007496251874062968, ["xor     r13d, r13d"], ["xor~r13d,r13d"]], [1, 0, 7, 0, 0, 2, 0, 1, 9, -1, 0.03665667166416792, ["cmp     [rsp+88h+type], 3", "jz      loc_4528"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 82, 1, 1, 8, 0, 2, 15, 3, 0.0232383808095952, ["mov     rax, [sp_0+30h]", "sub     rax, [rsp+88h+len]", "mov     rdi, r12; s", "mov     [rsp+88h+doadjust], sil", "mov     [rsp+88h+maxlen], rax", "call    _strlen", "mov     rdx, rax", "jmp     loc_3FD8"], ["mov~rax,[sp_0+0]", "sub~rax,[rsp+0]", "mov~rdi,r12", "mov~[rsp+0],sil", "mov~[rsp+0],rax", "call~FOO", "mov~rdx,rax", "jmp~FOO"]], [1, 0, 92, 0, 1, 5, 0, 2, 9, 10, 0.0, ["mov     edi, r13d; fd", "call    _close", "mov     [rsp+88h+descend], 0", "mov     eax, [sp_0+48h]", "jmp     short loc_3F40"], ["mov~edi,r13d", "call~FOO", "mov~[rsp+0],0", "mov~eax,[sp_0+0]", "jmp~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 10, -1, 0.025187406296851574, ["test    r13, r13", "mov     rdi, r13; ptr", "jz      loc_417A"], ["test~r13,r13", "mov~rdi,r13", "jz~FOO"]], [1, 0, 6, 0, 0, 4, 0, 1, 10, -1, 0.0010494752623688155, ["mov     rax, [rsp+88h+cur]", "mov     ecx, 6", "mov     [rax+60h], cx", "jmp     loc_432F"], ["mov~rax,[rsp+0]", "mov~ecx,0", "mov~[rax+0],cx", "jmp~FOO"]], [1, 0, 92, 0, 0, 2, 0, 0, 4, 10, 0.04767616191904048, ["mov     eax, [sp_0+48h]", "mov     [rsp+88h+descend], 0"], ["mov~eax,[sp_0+0]", "mov~[rsp+0],0"]], [0, 0, 114, 0, 1, 8, 3, 2, 1, 14, 0.0002998500749625187, ["mov     type_0, rdi; file", "mov     edi, [sp_0+2Ch]; fd", "xor     edx, edx; oflag", "xor     eax, eax", "call    _openat", "test    eax, eax", "mov     ebp, eax", "js      short loc_416F"], ["mov~type_0,rdi", "mov~edi,[sp_0+0]", "xor~edx,edx", "xor~eax,eax", "call~FOO", "test~eax,eax", "mov~ebp,eax", "js~FOO"]], [0, 0, 4, 0, 1, 5, 1, 2, 12, -1, 0.007196401799100449, ["mov     rbx, [rdi+10h]", "call    free", "test    rbx, rbx", "mov     rdi, rbx", "jnz     short loc_4340"], ["mov~rbx,[rdi+0]", "call~FOO", "test~rbx,rbx", "mov~rdi,rbx", "jnz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 11, -1, 0.01394302848575712, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 2, 0, 0, 1, 0, 1, 13, -1, 0.0002998500749625187, ["jmp     loc_417A"], ["jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 14, -1, 0.013043478260869565, ["mov     rdi, r13; ptr", "xchg    ax, ax"], ["mov~rdi,r13", "xchg~ax,ax"]], [2, 0, 5, 0, 0, 6, 2, 1, 13, -1, 0.020052473763118438, ["mov     rax, [rsp+88h+cur]", "mov     esi, 7", "mov     [rax+60h], si", "or      dword ptr [sp_0+48h], 2000h", "test    r13, r13", "jz      loc_417A"], ["mov~rax,[rsp+0]", "mov~esi,0", "mov~[rax+0],si", "or~[word ptr [sp_0+0],0", "test~r13,r13", "jz~FOO"]], [1, 0, 18, 0, 1, 10, 1, 1, 11, -1, 0.030659670164917538, ["mov     rax, [rsp+88h+cur]", "lea     r8, dir; \"..\"", "mov     ecx, 0FFFFFFFFh; fd", "mov     rdi, sp_0; sp_0", "mov     rax, [rax+8]", "lea     rdx, [rax+70h]; p", "lea     rsi, [rax+68h]; p", "call    fts_safe_changedir", "test    eax, eax", "setnz   al"], ["mov~rax,[rsp+0]", "lea~r8,<TAG>", "mov~ecx,0", "mov~rdi,sp_0", "mov~rax,[rax+0]", "lea~rdx,[rax+0]", "lea~rsi,[rax+0]", "call~FOO", "test~eax,eax", "setnz~al"]], [0, 0, 18, 0, 1, 5, 1, 2, 13, -1, 0.0008245877061469265, ["mov     edi, [sp_0+28h]; fd", "call    _fchdir", "test    eax, eax", "setnz   al", "jmp     short loc_4565"], ["mov~edi,[sp_0+0]", "call~FOO", "test~eax,eax", "setnz~al", "jmp~FOO"]], [1, 0, 92, 0, 0, 3, 0, 1, 8, 10, 0.01839080459770115, ["mov     [rsp+88h+descend], 1", "mov     eax, [sp_0+48h]", "jmp     loc_3F40"], ["mov~[rsp+0],0", "mov~eax,[sp_0+0]", "jmp~FOO"]], [0, 0, 4, 0, 2, 6, 0, 2, 3, -1, 0.0002998500749625187, ["call    ___errno_location", "mov     r12d, [rax]", "mov     sp_0, rax", "mov     edi, ebp; fd", "call    _close", "mov     [rbx], r12d"], ["call~FOO", "mov~r12d,<TAG>", "mov~sp_0,rax", "mov~edi,ebp", "call~FOO", "mov~<TAG>,r12d"]], [0, 0, 4, 0, 2, 7, 1, 3, 11, -1, 0.014205397301349324, ["call    ___errno_location", "mov     rdi, p; ptr", "mov     r12, rax", "mov     r14d, [rax]", "call    free", "test    head, head", "jz      short loc_4391"], ["call~FOO", "mov~rdi,p", "mov~r12,rax", "mov~r14d,<TAG>", "call~FOO", "test~head,head", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 1, 0, 3, -1, 0.0033358320839580206, ["xor     r13d, r13d"], ["xor~r13d,r13d"]], [0, 0, 2, 0, 0, 1, 0, 1, 16, -1, 0.0002998500749625187, ["jmp     loc_417A"], ["jmp~FOO"]], [0, 0, 3, 0, 0, 2, 0, 0, 12, -1, 0.004197901049475262, ["mov     rdi, head; ptr", "nop     dword ptr [rax+rax+00h]"], ["mov~rdi,head", "nop~[word ptr [rax+0]"]], [0, 1, 0, 1, 0, 9, 0, 0, 4, -1, 0.0, ["add     rsp, 58h", "mov     rax, r13", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "mov~rax,r13", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [2, 0, 1, 0, 1, 9, 2, 2, 12, -1, 0.002061469265367316, ["mov     rdi, [rsp+88h+dirp]; dirp", "xor     r13d, r13d", "call    _closedir", "mov     rax, [rsp+88h+cur]", "mov     r8d, 7", "mov     [rax+60h], r8w", "or      dword ptr [sp_0+48h], 2000h", "mov     [r12], r14d", "jmp     loc_417D"], ["mov~rdi,[rsp+0]", "xor~r13d,r13d", "call~FOO", "mov~rax,[rsp+0]", "mov~r8d,0", "mov~[rax+0],r8w", "or~[word ptr [sp_0+0],0", "mov~<TAG>,r14d", "jmp~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 13, -1, 0.00014992503748125936, ["mov     rbp, [rdi+10h]", "call    free", "test    rbp, rbp", "mov     rdi, rbp", "jnz     short loc_4380"], ["mov~rbp,[rdi+0]", "call~FOO", "test~rbp,rbp", "mov~rdi,rbp", "jnz~FOO"]], [0, 0, 4, 0, 1, 5, 1, 2, 15, -1, 0.006746626686656671, ["mov     rbx, [rdi+10h]", "call    free", "test    rbx, rbx", "mov     rdi, rbx", "jnz     short loc_4590"], ["mov~rbx,[rdi+0]", "call~FOO", "test~rbx,rbx", "mov~rdi,rbx", "jnz~FOO"]], [0, 0, 100, 0, 1, 3, 0, 1, 7, 13, 0.00022488755622188903, ["mov     edi, eax; fd", "call    dup_safer", "mov     r13d, eax"], ["mov~edi,eax", "call~FOO", "mov~r13d,eax"]], [0, 0, 0, 0, 0, 0, 0, 0, 16, -1, 0.0, [], []]], "func_feature": [36, 61, 121, 1, 117, 182, 3, 477, 0.02974, 1, 17], "succs": [[5, 7], [0, 3], [111], [2, 55], [2, 4], [6], [8, 11], [6], [24, 11], [108], [9, 108], [14, 15], [92], [12, 85], [17], [18, 14], [97, 43], [23], [17], [36, 21], [19, 39], [35, 28], [75, 21], [25, 31], [23], [30], [29, 77], [65, 26], [32, 33], [65], [20], [30], [33, 34], [34], [35], [40, 46], [61, 47], [48], [48, 37], [56, 41], [44, 78], [56, 50], [106, 38], [10, 38], [45, 78], [52, 111], [91, 45], [53], [96, 27], [20], [57, 20], [20], [59, 111], [58, 54], [53, 61], [4], [107, 60], [56, 51], [54], [116], [1, 79], [22], [22], [64, 62], [62], [72, 68], [91, 69], [66, 70], [115, 71], [78], [89, 69], [74, 87], [73, 71], [105, 71], [81, 87], [80, 63], [84], [84, 76], [82, 103], [107, 13], [63], [87], [83, 46], [104, 86], [49, 67], [92], [46], [93, 77], [102, 46], [90, 108], [95], [94, 95], [1], [77], [99, 108], [94], [77], [42, 10], [98, 100], [98], [108], [114], [108, 101], [88], [88], [77], [10], [112, 110], [111], [108], [113], [], [111], [112, 113], [114, 109], [72], []], "fname": "fts_build", "n_num": 117}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[0, 0, 4, 0, 1, 5, 1, 2, 0, 0, 0.01461038961038961, ["lea     rdi, dir+1; file", "mov     esi, edx; flags", "xor     eax, eax", "call    open_safer", "jmp     short loc_49DD"], ["lea~rdi,<TAG>", "mov~esi,edx", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [4, 0, 6, 1, 0, 6, 3, 1, 17, -1, 0.05584415584415584, ["mov     edx, eax", "shl     edx, 0Dh", "and     edx, 20000h", "or      edx, 10900h", "test    ah, 2", "jz      short loc_49F1"], ["mov~edx,eax", "shl~edx,0", "and~edx,0", "or~edx,0", "test~ah,0", "jz~FOO"]], [0, 0, 41, 0, 1, 7, 2, 2, 9, 5, 0.00909090909090909, ["lea     rsi, aReportBugsToS+16h; name", "xor     edx, edx; namelen", "mov     rdi, sp_0; sp_0", "call    fts_alloc", "test    rax, rax", "mov     r15, rax", "jz      mem2"], ["lea~rsi,<TAG>", "xor~edx,edx", "mov~rdi,sp_0", "call~FOO", "test~rax,rax", "mov~r15,rax", "jz~FOO"]], [0, 0, 43, 0, 0, 3, 1, 1, 8, 5, 0.15974025974025974, ["mov     rsi, [argv]", "test    rsi, rsi", "jz      loc_4900"], ["mov~rsi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [0, 0, 40, 0, 0, 2, 1, 1, 9, 4, 0.15616883116883118, ["xor     r15d, r15d", "jmp     loc_4714"], ["xor~r15d,r15d", "jmp~FOO"]], [0, 0, 20, 0, 0, 2, 1, 1, 19, -1, 0.08463203463203461, ["test    compar, compar", "jz      short loc_481D"], ["test~compar,compar", "jz~FOO"]], [1, 0, 34, 1, 0, 4, 1, 1, 18, -1, 0.05795454545454545, ["add     nitems, 1", "mov     rsi, [r12+nitems*8]", "test    rsi, rsi", "jz      loc_4801"], ["add~nitems,0", "mov~rsi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [1, 0, 34, 1, 0, 7, 1, 1, 18, -1, 0.0573051948051948, ["add     nitems, 1", "mov     rax, [rsp+58h+tmp]", "mov     [rsp+58h+tmp], rcx", "mov     rsi, [r12+rbp*8]", "mov     [rax+10h], rcx", "test    rsi, rsi", "jnz     loc_4760"], ["add~nitems,0", "mov~rax,[rsp+0]", "mov~[rsp+0],rcx", "mov~rsi,<TAG>", "mov~[rax+0],rcx", "test~rsi,rsi", "jnz~FOO"]], [1, 0, 7, 0, 0, 3, 1, 1, 16, -1, 0.0849025974025974, ["mov     eax, [sp_0+48h]", "test    eax, 204h", "jz      loc_49B8"], ["mov~eax,[sp_0+0]", "test~eax,0", "jz~FOO"]], [0, 0, 8, 0, 1, 3, 0, 2, 16, -1, 0.0025974025974025974, ["mov     rdi, rax; state", "call    cycle_check_init", "jmp     loc_487E"], ["mov~rdi,rax", "call~FOO", "jmp~FOO"]], [1, 0, 13, 0, 1, 9, 2, 2, 15, -1, 0.09269480519480519, ["mov     r8, cs:data_freer; data_freer", "lea     rcx, AD_compare; comparator", "lea     rdx, AD_hash; hasher", "xor     esi, esi; tuning", "mov     edi, 1Fh; candidate", "call    hash_initialize", "test    rax, rax", "mov     [sp_0+50h], rax", "jz      short loc_48BF"], ["mov~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "xor~esi,esi", "mov~edi,0", "call~FOO", "test~rax,rax", "mov~[sp_0+0],rax", "jz~FOO"]], [1, 0, 49, 0, 0, 5, 1, 1, 5, 8, 0.09415584415584416, ["mov     rdi, [argv]; s", "mov     [rbx+48h], ebp", "mov     dword ptr [rbx+2Ch], 0FFFFFF9Ch", "test    rdi, rdi", "jz      loc_49A8"], ["mov~rdi,<TAG>", "mov~[rbx+0],ebp", "mov~[word ptr [rbx+0],0", "test~rdi,rdi", "jz~FOO"]], [2, 0, 50, 0, 0, 3, 2, 1, 5, 9, 0.0, ["and     ebp, 0FFFFFDFFh", "or      ebp, 4", "jmp     loc_4677"], ["and~ebp,0", "or~ebp,0", "jmp~FOO"]], [1, 0, 51, 0, 0, 3, 1, 1, 4, 9, 0.06493506493506493, ["test    bpl, 2", "mov     [sp_0+40h], compar", "jnz     loc_48E8"], ["test~bpl,0", "mov~[sp_0+0],compar", "jnz~FOO"]], [1, 0, 19, 0, 0, 2, 0, 0, 20, -1, 0.010714285714285714, ["cmp     nitems, 1", "jbe     short loc_481D"], ["cmp~nitems,0", "jbe~FOO"]], [1, 0, 40, 0, 0, 2, 0, 0, 10, 4, 0.012012987012987014, ["mov     rsi, [argv]", "mov     qword ptr [parent+50h], 0FFFFFFFFFFFFFFFFh"], ["mov~rsi,<TAG>", "mov~[word ptr [parent+0],0"]], [1, 0, 34, 0, 0, 4, 2, 1, 12, -1, 0.1172077922077922, ["mov     [rsp+58h+tmp], 0", "xor     ebp, ebp", "xor     r13d, r13d", "jmp     short loc_4760"], ["mov~[rsp+0],0", "xor~ebp,ebp", "xor~r13d,r13d", "jmp~FOO"]], [0, 0, 37, 0, 0, 2, 1, 1, 11, 2, 0.2025974025974026, ["test    rsi, rsi", "jz      loc_4A03"], ["test~rsi,rsi", "jz~FOO"]], [0, 1, 14, 0, 1, 5, 1, 2, 15, -1, 0.01461038961038961, ["mov     edi, 20h ; ' '; size", "call    _malloc", "test    rax, rax", "mov     [sp_0+50h], rax", "jz      loc_48BF"], ["mov~edi,<STR>", "call~FOO", "test~rax,rax", "mov~[sp_0+0],rax", "jz~FOO"]], [2, 0, 16, 0, 0, 5, 1, 1, 14, -1, 0.12743506493506493, ["test    dword ptr [sp_0+48h], 102h", "mov     edx, 9", "mov     [rax+10h], r13", "mov     [rax+60h], dx", "jz      loc_4980"], ["test~[word ptr [sp_0+0],0", "mov~edx,0", "mov~[rax+0],r13", "mov~[rax+0],dx", "jz~FOO"]], [0, 0, 47, 0, 0, 3, 1, 0, 6, 9, 0.004545454545454545, ["mov     r13, argv", "xor     ebp, ebp", "nop     dword ptr [rax+rax+00h]"], ["mov~r13,argv", "xor~ebp,ebp", "nop~[word ptr [rax+0]"]], [1, 0, 1, 0, 1, 3, 0, 1, 17, -1, 0.005032467532467532, ["lea     rdi, [sp_0+58h]; ir", "mov     esi, 0FFFFFFFFh; default_val", "call    i_ring_init"], ["lea~rdi,[sp_0+0]", "mov~esi,0", "call~FOO"]], [0, 0, 3, 0, 0, 3, 1, 0, 19, -1, 0.016883116883116882, ["test    eax, eax", "mov     [sp_0+28h], eax", "jns     loc_488C"], ["test~eax,eax", "mov~[sp_0+0],eax", "jns~FOO"]], [1, 0, 2, 0, 0, 2, 1, 1, 20, -1, 0.0, ["or      dword ptr [sp_0+48h], 4", "jmp     loc_488C"], ["or~[word ptr [sp_0+0],0", "jmp~FOO"]], [0, 0, 39, 0, 0, 2, 1, 1, 10, 3, 0.18896103896103897, ["test    compar, compar", "jz      short loc_472B"], ["test~compar,compar", "jz~FOO"]], [0, 0, 18, 0, 1, 5, 0, 1, 21, -1, 0.0, ["mov     rsi, root; head", "mov     rdx, nitems; nitems", "mov     rdi, sp_0; sp_0", "call    fts_sort", "mov     root, rax"], ["mov~rsi,root", "mov~rdx,nitems", "mov~rdi,sp_0", "call~FOO", "mov~root,rax"]], [1, 0, 34, 0, 0, 1, 0, 0, 18, -1, 0.007224025974025974, ["mov     qword ptr [p_0+10h], 0"], ["mov~[word ptr [p_0+0],0"]], [2, 0, 34, 0, 0, 5, 1, 1, 17, -1, 0.014285714285714285, ["mov     esi, 0Bh", "test    compar, compar", "mov     qword ptr [p_0+98h], 2", "mov     [p_0+60h], si", "jnz     loc_4748"], ["mov~esi,0", "test~compar,compar", "mov~[word ptr [p_0+0],0", "mov~[p_0+0],si", "jnz~FOO"]], [0, 0, 17, 0, 0, 2, 1, 1, 13, 0, 0.07207792207792207, ["xor     r13d, r13d", "jmp     loc_483A"], ["xor~r13d,r13d", "jmp~FOO"]], [0, 0, 18, 0, 1, 7, 2, 2, 12, 1, 0.08506493506493507, ["lea     rsi, aReportBugsToS+16h; name", "xor     edx, edx; namelen", "mov     rdi, sp_0; sp_0", "call    fts_alloc", "test    rax, rax", "mov     [sp_0], rax", "jz      loc_48C4"], ["lea~rsi,<TAG>", "xor~edx,edx", "mov~rdi,sp_0", "call~FOO", "test~rax,rax", "mov~<TAG>,rax", "jz~FOO"]], [2, 0, 56, 1, 0, 9, 1, 1, 0, 13, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 28h", "test    esi, 0FFFFF800h", "jnz     loc_4958"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "test~esi,0", "jnz~FOO"]], [2, 0, 38, 0, 0, 5, 1, 0, 11, 3, 0.0, ["mov     r13d, [sp_0+48h]", "shr     r13d, 0Ah", "mov     eax, r13d", "and     eax, 1", "mov     [rsp+58h+var_41], al"], ["mov~r13d,[sp_0+0]", "shr~r13d,0", "mov~eax,r13d", "and~eax,0", "mov~[rsp+0],al"]], [1, 0, 0, 1, 0, 9, 0, 0, 2, -1, 0.0, ["add     rsp, 28h", "mov     rax, rbx", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "mov~rax,rbx", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [2, 0, 52, 0, 1, 8, 1, 2, 3, 10, 0.04983766233766234, ["mov     r12, argv", "mov     esi, 1; size", "mov     edi, 78h ; 'x'; nmemb", "mov     r14, compar", "call    _calloc", "test    rax, rax", "mov     rbx, rax", "jz      loc_489A"], ["mov~r12,argv", "mov~esi,0", "mov~edi,0", "mov~r14,compar", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 1, 0, 1, 4, 1, 2, 8, -1, 0.010876623376623377, ["mov     rdi, sp_0; ptr", "xor     ebx, ebx", "call    free", "jmp     short loc_489A"], ["mov~rdi,sp_0", "xor~ebx,ebx", "call~FOO", "jmp~FOO"]], [1, 0, 1, 0, 1, 4, 1, 2, 1, -1, 0.0008116883116883117, ["call    ___errno_location", "xor     ebx, ebx", "mov     dword ptr [rax], 16h", "jmp     loc_489A"], ["call~FOO", "xor~ebx,ebx", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 34, 0, 0, 6, 1, 1, 15, -1, 0.12012987012987013, ["mov     qword ptr [p_0+50h], 0", "mov     [p_0+8], parent", "lea     p_0, [p_0+0F8h]", "test    root, root", "mov     [p_0+28h], rax", "jz      loc_4910"], ["mov~[word ptr [p_0+0],0", "mov~[p_0+0],parent", "lea~p_0,[p_0+0]", "test~root,root", "mov~[p_0+0],rax", "jz~FOO"]], [0, 0, 34, 0, 1, 6, 1, 2, 14, -1, 0.1357683982683983, ["mov     rdx, len; namelen", "mov     rdi, sp_0; sp_0", "call    fts_alloc", "test    rax, rax", "mov     rcx, rax", "jz      loc_48BF"], ["mov~rdx,len", "mov~rdi,sp_0", "call~FOO", "test~rax,rax", "mov~rcx,rax", "jz~FOO"]], [1, 0, 45, 0, 0, 2, 0, 1, 6, 7, 0.10097402597402598, ["mov     edx, 1000h", "jmp     loc_46C5"], ["mov~edx,0", "jmp~FOO"]], [1, 0, 47, 1, 1, 7, 1, 2, 7, 8, 0.017207792207792207, ["call    _strlen", "cmp     rbp, rax", "cmovb   rbp, rax", "add     r13, 8", "mov     rdi, [r13+0]", "test    rdi, rdi", "jnz     short loc_4698"], ["call~FOO", "cmp~rbp,rax", "cmovb~rbp,rax", "add~r13,0", "mov~rdi,[r13+0]", "test~rdi,rdi", "jnz~FOO"]], [0, 0, 34, 0, 1, 9, 2, 2, 16, -1, 0.09707792207792208, ["xor     edx, edx; follow", "mov     rsi, p_0; p", "mov     rdi, sp_0; sp_0", "mov     [rsp+58h+p], p_0", "call    fts_stat", "mov     rcx, [rsp+58h+p]", "test    compar, compar", "mov     [rcx+60h], ax", "jnz     loc_4748"], ["xor~edx,edx", "mov~rsi,p_0", "mov~rdi,sp_0", "mov~[rsp+0],p_0", "call~FOO", "mov~rcx,[rsp+0]", "test~compar,compar", "mov~[rcx+0],ax", "jnz~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 16, -1, 0.019155844155844155, ["cmp     [rsp+58h+var_41], 0", "jz      loc_4910"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 17, 0, 1, 7, 2, 2, 20, -1, 0.07002164502164501, ["lea     rsi, aReportBugsToS+16h; name", "xor     edx, edx; namelen", "mov     rdi, sp_0; sp_0", "call    fts_alloc", "test    rax, rax", "mov     [sp_0], rax", "jz      loc_48BF"], ["lea~rsi,<TAG>", "xor~edx,edx", "mov~rdi,sp_0", "call~FOO", "test~rax,rax", "mov~<TAG>,rax", "jz~FOO"]], [2, 0, 55, 0, 0, 5, 1, 1, 1, 12, 0.017207792207792207, ["mov     eax, esi", "mov     ebp, esi", "and     eax, 204h", "cmp     eax, 204h", "jz      loc_4958"], ["mov~eax,esi", "mov~ebp,esi", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 6, 0, 1, 3, 0, 2, 14, -1, 0.014339826839826838, ["call    ___errno_location", "mov     dword ptr [rax], 2", "jmp     loc_48BF"], ["call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 34, 0, 1, 6, 1, 2, 13, -1, 0.1598484848484848, ["mov     rdi, rsi; s", "mov     [rsp+58h+p], rsi", "call    _strlen", "test    len, len", "mov     rsi, [rsp+58h+p]; name", "jz      loc_4970"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "call~FOO", "test~len,len", "mov~rsi,[rsp+0]", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 15, -1, 0.040746753246753246, ["test    r13, r13", "jnz     short loc_48B0"], ["test~r13,r13", "jnz~FOO"]], [0, 0, 6, 0, 1, 4, 0, 1, 16, -1, 0.0, ["mov     rbp, [r13+10h]", "mov     rdi, r13; ptr", "call    free", "mov     r13, rbp"], ["mov~rbp,[r13+0]", "mov~rdi,r13", "call~FOO", "mov~r13,rbp"]], [1, 0, 34, 0, 0, 3, 1, 1, 17, -1, 0.049107142857142856, ["test    root, root", "mov     qword ptr [rcx+10h], 0", "jnz     loc_47E2"], ["test~root,root", "mov~[word ptr [rcx+0],0", "jnz~FOO"]], [2, 0, 45, 0, 0, 4, 0, 0, 8, 7, 0.02922077922077922, ["lea     rdx, [rbp+1]", "mov     eax, 1000h", "cmp     rdx, 1000h", "cmovb   rdx, rax; more"], ["lea~rdx,[rbp+0]", "mov~eax,0", "cmp~rdx,0", "cmovb~rdx,rax"]], [0, 1, 54, 0, 0, 2, 1, 1, 2, 11, 0.033766233766233764, ["test    sil, 12h", "jz      loc_4958"], ["test~sil,<STR>", "jz~FOO"]], [0, 0, 3, 0, 1, 2, 0, 1, 13, -1, 0.02646103896103896, ["mov     rdi, parent; ptr", "call    free"], ["mov~rdi,parent", "call~FOO"]], [0, 0, 34, 0, 0, 2, 0, 0, 17, -1, 0.04626623376623377, ["mov     [rcx+10h], root", "mov     r13, root"], ["mov~[rcx+0],root", "mov~r13,root"]], [0, 0, 34, 0, 0, 3, 0, 1, 18, -1, 0.0003246753246753247, ["mov     [rsp+58h+tmp], rcx", "mov     root, rcx", "jmp     loc_474F"], ["mov~[rsp+0],rcx", "mov~root,rcx", "jmp~FOO"]], [0, 0, 2, 0, 1, 2, 0, 1, 10, -1, 0.018668831168831168, ["mov     rdi, [sp_0+20h]; ptr", "call    free"], ["mov~rdi,[sp_0+0]", "call~FOO"]], [0, 0, 4, 0, 1, 3, 0, 1, 18, -1, 0.01461038961038961, ["mov     edi, [sp_0+2Ch]", "lea     rsi, dir+1; \".\"", "call    ___openat_2"], ["mov~edi,[sp_0+0]", "lea~rsi,<TAG>", "call~FOO"]], [0, 0, 44, 0, 1, 6, 1, 2, 7, 6, 0.15584415584415584, ["lea     rsi, [sp_0+30h]; sp_0", "lea     rdi, [sp_0+20h]; sp_0", "call    fts_palloc", "test    al, al", "mov     [rsp+58h+var_41], al", "jz      mem1"], ["lea~rsi,[sp_0+0]", "lea~rdi,[sp_0+0]", "call~FOO", "test~al,al", "mov~[rsp+0],al", "jz~FOO"]]], "func_feature": [22, 49, 64, 0, 57, 88, 1, 240, 0.05336, 5, 6], "succs": [[22], [0, 55], [54, 15], [2, 4], [24], [42, 14], [5, 45], [5, 45], [1, 21], [8], [8, 46], [20, 38], [11], [11, 12], [25, 42], [24], [45], [16, 29], [9, 46], [18, 10], [39], [32], [21, 23], [21], [17, 31], [42], [7], [26, 52], [19], [51, 28], [35, 43], [17], [], [32, 13], [32], [32], [40, 41], [36, 46], [56], [49, 39], [48, 52], [40, 27], [19, 46], [50, 35], [46], [44, 37], [51, 47], [46], [53, 7], [56], [33, 35], [54], [6], [6], [34], [22], [34, 3]], "fname": "fts_open", "n_num": 57}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[1, 0, 11, 0, 0, 2, 1, 1, 0, 0, 0.14130434782608695, ["test    al, 4", "jnz     short loc_4AC9"], ["test~al,0", "jnz~FOO"]], [0, 1, 13, 0, 2, 8, 1, 3, 2, 5, 0.25905797101449274, ["mov     rdi, [sp_0+10h]; ptr", "call    free", "mov     rdi, [sp_0+20h]; ptr", "call    free", "mov     eax, [sp_0+48h]", "mov     ebx, eax", "and     ebx, 200h", "jz      short loc_4B00"], ["mov~rdi,[sp_0+0]", "call~FOO", "mov~rdi,[sp_0+0]", "call~FOO", "mov~eax,[sp_0+0]", "mov~ebx,eax", "and~ebx,<STR>", "jz~FOO"]], [0, 0, 16, 0, 0, 3, 1, 1, 1, 6, 0.2318840579710145, ["mov     rdi, [sp_0+8]; ptr", "test    rdi, rdi", "jz      short loc_4AA1"], ["mov~rdi,[sp_0+0]", "test~rdi,rdi", "jz~FOO"]], [1, 0, 24, 1, 0, 7, 1, 1, 0, 7, 0.0, ["push    rbp", "push    rbx", "mov     rbp, sp_0", "sub     rsp, 8", "mov     sp_0, [sp_0]", "test    rdi, rdi", "jz      short loc_4A83"], ["push~rbp", "push~rbx", "mov~rbp,sp_0", "sub~rsp,0", "mov~sp_0,<TAG>", "test~rdi,rdi", "jz~FOO"]], [0, 0, 17, 0, 1, 4, 0, 2, 3, 7, 0.06159420289855073, ["mov     rbx, p", "mov     p, rbx; ptr", "call    free", "jmp     loc_4A83"], ["mov~rbx,p", "mov~p,rbx", "call~FOO", "jmp~FOO"]], [0, 0, 17, 0, 1, 2, 0, 1, 4, 7, 0.0923913043478261, ["mov     rdi, p; ptr", "call    free"], ["mov~rdi,p", "call~FOO"]], [0, 0, 15, 0, 0, 1, 0, 0, 2, 7, 0.016304347826086956, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 10, 0, 1, 5, 1, 2, 4, 6, 0.04891304347826087, ["mov     edi, [sp_0+28h]; fd", "call    _fchdir", "test    eax, eax", "mov     ebx, eax", "jz      short loc_4B19"], ["mov~edi,[sp_0+0]", "call~FOO", "test~eax,eax", "mov~ebx,eax", "jz~FOO"]], [0, 0, 9, 0, 1, 2, 0, 1, 5, 6, 0.0, ["call    ___errno_location", "mov     ebx, [rax]"], ["call~FOO", "mov~ebx,<TAG>"]], [0, 0, 8, 0, 0, 1, 0, 0, 5, 5, 0.030797101449275364, ["mov     edi, [sp_0+28h]; fd"], ["mov~edi,[sp_0+0]"]], [0, 0, 15, 0, 1, 5, 1, 2, 3, 6, 0.025362318840579712, ["mov     rbx, [rdi+10h]", "call    free", "test    rbx, rbx", "mov     rdi, rbx", "jnz     short loc_4A90"], ["mov~rbx,[rdi+0]", "call~FOO", "test~rbx,rbx", "mov~rdi,rbx", "jnz~FOO"]], [0, 0, 7, 0, 1, 2, 0, 2, 4, 4, 0.03804347826086957, ["call    _close", "jmp     short loc_4AC9"], ["call~FOO", "jmp~FOO"]], [0, 0, 8, 0, 0, 4, 2, 0, 3, 4, 0.09782608695652174, ["mov     edi, [sp_0+2Ch]", "xor     ebx, ebx", "test    edi, edi", "jns     short loc_4B1C"], ["mov~edi,[sp_0+0]", "xor~ebx,ebx", "test~edi,edi", "jns~FOO"]], [0, 0, 3, 0, 1, 2, 0, 2, 5, 2, 0.051630434782608696, ["call    free", "jmp     short loc_4AE9"], ["call~FOO", "jmp~FOO"]], [1, 0, 6, 0, 1, 5, 1, 2, 4, 3, 0.1956521739130435, ["lea     rdi, [sp_0+58h]; fd_ring", "call    fd_ring_clear", "test    dword ptr [sp_0+48h], 102h", "mov     rdi, [sp_0+50h]; ptr", "jz      short loc_4B28"], ["lea~rdi,[sp_0+0]", "call~FOO", "test~[word ptr [sp_0+0],0", "mov~rdi,[sp_0+0]", "jz~FOO"]], [1, 0, 21, 0, 1, 4, 0, 2, 3, 8, 0.018115942028985508, ["call    free", "cmp     qword ptr [p+50h], 0", "mov     rdi, p; ptr", "js      short loc_4A7B"], ["call~FOO", "cmp~[word ptr [p+0],0", "mov~rdi,p", "js~FOO"]], [0, 0, 21, 0, 0, 3, 1, 1, 2, 9, 0.014492753623188406, ["mov     rbx, [p+10h]", "test    rbx, rbx", "jnz     short loc_4A50"], ["mov~rbx,[p+0]", "test~rbx,rbx", "jnz~FOO"]], [0, 0, 18, 0, 0, 1, 0, 1, 2, 8, 0.034420289855072464, ["jmp     loc_4B30"], ["jmp~FOO"]], [1, 0, 23, 0, 0, 2, 0, 0, 1, 9, 0.010869565217391304, ["cmp     qword ptr [p+50h], 0", "jns     short loc_4A5F"], ["cmp~[word ptr [p+0],0", "jns~FOO"]], [1, 0, 1, 0, 1, 4, 0, 2, 7, 0, 0.0, ["call    ___errno_location", "mov     [rax], ebx", "mov     ebx, 0FFFFFFFFh", "jmp     short loc_4AF5"], ["call~FOO", "mov~<TAG>,ebx", "mov~ebx,0", "jmp~FOO"]], [0, 0, 2, 0, 1, 4, 1, 2, 6, 1, 0.07971014492753624, ["mov     rdi, sp_0; ptr", "call    free", "test    ebx, ebx", "jnz     short loc_4B40"], ["mov~rdi,sp_0", "call~FOO", "test~ebx,ebx", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 5, 2, 0.08605072463768117, ["test    rdi, rdi", "jz      short loc_4AE9"], ["test~rdi,rdi", "jz~FOO"]], [0, 0, 3, 0, 1, 1, 0, 1, 6, 2, 0.0, ["call    hash_free"], ["call~FOO"]], [1, 0, 21, 0, 1, 5, 0, 1, 3, 8, 0.018115942028985508, ["mov     rbx, [p+8]", "call    free", "cmp     qword ptr [p+50h], 0", "mov     rdi, p", "jns     short loc_4A5F"], ["mov~rbx,[p+0]", "call~FOO", "cmp~[word ptr [p+0],0", "mov~rdi,p", "jns~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 7, -1, 0.0, ["add     rsp, 8", "mov     eax, ebx", "pop     rbx", "pop     sp_0", "retn"], ["add~rsp,0", "mov~eax,ebx", "pop~rbx", "pop~sp_0", "retn"]]], "func_feature": [15, 12, 31, 0, 25, 38, 1, 84, 0.0621, 0, 2], "succs": [[14, 7], [0, 12], [1, 6], [2, 18], [2], [2], [10], [8, 9], [9], [11], [1, 10], [14], [11, 14], [20], [13, 21], [16, 5], [23, 15], [4], [16, 17], [24], [24, 19], [20, 22], [20], [16, 5], []], "fname": "fts_close", "n_num": 25}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[0, 0, 21, 0, 0, 6, 1, 1, 0, 0, 0.0025788387857353374, ["mov     rdx, [p+8]", "mov     rdx, [rdx+28h]", "mov     [p+28h], rdx", "mov     p, [p+10h]", "test    p, p", "jnz     short loc_4DF0"], ["mov~rdx,[p+0]", "mov~rdx,[rdx+0]", "mov~[p+0],rdx", "mov~p,[p+0]", "test~p,p", "jnz~FOO"]], [0, 0, 21, 0, 0, 2, 0, 0, 11, -1, 0.0022104332449160036, ["mov     rax, p", "nop     dword ptr [p]"], ["mov~rax,p", "nop~<TAG>"]], [0, 0, 19, 0, 0, 1, 0, 1, 13, -1, 0.002799882110226938, ["jmp     short loc_4D98"], ["jmp~FOO"]], [0, 0, 9, 0, 1, 4, 1, 2, 11, -1, 0.001878868258178603, ["mov     edi, [sp_0+28h]; fd", "call    _fchdir", "test    eax, eax", "jnz     loc_5080"], ["mov~edi,[sp_0+0]", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 1, 11, 0, 0, 2, 1, 1, 10, -1, 0.0037208959622752726, ["and     edi, 200h", "jz      short loc_51FF"], ["and~edi,<STR>", "jz~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 10, -1, 0.005108556832694763, ["mov     rdi, [sp_0+50h]; state", "lea     rsi, [p+68h]; sb", "call    cycle_check", "test    al, al", "jz      loc_4CE7"], ["mov~rdi,[sp_0+0]", "lea~rsi,[p+0]", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 8, 0, 0, 2, 1, 1, 9, -1, 0.03325474015129187, ["test    dword ptr [sp_0+48h], 102h", "jz      loc_5000"], ["test~[word ptr [sp_0+0],0", "jz~FOO"]], [2, 0, 24, 0, 0, 5, 0, 1, 8, -1, 0.01989389920424403, ["mov     rdx, [sp_0+20h]", "mov     rax, [p+40h]", "mov     byte ptr [rdx+rax], 0", "cmp     qword ptr [p+50h], 0", "jz      loc_5140"], ["mov~rdx,[sp_0+0]", "mov~rax,[p+0]", "mov~<TAG>,0", "cmp~[word ptr [p+0],0", "jz~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 7, -1, 0.019746536987916296, ["cmp     word ptr [p+60h], 0Bh", "jz      loc_4D37"], ["cmp~[ord ptr [p+0],0", "jz~FOO"]], [1, 0, 47, 0, 0, 2, 0, 1, 6, -1, 0.006926024167403478, ["cmp     ax, 4", "jnz     loc_4C83"], ["cmp~ax,0", "jnz~FOO"]], [0, 0, 48, 0, 0, 1, 0, 1, 5, -1, 0.0038314176245210726, ["jmp     loc_4E10"], ["jmp~FOO"]], [0, 0, 8, 0, 0, 1, 0, 1, 7, -1, 0.0027262010020630708, ["jmp     loc_4C9B"], ["jmp~FOO"]], [1, 0, 17, 0, 0, 3, 1, 1, 9, -1, 0.010057471264367816, ["movzx   eax, word ptr [p+62h]", "test    al, 2", "jz      loc_5050"], ["movzx~eax,[ord ptr [p+0]", "test~al,0", "jz~FOO"]], [1, 0, 1, 0, 0, 4, 0, 1, 11, -1, 0.0, ["mov     ecx, 2", "mov     [p+0], p", "mov     [p+60h], cx", "jmp     loc_4CE7"], ["mov~ecx,0", "mov~[p+0],p", "mov~[p+0],cx", "jmp~FOO"]], [1, 0, 13, 0, 0, 4, 1, 1, 10, -1, 0.006189213085764809, ["mov     eax, [sp_0+48h]", "mov     edi, [p+3Ch]; fd", "test    al, 4", "jz      loc_50C2"], ["mov~eax,[sp_0+0]", "mov~edi,[p+0]", "test~al,0", "jz~FOO"]], [0, 0, 7, 0, 1, 1, 0, 1, 11, -1, 0.0030946065428824046, ["call    _close"], ["call~FOO"]], [1, 0, 8, 0, 1, 6, 0, 2, 12, -1, 0.0005894488653109342, ["mov     esi, edi; fd", "mov     edx, 1; chdir_down_one", "mov     rdi, sp_0; sp_0", "call    cwd_advance_fd", "mov     edi, [p+3Ch]", "jmp     loc_4C33"], ["mov~esi,edi", "mov~edx,0", "mov~rdi,sp_0", "call~FOO", "mov~edi,[p+0]", "jmp~FOO"]], [0, 0, 8, 0, 0, 2, 0, 1, 13, -1, 0.0011788977306218685, ["mov     edi, [p+3Ch]", "jmp     loc_4C33"], ["mov~edi,[p+0]", "jmp~FOO"]], [0, 0, 0, 0, 1, 11, 1, 1, 3, -1, 0.0, ["mov     rsi, p; p", "xor     edx, edx; follow", "call    fts_stat", "mov     [p+60h], ax", "mov     rax, p", "pop     rbx", "pop     p", "pop     sp_0", "pop     r13", "pop     r14", "retn"], ["mov~rsi,p", "xor~edx,edx", "call~FOO", "mov~[p+0],ax", "mov~rax,p", "pop~rbx", "pop~p", "pop~sp_0", "pop~r13", "pop~r14", "retn"]], [2, 0, 115, 0, 0, 6, 0, 1, 2, 10, 0.016799292661361626, ["movzx   eax, word ptr [rbp+64h]", "mov     r13d, 3", "mov     r12, sp_0", "mov     [p+64h], r13w", "cmp     ax, 1", "jz      loc_4E20"], ["movzx~eax,[ord ptr [rbp+0]", "mov~r13d,0", "mov~r12,sp_0", "mov~[p+0],r13w", "cmp~ax,0", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 0, 0, 11, -1, 0.004641909814323607, ["mov     eax, [p+38h]", "mov     edi, [sp_0+48h]; fts"], ["mov~eax,[p+0]", "mov~edi,[sp_0+0]"]], [1, 0, 9, 0, 0, 2, 1, 1, 10, -1, 0.0030577659888004712, ["test    al, 1", "jnz     loc_4C38"], ["test~al,0", "jnz~FOO"]], [1, 0, 8, 0, 1, 9, 1, 2, 11, -1, 0.0006262894193928676, ["mov     rax, [p+8]", "lea     r8, dir; \"..\"", "mov     ecx, 0FFFFFFFFh; fd", "mov     rdi, sp_0; sp_0", "lea     rdx, [rax+70h]; p", "lea     rsi, [rax+68h]; p", "call    fts_safe_changedir", "test    eax, eax", "jz      loc_4C38"], ["mov~rax,[p+0]", "lea~r8,<TAG>", "mov~ecx,0", "mov~rdi,sp_0", "lea~rdx,[rax+0]", "lea~rsi,[rax+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 1, 12, -1, 0.00022104332449160034, ["jmp     loc_4C38"], ["jmp~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 11, -1, 0.010094311818449749, ["test    eax, eax", "jz      loc_5030"], ["test~eax,eax", "jz~FOO"]], [1, 0, 6, 0, 1, 7, 1, 2, 12, -1, 0.000663129973474801, ["call    ___errno_location", "mov     edi, [sp_0+48h]", "mov     eax, [rax]", "or      edi, 2000h", "mov     [p+38h], eax", "mov     [sp_0+48h], edi", "jmp     loc_4C40"], ["call~FOO", "mov~edi,[sp_0+0]", "mov~eax,<TAG>", "or~edi,0", "mov~[p+0],eax", "mov~[sp_0+0],edi", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 10, -1, 0.004862953138815207, ["mov     eax, [p+38h]", "jmp     loc_4C40"], ["mov~eax,[p+0]", "jmp~FOO"]], [2, 0, 6, 0, 1, 7, 0, 2, 11, -1, 0.0004420866489832007, ["mov     rdi, sp_0; sp_0", "mov     edx, 1; chdir_down_one", "mov     esi, 0FFFFFF9Ch; fd", "call    cwd_advance_fd", "mov     eax, [p+38h]", "mov     edi, [sp_0+48h]", "jmp     loc_4C40"], ["mov~rdi,sp_0", "mov~edx,0", "mov~esi,0", "call~FOO", "mov~eax,[p+0]", "mov~edi,[sp_0+0]", "jmp~FOO"]], [0, 0, 22, 0, 1, 3, 0, 1, 12, -1, 0.002247273798997937, ["mov     edi, [sp_0+2Ch]", "lea     rsi, dir+1; \".\"", "call    ___openat_2"], ["mov~edi,[sp_0+0]", "lea~rsi,<TAG>", "call~FOO"]], [4, 0, 24, 1, 0, 6, 3, 1, 11, 1, 0.004789272030651341, ["mov     edx, eax", "shl     edx, 0Dh", "and     edx, 20000h", "or      edx, 10900h", "test    ah, 2", "jz      loc_5333"], ["mov~edx,eax", "shl~edx,0", "and~edx,0", "or~edx,0", "test~ah,0", "jz~FOO"]], [1, 0, 3, 0, 1, 7, 0, 2, 12, -1, 0.0028735632183908046, ["mov     edx, 6", "lea     rsi, [sp_0+50h]; fts", "mov     [p+60h], dx", "mov     rdx, p; ent", "call    leave_dir", "mov     edi, [sp_0+48h]", "jmp     loc_4C51"], ["mov~edx,0", "lea~rsi,[sp_0+0]", "mov~[p+0],dx", "mov~rdx,p", "call~FOO", "mov~edi,[sp_0+0]", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 0, 12, -1, 0.0028735632183908046, ["mov     eax, 7", "mov     [p+60h], ax"], ["mov~eax,0", "mov~[p+0],ax"]], [0, 0, 21, 0, 0, 3, 1, 1, 13, -1, 0.006557618626584143, ["test    eax, eax", "mov     [p+3Ch], eax", "js      loc_5319"], ["test~eax,eax", "mov~[p+0],eax", "js~FOO"]], [0, 0, 22, 0, 1, 5, 1, 2, 12, 0, 0.002247273798997937, ["lea     rdi, dir+1; file", "mov     esi, edx; flags", "xor     eax, eax", "call    open_safer", "jmp     loc_524A"], ["lea~rdi,<TAG>", "mov~esi,edx", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 27, 0, 1, 5, 1, 2, 7, -1, 0.009593280282935454, ["lea     rdi, [sp_0+58h]; fd_ring", "call    fd_ring_clear", "mov     eax, [sp_0+48h]", "test    al, 4", "jnz     short loc_4E92"], ["lea~rdi,[sp_0+0]", "call~FOO", "mov~eax,[sp_0+0]", "test~al,0", "jnz~FOO"]], [1, 0, 69, 0, 1, 5, 0, 2, 6, 6, 0.017565576186265842, ["mov     [sp_0], p", "mov     rdi, tmp; ptr", "call    free", "cmp     qword ptr [p+50h], 0", "jz      loc_4E40"], ["mov~<TAG>,p", "mov~rdi,tmp", "call~FOO", "cmp~[word ptr [p+0],0", "jz~FOO"]], [1, 0, 26, 0, 0, 2, 1, 1, 8, -1, 0.002541998231653404, ["test    ah, 2", "jnz     short loc_4E80"], ["test~ah,0", "jnz~FOO"]], [1, 0, 2, 0, 0, 3, 1, 1, 13, -1, 0.003684055408193339, ["and     edi, 2000h", "mov     rbp, p", "jz      loc_4CE7"], ["and~edi,0", "mov~rbp,p", "jz~FOO"]], [0, 0, 24, 0, 1, 4, 1, 2, 9, -1, 0.001878868258178603, ["mov     edi, [sp_0+28h]; fd", "call    _fchdir", "test    eax, eax", "jz      short loc_4E92"], ["mov~edi,[sp_0+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 0, 8, 1, 0, 1, -1, 0.0, ["xor     ebp, ebp", "pop     rbx", "mov     rax, rbp", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "retn"], ["xor~ebp,ebp", "pop~rbx", "mov~rax,rbp", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "retn"]], [0, 0, 117, 0, 0, 8, 1, 1, 0, 12, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbp, [sp_0]", "test    rbp, rbp", "jz      loc_4C60"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbp,<TAG>", "test~rbp,rbp", "jz~FOO"]], [0, 1, 116, 0, 0, 3, 1, 1, 1, 11, 0.00847332743884468, ["mov     edx, [sp_0+48h]", "test    dh, 20h", "jnz     loc_4C60"], ["mov~edx,[sp_0+0]", "test~dh,<STR>", "jnz~FOO"]], [1, 0, 6, 0, 0, 3, 1, 1, 9, -1, 0.006483937518420277, ["mov     edi, [sp_0+48h]; fts", "test    edi, 2000h", "jnz     loc_4C60"], ["mov~edi,[sp_0+0]", "test~edi,0", "jnz~FOO"]], [1, 0, 1, 0, 0, 3, 2, 1, 10, -1, 0.00025788387857353373, ["or      dword ptr [sp_0+48h], 2000h", "xor     ebp, ebp", "jmp     loc_4CE7"], ["or~[word ptr [sp_0+0],0", "xor~ebp,ebp", "jmp~FOO"]], [4, 0, 22, 1, 0, 6, 3, 1, 7, -1, 0.0031731997249238625, ["mov     edx, eax", "shl     edx, 0Dh", "and     edx, 20000h", "or      edx, 10900h", "test    ah, 2", "jz      loc_5304"], ["mov~edx,eax", "shl~edx,0", "and~edx,0", "or~edx,0", "test~ah,0", "jz~FOO"]], [1, 0, 24, 0, 0, 3, 1, 1, 6, -1, 0.007618626584143825, ["mov     eax, [sp_0+48h]", "test    al, 4", "jz      loc_525F"], ["mov~eax,[sp_0+0]", "test~al,0", "jz~FOO"]], [1, 0, 108, 0, 0, 3, 0, 0, 4, 9, 0.015030946065428824, ["lea     eax, [rcx-0Ch]", "cmp     ax, 1", "jbe     short loc_4CF8"], ["lea~eax,[rcx-0Ch]+0]", "cmp~ax,0", "jbe~FOO"]], [1, 0, 113, 0, 0, 3, 0, 1, 3, 9, 0.024830533451223106, ["cmp     ax, 2", "movzx   ecx, word ptr [p+60h]", "jz      loc_4C70"], ["cmp~ax,0", "movzx~ecx,[ord ptr [p+0]", "jz~FOO"]], [1, 0, 96, 0, 0, 2, 0, 1, 5, 8, 0.013012083701738873, ["cmp     cx, 1", "jnz     next"], ["cmp~cx,0", "jnz~FOO"]], [0, 0, 20, 0, 1, 3, 0, 1, 8, -1, 0.0018076431869535315, ["mov     edi, [sp_0+2Ch]", "lea     rsi, dir+1; \".\"", "call    ___openat_2"], ["mov~edi,[sp_0+0]", "lea~rsi,<TAG>", "call~FOO"]], [1, 0, 45, 0, 0, 2, 1, 1, 6, -1, 0.018140288829944, ["test    dl, 40h", "jz      loc_4D40"], ["test~dl,0", "jz~FOO"]], [1, 0, 9, 0, 2, 9, 1, 3, 13, -1, 0.0, ["call    ___errno_location", "mov     edi, [p+3Ch]; fd", "mov     ebp, [rax]", "mov     r13, rax", "call    _close", "mov     [r13+0], ebp", "mov     [p+38h], ebp", "or      dword ptr [sp_0+48h], 2000h", "jmp     loc_51F7"], ["call~FOO", "mov~edi,[p+0]", "mov~ebp,<TAG>", "mov~r13,rax", "call~FOO", "mov~[r13+0],ebp", "mov~[p+0],ebp", "or~[word ptr [sp_0+0],0", "jmp~FOO"]], [0, 0, 10, 0, 1, 3, 1, 2, 12, -1, 0.002357795461243737, ["call    _fchdir", "test    eax, eax", "jnz     loc_529F"], ["call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 23, 0, 1, 4, 0, 1, 9, -1, 0.0008104921898025346, ["mov     edx, 1; chdir_down_one", "mov     esi, 0FFFFFF9Ch; fd", "mov     rdi, sp_0; sp_0", "call    cwd_advance_fd"], ["mov~edx,0", "mov~esi,0", "mov~rdi,sp_0", "call~FOO"]], [0, 0, 19, 0, 0, 3, 1, 1, 9, -1, 0.005825719618823067, ["test    eax, eax", "mov     [p+3Ch], eax", "js      short loc_52E8"], ["test~eax,eax", "mov~[p+0],eax", "js~FOO"]], [0, 0, 20, 0, 1, 5, 1, 2, 8, -1, 0.0018076431869535315, ["lea     rdi, dir+1; file", "mov     esi, edx; flags", "xor     eax, eax", "call    open_safer", "jmp     loc_528A"], ["lea~rdi,<TAG>", "mov~esi,edx", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 44, 0, 0, 3, 0, 1, 7, -1, 0.002652519893899204, ["mov     rax, [r12+18h]", "cmp     [p+68h], rax", "jz      loc_4D40"], ["mov~rax,[r12+0]", "cmp~[p+0],rax", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 1, 1, 8, -1, 0.0056734453286177424, ["test    byte ptr [p+62h], 2", "jnz     loc_5178"], ["test~[yte ptr [p+0],0", "jnz~FOO"]], [0, 0, 1, 0, 1, 4, 0, 2, 11, -1, 0.000663129973474801, ["lea     rsi, [sp_0+50h]; fts", "mov     rdx, p; ent", "call    leave_dir", "jmp     loc_4CE7"], ["lea~rsi,[sp_0+0]", "mov~rdx,p", "call~FOO", "jmp~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 10, -1, 0.004420866489832007, ["mov     r10d, [p+38h]", "test    r10d, r10d", "jz      short loc_510E"], ["mov~r10d,[p+0]", "test~r10d,r10d", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 11, -1, 0.001399941055113469, ["cmp     word ptr [p+60h], 4", "jz      short loc_510E"], ["cmp~[ord ptr [p+0],0", "jz~FOO"]], [1, 0, 2, 0, 0, 2, 0, 0, 12, -1, 0.0, ["mov     r9d, 7", "mov     [p+60h], r9w"], ["mov~r9d,0", "mov~[p+0],r9w"]], [0, 0, 19, 0, 0, 2, 0, 1, 10, -1, 0.001399941055113469, ["mov     rbx, [sp_0+8]", "jmp     loc_4D98"], ["mov~rbx,[sp_0+0]", "jmp~FOO"]], [1, 0, 24, 0, 1, 8, 1, 2, 9, -1, 0.006189213085764809, ["mov     r8, [p+28h]; dir", "lea     rdx, [p+70h]; p", "lea     rsi, [p+68h]; p", "mov     ecx, 0FFFFFFFFh; fd", "mov     rdi, sp_0; sp_0", "call    fts_safe_changedir", "test    eax, eax", "jz      loc_50A0"], ["mov~r8,[p+0]", "lea~rdx,[p+0]", "lea~rsi,[p+0]", "mov~ecx,0", "mov~rdi,sp_0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 9, -1, 0.004641909814323607, ["mov     rdi, [sp_0+8]; ptr", "test    rdi, rdi", "jz      short loc_4CCA"], ["mov~rdi,[sp_0+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 6, 0, 1, 3, 0, 2, 9, -1, 0.0, ["mov     edi, [p+3Ch]; fd", "call    _close", "jmp     loc_4CA5"], ["mov~edi,[p+0]", "call~FOO", "jmp~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 10, -1, 0.0022104332449160036, ["nop"], ["nop"]], [1, 0, 1, 0, 1, 4, 1, 2, 11, -1, 7.368110816386678e-05, ["call    ___errno_location", "xor     ebp, ebp", "mov     dword ptr [rax], 0Ch", "jmp     loc_4CE7"], ["call~FOO", "xor~ebp,ebp", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 5, 0, 1, 5, 1, 2, 10, -1, 0.019157088122605363, ["mov     edi, 18h; size", "call    _malloc", "test    rax, rax", "mov     rbx, rax", "jz      loc_50B0"], ["mov~edi,0", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 3, 0, 1, 4, 1, 2, 12, -1, 0.005010315355142941, ["mov     rdi, rbx; ptr", "call    free", "test    r12, r12", "jz      loc_50B0"], ["mov~rdi,rbx", "call~FOO", "test~r12,r12", "jz~FOO"]], [0, 0, 4, 0, 1, 5, 1, 2, 11, -1, 0.001326259946949602, ["mov     rbx, [rdi+10h]", "call    free", "test    rbx, rbx", "mov     rdi, rbx", "jnz     short loc_4CB0"], ["mov~rbx,[rdi+0]", "call~FOO", "test~rbx,rbx", "mov~rdi,rbx", "jnz~FOO"]], [1, 0, 2, 0, 0, 1, 0, 0, 12, -1, 0.0002947244326554671, ["mov     qword ptr [sp_0+8], 0"], ["mov~[word ptr [sp_0+0],0"]], [2, 0, 22, 1, 2, 12, 1, 3, 8, -1, 0.012135278514588859, ["mov     rdx, [p+58h]", "lea     tmp, [p+0F8h]", "mov     rdi, [sp_0+20h]; dest", "mov     rsi, rbp; src", "mov     [p+40h], rdx", "add     rdx, 1; n", "call    _memmove", "mov     esi, 2Fh ; '/'; c", "mov     rdi, rbp; s", "call    _strrchr", "test    rax, rax", "jz      short loc_4EEF"], ["mov~rdx,[p+0]", "lea~tmp,[p+0]", "mov~rdi,[sp_0+0]", "mov~rsi,rbp", "mov~[p+0],rdx", "add~rdx,0", "call~FOO", "mov~esi,0", "mov~rdi,rbp", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 1, 1, 11, -1, 0.004420866489832007, ["test    ah, 2", "jz      loc_51EA"], ["test~ah,0", "jz~FOO"]], [0, 0, 21, 0, 0, 2, 0, 1, 9, -1, 0.003315649867374005, ["cmp     rbp, rax", "jz      loc_5160"], ["cmp~rbp,rax", "jz~FOO"]], [1, 0, 1, 0, 1, 6, 0, 1, 10, -1, 0.0008104921898025346, ["mov     edi, [sp_0+48h]; sp_0", "mov     r11d, 6", "lea     rsi, [sp_0+50h]; fts", "mov     [p+60h], r11w", "mov     rdx, p; ent", "call    leave_dir"], ["mov~edi,[sp_0+0]", "mov~r11d,0", "lea~rsi,[sp_0+0]", "mov~[p+0],r11w", "mov~rdx,p", "call~FOO"]], [2, 0, 1, 0, 2, 7, 1, 3, 7, -1, 0.0004052460949012673, ["mov     rdi, p; ptr", "xor     ebp, ebp", "call    free", "call    ___errno_location", "mov     dword ptr [rax], 0", "mov     qword ptr [sp_0], 0", "jmp     loc_4CE7"], ["mov~rdi,p", "xor~ebp,ebp", "call~FOO", "call~FOO", "mov~<TAG>,0", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 28, 0, 1, 6, 0, 2, 6, -1, 0.019709696433834363, ["mov     p, [tmp+8]", "mov     rdi, tmp; ptr", "mov     [sp_0], p", "call    free", "cmp     qword ptr [p+50h], 0FFFFFFFFFFFFFFFFh", "jz      loc_52C6"], ["mov~p,[tmp+0]", "mov~rdi,tmp", "mov~<TAG>,p", "call~FOO", "cmp~[word ptr [p+0],0", "jz~FOO"]], [0, 0, 18, 0, 2, 9, 0, 2, 10, -1, 0.001989389920424403, ["lea     r13, [rax+1]", "mov     rdi, r13; s", "call    _strlen", "lea     rdx, [rax+1]; n", "mov     r14, rax", "mov     rsi, r13; src", "mov     rdi, rbp; dest", "call    _memmove", "mov     [p+58h], r14"], ["lea~r13,[rax+0]", "mov~rdi,r13", "call~FOO", "lea~rdx,[rax+0]", "mov~r14,rax", "mov~rsi,r13", "mov~rdi,rbp", "call~FOO", "mov~[p+0],r14"]], [1, 0, 20, 0, 0, 2, 0, 1, 10, -1, 0.0011788977306218685, ["cmp     byte ptr [p+0F9h], 0", "jnz     loc_4ECD"], ["cmp~[yte ptr [p+0],0", "jnz~FOO"]], [1, 0, 25, 0, 1, 7, 1, 2, 8, -1, 0.018803418803418803, ["mov     esi, 3; type", "mov     rdi, sp_0; sp_0", "call    fts_build", "test    rax, rax", "mov     rbx, rax", "mov     [sp_0+8], rax", "jz      loc_50E2"], ["mov~esi,0", "mov~rdi,sp_0", "call~FOO", "test~rax,rax", "mov~rbx,rax", "mov~[sp_0+0],rax", "jz~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 7, -1, 0.0, ["pop     rbx", "mov     rax, rbp", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "retn"], ["pop~rbx", "mov~rax,rbp", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "retn"]], [1, 0, 17, 0, 0, 3, 0, 1, 6, -1, 0.0027262010020630708, ["cmp     ax, 0Bh", "mov     [sp_0], p", "jnz     short loc_4CE7"], ["cmp~ax,0", "mov~<TAG>,p", "jnz~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 9, -1, 0.003757736516357206, ["cmp     rax, 1", "jz      short loc_4CE7"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 10, -1, 0.04118773946360153, ["cmp     ax, 1", "jnz     loc_4CE7"], ["cmp~ax,0", "jnz~FOO"]], [0, 0, 4, 0, 1, 11, 0, 2, 11, -1, 0.00976274683171235, ["mov     rax, [p+68h]", "mov     rdi, [sp_0+50h]; table", "mov     rsi, rbx; entry", "mov     [rbx], rax", "mov     rax, [p+70h]", "mov     [rbx+10h], p", "mov     [rbx+8], rax", "call    hash_insert", "cmp     rbx, rax", "mov     sp_0, rax", "jz      loc_4CE7"], ["mov~rax,[p+0]", "mov~rdi,[sp_0+0]", "mov~rsi,rbx", "mov~<TAG>,rax", "mov~rax,[p+0]", "mov~[rbx+0],p", "mov~[rbx+0],rax", "call~FOO", "cmp~rbx,rax", "mov~sp_0,rax", "jz~FOO"]], [1, 0, 1, 0, 0, 5, 0, 1, 13, -1, 3.684055408193339e-05, ["mov     rax, [r12+10h]", "mov     esi, 2", "mov     [p+60h], si", "mov     [p+0], rax", "jmp     loc_4CE7"], ["mov~rax,[r12+0]", "mov~esi,0", "mov~[p+0],si", "mov~[p+0],rax", "jmp~FOO"]], [1, 0, 1, 0, 1, 7, 0, 2, 10, -1, 0.0003438451714313783, ["call    ___errno_location", "mov     eax, [rax]", "mov     ebx, 7", "mov     [p+60h], bx", "mov     [p+38h], eax", "mov     [sp_0], p", "jmp     loc_4CE7"], ["call~FOO", "mov~eax,<TAG>", "mov~ebx,0", "mov~[p+0],bx", "mov~[p+0],eax", "mov~<TAG>,p", "jmp~FOO"]], [0, 0, 17, 0, 0, 5, 0, 0, 9, -1, 0.01324049513704686, ["mov     rax, [sp_0+20h]", "mov     rbp, p", "mov     [p+30h], rax", "mov     [p+28h], rax", "movzx   eax, word ptr [p+60h]"], ["mov~rax,[sp_0+0]", "mov~rbp,p", "mov~[p+0],rax", "mov~[p+0],rax", "movzx~eax,[ord ptr [p+0]"]], [0, 0, 18, 0, 0, 1, 0, 1, 11, -1, 0.000663129973474801, ["jmp     loc_4EEF"], ["jmp~FOO"]], [1, 0, 16, 0, 0, 3, 0, 1, 10, -1, 0.055039787798408485, ["cmp     ax, 0Bh", "mov     [sp_0], p", "jz      loc_4D20"], ["cmp~ax,0", "mov~<TAG>,p", "jz~FOO"]], [3, 0, 17, 2, 1, 16, 0, 2, 9, -1, 0.036833185971117004, ["mov     rax, [p+8]", "lea     rsi, [p+0F8h]; src", "mov     rbp, p", "mov     rdi, [rax+40h]", "mov     rax, [rax+30h]", "cmp     byte ptr [rax+rdi-1], 2Fh ; '/'", "lea     rdx, [rdi-1]", "cmovz   rdi, rdx", "add     rdi, [sp_0+20h]", "mov     byte ptr [rdi], 2Fh ; '/'", "mov     rax, [p+58h]", "add     rdi, 1; dest", "lea     rdx, [rax+1]; n", "call    _memmove", "movzx   eax, word ptr [p+60h]", "jmp     check_for_dir"], ["mov~rax,[p+0]", "lea~rsi,[p+0]", "mov~rbp,p", "mov~rdi,[rax+0]", "mov~rax,[rax+0]", "cmp~[yte ptr [rax+0],0", "lea~rdx,[rdi-1]+0]", "cmovz~rdi,rdx", "add~rdi,[sp_0+0]", "mov~<TAG>,0", "mov~rax,[p+0]", "add~rdi,0", "lea~rdx,[rax+0]", "call~FOO", "movzx~eax,[ord ptr [p+0]", "jmp~FOO"]], [1, 0, 17, 0, 0, 3, 1, 1, 10, -1, 0.005260831122900088, ["or      word ptr [p+62h], 2", "movzx   eax, word ptr [p+60h]", "jmp     check_for_dir"], ["or~[ord ptr [p+0],0", "movzx~eax,[ord ptr [p+0]", "jmp~FOO"]], [2, 0, 27, 0, 1, 6, 0, 2, 5, -1, 0.009239610963748895, ["mov     edx, 1; follow", "mov     rsi, p; p", "call    fts_stat", "cmp     ax, 1", "mov     [p+60h], ax", "jz      loc_5120"], ["mov~edx,0", "mov~rsi,p", "call~FOO", "cmp~ax,0", "mov~[p+0],ax", "jz~FOO"]], [0, 0, 12, 0, 1, 6, 1, 2, 9, -1, 0.0028735632183908046, ["xor     edx, edx; follow", "mov     rsi, p; p", "mov     rdi, sp_0; sp_0", "call    fts_stat", "mov     [p+60h], ax", "jmp     loc_4F11"], ["xor~edx,edx", "mov~rsi,p", "mov~rdi,sp_0", "call~FOO", "mov~[p+0],ax", "jmp~FOO"]], [0, 0, 16, 0, 0, 1, 0, 0, 7, -1, 0.0029472443265546712, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [1, 0, 10, 0, 0, 2, 0, 1, 8, -1, 0.04121229983298949, ["cmp     qword ptr [p+50h], 0", "jnz     short loc_4F2B"], ["cmp~[word ptr [p+0],0", "jnz~FOO"]], [0, 0, 11, 0, 0, 2, 0, 1, 7, -1, 0.00518223794085863, ["mov     [sp_0], p", "jmp     loc_4F1B"], ["mov~<TAG>,p", "jmp~FOO"]], [1, 0, 19, 0, 0, 2, 1, 1, 14, -1, 0.002799882110226938, ["or      word ptr [p+62h], 2", "jmp     loc_51B5"], ["or~[ord ptr [p+0],0", "jmp~FOO"]], [0, 0, 9, 0, 0, 2, 0, 0, 9, -1, 0.0, ["mov     rax, [p+68h]", "mov     [sp_0+18h], rax"], ["mov~rax,[p+0]", "mov~[sp_0+0],rax"]], [1, 0, 15, 0, 0, 3, 0, 1, 8, -1, 0.01422045387562629, ["mov     rax, [p+98h]", "cmp     rax, 2", "jz      loc_5185"], ["mov~rax,[p+0]", "cmp~rax,0", "jz~FOO"]], [1, 0, 19, 0, 1, 6, 0, 2, 14, -1, 0.002799882110226938, ["call    ___errno_location", "mov     eax, [rax]", "mov     r8d, 7", "mov     [p+60h], r8w", "mov     [p+38h], eax", "jmp     loc_51B5"], ["call~FOO", "mov~eax,<TAG>", "mov~r8d,0", "mov~[p+0],r8w", "mov~[p+0],eax", "jmp~FOO"]], [1, 0, 25, 0, 0, 3, 1, 1, 10, 2, 0.005305039787798408, ["mov     eax, [sp_0+48h]", "test    al, 4", "jnz     short loc_51B5"], ["mov~eax,[sp_0+0]", "test~al,0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 36, 0, 0, 3, 1, 1, 7, -1, 0.019908635425876803, ["mov     sp_0, [r12+8]; ptr", "test    rdi, rdi", "jz      short loc_4D7A"], ["mov~sp_0,[r12+0]", "test~rdi,rdi", "jz~FOO"]], [1, 0, 35, 0, 0, 2, 1, 1, 8, -1, 0.007957559681697613, ["test    dh, 10h", "jz      short loc_4DB0"], ["test~dh,0", "jz~FOO"]], [1, 0, 13, 0, 1, 5, 1, 2, 9, -1, 0.009689065723548482, ["lea     rdi, [sp_0+58h]; fd_ring", "call    fd_ring_clear", "mov     edi, [sp_0+48h]", "test    dil, 4", "jz      short loc_51C3"], ["lea~rdi,[sp_0+0]", "call~FOO", "mov~edi,[sp_0+0]", "test~dil,0", "jz~FOO"]], [1, 0, 28, 0, 0, 3, 1, 0, 9, -1, 0.0024314765694076037, ["and     dh, 0EFh", "mov     [sp_0+48h], edx", "nop     word ptr [rax+rax+00000000h]"], ["and~dh,0", "mov~[sp_0+0],edx", "nop~[ord ptr [rax+0]"]], [0, 0, 28, 0, 1, 5, 1, 2, 10, -1, 0.003463012083701739, ["mov     rbx, [rdi+10h]", "call    free", "test    rbx, rbx", "mov     rdi, rbx", "jnz     short loc_4D60"], ["mov~rbx,[rdi+0]", "call~FOO", "test~rbx,rbx", "mov~rdi,rbx", "jnz~FOO"]], [1, 0, 26, 0, 0, 1, 0, 0, 11, -1, 0.00434718538166814, ["mov     qword ptr [sp_0+8], 0"], ["mov~[word ptr [sp_0+0],0"]], [1, 0, 99, 0, 0, 2, 0, 1, 4, 8, 0.017536103743000294, ["cmp     cx, 1", "jnz     short next"], ["cmp~cx,0", "jnz~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 9, -1, 0.021013852048334804, ["mov     qword ptr [sp_0+8], 0", "jmp     name"], ["mov~[word ptr [sp_0+0],0", "jmp~FOO"]], [1, 0, 22, 0, 1, 7, 2, 2, 10, -1, 0.004494547597995874, ["call    ___errno_location", "mov     rbx, [sp_0+8]", "mov     eax, [rax]", "or      word ptr [rbp+62h], 1", "test    p, p", "mov     [rbp+38h], eax", "jz      short loc_4D98"], ["call~FOO", "mov~rbx,[sp_0+0]", "mov~eax,<TAG>", "or~[ord ptr [rbp+0],0", "test~p,p", "mov~[rbp+0],eax", "jz~FOO"]], [1, 0, 27, 0, 0, 2, 0, 1, 8, 4, 0.010587975243147656, ["cmp     ax, 2", "jz      loc_519B"], ["cmp~ax,0", "jz~FOO"]], [1, 0, 69, 0, 0, 4, 0, 1, 7, 5, 0.011582670203359857, ["movzx   eax, word ptr [p+64h]", "mov     tmp, p", "cmp     ax, 4", "jnz     loc_4FA8"], ["movzx~eax,[ord ptr [p+0]", "mov~tmp,p", "cmp~ax,0", "jnz~FOO"]], [2, 0, 26, 0, 1, 7, 0, 2, 9, 3, 0.006483937518420277, ["mov     edx, 1; follow", "mov     rsi, p; p", "mov     rdi, sp_0; sp_0", "call    fts_stat", "cmp     ax, 1", "mov     [p+60h], ax", "jz      short loc_5216"], ["mov~edx,0", "mov~rsi,p", "mov~rdi,sp_0", "call~FOO", "cmp~ax,0", "mov~[p+0],ax", "jz~FOO"]], [0, 0, 69, 0, 0, 3, 1, 1, 5, 7, 0.03366489832007073, ["mov     rbx, [tmp+10h]", "test    p, p", "jnz     short loc_4BA8"], ["mov~rbx,[tmp+0]", "test~p,p", "jnz~FOO"]], [1, 0, 18, 0, 0, 3, 0, 1, 10, -1, 0.010610079575596816, ["mov     edi, 3", "mov     [p+64h], di", "jmp     name"], ["mov~edi,0", "mov~[p+0],di", "jmp~FOO"]]], "func_feature": [47, 60, 143, 0, 118, 180, 3, 471, 0.00738, 2, 5], "succs": [[0, 2], [0], [111], [25, 23], [27, 3], [81, 13], [68, 5], [106, 12], [103, 7], [50, 11], [9], [57], [21, 14], [81], [73, 15], [20], [15], [15], [], [18, 47], [24], [20, 22], [25, 20], [20], [30, 31], [24], [24], [24], [32], [33, 28], [37], [37], [98, 101], [32], [72, 36], [34, 114], [53, 38], [81, 39], [72, 43], [], [41, 39], [19, 39], [59, 39], [81], [49, 55], [97, 44], [48, 93], [110, 46], [50, 116], [54], [56, 104], [17], [17, 51], [72], [92, 87], [54], [104, 57], [64, 65], [81], [58, 60], [58, 61], [58], [111], [112, 62], [66, 75], [64], [70], [81], [67, 85], [67, 86], [70, 71], [75], [88, 74], [16, 52], [78, 79], [81], [81], [8, 76], [88], [89, 78], [42, 111], [], [81, 95], [81, 103], [96, 81], [81, 69], [81], [81], [90], [88], [100, 84], [90], [90], [82, 45], [84], [100], [99, 6], [96], [117], [6], [83, 94], [117], [29, 117], [], [80, 105], [107, 63], [26, 4], [108], [108, 109], [80], [10, 116], [91], [1, 111], [91, 115], [113, 116], [117, 102], [35, 77], [91]], "fname": "fts_read", "n_num": 118}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[4, 0, 0, 2, 1, 6, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "call    ___errno_location", "mov     dword ptr [rax], 16h", "mov     eax, 1", "add     rsp, 8", "retn"], ["sub~rsp,0", "call~FOO", "mov~<TAG>,0", "mov~eax,0", "add~rsp,0", "retn"]], [1, 0, 2, 0, 0, 2, 0, 1, 0, 0, 0.0, ["cmp     edx, 4", "ja      short loc_5360"], ["cmp~edx,0", "ja~FOO"]], [0, 0, 0, 0, 0, 3, 1, 0, 1, 0, 0.0, ["mov     [p+64h], dx", "xor     eax, eax", "retn"], ["mov~[p+0],dx", "xor~eax,eax", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 2, 3, 11, 0.0, 0, 2], "succs": [[], [0, 2], []], "fname": "fts_set", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[0, 0, 9, 0, 1, 4, 0, 1, 0, 0, 0.07478632478632478, ["mov     edi, [sp_0+2Ch]", "lea     rsi, dir+1; \".\"", "call    ___openat_2", "mov     r12d, eax"], ["mov~edi,[sp_0+0]", "lea~rsi,<TAG>", "call~FOO", "mov~r12d,eax"]], [4, 0, 11, 1, 0, 6, 3, 1, 9, 5, 0.17094017094017094, ["mov     edx, eax", "shl     edx, 0Dh", "and     edx, 20000h", "or      edx, 10900h", "test    ah, 2", "jz      short loc_54E8"], ["mov~edx,eax", "shl~edx,0", "and~edx,0", "or~edx,0", "test~ah,0", "jz~FOO"]], [1, 0, 1, 0, 0, 3, 1, 1, 12, -1, 0.005698005698005698, ["mov     qword ptr [sp_0+8], 0", "xor     eax, eax", "jmp     loc_542A"], ["mov~[word ptr [sp_0+0],0", "xor~eax,eax", "jmp~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 11, 3, 0.15384615384615385, ["test    r12d, r12d", "js      short loc_54FD"], ["test~r12d,r12d", "js~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 6, 8, 0.1908831908831909, ["cmp     qword ptr [p+50h], 0", "jnz     short loc_541C"], ["cmp~[word ptr [p+0],0", "jnz~FOO"]], [2, 0, 17, 0, 0, 3, 0, 1, 5, 9, 0.16809116809116809, ["cmp     r13d, 1000h", "mov     ebp, 1", "jnz     short loc_5403"], ["cmp~r13d,0", "mov~ebp,0", "jnz~FOO"]], [2, 0, 16, 0, 0, 2, 1, 0, 6, 9, 0.0, ["or      dword ptr [sp_0+48h], 1000h", "mov     ebp, 2"], ["or~[word ptr [sp_0+0],0", "mov~ebp,0"]], [0, 0, 9, 0, 1, 6, 1, 2, 10, 4, 0.07478632478632478, ["lea     rdi, dir+1; file", "mov     esi, edx; flags", "xor     eax, eax", "call    open_safer", "mov     r12d, eax", "jmp     short loc_5488"], ["lea~rdi,<TAG>", "mov~esi,edx", "xor~eax,eax", "call~FOO", "mov~r12d,eax", "jmp~FOO"]], [1, 0, 14, 0, 0, 3, 0, 1, 7, 7, 0.17094017094017094, ["mov     rax, [p+28h]", "cmp     byte ptr [rax], 2Fh ; '/'", "jz      short loc_541C"], ["mov~rax,[p+0]", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 13, 0, 0, 3, 1, 1, 8, 6, 0.17236467236467237, ["mov     eax, [sp_0+48h]", "test    al, 4", "jz      short loc_5460"], ["mov~eax,[sp_0+0]", "test~al,0", "jz~FOO"]], [0, 0, 1, 0, 1, 6, 1, 2, 14, 0, 0.002136752136752137, ["mov     ebx, [r14]", "mov     edi, r12d; fd", "call    _close", "xor     eax, eax", "mov     [r14], ebx", "jmp     loc_542A"], ["mov~ebx,<TAG>", "mov~edi,r12d", "call~FOO", "xor~eax,eax", "mov~<TAG>,ebx", "jmp~FOO"]], [0, 0, 4, 0, 1, 4, 1, 2, 13, 1, 0.04914529914529915, ["mov     edi, r12d; fd", "call    _fchdir", "test    eax, eax", "jnz     short loc_550C"], ["mov~edi,r12d", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 27, 0, 1, 11, 1, 2, 0, 14, 0.0, ["push    r14", "push    r13", "mov     r13d, esi", "push    r12", "push    rbp", "push    rbx", "mov     rbx, sp_0", "call    ___errno_location", "test    r13d, 0FFFFEFFFh", "mov     r14, rax", "jnz     loc_54C0"], ["push~r14", "push~r13", "mov~r13d,esi", "push~r12", "push~rbp", "push~rbx", "mov~rbx,sp_0", "call~FOO", "test~r13d,0", "mov~r14,rax", "jnz~FOO"]], [1, 0, 6, 0, 1, 6, 1, 2, 12, 2, 0.11396011396011396, ["mov     esi, ebp; type", "mov     rdi, sp_0; sp_0", "call    fts_build", "test    byte ptr [sp_0+49h], 2", "mov     [sp_0+8], rax", "jnz     short loc_54D0"], ["mov~esi,ebp", "mov~rdi,sp_0", "call~FOO", "test~[yte ptr [sp_0+0],0", "mov~[sp_0+0],rax", "jnz~FOO"]], [1, 1, 25, 0, 0, 4, 1, 1, 1, 13, 0.03418803418803419, ["mov     r12, [sp_0]", "mov     dword ptr [rax], 0", "test    byte ptr [sp_0+49h], 20h", "jnz     loc_5450"], ["mov~r12,<TAG>", "mov~<TAG>,0", "test~[yte ptr [sp_0+0],<STR>", "jnz~FOO"]], [0, 0, 1, 0, 1, 4, 0, 1, 7, -1, 0.01566951566951567, ["mov     esi, ebp; type", "mov     rdi, sp_0; sp_0", "call    fts_build", "mov     [sp_0+8], rax"], ["mov~esi,ebp", "mov~rdi,sp_0", "call~FOO", "mov~[sp_0+0],rax"]], [0, 0, 2, 0, 1, 2, 0, 1, 14, -1, 0.0014245014245014246, ["mov     edi, r12d; fd", "call    _close"], ["mov~edi,r12d", "call~FOO"]], [0, 0, 0, 0, 0, 6, 0, 0, 2, -1, 0.0, ["pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "retn"], ["pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 14, -1, 0.0035612535612535613, ["mov     rax, [sp_0+8]", "jmp     loc_542A"], ["mov~rax,[sp_0+0]", "jmp~FOO"]], [1, 0, 1, 0, 0, 3, 1, 1, 1, -1, 0.0014245014245014246, ["mov     dword ptr [rax], 16h", "xor     eax, eax", "jmp     loc_542A"], ["mov~<TAG>,0", "xor~eax,eax", "jmp~FOO"]], [1, 0, 2, 0, 1, 5, 0, 2, 13, -1, 0.02492877492877493, ["mov     edx, 1; chdir_down_one", "mov     esi, r12d; fd", "mov     rdi, sp_0; sp_0", "call    cwd_advance_fd", "jmp     short loc_54B5"], ["mov~edx,0", "mov~esi,r12d", "mov~rdi,sp_0", "call~FOO", "jmp~FOO"]], [1, 0, 24, 0, 0, 3, 0, 1, 2, 12, 0.06410256410256411, ["movzx   eax, word ptr [p+60h]", "cmp     ax, 9", "jz      short loc_5438"], ["movzx~eax,[ord ptr [p+0]", "cmp~ax,0", "jz~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 3, -1, 0.0, ["pop     sp_0", "mov     rax, [p+10h]", "pop     rbp", "pop     p", "pop     instr", "pop     r14", "retn"], ["pop~sp_0", "mov~rax,[p+0]", "pop~rbp", "pop~p", "pop~instr", "pop~r14", "retn"]], [1, 0, 22, 0, 0, 2, 0, 1, 3, 11, 0.08974358974358974, ["cmp     ax, 1", "jnz     loc_5450"], ["cmp~ax,0", "jnz~FOO"]], [0, 0, 20, 0, 0, 3, 1, 1, 4, 10, 0.11253561253561255, ["mov     rdi, [sp_0+8]; ptr", "test    rdi, rdi", "jz      short loc_53E9"], ["mov~rdi,[sp_0+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 19, 0, 0, 1, 0, 0, 5, 11, 0.007122507122507123, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [0, 0, 0, 0, 0, 7, 1, 0, 2, -1, 0.0, ["pop     sp_0", "xor     eax, eax", "pop     rbp", "pop     p", "pop     instr", "pop     r14", "retn"], ["pop~sp_0", "xor~eax,eax", "pop~rbp", "pop~p", "pop~instr", "pop~r14", "retn"]], [0, 0, 19, 0, 1, 5, 1, 2, 6, 10, 0.025641025641025644, ["mov     rbp, [rdi+10h]", "call    free", "test    rbp, rbp", "mov     rdi, rbp", "jnz     short loc_53D8"], ["mov~rbp,[rdi+0]", "call~FOO", "test~rbp,rbp", "mov~rdi,rbp", "jnz~FOO"]]], "func_feature": [10, 17, 30, 0, 28, 39, 0, 115, 0.06171, 1, 1], "succs": [[3], [0, 7], [17], [2, 13], [8, 15], [4, 6], [4], [3], [9, 15], [1, 15], [17], [16, 10], [19, 14], [11, 20], [26, 21], [17], [18], [], [17], [17], [18], [22, 23], [], [24, 26], [25, 5], [27], [], [27, 5]], "fname": "fts_children", "n_num": 28}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[2, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0.0, ["mov     byte ptr [ir+1Ch], 1", "mov     qword ptr [ir+14h], 0", "mov     [ir], esi", "mov     [ir+4], esi", "mov     [ir+8], esi", "mov     [ir+0Ch], esi", "mov     [ir+10h], esi", "retn"], ["mov~[yte ptr [ir+0],0", "mov~[word ptr [ir+0],0", "mov~<TAG>,esi", "mov~[ir+0],esi", "mov~[ir+0],esi", "mov~[ir+0],esi", "mov~[ir+0],esi", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 8, 0.0, 0, 0], "succs": [[]], "fname": "i_ring_init", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["movzx   eax, byte ptr [ir+1Ch]", "retn"], ["movzx~eax,[yte ptr [ir+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 2, 2, 0.0, 0, 0], "succs": [[]], "fname": "i_ring_empty", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     byte ptr [ir+1Ch], 0", "retn"], ["mov~[yte ptr [ir+0],0", "retn"]], [2, 0, 2, 1, 0, 14, 2, 1, 0, 0, 0.0, ["movzx   edx, byte ptr [ir+1Ch]", "mov     ecx, [ir+14h]", "xor     edx, 1", "movzx   edx, dl", "add     ecx, edx", "and     ecx, 3", "mov     eax, ecx", "lea     r8, [ir+old_val*4]", "mov     eax, [r8]", "mov     [r8], esi", "mov     esi, [ir+18h]", "mov     [ir+14h], ecx", "cmp     esi, ecx", "jnz     short loc_6530"], ["movzx~edx,[yte ptr [ir+0]", "mov~ecx,[ir+0]", "xor~edx,0", "movzx~edx,dl", "add~ecx,edx", "and~ecx,0", "mov~eax,ecx", "lea~r8,<TAG>", "mov~eax,<TAG>", "mov~<TAG>,esi", "mov~esi,[ir+0]", "mov~[ir+0],ecx", "cmp~esi,ecx", "jnz~FOO"]], [1, 0, 1, 1, 0, 3, 1, 0, 1, 0, 0.0, ["add     edx, esi", "and     edx, 3", "mov     [ir+18h], edx"], ["add~edx,esi", "and~edx,0", "mov~[ir+0],edx"]]], "func_feature": [0, 3, 1, 0, 3, 3, 1, 19, 0.0, 0, 2], "succs": [[], [0, 2], [0]], "fname": "i_ring_push", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     byte ptr [ir+1Ch], 1", "retn"], ["mov~[yte ptr [ir+0],0", "retn"]], [0, 0, 2, 0, 0, 8, 0, 1, 1, -1, 0.16666666666666666, ["mov     eax, [ir+14h]", "mov     esi, [ir+10h]", "lea     rcx, [ir+rax*4]", "mov     rdx, rax", "mov     eax, [rcx]", "mov     [rcx], esi", "cmp     edx, [ir+18h]", "jz      short loc_6570"], ["mov~eax,[ir+0]", "mov~esi,[ir+0]", "lea~rcx,<TAG>", "mov~rdx,rax", "mov~eax,<TAG>", "mov~<TAG>,esi", "cmp~edx,[ir+0]", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     byte ptr [ir+1Ch], 0", "jnz     short loc_6575"], ["cmp~[yte ptr [ir+0],0", "jnz~FOO"]], [2, 0, 0, 1, 0, 4, 1, 0, 2, -1, 0.0, ["add     edx, 3", "and     edx, 3", "mov     [ir+14h], edx", "retn"], ["add~edx,0", "and~edx,0", "mov~[ir+0],edx", "retn"]], [1, 0, 0, 1, 1, 2, 0, 1, 1, 0, 0.0, ["sub     rsp, 8", "call    _abort"], ["sub~rsp,0", "call~FOO"]]], "func_feature": [1, 1, 3, 0, 5, 4, 2, 18, 0.03333, 0, 2], "succs": [[], [0, 3], [1, 4], [], []], "fname": "i_ring_pop", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 2, 7, 2, 3, 1, 0, 0.3333333333333333, ["xor     eax, eax", "call    _open", "mov     edi, eax; fd", "call    fd_safer", "mov     rcx, [rsp+58h+var_40]", "xor     rcx, fs:28h", "jnz     short loc_65E9"], ["xor~eax,eax", "call~FOO", "mov~edi,eax", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 0, 3, 0, 0, 7, 0, 1, 1, 0, 0.0, ["lea     rax, [rsp+58h+arg_0]", "mov     [rsp+58h+ap.gp_offset], 10h", "mov     edx, dword ptr [rsp+58h+var_28]", "mov     [rsp+58h+ap.overflow_arg_area], rax", "lea     rax, [rsp+58h+var_38]", "mov     [rsp+58h+ap.reg_save_area], rax", "jmp     short loc_65A1"], ["lea~rax,[rsp+0]", "mov~<TAG>,0", "mov~edx,[word ptr [rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 1, 4, 1, 0, 8, 3, 1, 0, 0, 0.0, ["sub     rsp, 58h", "mov     [rsp+58h+var_28], rdx", "xor     edx, edx", "mov     rax, fs:28h", "mov     [rsp+58h+var_40], rax", "xor     eax, eax", "test    sil, 40h", "jnz     short loc_65C8"], ["sub~rsp,<STR>", "mov~[rsp+0],rdx", "xor~edx,edx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~sil,0", "jnz~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 2, 0, 0.0, ["add     rsp, 58h", "retn"], ["add~rsp,<STR>", "retn"]]], "func_feature": [3, 5, 6, 3, 5, 5, 5, 25, 0.06667, 1, 2], "succs": [[], [0, 4], [1], [1, 2], []], "fname": "open_safer", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, p", "retn"], ["mov~rax,p", "retn"]], [3, 0, 2, 5, 0, 12, 1, 1, 1, 0, 0.5, ["mov     rax, i", "sub     p, 1", "mul     rsi", "shr     rdx, 3", "lea     rax, [rdx+rdx*4]", "add     rax, rax", "sub     i, rax", "add     edi, 30h ; '0'", "test    rdx, rdx", "mov     [p], dil", "mov     rdi, rdx", "jnz     short loc_78C8"], ["mov~rax,i", "sub~p,0", "mul~,rsi", "shr~rdx,0", "lea~rax,<TAG>", "add~rax,rax", "sub~i,rax", "add~edi,0", "test~rdx,rdx", "mov~<TAG>,dil", "mov~rdi,rdx", "jnz~FOO"]], [2, 0, 2, 0, 0, 4, 0, 0, 0, 0, 0.0, ["lea     p, [buf+14h]", "mov     byte ptr [buf+14h], 0", "mov     buf, 0CCCCCCCCCCCCCCCDh", "nop     word ptr [rax+rax+00h]"], ["lea~p,[buf+0]", "mov~[yte ptr [buf+0],0", "mov~buf,0", "nop~[ord ptr [rax+0]"]]], "func_feature": [0, 1, 1, 0, 3, 3, 3, 18, 0.16667, 0, 5], "succs": [[], [0, 1], [1]], "fname": "umaxtostr", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[0, 0, 21, 0, 0, 6, 3, 1, 0, 0, 0.036585365853658534, ["mov     edx, [pwd+10h]", "xor     r10d, r10d", "xor     ebp, ebp", "test    r9b, r9b", "mov     [rsp+88h+unum], edx", "jnz     loc_7B88"], ["mov~edx,[pwd+0]", "xor~r10d,r10d", "xor~ebp,ebp", "test~r9b,r9b", "mov~[rsp+0],edx", "jnz~FOO"]], [0, 0, 27, 0, 1, 6, 1, 2, 6, -1, 0.03484320557491289, ["mov     rdi, u; string", "mov     byte ptr [rsp+88h+var_70], r9b", "call    _getpwnam", "test    pwd, pwd", "movzx   r9d, byte ptr [rsp+88h+var_70]", "jz      short loc_7AA0"], ["mov~rdi,u", "mov~[yte ptr [rsp+0],r9b", "call~FOO", "test~pwd,pwd", "movzx~r9d,[yte ptr [rsp+0]", "jz~FOO"]], [1, 0, 12, 0, 0, 3, 0, 1, 5, -1, 0.10569105691056911, ["mov     rax, [rsp+88h+name]", "cmp     byte ptr [rax], 2Bh ; '+'", "jz      loc_7AF0"], ["mov~rax,<TAG>", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 4, -1, 0.20150987224157957, ["cmp     [rsp+88h+var_71], 0", "jz      loc_7C40"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 9, 0, 1, 8, 2, 2, 6, -1, 0.052555168408826944, ["mov     rdi, [rsp+88h+name]; s", "lea     rcx, [rsp+88h+tmp]; val", "lea     r8, aReportBugsToS+16h; valid_suffixes", "xor     esi, esi; ptr", "mov     edx, 0Ah; strtol_base", "call    xstrtoul", "test    eax, eax", "jz      short loc_7B48"], ["mov~rdi,<TAG>", "lea~rcx,[rsp+0]", "lea~r8,<TAG>", "xor~esi,esi", "mov~edx,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 11, 0, 1, 4, 1, 2, 6, -1, 0.03193960511033682, ["mov     rdi, [rsp+88h+name]; name", "call    _getgrnam", "test    grp, grp", "jz      loc_7AF0"], ["mov~rdi,<TAG>", "call~FOO", "test~grp,grp", "jz~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 58h", "pop     u", "pop     rbp", "pop     uid", "pop     gid", "pop     username", "pop     groupname", "retn"], ["add~rsp,<STR>", "pop~u", "pop~rbp", "pop~uid", "pop~gid", "pop~username", "pop~groupname", "retn"]], [1, 0, 2, 0, 2, 9, 2, 3, 3, -1, 0.04645760743321719, ["mov     rdi, u; ptr", "call    free", "xor     edi, edi; p", "mov     edx, 5; category", "mov     rsi, rbp; msgid", "call    _dcgettext", "mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "jnz     loc_7C66"], ["mov~rdi,u", "call~FOO", "xor~edi,edi", "mov~edx,0", "mov~rsi,rbp", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 5, -1, 0.0743321718931475, ["test    error_msg, error_msg", "jnz     loc_7B28"], ["test~error_msg,error_msg", "jnz~FOO"]], [0, 0, 20, 0, 1, 6, 1, 2, 8, -1, 0.020905923344947737, ["mov     eax, [pwd+14h]", "mov     edi, eax; gid", "mov     [rsp+88h+gnum], eax", "call    _getgrgid", "test    grp, grp", "jz      loc_7C50"], ["mov~eax,[pwd+0]", "mov~edi,eax", "mov~[rsp+0],eax", "call~FOO", "test~grp,grp", "jz~FOO"]], [0, 0, 16, 0, 1, 4, 0, 2, 8, -1, 0.051103368176538905, ["mov     [rsp+88h+var_70], r10", "call    _endpwent", "mov     r10, [rsp+88h+var_70]", "jmp     loc_797A"], ["mov~[rsp+0],r10", "call~FOO", "mov~r10,[rsp+0]", "jmp~FOO"]], [0, 0, 17, 0, 2, 6, 1, 3, 10, -1, 0.029616724738675958, ["call    xstrdup", "xor     ebp, ebp", "mov     [rsp+88h+var_70], rax", "call    _endgrent", "mov     r10, [rsp+88h+var_70]", "jmp     loc_7A8A"], ["call~FOO", "xor~ebp,ebp", "mov~[rsp+0],rax", "call~FOO", "mov~r10,[rsp+0]", "jmp~FOO"]], [2, 0, 17, 0, 0, 11, 0, 0, 8, -1, 0.0, ["mov     rax, [rsp+88h+tmp]", "movzx   esi, [rsp+88h+var_71]", "mov     edx, 0FFFFFFFFh", "mov     ecx, [rsp+88h+unum]", "cmp     rax, rdx", "cmovbe  ecx, eax", "cmova   esi, r9d", "mov     eax, 0", "mov     [rsp+88h+unum], ecx", "mov     r9d, esi", "cmovbe  rbp, rax"], ["mov~rax,[rsp+0]", "movzx~esi,[rsp+0]", "mov~edx,0", "mov~ecx,[rsp+0]", "cmp~rax,rdx", "cmovbe~ecx,eax", "cmova~esi,r9d", "mov~eax,0", "mov~[rsp+0],ecx", "mov~r9d,esi", "cmovbe~rbp,rax"]], [1, 0, 18, 0, 1, 11, 2, 2, 7, -1, 0.013937282229965157, ["lea     rcx, [rsp+88h+tmp]; val", "lea     r8, aReportBugsToS+16h; valid_suffixes", "xor     esi, esi; ptr", "mov     edx, 0Ah; strtol_base", "mov     rdi, u; s", "mov     byte ptr [rsp+88h+var_70], r9b", "call    xstrtoul", "test    eax, eax", "lea     rbp, aInvalidUser; \"invalid user\"", "movzx   r9d, byte ptr [rsp+88h+var_70]", "jnz     short loc_7C1E"], ["lea~rcx,[rsp+0]", "lea~r8,<TAG>", "xor~esi,esi", "mov~edx,0", "mov~rdi,u", "mov~[yte ptr [rsp+0],r9b", "call~FOO", "test~eax,eax", "lea~rbp,<TAG>", "movzx~r9d,[yte ptr [rsp+0]", "jnz~FOO"]], [0, 0, 18, 0, 0, 1, 0, 0, 9, -1, 0.008710801393728223, ["mov     rdi, [grp]; string"], ["mov~rdi,<TAG>"]], [0, 0, 20, 0, 0, 2, 1, 1, 6, -1, 0.07897793263646923, ["test    r9b, r9b", "jz      loc_7BC0"], ["test~r9b,r9b", "jz~FOO"]], [1, 0, 28, 0, 0, 5, 2, 1, 5, -1, 0.10220673635307781, ["test    r10, r10", "setnz   r9b", "and     r9d, eax", "cmp     byte ptr [u], 2Bh ; '+'", "jz      short loc_7AA0"], ["test~r10,r10", "setnz~r9b", "and~r9d,eax", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 7, -1, 0.018292682926829267, ["mov     eax, [grp+10h]"], ["mov~eax,[grp+0]"]], [0, 0, 4, 0, 2, 5, 0, 2, 7, -1, 0.008420441347270616, ["call    _endgrent", "mov     rdi, [rsp+88h+name]; string", "lea     rbp, aInvalidGroup; \"invalid group\"", "call    xstrdup", "mov     r10, rax"], ["call~FOO", "mov~rdi,<TAG>", "lea~rbp,<TAG>", "call~FOO", "mov~r10,rax"]], [1, 0, 8, 0, 0, 4, 0, 1, 7, -1, 0.018002322880371662, ["mov     rax, [rsp+88h+tmp]", "mov     edx, 0FFFFFFFFh", "cmp     rax, rdx", "ja      short loc_7B10"], ["mov~rax,[rsp+0]", "mov~edx,0", "cmp~rax,rdx", "ja~FOO"]], [2, 0, 35, 0, 1, 8, 0, 2, 2, 2, 0.019454123112659698, ["mov     [rsp+88h+name], separator", "lea     separator, [ulen+1]; s", "call    xmemdup", "mov     r10, [rsp+88h+name]", "mov     rbx, rax", "mov     byte ptr [u+ulen], 0", "cmp     byte ptr [r10+1], 0", "jnz     loc_7B60"], ["mov~<TAG>,separator", "lea~separator,[ulen+0]", "call~FOO", "mov~r10,<TAG>", "mov~rbx,rax", "mov~<TAG>,0", "cmp~[yte ptr [r10+0],0", "jnz~FOO"]], [0, 0, 39, 1, 0, 3, 0, 1, 1, 3, 0.017034456058846303, ["mov     rbp, separator", "sub     rbp, spec", "jnz     loc_7A10"], ["mov~rbp,separator", "sub~rbp,spec", "jnz~FOO"]], [0, 0, 3, 0, 1, 3, 0, 2, 6, -1, 0.042682926829268296, ["mov     rdi, r10; ptr", "call    free", "jmp     loc_79D6"], ["mov~rdi,r10", "call~FOO", "jmp~FOO"]], [1, 0, 31, 1, 0, 6, 1, 1, 3, 1, 0.020518776616337595, ["mov     u, r10", "add     rax, 1", "setnz   [rsp+88h+var_71]", "test    u, u", "mov     [rsp+88h+name], g", "jz      loc_7C6B"], ["mov~u,r10", "add~rax,0", "setnz~[rsp+0]", "test~u,u", "mov~<TAG>,g", "jz~FOO"]], [0, 0, 16, 0, 1, 6, 1, 2, 8, -1, 0.018583042973286876, ["xor     r10d, r10d", "mov     [rsp+88h+var_71], r9b", "mov     [rsp+88h+var_70], r10", "call    _endpwent", "mov     r10, [rsp+88h+var_70]", "jmp     loc_797A"], ["xor~r10d,r10d", "mov~[rsp+0],r9b", "mov~[rsp+0],r10", "call~FOO", "mov~r10,[rsp+0]", "jmp~FOO"]], [0, 0, 31, 0, 0, 2, 1, 1, 3, -1, 0.05274874177313201, ["test    rbx, rbx", "jz      loc_7B3A"], ["test~rbx,rbx", "jz~FOO"]], [0, 0, 32, 0, 1, 5, 0, 2, 2, -1, 0.01955090979481223, ["mov     [rsp+88h+name], separator", "call    xstrdup", "mov     r10, [rsp+88h+name]", "mov     rbx, rax", "jmp     loc_7A33"], ["mov~<TAG>,separator", "call~FOO", "mov~r10,<TAG>", "mov~rbx,rax", "jmp~FOO"]], [0, 0, 5, 0, 0, 1, 1, 0, 3, -1, 0.004548974061169183, ["xor     ebx, ebx"], ["xor~ebx,ebx"]], [1, 0, 19, 0, 0, 2, 0, 1, 2, -1, 0.017905536198219125, ["cmp     byte ptr [separator+1], 0", "jz      loc_7B38"], ["cmp~[yte ptr [separator+0],0", "jz~FOO"]], [0, 0, 4, 0, 2, 5, 0, 2, 8, -1, 0.0078397212543554, ["mov     [rsp+88h+gnum], eax", "call    _endgrent", "mov     rdi, [rsp+88h+name]; string", "call    xstrdup", "mov     r10, rax"], ["mov~[rsp+0],eax", "call~FOO", "mov~rdi,<TAG>", "call~FOO", "mov~r10,rax"]], [0, 0, 5, 0, 0, 1, 0, 1, 8, -1, 0.0023228803716608595, ["jmp     loc_79A7"], ["jmp~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 4, -1, 0.013937282229965157, ["xor     r10d, r10d", "jmp     loc_79BC"], ["xor~r10d,r10d", "jmp~FOO"]], [0, 0, 29, 0, 0, 3, 1, 1, 4, -1, 0.017615176151761516, ["test    g, g", "setz    al", "jmp     loc_7A4E"], ["test~g,g", "setz~al", "jmp~FOO"]], [3, 0, 29, 0, 0, 3, 0, 0, 4, -1, 0.056136275648470776, ["mov     [rsp+88h+var_71], 0", "mov     eax, 1", "mov     [rsp+88h+name], 0"], ["mov~[rsp+0],0", "mov~eax,0", "mov~<TAG>,0"]], [1, 0, 16, 0, 1, 7, 1, 2, 7, -1, 0.0627177700348432, ["xor     r10d, r10d", "mov     [rsp+88h+var_71], 0", "lea     rbp, aInvalidSpec; \"invalid spec\"", "mov     [rsp+88h+var_70], r10", "call    _endpwent", "mov     r10, [rsp+88h+var_70]", "jmp     loc_797A"], ["xor~r10d,r10d", "mov~[rsp+0],0", "lea~rbp,<TAG>", "mov~[rsp+0],r10", "call~FOO", "mov~r10,[rsp+0]", "jmp~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 6, -1, 0.011614401858304297, ["jmp     loc_79BC"], ["jmp~FOO"]], [2, 1, 42, 1, 0, 23, 2, 1, 0, 4, 0.0, ["push    r15", "push    r14", "mov     r10, separator", "push    r13", "push    r12", "mov     r13, gid", "push    rbp", "push    rbx", "mov     r12, uid", "mov     r14, username", "mov     r15, groupname", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "mov     eax, [uid]", "test    separator, separator", "mov     [rsp+88h+unum], eax", "mov     eax, [gid]", "mov     qword ptr [groupname], 0", "mov     qword ptr [username], 0", "mov     [rsp+88h+gnum], eax", "jz      loc_7AD0"], ["push~r15", "push~r14", "mov~r10,separator", "push~r13", "push~r12", "mov~r13,gid", "push~rbp", "push~rbx", "mov~r12,uid", "mov~r14,username", "mov~r15,groupname", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~eax,<TAG>", "test~separator,separator", "mov~[rsp+0],eax", "mov~eax,<TAG>", "mov~<TAG>,0", "mov~<TAG>,0", "mov~[rsp+0],eax", "jz~FOO"]], [0, 0, 18, 0, 1, 5, 0, 2, 9, -1, 0.008710801393728223, ["mov     edi, [rsp+88h+gnum]; i", "lea     rsi, [rsp+88h+buf]; buf", "call    umaxtostr", "mov     rdi, rax", "jmp     loc_7BA2"], ["mov~edi,[rsp+0]", "lea~rsi,[rsp+0]", "call~FOO", "mov~rdi,rax", "jmp~FOO"]], [0, 0, 3, 0, 0, 8, 2, 0, 2, -1, 0.023519163763066203, ["mov     eax, [rsp+88h+unum]", "xor     ebp, ebp", "mov     [uid], eax", "mov     eax, [rsp+88h+gnum]", "mov     [gid+0], eax", "mov     [username], rbx", "xor     ebx, ebx", "mov     [groupname], r10"], ["mov~eax,[rsp+0]", "xor~ebp,ebp", "mov~<TAG>,eax", "mov~eax,[rsp+0]", "mov~[gid+0],eax", "mov~<TAG>,rbx", "xor~ebx,ebx", "mov~<TAG>,r10"]], [1, 0, 33, 0, 0, 3, 1, 1, 1, -1, 0.006194347657762292, ["xor     ebx, ebx", "cmp     byte ptr [spec], 0", "jz      loc_79BC"], ["xor~ebx,ebx", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 16, 0, 0, 3, 2, 1, 4, 0, 0.016260162601626015, ["xor     r10d, r10d", "xor     ebp, ebp", "jmp     loc_797A"], ["xor~r10d,r10d", "xor~ebp,ebp", "jmp~FOO"]], [1, 0, 16, 1, 0, 6, 3, 0, 3, -1, 0.020905923344947737, ["add     r10, 1", "setnz   [rsp+88h+var_71]", "mov     [rsp+88h+name], g", "xor     ebx, ebx", "xor     r10d, r10d", "xor     ebp, ebp"], ["add~r10,0", "setnz~[rsp+0]", "mov~<TAG>,g", "xor~ebx,ebx", "xor~r10d,r10d", "xor~ebp,ebp"]]], "func_feature": [21, 34, 53, 2, 43, 61, 2, 211, 0.03244, 5, 5], "succs": [[9, 10], [0, 15], [4, 5], [8, 2], [18, 19], [17, 4], [], [40, 6], [35, 22], [37, 14], [3], [10], [24], [24, 12], [11], [34, 13], [1, 15], [29], [22], [18, 30], [25, 23], [28, 20], [7], [32, 41], [3], [33, 31], [25], [31], [42, 27], [38], [29], [38], [16], [16], [3], [38], [21, 39], [11], [7], [26, 38], [], [3], [3]], "fname": "parse_with_separator", "n_num": 43}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[1, 0, 0, 1, 0, 9, 0, 0, 0, 0, 0.0, ["add     rsp, 18h", "mov     rax, rbp", "pop     spec", "pop     rbp", "pop     colon", "pop     gid", "pop     username", "pop     groupname", "retn"], ["add~rsp,0", "mov~rax,rbp", "pop~spec", "pop~rbp", "pop~colon", "pop~gid", "pop~username", "pop~groupname", "retn"]], [1, 1, 4, 1, 2, 26, 1, 3, 0, 0, 0.0, ["push    r15", "push    r14", "mov     r15, groupname", "push    r13", "push    r12", "mov     r13, gid", "push    rbp", "push    rbx", "mov     rbp, uid_0", "mov     r14, username", "mov     rbx, spec", "mov     esi, 3Ah ; ':'; c", "sub     rsp, 18h", "call    _strchr", "mov     rdx, uid_0; uid", "mov     r12, rax", "mov     r9, groupname; groupname", "mov     r8, username; username", "mov     rcx, gid; gid", "mov     rsi, colon; separator", "mov     rdi, spec; spec", "mov     [rsp+48h+uid], uid_0", "call    parse_with_separator", "test    colon, colon", "mov     uid_0, rax", "jnz     short loc_7D0A"], ["push~r15", "push~r14", "mov~r15,groupname", "push~r13", "push~r12", "mov~r13,gid", "push~rbp", "push~rbx", "mov~rbp,uid_0", "mov~r14,username", "mov~rbx,spec", "mov~esi,<STR>", "sub~rsp,0", "call~FOO", "mov~rdx,uid_0", "mov~r12,rax", "mov~r9,groupname", "mov~r8,username", "mov~rcx,gid", "mov~rsi,colon", "mov~rdi,spec", "mov~[rsp+0],uid_0", "call~FOO", "test~colon,colon", "mov~uid_0,rax", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, 0, 0.16666666666666666, ["test    error_msg, error_msg", "jz      short loc_7D0A"], ["test~error_msg,error_msg", "jz~FOO"]], [1, 0, 2, 0, 1, 5, 1, 2, 2, 0, 0.16666666666666666, ["mov     esi, 2Eh ; '.'; c", "mov     rdi, spec; s", "call    _strchr", "test    dot, dot", "jz      short loc_7D0A"], ["mov~esi,0", "mov~rdi,spec", "call~FOO", "test~dot,dot", "jz~FOO"]], [1, 0, 1, 0, 1, 10, 1, 1, 3, 0, 0.0, ["mov     rdx, [rsp+48h+uid]; uid", "mov     r9, groupname; groupname", "mov     r8, username; username", "mov     rcx, gid; gid", "mov     rsi, dot; separator", "mov     rdi, spec; spec", "call    parse_with_separator", "test    rax, rax", "mov     eax, 0", "cmovz   error_msg, rax"], ["mov~rdx,[rsp+0]", "mov~r9,groupname", "mov~r8,username", "mov~rcx,gid", "mov~rsi,dot", "mov~rdi,spec", "call~FOO", "test~rax,rax", "mov~eax,0", "cmovz~error_msg,rax"]]], "func_feature": [4, 4, 7, 0, 5, 7, 2, 52, 0.06667, 0, 2], "succs": [[], [0, 2], [0, 3], [0, 4], [0]], "fname": "parse_user_spec", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[0, 0, 75, 0, 1, 13, 1, 2, 0, 0, 0.01281613123718387, ["lea     rax, [rsp+58h+t_ptr]", "mov     r12, s", "mov     rbp, ptr", "test    ptr, ptr", "mov     r14, val", "mov     r15d, edx", "mov     r13, valid_suffixes", "cmovz   rbp, rax", "movzx   ebx, byte ptr [q]", "call    ___ctype_b_loc", "mov     rcx, [rax]", "mov     rax, q", "jmp     short loc_7F8F"], ["lea~rax,[rsp+0]", "mov~r12,s", "mov~rbp,ptr", "test~ptr,ptr", "mov~r14,val", "mov~r15d,edx", "mov~r13,valid_suffixes", "cmovz~rbp,rax", "movzx~ebx,<TAG>", "call~FOO", "mov~rcx,<TAG>", "mov~rax,q", "jmp~FOO"]], [2, 0, 77, 1, 0, 12, 1, 1, 0, 14, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 28h", "mov     rax, fs:28h", "mov     [rsp+58h+var_40], rax", "xor     eax, eax", "cmp     edx, 24h ; '$'", "ja      loc_8281"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~edx,0", "ja~FOO"]], [0, 0, 64, 0, 0, 3, 1, 1, 5, 9, 0.06197311460469356, ["test    valid_suffixes, valid_suffixes", "mov     [rsp+58h+var_50], r8", "jnz     short loc_8040"], ["test~valid_suffixes,valid_suffixes", "mov~[rsp+0],r8", "jnz~FOO"]], [1, 0, 71, 0, 2, 12, 0, 3, 4, 10, 0.05724538619275462, ["call    ___errno_location", "mov     edx, r15d; base", "mov     dword ptr [rax], 0", "mov     rsi, p; endptr", "mov     rdi, s; nptr", "mov     [rsp+58h+var_50], rax", "call    _strtoul", "mov     r8, [p+0]", "mov     ch_0, rax", "mov     rcx, [rsp+58h+var_50]", "cmp     r8, s", "jz      short loc_7FF8"], ["call~FOO", "mov~edx,r15d", "mov~<TAG>,0", "mov~rsi,p", "mov~rdi,s", "mov~[rsp+0],rax", "call~FOO", "mov~r8,[p+0]", "mov~ch_0,rax", "mov~rcx,[rsp+0]", "cmp~r8,s", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 6, -1, 0.0005696058327637275, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [2, 0, 3, 1, 0, 9, 1, 1, 13, -1, 0.02332535885167464, ["movsxd  suffixes, esi; jumptable 00000000000080EE case 33", "mov     eax, r12d", "add     r8, suffixes", "or      eax, 2", "mov     [p+0], r8", "cmp     byte ptr [r8], 0", "mov     [val], tmp", "cmovnz  r12d, eax", "jmp     loc_800E"], ["movsxd~suffixes,esi", "mov~eax,r12d", "add~r8,suffixes", "or~eax,0", "mov~[p+0],r8", "cmp~<TAG>,0", "mov~<TAG>,tmp", "cmovnz~r12d,eax", "jmp~FOO"]], [0, 0, 50, 1, 0, 5, 0, 1, 12, 2, 0.18079289131920712, ["lea     rdx, off_BFE0", "movzx   r15d, r15b", "movsxd  rax, dword ptr [rdx+r15*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movzx~r15d,r15b", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [0, 0, 4, 1, 0, 2, 0, 1, 14, -1, 0.0003417634996582365, ["add     tmp, tmp", "jmp     short loc_8110; jumptable 00000000000080EE case 33"], ["add~tmp,tmp", "jmp~FOO"]], [1, 0, 4, 1, 0, 2, 0, 1, 14, -1, 0.0003417634996582365, ["shl     tmp, 9", "jmp     short loc_8110; jumptable 00000000000080EE case 33"], ["shl~tmp,0", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 16, -1, 0.016404647983595352, ["or      r12d, r9d", "jmp     loc_8110; jumptable 00000000000080EE case 33"], ["or~r12d,r9d", "jmp~FOO"]], [0, 0, 5, 1, 0, 4, 0, 0, 13, -1, 0.0010252904989747095, ["mov     rax, tmp; jumptable 00000000000080EE cases 9,41", "mul     rcx", "mov     tmp, rax", "jno     loc_8110; jumptable 00000000000080EE case 33"], ["mov~rax,tmp", "mul~,rcx", "mov~tmp,rax", "jno~FOO"]], [2, 0, 4, 0, 0, 3, 1, 1, 14, -1, 0.0010252904989747095, ["mov     r12d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_8110; jumptable 00000000000080EE case 33"], ["mov~r12d,0", "or~rbx,0", "jmp~FOO"]], [1, 0, 4, 1, 0, 2, 0, 1, 14, -1, 0.0003417634996582365, ["shl     tmp, 0Ah", "jmp     loc_8110; jumptable 00000000000080EE case 33"], ["shl~tmp,0", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 1, 0, 17, -1, 0.0075187969924812035, ["or      r12d, edi", "nop     dword ptr [rax]"], ["or~r12d,edi", "nop~<TAG>"]], [2, 0, 8, 0, 0, 3, 1, 1, 15, -1, 0.0, ["mov     r9d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_8197"], ["mov~r9d,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 8, 1, 0, 4, 0, 0, 14, -1, 0.013670539986329461, ["mov     rax, tmp", "mul     rcx", "mov     tmp, rax", "jo      loc_82FA"], ["mov~rax,tmp", "mul~,rcx", "mov~tmp,rax", "jo~FOO"]], [0, 0, 59, 0, 1, 7, 1, 2, 8, 6, 0.1339712918660287, ["movsx   esi, r15b; c", "mov     rdi, valid_suffixes; s", "mov     [rsp+58h+var_50], r8", "call    _strchr", "test    rax, rax", "mov     r8, [rsp+58h+var_50]", "jz      loc_8130; jumptable 00000000000080EE default case"], ["movsx~esi,r15b", "mov~rdi,valid_suffixes", "mov~[rsp+0],r8", "call~FOO", "test~rax,rax", "mov~r8,[rsp+0]", "jz~FOO"]], [0, 0, 61, 0, 0, 3, 1, 1, 8, 7, 0.03896103896103897, ["movzx   r15d, byte ptr [r8]", "test    r15b, r15b", "jnz     short loc_8068"], ["movzx~r15d,<TAG>", "test~r15b,r15b", "jnz~FOO"]], [1, 0, 61, 0, 1, 8, 2, 2, 7, 7, 0.07792207792207793, ["movsx   esi, r15b; c", "mov     rdi, valid_suffixes; s", "xor     r12d, r12d", "call    _strchr", "test    rax, rax", "mov     ebx, 1", "mov     r8, [rsp+58h+var_50]", "jz      short loc_8008"], ["movsx~esi,r15b", "mov~rdi,valid_suffixes", "xor~r12d,r12d", "call~FOO", "test~rax,rax", "mov~ebx,0", "mov~r8,[rsp+0]", "jz~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 4, -1, 0.006151742993848257, ["mov     r12d, 4"], ["mov~r12d,0"]], [1, 0, 72, 0, 0, 2, 0, 1, 3, 11, 0.04921394395078606, ["cmp     bl, 2Dh ; '-'", "jz      short loc_8008"], ["cmp~bl,0", "jz~FOO"]], [2, 0, 64, 0, 0, 3, 0, 1, 6, 9, 0.007575757575757575, ["cmp     eax, 22h ; '\"'", "mov     r12d, 1", "jnz     short loc_8008"], ["cmp~eax,0", "mov~r12d,0", "jnz~FOO"]], [0, 0, 62, 0, 0, 3, 1, 1, 6, 8, 0.06994759626338574, ["movzx   r15d, byte ptr [s]", "test    r15b, r15b", "jz      short loc_8008"], ["movzx~r15d,<TAG>", "test~r15b,r15b", "jz~FOO"]], [1, 0, 9, 0, 0, 3, 1, 0, 13, -1, 0.016404647983595352, ["mov     edi, 8; jumptable 00000000000080EE case 23", "xor     r9d, r9d", "nop     dword ptr [rax+00h]"], ["mov~edi,0", "xor~r9d,r9d", "nop~[word ptr [rax+0]"]], [0, 0, 12, 1, 0, 3, 0, 0, 13, 1, 0.016404647983595352, ["mov     rax, tmp; jumptable 00000000000080EE cases 5,37", "mul     rcx", "jo      loc_8309"], ["mov~rax,tmp", "mul~,rcx", "jo~FOO"]], [0, 1, 6, 1, 0, 4, 0, 0, 13, -1, 0.005126452494873548, ["mov     edx, 400h; jumptable 00000000000080EE case 0", "mov     rax, rdx", "mul     tmp", "jo      short loc_81F3"], ["mov~edx,<STR>", "mov~rax,rdx", "mul~,tmp", "jo~FOO"]], [1, 0, 75, 1, 0, 2, 0, 0, 3, 13, 0.0, ["add     q, 1", "movzx   ebx, byte ptr [q]"], ["add~q,0", "movzx~ebx,<TAG>"]], [0, 1, 75, 0, 0, 3, 1, 1, 2, 12, 0.03776486671223513, ["movzx   edx, bl", "test    byte ptr [rcx+rdx*2+1], 20h", "jnz     short loc_7F88"], ["movzx~edx,bl", "test~[yte ptr [rcx+0],<STR>", "jnz~FOO"]], [2, 0, 5, 0, 0, 3, 1, 1, 16, -1, 0.00589542036910458, ["mov     edi, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_810A"], ["mov~edi,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 16, -1, 0.00589542036910458, ["mov     rbx, rax"], ["mov~rbx,rax"]], [0, 0, 9, 1, 0, 2, 0, 0, 15, -1, 0.008714969241285031, ["mul     rcx", "jno     loc_80FE"], ["mul~,rcx", "jno~FOO"]], [2, 0, 10, 0, 0, 3, 1, 1, 14, 0, 0.004955570745044429, ["mov     edi, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_826A"], ["mov~edi,0", "or~rax,0", "jmp~FOO"]], [0, 0, 10, 0, 0, 1, 1, 0, 14, -1, 0.004955570745044429, ["xor     edi, edi"], ["xor~edi,edi"]], [1, 0, 8, 1, 0, 2, 0, 1, 15, -1, 0.006835269993164731, ["sub     edi, 1", "jnz     short loc_8188"], ["sub~edi,0", "jnz~FOO"]], [1, 0, 8, 0, 0, 3, 1, 0, 13, -1, 0.016404647983595352, ["mov     edi, 7; jumptable 00000000000080EE case 24", "xor     r9d, r9d", "nop     dword ptr [rax+rax+00h]"], ["mov~edi,0", "xor~r9d,r9d", "nop~[word ptr [rax+0]"]], [1, 0, 9, 0, 0, 2, 1, 0, 13, -1, 0.016404647983595352, ["mov     edi, 6; jumptable 00000000000080EE case 3", "xor     r9d, r9d"], ["mov~edi,0", "xor~r9d,r9d"]], [0, 0, 9, 1, 0, 4, 0, 0, 14, -1, 0.01384142173615858, ["mov     rax, tmp", "mul     rcx", "mov     tmp, rax", "jo      loc_82EB"], ["mov~rax,tmp", "mul~,rcx", "mov~tmp,rax", "jo~FOO"]], [1, 0, 9, 1, 0, 2, 0, 1, 15, -1, 0.007347915242652085, ["sub     edi, 1", "jnz     short loc_8210"], ["sub~edi,0", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 1, 0, 13, -1, 0.016404647983595352, ["mov     edi, 5; jumptable 00000000000080EE case 14", "xor     r9d, r9d"], ["mov~edi,0", "xor~r9d,r9d"]], [1, 0, 0, 0, 1, 5, 0, 1, 1, -1, 0.0, ["lea     val, __PRETTY_FUNCTION___4894; \"xstrtoul\"", "lea     ptr, file; \"xstrtol.c\"", "lea     s, assertion; \"0 <= strtol_base && strtol_base <= 36\"", "mov     edx, 53h ; 'S'; line", "call    ___assert_fail"], ["lea~val,<TAG>", "lea~ptr,<TAG>", "lea~s,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 5, -1, 0.025290498974709502, ["mov     rdi, [rsp+58h+var_40]", "xor     rdi, fs:28h", "mov     eax, r12d", "jnz     loc_82A0"], ["mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "mov~eax,r12d", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 8, -1, 0.0015379357484620643, ["mov     [val], tmp", "jmp     short loc_800E"], ["mov~<TAG>,tmp", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 1, 1, 9, -1, 0.004870129870129871, ["mov     [val], tmp; jumptable 00000000000080EE default case", "or      r12d, 2", "jmp     loc_800E"], ["mov~<TAG>,tmp", "or~r12d,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 58, 0, 1, 7, 1, 2, 9, 5, 0.1384142173615858, ["mov     esi, 30h ; '0'; c", "mov     rdi, valid_suffixes; s", "mov     [rsp+58h+var_50], r8", "call    _strchr", "test    rax, rax", "mov     r8, [rsp+58h+var_50]", "jz      short loc_80C8"], ["mov~esi,0", "mov~rdi,valid_suffixes", "mov~[rsp+0],r8", "call~FOO", "test~rax,rax", "mov~r8,[rsp+0]", "jz~FOO"]], [2, 0, 9, 0, 0, 3, 1, 1, 15, -1, 0.0, ["mov     r9d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_821F"], ["mov~r9d,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 16, -1, 0.0034176349965823654, ["jmp     loc_819C"], ["jmp~FOO"]], [1, 0, 57, 0, 0, 3, 0, 1, 10, 5, 0.010936431989063569, ["movzx   eax, byte ptr [r8+1]", "cmp     al, 44h ; 'D'", "jz      short loc_80B8"], ["movzx~eax,[yte ptr [r8+0]", "cmp~al,0", "jz~FOO"]], [0, 0, 7, 1, 0, 2, 0, 0, 15, -1, 0.021872863978127138, ["mul     rcx", "jo      loc_82C0"], ["mul~,rcx", "jo~FOO"]], [2, 0, 8, 0, 0, 3, 1, 1, 16, -1, 0.0, ["mov     edi, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_80FE"], ["mov~edi,0", "or~rax,0", "jmp~FOO"]], [2, 0, 8, 0, 0, 3, 1, 1, 14, -1, 0.00888585099111415, ["or      rax, 0FFFFFFFFFFFFFFFFh", "mov     edi, 1", "jmp     loc_80FE"], ["or~rax,0", "mov~edi,0", "jmp~FOO"]], [0, 0, 8, 0, 0, 1, 1, 0, 14, -1, 0.00888585099111415, ["xor     edi, edi"], ["xor~edi,edi"]], [1, 0, 56, 0, 0, 2, 0, 1, 11, 5, 0.00598086124401914, ["cmp     al, 69h ; 'i'", "jz      loc_813C"], ["cmp~al,0", "jz~FOO"]], [2, 0, 9, 0, 0, 3, 1, 1, 15, -1, 0.0, ["mov     r9d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     short loc_823C"], ["mov~r9d,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 9, 1, 0, 4, 0, 0, 14, -1, 0.01384142173615858, ["mov     rax, tmp", "mul     rcx", "mov     tmp, rax", "jo      short loc_82A5"], ["mov~rax,tmp", "mul~,rcx", "mov~tmp,rax", "jo~FOO"]], [1, 0, 9, 1, 0, 2, 0, 1, 15, -1, 0.007347915242652085, ["sub     edi, 1", "jnz     short loc_81B0"], ["sub~edi,0", "jnz~FOO"]], [2, 0, 9, 0, 0, 3, 1, 1, 15, -1, 0.0, ["mov     r9d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_81BF"], ["mov~r9d,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 9, 1, 0, 4, 0, 0, 14, -1, 0.01384142173615858, ["mov     rax, tmp", "mul     rcx", "mov     tmp, rax", "jo      loc_82DC"], ["mov~rax,tmp", "mul~,rcx", "mov~tmp,rax", "jo~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 6, -1, 0.0, ["add     rsp, 28h", "pop     rbx", "pop     p", "pop     r12", "pop     valid_suffixes", "pop     val", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~p", "pop~r12", "pop~valid_suffixes", "pop~val", "pop~r15", "retn"]], [0, 0, 5, 0, 0, 1, 0, 1, 16, -1, 0.0034176349965823654, ["jmp     short loc_819C"], ["jmp~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 16, -1, 0.0034176349965823654, ["jmp     short loc_819C"], ["jmp~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 16, -1, 0.0034176349965823654, ["jmp     loc_819C"], ["jmp~FOO"]], [1, 0, 54, 0, 0, 2, 0, 1, 12, 5, 0.0005126452494873548, ["cmp     al, 42h ; 'B'", "jnz     short loc_80C8"], ["cmp~al,0", "jnz~FOO"]], [2, 0, 51, 1, 0, 3, 0, 1, 11, 3, 0.1814764183185236, ["sub     r15d, 42h ; 'B'", "cmp     r15b, 35h ; '5'; switch 54 cases", "ja      short loc_8130; jumptable 00000000000080EE default case"], ["sub~r15d,0", "cmp~r15b,0", "ja~FOO"]], [1, 0, 9, 1, 0, 2, 0, 1, 15, -1, 0.007347915242652085, ["sub     edi, 1", "jnz     short loc_8231"], ["sub~edi,0", "jnz~FOO"]], [0, 0, 63, 0, 0, 2, 1, 1, 6, 9, 0.006664388243335612, ["xor     r12d, r12d", "jmp     short loc_7FDE"], ["xor~r12d,r12d", "jmp~FOO"]], [0, 0, 66, 0, 0, 3, 1, 1, 5, 10, 0.0053542948279790385, ["mov     eax, [rcx]", "test    eax, eax", "jz      short loc_8038"], ["mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [2, 0, 52, 0, 0, 3, 0, 1, 11, 4, 0.013328776486671225, ["mov     esi, 2", "mov     ecx, 3E8h", "jmp     short loc_80D2"], ["mov~esi,0", "mov~ecx,0", "jmp~FOO"]], [1, 0, 9, 0, 0, 2, 1, 0, 13, -1, 0.016404647983595352, ["mov     edi, 4; jumptable 00000000000080EE cases 18,50", "xor     r9d, r9d"], ["mov~edi,0", "xor~r9d,r9d"]], [1, 1, 52, 0, 0, 2, 0, 0, 10, 4, 0.13636363636363638, ["mov     esi, 1", "mov     ecx, 400h"], ["mov~esi,0", "mov~ecx,<STR>"]], [0, 0, 10, 1, 0, 3, 0, 0, 13, -1, 0.02460697197539303, ["mov     rax, tmp; jumptable 00000000000080EE cases 11,43", "mul     rcx", "jo      loc_82CE"], ["mov~rax,tmp", "mul~,rcx", "jo~FOO"]], [1, 1, 52, 0, 0, 6, 1, 1, 12, 4, 0.00888585099111415, ["xor     esi, esi", "cmp     byte ptr [r8+2], 42h ; 'B'", "mov     ecx, 400h", "setz    sil", "lea     esi, [rsi+rsi+1]", "jmp     short loc_80D2"], ["xor~esi,esi", "cmp~[yte ptr [r8+0],0", "mov~ecx,<STR>", "setz~sil", "lea~esi,[rsi+0]", "jmp~FOO"]], [0, 0, 9, 1, 0, 4, 0, 0, 14, -1, 0.01384142173615858, ["mov     rax, tmp", "mul     rcx", "mov     tmp, rax", "jo      loc_82B1"], ["mov~rax,tmp", "mul~,rcx", "mov~tmp,rax", "jo~FOO"]], [1, 0, 9, 1, 0, 2, 0, 1, 15, -1, 0.007347915242652085, ["sub     edi, 1", "jnz     short loc_81CE"], ["sub~edi,0", "jnz~FOO"]], [1, 0, 6, 1, 0, 4, 0, 0, 13, -1, 0.005126452494873548, ["mov     edx, 2; jumptable 00000000000080EE case 53", "mov     rax, rdx", "mul     tmp", "jo      loc_81F3"], ["mov~edx,0", "mov~rax,rdx", "mul~,tmp", "jo~FOO"]], [2, 0, 9, 0, 0, 3, 1, 1, 15, -1, 0.0, ["mov     r9d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_81DD"], ["mov~r9d,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 62, 0, 0, 2, 1, 1, 7, 8, 0.032809295967190705, ["test    valid_suffixes, valid_suffixes", "jz      short loc_7FEC"], ["test~valid_suffixes,valid_suffixes", "jz~FOO"]], [0, 1, 6, 1, 0, 4, 0, 0, 13, -1, 0.005126452494873548, ["mov     edx, 200h; jumptable 00000000000080EE case 32", "mov     rax, rdx", "mul     tmp", "jo      short loc_81F3"], ["mov~edx,<STR>", "mov~rax,rdx", "mul~,tmp", "jo~FOO"]]], "func_feature": [8, 36, 57, 2, 78, 123, 2, 260, 0.0216, 5, 27], "succs": [[27], [0, 39], [4, 22], [2, 66], [19], [40], [34, 35, 68, 5, 38, 42, 77, 10, 23, 24, 25, 70, 74], [5], [5], [5], [11, 5], [5], [5], [5], [33], [33, 14], [42, 44], [16, 41], [16, 19], [40], [3, 19], [19, 76], [18, 19], [57], [32, 31], [11, 12], [27], [26, 20], [13], [13], [48, 49], [30], [30], [9, 15], [15], [54], [37, 45], [36, 46], [36], [], [58, 43], [40], [40], [], [69, 47], [37], [9], [67, 52], [28, 29], [48], [48], [48], [62, 71], [64], [64, 53], [57, 59], [55], [56, 55], [], [9], [9], [9], [67, 69], [42, 6], [61, 54], [76], [65, 21], [63], [72], [63], [50, 51], [63], [73, 75], [72, 60], [11, 7], [73], [17, 41], [8, 11]], "fname": "xstrtoul", "n_num": 78}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[1, 0, 0, 1, 0, 5, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "mov     fts, rbp", "pop     argv", "pop     rbp", "retn"], ["add~rsp,0", "mov~fts,rbp", "pop~argv", "pop~rbp", "retn"]], [1, 1, 7, 1, 1, 9, 2, 2, 0, 2, 0.0, ["push    rbp", "push    rbx", "or      esi, 200h; options", "mov     rbx, argv", "sub     rsp, 8", "call    fts_open", "test    rax, rax", "mov     rbp, rax", "jz      short loc_8350"], ["push~rbp", "push~rbx", "or~esi,<STR>", "mov~rbx,argv", "sub~rsp,0", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jz~FOO"]], [2, 0, 4, 1, 0, 6, 1, 1, 3, 2, 0.16666666666666666, ["cmp     byte ptr [rax], 0", "cmovz   edx, ecx", "add     argv, 8", "mov     rax, [argv]", "test    rax, rax", "jnz     short loc_8360"], ["cmp~<TAG>,0", "cmovz~edx,ecx", "add~argv,0", "mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [1, 0, 4, 0, 0, 3, 1, 0, 2, 3, 0.14285714285714285, ["xor     edx, edx", "mov     ecx, 1", "nop"], ["xor~edx,edx", "mov~ecx,0", "nop"]], [0, 0, 2, 0, 0, 2, 1, 1, 4, 1, 0.14285714285714285, ["test    dl, dl", "jz      short loc_83B6"], ["test~dl,dl", "jz~FOO"]], [3, 0, 0, 1, 3, 18, 3, 3, 5, -1, 0.0, ["lea     rdi, aReportBugsToS+16h; name", "call    quote", "lea     rsi, aInvalidArgumen; \"invalid argument: %s\"", "mov     argv, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     eax, eax", "mov     edi, 1; status", "call    _error", "add     rsp, 8", "mov     rax, fts", "pop     rbx", "pop     fts", "retn"], ["lea~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~argv,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "xor~eax,eax", "mov~edi,0", "call~FOO", "add~rsp,0", "mov~rax,fts", "pop~rbx", "pop~fts", "retn"]], [0, 0, 5, 0, 0, 3, 1, 1, 1, 1, 0.11904761904761904, ["mov     fts, [argv]", "test    rax, rax", "jz      short loc_83B6"], ["mov~fts,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [5, 9, 9, 0, 8, 9, 1, 47, 0.07143, 2, 4], "succs": [[], [0, 6], [2, 4], [2], [5, 7], [], [3, 7], []], "fname": "xfts_open", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[1, 0, 1, 0, 0, 4, 2, 1, 0, 0, 0.0, ["mov     edx, 3", "xor     esi, esi; cmd", "xor     eax, eax", "jmp     _fcntl"], ["mov~edx,0", "xor~esi,esi", "xor~eax,eax", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 2, 1, 0, 2, 1, 2, 4, 0.0, 0, 0], "succs": [[1], []], "fname": "dup_safer", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_chown.ida", "features": [[1, 0, 0, 1, 0, 7, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "mov     eax, ebx", "pop     fd", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "mov~eax,ebx", "pop~fd", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [2, 0, 2, 1, 0, 8, 0, 1, 0, 0, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "mov     ebx, edi", "sub     rsp, 8", "cmp     edi, 2", "ja      short loc_8572"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "mov~ebx,edi", "sub~rsp,0", "cmp~edi,0", "ja~FOO"]], [0, 0, 1, 0, 3, 9, 0, 3, 1, 0, 0.0, ["call    dup_safer", "mov     r12d, eax", "call    ___errno_location", "mov     r13d, [rax]", "mov     rbp, rax", "mov     edi, ebx; fd", "call    _close", "mov     ebx, r12d", "mov     [rbp+0], r13d"], ["call~FOO", "mov~r12d,eax", "call~FOO", "mov~r13d,<TAG>", "mov~rbp,rax", "mov~edi,ebx", "call~FOO", "mov~ebx,r12d", "mov~[rbp+0],r13d"]]], "func_feature": [3, 0, 4, 0, 3, 3, 1, 24, 0.0, 0, 2], "succs": [[], [0, 2], [0]], "fname": "fd_safer", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0.0, ["push    cs:qword_217CE0", "jmp     cs:qword_217CE8"], ["push~<TAG>", "jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 91, 2, 0.0, 2, 0], "succs": [[]], "fname": "sub_20F0", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:utimensat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "utimensat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:unlink_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "unlink", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mkdir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "mkdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:readlink_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "readlink", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:pathconf_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "pathconf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:symlink_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "symlink", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mkfifo_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mkfifo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:umask_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "umask", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__xmknod_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__xmknod", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:lchown_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "lchown", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fchmod_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fchmod", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:chmod_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "chmod", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:rename_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "rename", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:futimens_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "futimens", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:link_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "link", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[1, 0, 1, 1, 0, 9, 0, 1, 0, 0, 0.06190476190476191, ["mov     rdi, [rsp+48h+arg_writable]; ptr", "add     rsp, 18h", "pop     comma", "pop     rbp", "pop     r12", "pop     on_off", "pop     x", "pop     comma", "jmp     free"], ["mov~rdi,[rsp+0]", "add~rsp,0", "pop~comma", "pop~rbp", "pop~r12", "pop~on_off", "pop~x", "pop~comma", "jmp~FOO"]], [0, 0, 15, 0, 0, 3, 1, 1, 5, 3, 0.5095238095238096, ["test    comma, comma", "mov     rbx, comma", "jnz     short loc_2EE0"], ["test~comma,comma", "mov~rbx,comma", "jnz~FOO"]], [0, 0, 15, 0, 0, 2, 0, 1, 4, 4, 0.01746031746031746, ["mov     [x+1Ch], r13b; jumptable 0000000000002F3D case 2", "jmp     short loc_2F50"], ["mov~[x+0],r13b", "jmp~FOO"]], [0, 0, 15, 1, 0, 4, 0, 1, 3, 5, 0.43333333333333335, ["mov     eax, [r12+rax*4]", "movsxd  rax, dword ptr [rbp+rax*4+0]", "add     rax, rbp", "jmp     rax; switch jump"], ["mov~eax,<TAG>", "movsxd~rax,[word ptr [rbp+0]", "add~rax,rbp", "jmp~rax"]], [0, 0, 0, 0, 0, 0, 0, 0, 7, -1, 0.0, [], []], [1, 0, 15, 0, 0, 6, 0, 1, 4, 4, 0.06984126984126984, ["cmp     cs:selinux_enabled, 0; jumptable 0000000000002F3D case 5", "mov     [x+1Dh], r13b", "mov     [x+1Eh], r13b", "mov     [x+1Ch], r13b", "mov     [x+1Fh], r13b", "jz      short loc_2F50"], ["cmp~<TAG>,0", "mov~[x+0],r13b", "mov~[x+0],r13b", "mov~[x+0],r13b", "mov~[x+0],r13b", "jz~FOO"]], [0, 0, 15, 0, 0, 3, 0, 0, 4, 4, 0.01746031746031746, ["mov     [x+21h], r13b; jumptable 0000000000002F3D case 4", "mov     [x+22h], r13b", "nop     dword ptr [rax+rax+00000000h]"], ["mov~[x+0],r13b", "mov~[x+0],r13b", "nop~[word ptr [rax+0]"]], [2, 0, 15, 0, 1, 9, 0, 2, 2, 1, 0.48571428571428577, ["mov     r9, cs:argmatch_die; exit_fn", "lea     rcx, preserve_vals_6709; vallist", "lea     rdx, preserve_args_6710; arglist", "lea     rdi, aPreserve; \"--preserve\"", "mov     r8d, 4; valsize", "mov     rsi, s; arg", "call    __xargmatch_internal", "cmp     dword ptr [r12+rax*4], 5; switch 6 cases", "ja      loc_2FCF; jumptable 0000000000002F3D default case"], ["mov~r9,<TAG>", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "lea~rdi,<TAG>", "mov~r8d,0", "mov~rsi,s", "call~FOO", "cmp~<TAG>,0", "ja~FOO"]], [1, 0, 15, 0, 1, 6, 2, 2, 1, 2, 0.46666666666666673, ["mov     esi, 2Ch ; ','; c", "mov     rdi, s; s", "xor     r15d, r15d", "call    _strchr", "test    comma, comma", "jz      short loc_2EFC"], ["mov~esi,0", "mov~rdi,s", "xor~r15d,r15d", "call~FOO", "test~comma,comma", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 0, 2, 2, 0.0, ["lea     r15, [comma+1]", "mov     byte ptr [rax], 0"], ["lea~r15,[comma+0]", "mov~<TAG>,0"]], [0, 0, 15, 0, 0, 2, 0, 1, 5, 4, 0.0, ["mov     [x+21h], r13b", "jmp     short loc_2F50"], ["mov~[x+0],r13b", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    _abort; jumptable 0000000000002F3D default case"], ["call~FOO"]], [1, 0, 15, 1, 1, 15, 0, 1, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r14, x", "push    r13", "push    r12", "lea     r12, preserve_vals_6709", "push    rbp", "push    rbx", "lea     rbp, off_12620", "mov     r13d, edx", "sub     rsp, 18h", "call    xstrdup", "mov     [rsp+48h+arg_writable], rax", "mov     rbx, s", "nop"], ["push~r15", "push~r14", "mov~r14,x", "push~r13", "push~r12", "lea~r12,<TAG>", "push~rbp", "push~rbx", "lea~rbp,<TAG>", "mov~r13d,edx", "sub~rsp,0", "call~FOO", "mov~[rsp+0],rax", "mov~rbx,s", "nop"]], [0, 0, 15, 0, 0, 2, 0, 1, 4, 4, 0.01746031746031746, ["mov     [x+1Fh], r13b; jumptable 0000000000002F3D case 3", "jmp     short loc_2F50"], ["mov~[x+0],r13b", "jmp~FOO"]], [0, 0, 15, 0, 0, 2, 0, 1, 4, 4, 0.01746031746031746, ["mov     [x+1Eh], r13b; jumptable 0000000000002F3D case 1", "jmp     short loc_2F50"], ["mov~[x+0],r13b", "jmp~FOO"]], [0, 0, 15, 0, 0, 2, 0, 1, 4, 4, 0.01746031746031746, ["mov     [x+1Dh], r13b; jumptable 0000000000002F3D case 0", "jmp     short loc_2F50"], ["mov~[x+0],r13b", "jmp~FOO"]]], "func_feature": [4, 3, 15, 0, 16, 23, 2, 68, 0.13214, 6, 3], "succs": [[4], [0, 8], [1], [2, 5, 6, 13, 14, 15], [], [1, 10], [1], [3, 11], [9, 7], [7], [1], [], [8], [1], [1], [1]], "fname": "decode_preserve_arg", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[2, 0, 41, 0, 0, 4, 1, 1, 0, 0, 0.12181122448979591, ["mov     eax, [rbp+src_st.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_31A1"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 41, 0, 1, 6, 1, 2, 6, 4, 0.2582908163265306, ["mov     rdx, [rbp+var_190]; stat_buf", "mov     rsi, [rbp+slash]; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jz      loc_3370"], ["mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 41, 0, 0, 4, 1, 1, 10, 5, 0.10459183673469387, ["xor     r15d, r15d", "cmp     byte ptr [x+1Dh], 0", "mov     esi, 0FFFFFFFFh", "jz      loc_3268"], ["xor~r15d,r15d", "cmp~[yte ptr [x+0],0", "mov~esi,0", "jz~FOO"]], [2, 0, 41, 0, 0, 5, 0, 1, 9, 6, 0.2070578231292517, ["mov     rax, [rbp+new_dst]", "mov     byte ptr [rax], 1", "cmp     byte ptr [x+1Ch], 0", "mov     eax, [new+18h]", "jz      loc_3348"], ["mov~rax,[rbp+0]", "mov~<TAG>,0", "cmp~[yte ptr [x+0],0", "mov~eax,[new+0]", "jz~FOO"]], [1, 0, 4, 0, 0, 1, 0, 0, 8, 3, 0.0017006802721088435, ["mov     r8d, 14h"], ["mov~r8d,0"]], [0, 0, 41, 0, 0, 3, 1, 1, 12, 5, 0.18835034013605442, ["mov     rax, [rbp+verbose_fmt_string]", "test    rax, rax", "jz      short loc_32A4"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [0, 1, 41, 0, 1, 6, 3, 2, 11, 4, 0.21726190476190477, ["and     eax, 0FFFh", "mov     rdi, dir; path", "and     esi, eax; mode", "call    _mkdir", "test    eax, eax", "jnz     loc_3482"], ["and~eax,<STR>", "mov~rdi,dir", "and~esi,eax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 41, 0, 1, 10, 2, 2, 5, 5, 0.3239795918367347, ["mov     rdx, [rbp+stat_buf]; stat_buf", "mov     byte ptr [rbx], 0", "mov     rsi, dir; filename", "mov     edi, 1; ver", "call    ___xstat", "mov     r15d, eax", "movzx   eax, byte ptr [x+1Ch]", "or      al, [x+1Dh]", "or      al, [x+1Eh]", "jnz     short loc_3170"], ["mov~rdx,[rbp+0]", "mov~<TAG>,0", "mov~rsi,dir", "mov~edi,0", "call~FOO", "mov~r15d,eax", "movzx~eax,[yte ptr [x+0]", "or~al,[x+0]", "or~al,[x+0]", "jnz~FOO"]], [0, 0, 41, 0, 0, 2, 1, 1, 6, 5, 0.06547619047619048, ["test    r15d, r15d", "jnz     short loc_3170"], ["test~r15d,r15d", "jnz~FOO"]], [2, 0, 41, 0, 0, 4, 1, 1, 15, 5, 0.14158163265306123, ["mov     eax, esi", "and     eax, 1C0h", "cmp     eax, 1C0h", "jz      loc_3147"], ["mov~eax,esi", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 41, 0, 0, 3, 0, 1, 14, 6, 0.1760204081632653, ["cmp     byte ptr [x+1Dh], 0", "mov     esi, [rbp+stats.st_mode]", "jnz     short loc_3300"], ["cmp~[yte ptr [x+0],0", "mov~esi,[rbp+0]", "jnz~FOO"]], [1, 0, 41, 0, 0, 3, 1, 0, 17, 6, 0.01403061224489796, ["or      r15d, eax", "mov     byte ptr [new+90h], 1", "mov     [new+18h], r15d"], ["or~r15d,eax", "mov~[yte ptr [new+0],0", "mov~[new+0],r15d"]], [2, 0, 7, 0, 0, 4, 1, 1, 1, 4, 0.002976190476190476, ["mov     eax, [rbp+stats.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     short loc_3443"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [9, 1, 49, 5, 5, 50, 6, 6, 0, 5, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "mov     r14, src_offset", "push    rbx", "mov     r12, x", "mov     rbx, const_dir", "sub     rsp, 168h", "mov     [rbp+attr_list], attr_list_0", "mov     [rbp+new_dst], new_dst_0", "mov     [rbp+verbose_fmt_string], verbose_fmt_string_0", "mov     verbose_fmt_string_0, fs:28h", "mov     [rbp+var_38], verbose_fmt_string_0", "xor     edx, edx", "call    _strlen", "lea     rdx, [rax+1]; n", "add     rax, 1Fh", "mov     rsi, __old; src", "and     rax, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rax", "lea     rdi, [rsp+190h+attr_list+7]", "and     rdi, 0FFFFFFFFFFFFFFF0h; dest", "call    _memcpy", "mov     rdi, rax; file", "mov     r13, rax", "call    dir_len", "mov     r15, rax", "add     dirlen, 1Fh", "mov     rsi, dir; src", "and     rax, 0FFFFFFFFFFFFFFF0h", "mov     rdx, dirlen; n", "sub     rsp, rax", "lea     __old, [rsp+190h+attr_list+7]", "and     rbx, 0FFFFFFFFFFFFFFF0h", "mov     rdi, dst_dir; dest", "call    _memcpy", "mov     rax, [rbp+attr_list]", "mov     byte ptr [dst_dir+dirlen], 0", "mov     rsi, dst_dir; filename", "mov     edi, 1; ver", "mov     qword ptr [rax], 0", "lea     rax, [rbp+stats]", "mov     rdx, rax; stat_buf", "mov     [rbp+stat_buf], rax", "call    ___xstat", "test    eax, eax", "jz      loc_3400"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "mov~r14,src_offset", "push~rbx", "mov~r12,x", "mov~rbx,const_dir", "sub~rsp,<STR>", "mov~[rbp+0],attr_list_0", "mov~[rbp+0],new_dst_0", "mov~[rbp+0],verbose_fmt_string_0", "mov~verbose_fmt_string_0,<TAG>", "mov~[rbp+0],verbose_fmt_string_0", "xor~edx,edx", "call~FOO", "lea~rdx,[rax+0]", "add~rax,0", "mov~rsi,__old", "and~rax,0", "sub~rsp,rax", "lea~rdi,[rsp+0]", "and~rdi,0", "call~FOO", "mov~rdi,rax", "mov~r13,rax", "call~FOO", "mov~r15,rax", "add~dirlen,0", "mov~rsi,dir", "and~rax,0", "mov~rdx,dirlen", "sub~rsp,rax", "lea~__old,[rsp+0]", "and~rbx,0", "mov~rdi,dst_dir", "call~FOO", "mov~rax,[rbp+0]", "mov~<TAG>,0", "mov~rsi,dst_dir", "mov~edi,0", "mov~<TAG>,0", "lea~rax,[rbp+0]", "mov~rdx,rax", "mov~[rbp+0],rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 8, 3, 0.01764455782312925, ["mov     rdi, dir", "jmp     short loc_3446"], ["mov~rdi,dir", "jmp~FOO"]], [2, 0, 41, 0, 0, 4, 1, 1, 7, 4, 0.08227040816326531, ["mov     eax, [rbp+stats.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     loc_34C0"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [1, 0, 4, 0, 1, 5, 0, 1, 12, 3, 0.016581632653061226, ["mov     rdi, dir; name", "call    quote", "lea     rsi, aCannotMakeDire; \"cannot make directory %s\"", "mov     x, rax", "mov     edx, 5; category"], ["mov~rdi,dir", "call~FOO", "lea~rsi,<TAG>", "mov~x,rax", "mov~edx,0"]], [1, 0, 4, 0, 0, 2, 0, 0, 2, 3, 0.002125850340136054, ["mov     rax, [rbp+new_dst]", "mov     byte ptr [rax], 0"], ["mov~rax,[rbp+0]", "mov~<TAG>,0"]], [1, 0, 41, 0, 0, 2, 0, 0, 8, 5, 0.052295918367346934, ["mov     rax, [rbp+new_dst]", "mov     byte ptr [rax], 0"], ["mov~rax,[rbp+0]", "mov~<TAG>,0"]], [0, 0, 41, 0, 1, 4, 1, 2, 7, 3, 0.12457482993197279, ["call    ___errno_location", "mov     r8d, [rax]", "test    r8d, r8d", "jnz     loc_338C"], ["call~FOO", "mov~r8d,<TAG>", "test~r8d,r8d", "jnz~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 3, 2, 0.02317176870748299, ["mov     eax, 1"], ["mov~eax,0"]], [1, 0, 41, 0, 1, 5, 1, 2, 4, 3, 0.3565051020408163, ["mov     esi, 2Fh ; '/'; c", "call    _strchr", "test    rax, rax", "mov     rbx, rax", "jz      loc_341C"], ["mov~esi,0", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [1, 0, 41, 0, 1, 6, 1, 1, 13, 5, 0.0, ["mov     rdx, [rbp+slash]", "mov     rsi, rax", "mov     rcx, dir", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk"], ["mov~rdx,[rbp+0]", "mov~rsi,rax", "mov~rcx,dir", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 41, 0, 1, 5, 2, 2, 16, 4, 0.019770408163265304, ["or      esi, 1C0h; mode", "mov     rdi, dir; file", "call    _chmod", "test    eax, eax", "jz      loc_3147"], ["or~esi,0", "mov~rdi,dir", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 4, 1, 0.03996598639455782, ["mov     rcx, [rbp+var_38]", "xor     rcx, fs:28h", "jnz     loc_34DE"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 0, 3, 0, 3, 17, 4, 4, 8, 2, 0.00701530612244898, ["mov     rdi, [rbp+slash]; name", "mov     dword ptr [rbp+stat_buf], r8d", "call    quote", "lea     rsi, aFailedToGetAtt; \"failed to get attributes of %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     slash_0, rax", "call    _dcgettext", "mov     r8d, dword ptr [rbp+stat_buf]", "mov     rdx, rax; format", "mov     rcx, rbx", "xor     eax, eax", "xor     edi, edi; status", "mov     esi, r8d; errnum", "call    _error", "xor     eax, eax", "jmp     short loc_3421"], ["mov~rdi,[rbp+0]", "mov~[word ptr [rbp+0],r8d", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~slash_0,rax", "call~FOO", "mov~r8d,[word ptr [rbp+0]", "mov~rdx,rax", "mov~rcx,rbx", "xor~eax,eax", "xor~edi,edi", "mov~esi,r8d", "call~FOO", "xor~eax,eax", "jmp~FOO"]], [1, 0, 3, 0, 3, 14, 5, 4, 3, 2, 0.00701530612244898, ["call    quote", "lea     rsi, aSExistsButIsNo; \"%s exists but is not a directory\"", "mov     rbx, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     eax, eax", "xor     edi, edi; status", "call    _error", "xor     eax, eax", "jmp     short loc_3421"], ["call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "xor~eax,eax", "xor~edi,edi", "call~FOO", "xor~eax,eax", "jmp~FOO"]], [0, 0, 3, 0, 3, 12, 4, 4, 13, 2, 0.01764455782312925, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     slash_0, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r12", "xor     eax, eax", "mov     rdx, rbx; format", "xor     edi, edi; status", "call    _error", "xor     eax, eax", "jmp     loc_3421"], ["xor~edi,edi", "call~FOO", "mov~slash_0,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r12", "xor~eax,eax", "mov~rdx,rbx", "xor~edi,edi", "call~FOO", "xor~eax,eax", "jmp~FOO"]], [2, 0, 41, 1, 1, 31, 1, 2, 8, 5, 0.23044217687074828, ["mov     edi, 0A8h; n", "call    xmalloc", "movdqa  xmm0, xmmword ptr [rbp+src_st.st_dev]", "mov     r14, rax", "mov     rcx, [rbp+attr_list]", "movups  xmmword ptr [new], xmm0", "movdqa  xmm0, xmmword ptr [rbp+src_st.st_nlink]", "movups  xmmword ptr [new+10h], xmm0", "movdqa  xmm0, xmmword ptr [rbp+src_st.st_gid]", "movups  xmmword ptr [new+20h], xmm0", "movdqa  xmm0, xmmword ptr [rbp+src_st.st_size]", "movups  xmmword ptr [new+30h], xmm0", "movdqa  xmm0, xmmword ptr [rbp+src_st.st_blocks]", "movups  xmmword ptr [new+40h], xmm0", "movdqa  xmm0, xmmword ptr [rbp+src_st.st_atim.tv_nsec]", "movups  xmmword ptr [new+50h], xmm0", "movdqa  xmm0, xmmword ptr [rbp+src_st.st_mtim.tv_nsec]", "movups  xmmword ptr [new+60h], xmm0", "movdqa  xmm0, xmmword ptr [rbp+src_st.st_ctim.tv_nsec]", "movups  xmmword ptr [new+70h], xmm0", "movdqa  xmm0, xmmword ptr [rbp+src_st.__glibc_reserved+8]", "movups  xmmword ptr [new+80h], xmm0", "mov     new, slash_0", "mov     byte ptr [new+90h], 0", "sub     rax, dir", "test    r15d, r15d", "mov     [new+98h], rax", "mov     rax, [rcx]", "mov     [rcx], new", "mov     [new+0A0h], rax", "jz      loc_3127"], ["mov~edi,0", "call~FOO", "movdqa~xmm0,[mmword ptr [rbp+0]", "mov~r14,rax", "mov~rcx,[rbp+0]", "movups~<TAG>,xmm0", "movdqa~xmm0,[mmword ptr [rbp+0]", "movups~[mmword ptr [new+0],xmm0", "movdqa~xmm0,[mmword ptr [rbp+0]", "movups~[mmword ptr [new+0],xmm0", "movdqa~xmm0,[mmword ptr [rbp+0]", "movups~[mmword ptr [new+0],xmm0", "movdqa~xmm0,[mmword ptr [rbp+0]", "movups~[mmword ptr [new+0],xmm0", "movdqa~xmm0,[mmword ptr [rbp+0]", "movups~[mmword ptr [new+0],xmm0", "movdqa~xmm0,[mmword ptr [rbp+0]", "movups~[mmword ptr [new+0],xmm0", "movdqa~xmm0,[mmword ptr [rbp+0]", "movups~[mmword ptr [new+0],xmm0", "movdqa~xmm0,[mmword ptr [rbp+0]", "movups~[mmword ptr [new+0],xmm0", "mov~new,slash_0", "mov~[yte ptr [new+0],0", "sub~rax,dir", "test~r15d,r15d", "mov~[new+0],rax", "mov~rax,<TAG>", "mov~<TAG>,new", "mov~[new+0],rax", "jz~FOO"]], [1, 0, 41, 0, 1, 6, 1, 2, 13, 4, 0.19345238095238096, ["mov     rdx, [rbp+stat_buf]; stat_buf", "mov     rsi, dir; filename", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jnz     loc_34C5"], ["mov~rdx,[rbp+0]", "mov~rsi,dir", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 41, 0, 0, 3, 0, 0, 3, 4, 0.08503401360544217, ["lea     rax, [rbp+src_st]", "mov     [rbp+var_190], rax", "nop"], ["lea~rax,[rbp+0]", "mov~[rbp+0],rax", "nop"]], [0, 0, 42, 0, 0, 2, 0, 1, 2, 5, 0.033588435374149656, ["mov     slash_0, [rbp+slash]", "jmp     loc_30D1"], ["mov~slash_0,[rbp+0]", "jmp~FOO"]], [2, 0, 43, 1, 0, 3, 0, 1, 3, 5, 0.017857142857142856, ["add     slash_0, 1; s", "cmp     byte ptr [slash_0], 2Fh ; '/'", "jz      short loc_30C8"], ["add~slash_0,0", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 45, 0, 0, 4, 0, 1, 1, 6, 0.017006802721088433, ["lea     rdi, [dir+src_offset+0]", "cmp     byte ptr [src_0], 2Fh ; '/'", "mov     [rbp+slash], src_0", "jnz     loc_3476"], ["lea~rdi,[dir+0]", "cmp~<TAG>,0", "mov~[rbp+0],src_0", "jnz~FOO"]], [1, 0, 4, 0, 1, 6, 0, 2, 17, 3, 0.00701530612244898, ["mov     rdi, dir; name", "call    quote", "mov     edx, 5", "mov     x, rax", "lea     rsi, aSettingPermiss; \"setting permissions for %s\"", "jmp     loc_3499"], ["mov~rdi,dir", "call~FOO", "mov~edx,0", "mov~x,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 0, 0, 0, 8, 0, 0, 5, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     dir", "pop     r14", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~dir", "pop~r14", "pop~r15", "pop~rbp", "retn"]], [0, 0, 4, 0, 0, 1, 0, 0, 2, 3, 0.002125850340136054, ["mov     rdi, dst_dir; name"], ["mov~rdi,dst_dir"]], [0, 0, 43, 0, 0, 1, 0, 0, 2, 6, 0.0008503401360544217, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [2, 0, 41, 0, 0, 4, 0, 1, 9, 4, 0.24383503401360543, ["cmp     byte ptr [slash_0+1], 2Fh ; '/'", "lea     rdi, [slash_0+1]", "mov     byte ptr [rbx], 2Fh ; '/'", "jnz     short loc_30E0"], ["cmp~[yte ptr [slash_0+0],0", "lea~rdi,[slash_0+0]", "mov~<TAG>,0", "jnz~FOO"]], [2, 0, 41, 0, 0, 5, 1, 1, 16, 5, 0.04443027210884354, ["mov     edx, esi", "mov     eax, esi", "and     edx, 1C0h", "cmp     edx, 1C0h", "jz      loc_3147"], ["mov~edx,esi", "mov~eax,esi", "and~edx,0", "cmp~edx,0", "jz~FOO"]], [0, 0, 41, 0, 0, 1, 0, 0, 10, 6, 0.027636054421768707, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 41, 0, 0, 4, 1, 1, 15, 6, 0.05357142857142857, ["mov     eax, esi", "not     eax", "test    eax, r15d", "jnz     loc_33D8"], ["mov~eax,esi", "not~eax", "test~eax,r15d", "jnz~FOO"]], [1, 0, 4, 0, 1, 6, 0, 2, 14, 3, 0.00510204081632653, ["mov     rdi, dir; name", "call    quote", "mov     edx, 5", "mov     x, rax", "lea     rsi, aFailedToGetAtt; \"failed to get attributes of %s\"", "jmp     short loc_3499"], ["mov~rdi,dir", "call~FOO", "mov~edx,0", "mov~x,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [2, 0, 41, 1, 0, 3, 0, 1, 11, 5, 0.03018707482993197, ["add     slash_0, 1", "cmp     byte ptr [slash_0], 2Fh ; '/'", "jz      short loc_3158"], ["add~slash_0,0", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 41, 0, 0, 1, 0, 1, 12, 4, 0.03273809523809524, ["jmp     loc_30E0"], ["jmp~FOO"]], [1, 0, 41, 0, 0, 4, 1, 0, 10, 5, 0.09056122448979592, ["mov     r15d, eax", "and     r15d, 3Fh", "mov     esi, r15d", "not     esi"], ["mov~r15d,eax", "and~r15d,0", "mov~esi,r15d", "not~esi"]], [0, 1, 41, 0, 0, 5, 1, 1, 11, 5, 0.0, ["mov     r15d, eax", "and     r15d, 12h", "mov     esi, r15d", "not     esi", "jmp     loc_3268"], ["mov~r15d,eax", "and~r15d,<STR>", "mov~esi,r15d", "not~esi", "jmp~FOO"]], [0, 0, 41, 0, 0, 1, 0, 1, 17, 6, 0.007227891156462584, ["jmp     loc_32DB"], ["jmp~FOO"]], [0, 0, 41, 0, 1, 9, 2, 2, 16, 7, 0.02147108843537415, ["call    cached_umask", "mov     esi, [rbp+stats.st_mode]", "not     eax", "and     r15d, eax", "mov     edx, esi", "mov     eax, esi", "not     edx", "test    edx, r15d", "jnz     loc_32F1"], ["call~FOO", "mov~esi,[rbp+0]", "not~eax", "and~r15d,eax", "mov~edx,esi", "mov~eax,esi", "not~edx", "test~edx,r15d", "jnz~FOO"]]], "func_feature": [28, 47, 64, 2, 50, 74, 1, 296, 0.07468, 5, 8], "succs": [[28, 4], [0, 19], [6, 47], [2, 46], [25], [29, 22], [16, 5], [8, 1], [1, 15], [38, 23], [9, 41], [9], [17, 36], [33, 12], [26], [18, 14], [27], [20], [38], [25, 28], [24], [20, 7], [29], [34, 38], [43, 35], [24], [24], [24], [3, 15], [10, 42], [21], [30], [32, 30], [37, 31], [27], [], [26], [32], [40, 21], [11, 38], [44], [49, 39], [27], [], [44, 45], [21], [6], [6], [39], [48, 11]], "fname": "make_dir_parents_private", "n_num": 50}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[1, 0, 21, 0, 0, 2, 0, 1, 0, 0, 0.13095238095238096, ["cmp     byte ptr [p+90h], 0", "jnz     loc_36A8"], ["cmp~[yte ptr [p+0],0", "jnz~FOO"]], [1, 0, 21, 0, 1, 7, 1, 2, 6, 5, 0.05411255411255411, ["mov     edx, [p+20h]; group", "mov     esi, 0FFFFFFFFh; owner", "mov     rdi, dst_name; file", "call    _lchown", "movzx   r14d, byte ptr [x+1Dh]", "test    r14b, r14b", "jz      loc_3579"], ["mov~edx,[p+0]", "mov~esi,0", "mov~rdi,dst_name", "call~FOO", "movzx~r14d,[yte ptr [x+0]", "test~r14b,r14b", "jz~FOO"]], [0, 0, 21, 0, 0, 3, 1, 1, 4, 4, 0.15043290043290045, ["movzx   r14d, byte ptr [x+1Dh]", "test    r14b, r14b", "jnz     loc_3680"], ["movzx~r14d,[yte ptr [x+0]", "test~r14b,r14b", "jnz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.08658008658008658, ["mov     rcx, [rbp+var_38]", "xor     rcx, fs:28h", "mov     eax, r14d", "jnz     short loc_3738"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "mov~eax,r14d", "jnz~FOO"]], [1, 0, 3, 0, 4, 17, 4, 5, 4, 2, 0.01948051948051948, ["mov     rdi, dst_name; name", "xor     r14d, r14d", "call    quote", "lea     rsi, aFailedToPreser; \"failed to preserve times for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     dst_name, rax", "call    _dcgettext", "mov     p, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r12", "mov     rdx, rbx; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_36FE"], ["mov~rdi,dst_name", "xor~r14d,r14d", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~dst_name,rax", "call~FOO", "mov~p,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r12", "mov~rdx,rbx", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 6, 2, 0.032467532467532464, ["xor     r14d, r14d", "jmp     short loc_36FE"], ["xor~r14d,r14d", "jmp~FOO"]], [0, 0, 3, 0, 3, 11, 3, 4, 7, 2, 0.025974025974025976, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     p, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r12", "mov     rdx, rbx; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     short loc_36FE"], ["xor~edi,edi", "call~FOO", "mov~p,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r12", "mov~rdx,rbx", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 1, 2, 0.025974025974025976, ["mov     r14d, 1"], ["mov~r14d,0"]], [1, 0, 21, 0, 1, 8, 1, 2, 5, 3, 0.11904761904761904, ["mov     r8d, [p+18h]; mode", "mov     rdi, [rbp+src_name]; src_name", "mov     ecx, 0FFFFFFFFh; dest_desc", "mov     rdx, dst_name; dst_name", "mov     esi, ecx; source_desc", "call    copy_acl", "test    eax, eax", "jz      loc_3586"], ["mov~r8d,[p+0]", "mov~rdi,[rbp+0]", "mov~ecx,0", "mov~rdx,dst_name", "mov~esi,ecx", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 21, 0, 0, 1, 0, 0, 7, 4, 0.011904761904761904, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 21, 0, 0, 5, 1, 1, 6, 3, 0.21861471861471862, ["mov     rax, [p+98h]", "mov     byte ptr [dst_name+rax], 2Fh ; '/'", "mov     p, [p+0A0h]", "test    p, p", "jz      loc_36F8"], ["mov~rax,[p+0]", "mov~<TAG>,0", "mov~p,[p+0]", "test~p,p", "jz~FOO"]], [0, 0, 21, 0, 1, 5, 1, 2, 6, 4, 0.03463203463203463, ["mov     esi, [p+18h]; mode", "mov     rdi, dst_name; file", "call    _chmod", "test    eax, eax", "jz      loc_3586"], ["mov~esi,[p+0]", "mov~rdi,dst_name", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 0, 8, 0, 0, 3, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     x", "pop     r14", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~x", "pop~r14", "pop~r15", "pop~rbp", "retn"]], [2, 0, 21, 0, 0, 4, 0, 1, 2, 4, 0.2683982683982684, ["cmp     byte ptr [x+1Eh], 0", "mov     rax, [p+98h]", "mov     byte ptr [dst_name+rax], 0", "jz      short loc_3560"], ["cmp~[yte ptr [x+0],0", "mov~rax,[p+0]", "mov~<TAG>,0", "jz~FOO"]], [0, 0, 21, 0, 0, 2, 0, 1, 1, 5, 0.0367965367965368, ["lea     r15, [rbp+timespec]", "jmp     short loc_35A2"], ["lea~r15,[rbp+0]", "jmp~FOO"]], [1, 0, 4, 0, 1, 6, 0, 2, 6, 3, 0.031385281385281384, ["mov     rdi, dst_name; name", "call    quote", "mov     edx, 5", "mov     dst_name, rax", "lea     rsi, aFailedToPreser_1; \"failed to preserve ownership for %s\"", "jmp     short loc_36D2"], ["mov~rdi,dst_name", "call~FOO", "mov~edx,0", "mov~dst_name,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 21, 0, 1, 5, 1, 2, 5, 4, 0.10064935064935066, ["mov     rdi, x; x", "call    chown_failure_ok", "test    al, al", "mov     r14d, eax", "jz      loc_371F"], ["mov~rdi,x", "call~FOO", "test~al,al", "mov~r14d,eax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 21, 0, 1, 6, 1, 2, 4, 5, 0.11471861471861472, ["mov     edx, [p+20h]; group", "mov     esi, [p+1Ch]; owner", "mov     rdi, dst_name; file", "call    _lchown", "test    eax, eax", "jz      loc_356B"], ["mov~edx,[p+0]", "mov~esi,[p+0]", "mov~rdi,dst_name", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 3, 5, 0.24891774891774893, ["cmp     byte ptr [x+1Ch], 0", "jnz     loc_3630"], ["cmp~[yte ptr [x+0],0", "jnz~FOO"]], [0, 0, 21, 0, 1, 13, 1, 2, 3, 3, 0.04112554112554113, ["mov     rax, [p+50h]", "mov     rdx, [p+48h]", "mov     rsi, r15; timespec", "mov     rdi, dst_name; file", "mov     [rbp+timespec.tv_sec], rdx", "mov     [rbp+timespec.tv_nsec], rax", "mov     rdx, [p+58h]", "mov     rax, [p+60h]", "mov     [rbp+timespec.tv_sec+10h], rdx", "mov     [rbp+timespec.tv_nsec+10h], rax", "call    utimens", "test    eax, eax", "jz      loc_3560"], ["mov~rax,[p+0]", "mov~rdx,[p+0]", "mov~rsi,r15", "mov~rdi,dst_name", "mov~[rbp+0],rdx", "mov~[rbp+0],rax", "mov~rdx,[p+0]", "mov~rax,[p+0]", "mov~[rbp+0],rdx", "mov~[rbp+0],rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [3, 1, 22, 4, 2, 29, 4, 3, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "mov     r14, src_offset", "push    rbx", "mov     r12, const_dst_name", "mov     rbx, attr_list", "mov     r13, x", "sub     rsp, 48h", "mov     rax, fs:28h", "mov     [rbp+var_38], rax", "xor     eax, eax", "call    _strlen", "lea     rdx, [rax+1]; n", "add     rax, 1Fh", "mov     rsi, __old; src", "and     rax, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rax", "lea     rdi, [rsp+70h+src_name+7]", "and     rdi, 0FFFFFFFFFFFFFFF0h; dest", "call    _memcpy", "mov     __old, rax", "add     dst_name, src_offset", "test    attr_list, attr_list", "mov     [rbp+src_name], rax", "jz      loc_36F8"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "mov~r14,src_offset", "push~rbx", "mov~r12,const_dst_name", "mov~rbx,attr_list", "mov~r13,x", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "call~FOO", "lea~rdx,[rax+0]", "add~rax,0", "mov~rsi,__old", "and~rax,0", "sub~rsp,rax", "lea~rdi,[rsp+0]", "and~rdi,0", "call~FOO", "mov~__old,rax", "add~dst_name,src_offset", "test~attr_list,attr_list", "mov~[rbp+0],rax", "jz~FOO"]], [1, 0, 4, 0, 1, 5, 0, 1, 7, 3, 0.011904761904761904, ["mov     rdi, dst_name; name", "call    quote", "lea     rsi, aFailedToPreser_0; \"failed to preserve permissions for %s\"", "mov     dst_name, rax", "mov     edx, 5; category"], ["mov~rdi,dst_name", "call~FOO", "lea~rsi,<TAG>", "mov~dst_name,rax", "mov~edx,0"]]], "func_feature": [18, 21, 36, 1, 23, 34, 1, 147, 0.0767, 4, 4], "succs": [[10, 11], [0, 9], [0, 8], [17, 12], [3], [3], [3], [3], [10, 5], [8], [13, 7], [10, 22], [], [19, 20], [13], [6], [1, 15], [], [16, 2], [18, 2], [19, 4], [14, 7], [6]], "fname": "re_protect", "n_num": 23}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 18, 0, 1, 3, 0, 1, 0, 0, 0.00272133526850508, ["mov     rdi, [rbp+target_directory]; string", "call    xstrdup", "mov     r13, rax"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~r13,rax"]], [3, 0, 18, 1, 3, 18, 2, 4, 7, -1, 0.018867924528301886, ["sub     rsp, rax", "mov     rsi, __old; src", "lea     rdi, [rsp+110h+base_in_result+7]", "and     rdi, 0FFFFFFFFFFFFFFF0h; dest", "call    _memcpy", "mov     rdi, tmp_abns_; name", "call    last_component", "mov     rdi, rax; file", "mov     r13, rax", "call    strip_trailing_slashes", "lea     rdi, asc_1242A; \"..\"", "mov     ecx, 3", "mov     rsi, arg_base", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     loc_3EB0"], ["sub~rsp,rax", "mov~rsi,__old", "lea~rdi,[rsp+0]", "and~rdi,0", "call~FOO", "mov~rdi,tmp_abns_", "call~FOO", "mov~rdi,rax", "mov~r13,rax", "call~FOO", "lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,arg_base", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [0, 0, 18, 0, 1, 3, 0, 1, 11, -1, 0.0, ["mov     rax, [p+0A0h]", "mov     [rbp+attr_list], rax", "call    free"], ["mov~rax,[p+0]", "mov~[rbp+0],rax", "call~FOO"]], [0, 0, 18, 0, 0, 3, 1, 1, 10, -1, 0.024310595065312045, ["mov     rdi, [rbp+attr_list]; ptr", "test    rdi, rdi", "jnz     short loc_3E78"], ["mov~rdi,[rbp+0]", "test~rdi,rdi", "jnz~FOO"]], [3, 0, 24, 0, 2, 11, 3, 3, 3, -1, 0.007801161103047896, ["lea     rsi, aCannotCombineT; \"Cannot combine --target-directory (-t) \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "cmp     r12d, 2", "jg      loc_3EE7"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "cmp~r12d,0", "jg~FOO"]], [1, 0, 36, 0, 0, 2, 0, 1, 2, -1, 0.007438316400580552, ["cmp     [rbp+target_directory], 0", "jz      loc_3EDE"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 1, 0, 2, 8, 4, 3, 3, -1, 0.005805515239477504, ["xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_3F17"], ["xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 2, 0, 0, 3, 0, 1, 2, 0, 0.0010885341074020319, ["mov     edx, 5", "lea     rsi, aMissingFileOpe; \"missing file operand\"", "jmp     short loc_3F82"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 2, 0, 0, 2, 0, 0, 5, -1, 0.010522496371552975, ["lea     rsi, aWithParentsThe; \"with --parents, the destination must be\"...", "mov     edx, 5; category"], ["lea~rsi,<TAG>", "mov~edx,0"]], [1, 0, 13, 0, 0, 4, 0, 1, 4, -1, 0.07365747460087083, ["cmp     cs:parents_option, 0", "mov     r12, [file]", "mov     file, [file+8]", "jnz     loc_3F76"], ["cmp~<TAG>,0", "mov~r12,<TAG>", "mov~file,[file+0]", "jnz~FOO"]], [1, 0, 42, 0, 0, 2, 0, 1, 3, -1, 0.020500725689404933, ["cmp     edi, 1", "jz      loc_3DB4"], ["cmp~edi,0", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 6, -1, 0.034107402031930335, ["cmp     r12d, 2", "jz      short loc_3DB4"], ["cmp~r12d,0", "jz~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 3, -1, 0.010522496371552975, ["cmp     edi, 2", "jle     loc_3DB4"], ["cmp~edi,0", "jle~FOO"]], [0, 0, 14, 0, 0, 1, 0, 1, 7, -1, 0.0050798258345428155, ["jmp     loc_3DB4"], ["jmp~FOO"]], [2, 0, 14, 0, 3, 13, 3, 3, 7, -1, 0.0, ["mov     rdi, [r13+0]; name", "call    quote", "lea     rsi, aTargetSIsNotAD; \"target %s is not a directory\"", "mov     n_files, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rax; format", "xor     esi, esi; errnum", "mov     edi, 1; status", "xor     eax, eax", "call    _error"], ["mov~rdi,[r13+0]", "call~FOO", "lea~rsi,<TAG>", "mov~n_files,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,r12", "mov~rdx,rax", "xor~esi,esi", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 8, -1, 0.01451378809869376, ["cmp     [rbp+new_dst], 0", "jnz     short loc_3E31"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 7, 0, 1, 5, 1, 2, 7, -1, 0.020682148040638608, ["mov     rsi, dest; s2", "mov     rdi, source; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_3E31"], ["mov~rsi,dest", "mov~rdi,source", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 3, -1, 0.0627721335268505, ["cmp     r12d, 1", "jnz     loc_3EC9"], ["cmp~r12d,0", "jnz~FOO"]], [1, 0, 43, 0, 0, 2, 0, 1, 2, -1, 0.02558055152394775, ["cmp     [rbp+target_directory], 0", "jnz     loc_3B0E"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 33, 1, 0, 6, 1, 1, 6, -1, 0.028664731494920173, ["sub     r12d, 1", "movsxd  rax, r12d", "mov     rax, [file+rax*8]", "test    rax, rax", "mov     [rbp+target_directory], rax", "jnz     loc_3B0E"], ["sub~r12d,0", "movsxd~rax,r12d", "mov~rax,<TAG>", "test~rax,rax", "mov~[rbp+0],rax", "jnz~FOO"]], [1, 0, 41, 0, 1, 9, 1, 2, 4, -1, 0.019593613933236574, ["movsxd  rax, edi", "lea     target_directory_0, [rbp+sb]; stat_buf", "mov     edi, 1; ver", "lea     r13, [file+rax*8-8]", "mov     r15, [r13+0]", "mov     rsi, r15; filename", "call    ___xstat", "test    eax, eax", "jz      loc_3F21"], ["movsxd~rax,edi", "lea~target_directory_0,[rbp+0]", "mov~edi,0", "lea~r13,[file+0]", "mov~r15,[r13+0]", "mov~rsi,r15", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 18, 0, 0, 1, 0, 1, 11, -1, 0.01088534107402032, ["jmp     loc_3BDA"], ["jmp~FOO"]], [0, 0, 1, 0, 2, 8, 4, 2, 3, -1, 0.0025399129172714078, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [1, 0, 2, 0, 1, 6, 0, 2, 2, -1, 0.0010885341074020319, ["mov     rdi, [file]; name", "call    quote", "mov     edx, 5", "mov     file, rax", "lea     rsi, aMissingDestina; \"missing destination file operand after \"...", "jmp     short loc_3EFF"], ["mov~rdi,<TAG>", "call~FOO", "mov~edx,0", "mov~file,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 2, 0, 1, 5, 0, 1, 4, -1, 0.002902757619738752, ["mov     rdi, [file+10h]; name", "call    quote", "lea     rsi, aExtraOperandS; \"extra operand %s\"", "mov     file, rax", "mov     edx, 5; category"], ["mov~rdi,[file+0]", "call~FOO", "lea~rsi,<TAG>", "mov~file,rax", "mov~edx,0"]], [1, 0, 0, 0, 1, 2, 0, 1, 4, -1, 0.0, ["mov     edi, 1; status", "call    usage"], ["mov~edi,0", "call~FOO"]], [0, 0, 40, 0, 1, 4, 1, 2, 5, -1, 0.00544267053701016, ["call    ___errno_location", "mov     r8d, [rax]", "test    r8d, r8d", "jz      loc_3F21"], ["call~FOO", "mov~r8d,<TAG>", "test~r8d,r8d", "jz~FOO"]], [0, 0, 18, 0, 1, 3, 0, 2, 6, -1, 0.0, ["mov     rdi, arg; file", "call    strip_trailing_slashes", "jmp     loc_3C0E"], ["mov~rdi,arg", "call~FOO", "jmp~FOO"]], [2, 0, 18, 0, 0, 4, 0, 1, 5, -1, 0.10631349782293179, ["cmp     cs:remove_trailing_slashes, 0", "mov     [rbp+unused], 0", "mov     r12, [rbx]", "jnz     loc_3EA0"], ["cmp~<TAG>,0", "mov~[rbp+0],0", "mov~r12,<TAG>", "jnz~FOO"]], [3, 0, 18, 1, 1, 7, 1, 2, 6, -1, 0.09905660377358491, ["mov     rdi, arg; s", "call    _strlen", "lea     rdx, [rax+1]; n", "add     rax, 1Fh", "and     rax, 0FFFFFFFFFFFFFFF0h", "cmp     cs:parents_option, 0", "jnz     loc_3B50"], ["mov~rdi,arg", "call~FOO", "lea~rdx,[rax+0]", "add~rax,0", "and~rax,0", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 18, 0, 1, 10, 2, 2, 8, -1, 0.043178519593613934, ["movzx   edx, [rbp+new_dst]; nonexistent_dst", "mov     r8, [rbp+var_110]; copy_into_self", "xor     r9d, r9d; rename_succeeded", "mov     rcx, x; options", "mov     rsi, dst_name; dst_name", "mov     rdi, arg; src_name", "call    copy", "and     r15d, eax", "cmp     cs:parents_option, 0", "jz      loc_3BDA"], ["movzx~edx,[rbp+0]", "mov~r8,[rbp+0]", "xor~r9d,r9d", "mov~rcx,x", "mov~rsi,dst_name", "mov~rdi,arg", "call~FOO", "and~r15d,eax", "cmp~<TAG>,0", "jz~FOO"]], [3, 0, 18, 2, 4, 26, 2, 5, 7, -1, 0.06676342525399129, ["sub     rsp, rax", "mov     rsi, __old; src", "lea     rdi, [rsp+110h+base_in_result+7]", "and     rdi, 0FFFFFFFFFFFFFFF0h; dest", "call    _memcpy", "mov     rdi, rax; file", "mov     r13, rax", "call    strip_trailing_slashes", "mov     rdx, [rbp+base_in_result]; base_in_result", "mov     rdi, [rbp+target_directory]; dir", "mov     rsi, arg_no_trailing_slash; abase", "call    file_name_concat", "cmp     byte ptr [x+27h], 0", "mov     rsi, [rbp+unused]", "mov     arg_no_trailing_slash, rax", "lea     dst_name, verbose_fmt_string; \"%s -> %s\\n\"", "mov     edx, 0", "lea     rcx, [rbp+attr_list]; attr_list", "lea     r8, [rbp+new_dst]; new_dst", "mov     r9, x; x", "mov     rdi, dst_name; const_dir", "cmovnz  rdx, rax; verbose_fmt_string", "sub     rsi, dst_name; src_offset", "call    make_dir_parents_private", "test    al, al", "jnz     loc_3C83"], ["sub~rsp,rax", "mov~rsi,__old", "lea~rdi,[rsp+0]", "and~rdi,0", "call~FOO", "mov~rdi,rax", "mov~r13,rax", "call~FOO", "mov~rdx,[rbp+0]", "mov~rdi,[rbp+0]", "mov~rsi,arg_no_trailing_slash", "call~FOO", "cmp~[yte ptr [x+0],0", "mov~rsi,[rbp+0]", "mov~arg_no_trailing_slash,rax", "lea~dst_name,<TAG>", "mov~edx,0", "lea~rcx,[rbp+0]", "lea~r8,[rbp+0]", "mov~r9,x", "mov~rdi,dst_name", "cmovnz~rdx,rax", "sub~rsi,dst_name", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 18, 0, 1, 6, 1, 2, 8, -1, 0.00272133526850508, ["mov     rdi, [rbp+target_directory]; dir", "mov     rsi, r13; abase", "xor     edx, edx; base_in_result", "call    file_name_concat", "mov     r13, rax", "jmp     loc_3C83"], ["mov~rdi,[rbp+0]", "mov~rsi,r13", "xor~edx,edx", "call~FOO", "mov~r13,rax", "jmp~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 6, -1, 0.0043541364296081275, ["cmp     r8d, 2", "jz      short loc_3D74"], ["cmp~r8d,0", "jz~FOO"]], [1, 0, 18, 0, 0, 9, 0, 1, 4, -1, 0.068577648766328, ["lea     eax, [n_files-1]", "mov     r15d, 1", "lea     rax, [file+rax*8+8]", "mov     [rbp+var_100], rax", "lea     rax, [rbp+copy_into_self]", "mov     [rbp+var_110], rax", "lea     rax, [rbp+unused]", "mov     [rbp+base_in_result], rax", "jmp     loc_3BF3"], ["lea~eax,[n_files-1]+0]", "mov~r15d,0", "lea~rax,[file+0]", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 18, 1, 1, 5, 0, 2, 9, -1, 0.05551523947750363, ["mov     rdi, dst_name; ptr", "add     rbx, 8", "call    free", "cmp     [rbp+var_100], rbx", "jz      loc_3E4E"], ["mov~rdi,dst_name", "add~rbx,0", "call~FOO", "cmp~[rbp+0],rbx", "jz~FOO"]], [1, 0, 5, 1, 0, 2, 0, 1, 1, 1, 0.00181422351233672, ["sub     r12d, 1", "jnz     short loc_3FA1"], ["sub~r12d,0", "jnz~FOO"]], [2, 0, 36, 0, 0, 4, 1, 1, 5, -1, 0.038461538461538464, ["mov     eax, [rbp+sb.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     loc_3D7B"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [2, 0, 53, 1, 0, 20, 3, 1, 0, 2, 0.0, ["push    rbp", "xor     eax, eax", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "mov     r12d, edi", "push    rbx", "mov     rbx, file", "sub     rsp, 0E8h", "mov     [rbp+target_directory], target_directory_0", "mov     [rbp+new_dst], 0", "mov     file, fs:28h", "mov     [rbp+var_38], file", "xor     esi, esi", "test    target_directory_0, target_directory_0", "setz    al", "cmp     eax, edi", "jge     loc_3F57"], ["push~rbp", "xor~eax,eax", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "mov~r12d,edi", "push~rbx", "mov~rbx,file", "sub~rsp,0", "mov~[rbp+0],target_directory_0", "mov~[rbp+0],0", "mov~file,<TAG>", "mov~[rbp+0],file", "xor~esi,esi", "test~target_directory_0,target_directory_0", "setz~al", "cmp~eax,edi", "jge~FOO"]], [0, 0, 3, 0, 1, 8, 2, 1, 6, -1, 0.025036284470246733, ["lea     r8, [rbp+unused]; copy_into_self", "xor     r9d, r9d; rename_succeeded", "mov     rcx, x; options", "xor     edx, edx; nonexistent_dst", "mov     rsi, new_dest; dst_name", "mov     rdi, source; src_name", "call    copy", "mov     r15d, eax"], ["lea~r8,[rbp+0]", "xor~r9d,r9d", "mov~rcx,x", "xor~edx,edx", "mov~rsi,new_dest", "mov~rdi,source", "call~FOO", "mov~r15d,eax"]], [1, 0, 9, 0, 0, 2, 0, 1, 5, -1, 0.05551523947750363, ["cmp     byte ptr [x+16h], 0", "jz      short loc_3E31"], ["cmp~[yte ptr [x+0],0", "jz~FOO"]], [0, 0, 8, 0, 0, 3, 1, 1, 6, -1, 0.026124818577648767, ["mov     r13d, [x]", "test    r13d, r13d", "jz      short loc_3E31"], ["mov~r13d,<TAG>", "test~r13d,r13d", "jz~FOO"]], [2, 0, 5, 0, 0, 4, 1, 1, 9, -1, 0.007619738751814224, ["mov     eax, [rbp+sb.st_mode]", "and     eax, 0F000h", "cmp     eax, 8000h", "jnz     short loc_3E31"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [2, 0, 4, 0, 1, 10, 0, 1, 10, -1, 0.0, ["mov     rdi, dest; file", "mov     esi, r13d; backup_type", "call    find_backup_file_name", "mov     rsi, x", "lea     x, x_tmp_6693", "lea     rdi, x_tmp_6693", "mov     ecx, 10h", "mov     dest, rax", "rep movsd", "mov     cs:x_tmp_6693.backup_type, 0"], ["mov~rdi,dest", "mov~esi,r13d", "call~FOO", "mov~rsi,x", "lea~x,<TAG>", "lea~rdi,<TAG>", "mov~ecx,0", "mov~dest,rax", "movsd~<TAG>,<TAG>", "mov~<TAG>,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 7, -1, 0.031204644412191583, ["mov     rcx, [rbp+var_38]", "xor     rcx, fs:28h", "mov     eax, r15d", "jnz     loc_3F9C"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "mov~eax,r15d", "jnz~FOO"]], [0, 0, 19, 0, 2, 5, 0, 3, 4, -1, 0.0, ["mov     rdi, x; x", "call    dest_info_init", "mov     rdi, x; x", "call    src_info_init", "jmp     loc_3B18"], ["mov~rdi,x", "call~FOO", "mov~rdi,x", "call~FOO", "jmp~FOO"]], [0, 0, 49, 0, 0, 3, 1, 1, 1, -1, 0.016690856313497822, ["test    cl, cl", "mov     r14, x", "jz      loc_3CDD"], ["test~cl,cl", "mov~r14,x", "jz~FOO"]], [0, 0, 18, 0, 0, 2, 1, 0, 8, -1, 0.027939042089985485, ["movzx   eax, cs:parents_option", "xor     r15d, r15d"], ["movzx~eax,<TAG>", "xor~r15d,r15d"]], [0, 0, 18, 0, 0, 2, 1, 1, 9, -1, 0.036284470246734396, ["test    al, al", "jnz     loc_3E8B"], ["test~al,al", "jnz~FOO"]], [0, 0, 18, 1, 1, 9, 1, 2, 9, -1, 0.005805515239477504, ["mov     rsi, [rbp+unused]", "mov     rdx, [rbp+attr_list]; attr_list", "mov     rcx, x; x", "mov     rdi, dst_name; const_dst_name", "sub     rsi, dst_name; src_offset", "call    re_protect", "and     r15d, eax", "movzx   eax, cs:parents_option", "jmp     loc_3BD2"], ["mov~rsi,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rcx,x", "mov~rdi,dst_name", "sub~rsi,dst_name", "call~FOO", "and~r15d,eax", "movzx~eax,<TAG>", "jmp~FOO"]], [2, 0, 17, 0, 3, 15, 2, 3, 7, -1, 0.0, ["mov     rdi, r15; name", "mov     dword ptr [rbp+target_directory], r8d", "call    quote", "lea     rsi, aAccessingS; \"accessing %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r15, rax", "call    _dcgettext", "mov     r8d, dword ptr [rbp+target_directory]", "mov     rdx, rax; format", "mov     rcx, r15", "mov     edi, 1; status", "xor     eax, eax", "mov     esi, r8d; errnum", "call    _error"], ["mov~rdi,r15", "mov~[word ptr [rbp+0],r8d", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r15,rax", "call~FOO", "mov~r8d,[word ptr [rbp+0]", "mov~rdx,rax", "mov~rcx,r15", "mov~edi,0", "xor~eax,eax", "mov~esi,r8d", "call~FOO"]], [0, 0, 0, 0, 0, 8, 0, 0, 8, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     r13", "pop     x", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~r13", "pop~x", "pop~r15", "pop~rbp", "retn"]], [1, 0, 16, 0, 0, 1, 0, 0, 7, -1, 0.011611030478955007, ["mov     [rbp+new_dst], 1"], ["mov~[rbp+0],0"]]], "func_feature": [38, 42, 78, 3, 54, 81, 1, 304, 0.02125, 13, 9], "succs": [[30], [0, 32], [3], [2, 21], [24, 17], [12, 4], [25], [6], [6], [40, 8], [9, 20], [9, 14], [24, 9], [9], [9], [42, 39], [39, 15], [34, 46], [17, 10], [17, 13], [26, 37], [35], [25], [22], [22], [], [33, 37], [29], [27, 29], [1, 31], [50, 35], [48, 30], [30], [51, 53], [28], [28, 45], [7, 23], [11, 19], [36, 47], [45], [41, 39], [16, 39], [43, 39], [39], [], [52, 44], [34], [18, 5], [49], [3, 35], [49], [53], [], [11]], "fname": "do_copy", "n_num": 54}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [3, 0, 1, 0, 2, 14, 2, 3, 0, 0, 0.0, ["push    rbx", "call    ___errno_location", "lea     rsi, aFailedToRestor; \"failed to restore the default file crea\"...", "mov     rbx, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     dword ptr [rax], 5Fh ; '_'", "call    _dcgettext", "mov     esi, [rbx]; errnum", "mov     rdx, rax; format", "mov     edi, 1; status", "pop     rbx", "xor     eax, eax", "jmp     _error"], ["push~rbx", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0", "xor~edi,edi", "mov~<TAG>,0", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rax", "mov~edi,0", "pop~rbx", "xor~eax,eax", "jmp~FOO"]]], "func_feature": [2, 2, 3, 0, 2, 1, 2, 14, 0.0, 1, 0], "succs": [[], [0]], "fname": "restore_default_fscreatecon_or_die", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 2, 0, 1, 5, 1, 2, 0, 0, 0.16666666666666666, ["push    rbx", "mov     rbx, file", "call    can_write_any_file", "test    al, al", "jz      short loc_4020"], ["push~rbx", "mov~rbx,file", "call~FOO", "test~al,al", "jz~FOO"]], [1, 1, 4, 0, 0, 3, 1, 1, 0, 2, 0.0, ["and     esi, 0F000h", "cmp     esi, 0A000h", "jz      short loc_4018"], ["and~esi,0", "cmp~esi,<STR>", "jz~FOO"]], [1, 0, 0, 0, 1, 7, 1, 1, 2, 0, 0.0, ["mov     rdi, file; name", "mov     esi, 2; type", "call    _euidaccess", "test    eax, eax", "setz    al", "pop     file", "retn"], ["mov~rdi,file", "mov~esi,0", "call~FOO", "test~eax,eax", "setz~al", "pop~file", "retn"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [1, 0, 0, 0, 0, 3, 0, 0, 2, -1, 0.0, ["mov     eax, 1", "pop     file", "retn"], ["mov~eax,0", "pop~file", "retn"]]], "func_feature": [2, 3, 4, 0, 5, 4, 2, 20, 0.03333, 0, 0], "succs": [[2, 4], [0, 3], [], [], []], "fname": "writable_destination", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[2, 0, 4, 0, 3, 12, 2, 3, 0, 0, 0.0, ["mov     rdi, backup_dst_name; name", "call    quote", "lea     rsi, aBackupS; \" (backup: %s)\"", "mov     backup_dst_name, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, rbx", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk"], ["mov~rdi,backup_dst_name", "call~FOO", "lea~rsi,<TAG>", "mov~backup_dst_name,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rdx,rbx", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [2, 0, 5, 0, 3, 19, 3, 4, 0, 2, 0.0, ["push    r12", "push    rbp", "mov     r12, src", "push    rbx", "mov     edi, 1; n", "mov     rbx, backup_dst_name", "call    quote_n", "xor     edi, edi; n", "mov     rsi, src; name", "mov     rbp, rax", "call    quote_n", "lea     rsi, aSS_0; \"%s -> %s\"", "mov     rdx, rax", "mov     rcx, rbp", "xor     eax, eax", "mov     edi, 1", "call    ___printf_chk", "test    backup_dst_name, backup_dst_name", "jz      short loc_40AF"], ["push~r12", "push~rbp", "mov~r12,src", "push~rbx", "mov~edi,0", "mov~rbx,backup_dst_name", "call~FOO", "xor~edi,edi", "mov~rsi,src", "mov~rbp,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rdx,rax", "mov~rcx,rbp", "xor~eax,eax", "mov~edi,0", "call~FOO", "test~backup_dst_name,backup_dst_name", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [1, 0, 1, 0, 0, 5, 0, 1, 2, 0, 0.15000000000000002, ["pop     rbx", "pop     rbp", "pop     src", "mov     esi, 0Ah; int", "jmp     ___overflow"], ["pop~rbx", "pop~rbp", "pop~src", "mov~esi,0", "jmp~FOO"]], [1, 0, 0, 0, 0, 7, 0, 0, 2, -1, 0.0, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah", "pop     rbx", "pop     rbp", "pop     src", "retn"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0", "pop~rbx", "pop~rbp", "pop~src", "retn"]], [0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 0.30000000000000004, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_40D0"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]]], "func_feature": [6, 5, 8, 0, 6, 6, 3, 47, 0.075, 3, 0], "succs": [[5], [0, 5], [], [2], [], [3, 4]], "fname": "emit_verbose", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 0, 0.30000000000000004, ["mov     rax, [rsp+48h+var_30]", "xor     rax, fs:28h", "jnz     loc_41E3"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [2, 0, 3, 0, 3, 15, 2, 3, 1, 0, 0.07500000000000001, ["mov     rdi, dst_name; name", "call    quote", "lea     rsi, aSOverwriteS; \"%s: overwrite %s? \"", "mov     dst_name, cs:program_name", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbp, rax", "call    _dcgettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     r8, rbp", "mov     rcx, rbx", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk"], ["mov~rdi,dst_name", "call~FOO", "lea~rsi,<TAG>", "mov~dst_name,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbp,rax", "call~FOO", "mov~rdi,<TAG>", "mov~rdx,rax", "mov~r8,rbp", "mov~rcx,rbx", "mov~esi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 5, 1, 1, 14, 2, 2, 0, 0, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbp, rsi", "mov     rbx, dst_name", "sub     rsp, 28h", "mov     esi, [rsi]; mode", "mov     rax, fs:28h", "mov     [rsp+48h+var_30], rax", "xor     eax, eax", "call    writable_destination", "test    al, al", "jz      short loc_4170"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbp,rsi", "mov~rbx,dst_name", "sub~rsp,0", "mov~esi,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 3, 0, 0.0, ["add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [5, 1, 3, 2, 4, 29, 3, 5, 1, 0, 0.07500000000000001, ["lea     r12, [rsp+48h+perms]", "mov     edi, [rbp+0]; mode", "mov     rsi, r12; str", "add     r12, 1", "call    strmode", "mov     rdi, dst_name; name", "mov     [rsp+48h+perms+0Ah], 0", "mov     ebp, [rbp+0]", "call    quote", "lea     rsi, aSTryToOverwrit; \"%s: try to overwrite %s, overriding mod\"...", "mov     dst_name, cs:program_name", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r13, rax", "and     ebp, 0FFFh", "call    _dcgettext", "sub     rsp, 8", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "push    r12", "mov     r9, rbp", "mov     r8, r13", "mov     rcx, rbx", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "pop     rax", "pop     rdx", "jmp     loc_414C"], ["lea~r12,[rsp+0]", "mov~edi,[rbp+0]", "mov~rsi,r12", "add~r12,0", "call~FOO", "mov~rdi,dst_name", "mov~[rsp+0],0", "mov~ebp,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~dst_name,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r13,rax", "and~ebp,<STR>", "call~FOO", "sub~rsp,0", "mov~rdi,<TAG>", "mov~rdx,rax", "push~r12", "mov~r9,rbp", "mov~r8,r13", "mov~rcx,rbx", "mov~esi,0", "xor~eax,eax", "call~FOO", "pop~rax", "pop~rdx", "jmp~FOO"]]], "func_feature": [9, 8, 12, 1, 6, 6, 2, 68, 0.075, 5, 4], "succs": [[], [0, 4], [1], [2, 5], [], [1]], "fname": "overwrite_prompt", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[1, 0, 0, 0, 1, 11, 1, 1, 0, 0, 0.0, ["lea     r8, triple_free; data_freer", "lea     rcx, triple_compare; comparator", "xor     esi, esi; tuning", "lea     rdx, triple_hash; hasher", "push    rbx", "mov     rbx, x", "mov     edi, 3Dh ; '='; candidate", "call    hash_initialize", "mov     [x+30h], rax", "pop     x", "retn"], ["lea~r8,<TAG>", "lea~rcx,<TAG>", "xor~esi,esi", "lea~rdx,<TAG>", "push~rbx", "mov~rbx,x", "mov~edi,0", "call~FOO", "mov~[x+0],rax", "pop~x", "retn"]]], "func_feature": [1, 1, 1, 0, 1, 0, 1, 11, 0.0, 3, 0], "succs": [[]], "fname": "dest_info_init", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[1, 0, 0, 0, 1, 11, 1, 1, 0, 0, 0.0, ["lea     r8, triple_free; data_freer", "lea     rcx, triple_compare; comparator", "xor     esi, esi; tuning", "lea     rdx, triple_hash_no_name; hasher", "push    rbx", "mov     rbx, x", "mov     edi, 3Dh ; '='; candidate", "call    hash_initialize", "mov     [x+38h], rax", "pop     x", "retn"], ["lea~r8,<TAG>", "lea~rcx,<TAG>", "xor~esi,esi", "lea~rdx,<TAG>", "push~rbx", "mov~rbx,x", "mov~edi,0", "call~FOO", "mov~[x+0],rax", "pop~x", "retn"]]], "func_feature": [1, 1, 1, 0, 1, 0, 1, 11, 0.0, 3, 0], "succs": [[]], "fname": "src_info_init", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 0, 0, 1, 14, 1, 1, 0, 0, 0.0, ["pxor    xmm0, xmm0", "push    rbx", "mov     rbx, x", "movups  xmmword ptr [x], xmm0", "movups  xmmword ptr [x+10h], xmm0", "movups  xmmword ptr [x+20h], xmm0", "movups  xmmword ptr [x+30h], xmm0", "call    _geteuid", "test    eax, eax", "setz    al", "mov     [x+1Ah], al", "mov     [x+19h], al", "pop     x", "retn"], ["pxor~xmm0,xmm0", "push~rbx", "mov~rbx,x", "movups~<TAG>,xmm0", "movups~[mmword ptr [x+0],xmm0", "movups~[mmword ptr [x+0],xmm0", "movups~[mmword ptr [x+0],xmm0", "call~FOO", "test~eax,eax", "setz~al", "mov~[x+0],al", "mov~[x+0],al", "pop~x", "retn"]]], "func_feature": [1, 1, 1, 0, 1, 0, 1, 14, 0.0, 0, 0], "succs": [[]], "fname": "cp_options_default", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[2, 0, 2, 0, 1, 10, 1, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, x", "call    ___errno_location", "mov     edx, [rax]", "cmp     edx, 1", "setz    al", "cmp     edx, 16h", "setz    dl", "or      al, dl", "jz      short loc_42A2"], ["push~rbx", "mov~rbx,x", "call~FOO", "mov~edx,<TAG>", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~al,dl", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     x", "retn"], ["pop~x", "retn"]], [1, 0, 1, 0, 0, 2, 1, 0, 0, 1, 0.0, ["movzx   eax, byte ptr [x+19h]", "xor     eax, 1"], ["movzx~eax,[yte ptr [x+0]", "xor~eax,0"]]], "func_feature": [1, 2, 2, 0, 3, 3, 3, 14, 0.0, 0, 0], "succs": [[1, 2], [], [1]], "fname": "chown_failure_ok", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[1, 0, 4, 0, 0, 2, 0, 1, 0, 0, 0.009999999999999998, ["cmp     eax, 16h", "jz      loc_44B0"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 5, 0, 1, 5, 0, 2, 6, 2, 0.055, ["call    ___errno_location", "mov     gid, rax", "mov     eax, [rax]", "cmp     eax, 1", "jz      loc_44B0"], ["call~FOO", "mov~gid,rax", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 1, 20, 0, 0, 7, 3, 1, 4, 4, 0.12000000000000001, ["mov     eax, edx", "mov     ecx, esi", "not     eax", "and     ecx, 0FFFh", "or      ah, 0Eh", "test    eax, ecx", "jnz     loc_43D0"], ["mov~eax,edx", "mov~ecx,esi", "not~eax", "and~ecx,<STR>", "or~ah,0", "test~eax,ecx", "jnz~FOO"]], [0, 0, 21, 0, 0, 2, 0, 1, 3, 5, 0.029166666666666667, ["mov     edx, [src_sb+18h]", "jmp     loc_42F2"], ["mov~edx,[src_sb+0]", "jmp~FOO"]], [0, 0, 21, 0, 0, 1, 0, 0, 3, 5, 0.029166666666666667, ["mov     edx, [x+10h]"], ["mov~edx,[x+0]"]], [2, 0, 0, 1, 0, 9, 0, 0, 3, -1, 0.0, ["add     rsp, 8", "mov     eax, 1", "pop     x", "pop     gid", "pop     dst_name", "pop     dest_desc", "pop     uid", "pop     r15", "retn"], ["add~rsp,0", "mov~eax,0", "pop~x", "pop~gid", "pop~dst_name", "pop~dest_desc", "pop~uid", "pop~r15", "retn"]], [0, 0, 8, 0, 1, 4, 1, 2, 2, -1, 0.06916666666666667, ["mov     edi, r13d; fd", "call    _fchown", "test    eax, eax", "jz      short loc_4374"], ["mov~edi,r13d", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 8, 0, 1, 4, 1, 2, 2, -1, 0.06916666666666667, ["mov     rdi, dst_name; file", "call    _lchown", "test    eax, eax", "jnz     short loc_43A0"], ["mov~rdi,dst_name", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 13, 0, 0, 4, 0, 1, 1, -1, 0.14333333333333334, ["cmp     r13d, 0FFFFFFFFh", "mov     edx, ebp; group", "mov     esi, r14d; owner", "jz      short loc_4368"], ["cmp~r13d,0", "mov~edx,ebp", "mov~esi,r14d", "jz~FOO"]], [1, 0, 25, 1, 0, 17, 2, 1, 0, 8, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r13d, edx", "push    rbp", "push    rbx", "mov     rbx, x", "mov     r12, dst_name", "sub     rsp, 8", "movzx   eax, byte ptr [x+1Dh]", "mov     r14d, [src_sb+1Ch]", "or      al, [x+18h]", "mov     ebp, [src_sb+20h]", "mov     edi, eax", "or      dil, [x+24h]", "jz      short loc_4309"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r13d,edx", "push~rbp", "push~rbx", "mov~rbx,x", "mov~r12,dst_name", "sub~rsp,0", "movzx~eax,[yte ptr [x+0]", "mov~r14d,[src_sb+0]", "or~al,[x+0]", "mov~ebp,[src_sb+0]", "mov~edi,eax", "or~dil,[x+0]", "jz~FOO"]], [1, 0, 24, 0, 0, 2, 0, 1, 1, 7, 0.016666666666666666, ["cmp     r8b, 1", "jz      short loc_4309"], ["cmp~r8b,0", "jz~FOO"]], [1, 0, 19, 0, 1, 7, 3, 2, 5, 3, 0.05666666666666667, ["and     esi, 1C0h", "mov     rdi, dst_name; name", "and     edx, esi; mode", "mov     esi, r13d; desc", "call    qset_acl", "test    eax, eax", "jz      loc_4309"], ["and~esi,0", "mov~rdi,dst_name", "and~edx,esi", "mov~esi,r13d", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 23, 0, 0, 3, 1, 1, 2, 6, 0.030000000000000002, ["test    al, al", "mov     esi, [dst_sb+18h]", "jnz     loc_4390"], ["test~al,al", "mov~esi,[dst_sb+0]", "jnz~FOO"]], [1, 0, 6, 0, 1, 5, 0, 2, 3, -1, 0.05916666666666667, ["call    ___errno_location", "mov     r14d, [rax]", "mov     r15, rax", "cmp     r14d, 1", "jz      loc_4490"], ["call~FOO", "mov~r14d,<TAG>", "mov~r15,rax", "cmp~r14d,0", "jz~FOO"]], [1, 0, 4, 0, 1, 6, 0, 2, 4, -1, 0.017916666666666668, ["mov     edx, ebp; group", "mov     esi, 0FFFFFFFFh; owner", "mov     edi, r13d; fd", "call    _fchown", "mov     [r15], r14d", "jmp     loc_433F"], ["mov~edx,ebp", "mov~esi,0", "mov~edi,r13d", "call~FOO", "mov~<TAG>,r14d", "jmp~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 4, -1, 0.017916666666666668, ["cmp     r14d, 16h", "jz      loc_4490"], ["cmp~r14d,0", "jz~FOO"]], [1, 0, 1, 0, 4, 16, 3, 5, 6, -1, 0.02, ["mov     rdi, dst_name; name", "call    quote", "lea     rsi, aFailedToPreser_1; \"failed to preserve ownership for %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     dst_name, rax", "call    _dcgettext", "mov     gid, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r12", "mov     rdx, rbp; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     short loc_4437"], ["mov~rdi,dst_name", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~dst_name,rax", "call~FOO", "mov~gid,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r12", "mov~rdx,rbp", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 1, 6, 2, 2, 5, -1, 0.07166666666666667, ["mov     rdi, x; x", "call    chown_failure_ok", "mov     edx, eax", "xor     eax, eax", "test    dl, dl", "jz      loc_4450"], ["mov~rdi,x", "call~FOO", "mov~edx,eax", "xor~eax,eax", "test~dl,dl", "jz~FOO"]], [1, 0, 6, 0, 1, 5, 0, 2, 3, -1, 0.05916666666666667, ["call    ___errno_location", "mov     r13d, [rax]", "mov     uid, rax", "cmp     r13d, 1", "jz      short loc_43B7"], ["call~FOO", "mov~r13d,<TAG>", "mov~uid,rax", "cmp~r13d,0", "jz~FOO"]], [1, 0, 1, 0, 3, 13, 3, 3, 8, -1, 0.009166666666666667, ["mov     rdi, dst_name; name", "call    quote", "lea     rsi, aClearingPermis; \"clearing permissions for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     dst_name, rax", "call    _dcgettext", "mov     esi, [rbp+0]; errnum", "mov     rdx, rax; format", "mov     rcx, r12", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rdi,dst_name", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~dst_name,rax", "call~FOO", "mov~esi,[rbp+0]", "mov~rdx,rax", "mov~rcx,r12", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 7, 1, 0.028333333333333335, ["cmp     byte ptr [x+1Ah], 0", "jnz     loc_4407"], ["cmp~[yte ptr [x+0],0", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 4, -1, 0.017916666666666668, ["cmp     r13d, 16h", "jnz     short loc_433F"], ["cmp~r13d,0", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 8, 0, 0.004166666666666667, ["jmp     loc_4437"], ["jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 6, -1, 0.0, ["add     rsp, 8", "pop     x", "pop     gid", "pop     dst_name", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~x", "pop~gid", "pop~dst_name", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 4, 0, 1, 6, 0, 2, 4, -1, 0.017916666666666668, ["mov     edx, ebp; group", "mov     esi, 0FFFFFFFFh; owner", "mov     rdi, dst_name; file", "call    _lchown", "mov     [r14], r13d", "jmp     loc_433F"], ["mov~edx,ebp", "mov~esi,0", "mov~rdi,dst_name", "call~FOO", "mov~<TAG>,r13d", "jmp~FOO"]], [1, 0, 0, 1, 0, 10, 0, 0, 7, -1, 0.0, ["movzx   eax, byte ptr [x+20h]", "add     rsp, 8", "pop     x", "pop     rbp", "pop     r12", "neg     eax", "pop     r13", "pop     r14", "pop     r15", "retn"], ["movzx~eax,[yte ptr [x+0]", "add~rsp,0", "pop~x", "pop~rbp", "pop~r12", "neg~eax", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [16, 19, 37, 0, 26, 39, 2, 149, 0.0366, 2, 4], "succs": [[19, 20], [0, 20], [8, 11], [2], [2], [], [5, 13], [18, 5], [6, 7], [8, 10], [8, 12], [8, 1], [3, 4], [14, 15], [17], [17, 14], [25], [16, 23], [24, 21], [25], [19, 22], [24, 17], [25], [], [17], []], "fname": "set_owner", "n_num": 26}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 0, 0, 2, 9, 1, 2, 0, 0, 0.0, ["xor     edi, edi; mask", "call    _umask", "mov     ebx, eax", "mov     edi, eax; mask", "mov     cs:mask_6844, eax", "call    _umask", "mov     eax, ebx", "pop     rbx", "retn"], ["xor~edi,edi", "call~FOO", "mov~ebx,eax", "mov~edi,eax", "mov~<TAG>,eax", "call~FOO", "mov~eax,ebx", "pop~rbx", "retn"]], [1, 0, 2, 0, 0, 4, 0, 1, 0, 0, 0.0, ["push    rbx", "mov     ebx, cs:mask_6844", "cmp     ebx, 0FFFFFFFFh", "jz      short loc_44D0"], ["push~rbx", "mov~ebx,<TAG>", "cmp~ebx,0", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 0.0, ["mov     eax, ebx", "pop     rbx", "retn"], ["mov~eax,ebx", "pop~rbx", "retn"]]], "func_feature": [2, 1, 3, 0, 3, 2, 3, 16, 0.0, 1, 0], "succs": [[], [0, 2], []], "fname": "cached_umask", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 1, 20, 0, 0, 6, 2, 0, 0, 0, 0.00015627183209418965, ["mov     ecx, [rbp+mode]", "mov     edx, ecx", "and     dh, 0F1h", "test    eax, eax", "cmovnz  edx, ecx", "mov     [rbp+mode], edx"], ["mov~ecx,[rbp+0]", "mov~edx,ecx", "and~dh,<STR>", "test~eax,eax", "cmovnz~edx,ecx", "mov~[rbp+0],edx"]], [2, 0, 21, 0, 1, 9, 0, 2, 27, -1, 0.0013393415256543193, ["mov     rcx, [rbp+stats]; src_sb", "mov     rsi, [rbp+dst_name]; dst_name", "lea     r9, [rbp+dst_mode]; dst_sb", "movzx   r8d, r12b; new_dst", "mov     edx, 0FFFFFFFFh; dest_desc", "mov     rdi, r15; x", "call    set_owner", "cmp     eax, 0FFFFFFFFh", "jz      loc_48EB"], ["mov~rcx,[rbp+0]", "mov~rsi,[rbp+0]", "lea~r9,[rbp+0]", "movzx~r8d,r12b", "mov~edx,0", "mov~rdi,r15", "call~FOO", "cmp~eax,0", "jz~FOO"]], [0, 0, 401, 0, 0, 4, 1, 0, 16, 36, 0.0, ["xor     ecx, ecx", "mov     rax, [rbp+src_mode]", "cmp     [rbp+dst_mode], rax", "setnz   cl; options"], ["xor~ecx,ecx", "mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "setnz~cl"]], [2, 0, 402, 0, 0, 3, 0, 1, 15, 36, 0.0003750523970260551, ["cmp     byte ptr [x_0+18h], 0", "mov     ecx, 1", "jz      short loc_480D"], ["cmp~[yte ptr [x_0+0],0", "mov~ecx,0", "jz~FOO"]], [0, 0, 319, 0, 1, 4, 1, 2, 20, 25, 0.0056362040775304375, ["mov     rdi, [rbp+dst_name]; name", "call    _unlink", "test    eax, eax", "jz      loc_6AD0"], ["mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 325, 0, 0, 3, 1, 1, 19, 26, 0.008303856175985372, ["movzx   r12d, byte ptr [x_0+15h]", "test    r12b, r12b", "jnz     short loc_5802"], ["movzx~r12d,[yte ptr [x_0+0]", "test~r12b,r12b", "jnz~FOO"]], [2, 0, 321, 0, 0, 4, 1, 1, 22, 25, 0.0006361182812304661, ["mov     eax, [rbp+var_268]", "and     eax, 0F000h", "cmp     eax, 8000h", "jnz     loc_5802"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [1, 0, 323, 0, 0, 2, 0, 0, 21, 25, 4.780079569939918e-05, ["cmp     [rbp+var_1E0], 1", "jbe     loc_6A9C"], ["cmp~[rbp+0],0", "jbe~FOO"]], [1, 0, 19, 0, 0, 3, 1, 1, 26, -1, 0.016586876107691516, ["mov     rax, 0FF00000000FFh", "test    [r15+18h], rax", "jnz     loc_6156"], ["mov~rax,0", "test~[r15+0],rax", "jnz~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 25, -1, 0.023561196049448084, ["cmp     byte ptr [r15+1Ch], 0", "jz      short loc_5007"], ["cmp~[yte ptr [r15+0],0", "jz~FOO"]], [0, 0, 20, 0, 0, 1, 0, 1, 29, -1, 9.376309925651378e-05, ["jmp     loc_5007"], ["jmp~FOO"]], [1, 0, 12, 0, 3, 14, 3, 4, 28, -1, 0.00038056787345290885, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aCannotCreateSy_0; \"cannot create symbolic link %s\"", "mov     r12, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rax; format", "mov     esi, r13d; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     un_backup"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,r12", "mov~rdx,rax", "mov~esi,r13d", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 13, 0, 2, 4, 0, 3, 32, -1, 4.228531927254543e-05, ["call    free", "mov     rdi, r14; ptr", "call    free", "jmp     loc_67E5"], ["call~FOO", "mov~rdi,r14", "call~FOO", "jmp~FOO"]], [0, 0, 13, 0, 1, 2, 0, 1, 27, -1, 0.0011766349710621337, ["mov     rdi, r14; ptr", "call    free"], ["mov~rdi,r14", "call~FOO"]], [1, 0, 30, 0, 0, 9, 1, 1, 29, -1, 0.003794647781675381, ["or      rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, r12d", "mov     rdi, src_link_val", "repne scasb", "mov     rsi, [rbp+var_1C0]; size", "not     rcx", "lea     rax, [rcx-1]", "cmp     rsi, rax", "jnz     loc_67DD"], ["or~rcx,0", "mov~eax,r12d", "mov~rdi,src_link_val", "scasb~<TAG>,", "mov~rsi,[rbp+0]", "not~rcx", "lea~rax,[rcx-1]+0]", "cmp~rsi,rax", "jnz~FOO"]], [1, 1, 31, 0, 0, 4, 1, 1, 28, -1, 0.004647708135695428, ["mov     eax, [rbp+var_1D8]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_7001"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 27, -1, 0.01236937513329068, ["cmp     byte ptr [r15+24h], 0", "jnz     loc_6234"], ["cmp~[yte ptr [r15+0],0", "jnz~FOO"]], [1, 0, 318, 0, 1, 4, 0, 2, 21, 25, 0.0009572415754161738, ["call    ___errno_location", "cmp     dword ptr [rax], 2", "mov     r12, rax", "jz      loc_6AD0"], ["call~FOO", "cmp~<TAG>,0", "mov~r12,rax", "jz~FOO"]], [0, 0, 15, 0, 0, 3, 1, 1, 28, -1, 0.010269817106801686, ["mov     eax, dword ptr [rbp+omitted_permissions]", "test    eax, eax", "jnz     loc_6580"], ["mov~eax,[word ptr [rbp+0]", "test~eax,eax", "jnz~FOO"]], [0, 0, 29, 0, 1, 5, 1, 2, 30, -1, 0.0029342334590861958, ["mov     rdi, [rbp+dst_name]; file", "call    areadlink_with_size", "test    rax, rax", "mov     r12, rax", "jz      loc_67DD"], ["mov~rdi,[rbp+0]", "call~FOO", "test~rax,rax", "mov~r12,rax", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 29, -1, 0.0021933211257455084, ["cmp     byte ptr [rbp+restore_dst_mode], 0", "jnz     loc_65BF"], ["cmp~[yte ptr [rbp+0],0", "jnz~FOO"]], [0, 0, 14, 0, 1, 4, 1, 2, 29, -1, 0.006004515336701451, ["call    cached_umask", "not     eax", "and     dword ptr [rbp+omitted_permissions], eax", "jz      loc_5034"], ["call~FOO", "not~eax", "and~[word ptr [rbp+0],eax", "jz~FOO"]], [1, 0, 4, 0, 1, 5, 0, 1, 22, -1, 0.0003762780584542446, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "mov     rbx, rax", "mov     edx, 5; category"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0"]], [0, 0, 3, 0, 0, 2, 0, 1, 28, -1, 9.927857568336753e-05, ["movzx   ebx, byte ptr [rbp+delayed_ok]", "jmp     loc_48EB"], ["movzx~ebx,[yte ptr [rbp+0]", "jmp~FOO"]], [1, 0, 5, 0, 1, 8, 1, 2, 27, -1, 0.0021547127907575324, ["mov     r8d, [rbp+mode]; mode", "mov     rdx, [rbp+dst_name]; dst_name", "mov     ecx, 0FFFFFFFFh; dest_desc", "mov     esi, ecx; source_desc", "mov     rdi, r13; src_name", "call    copy_acl", "test    eax, eax", "jz      loc_5041"], ["mov~r8d,[rbp+0]", "mov~rdx,[rbp+0]", "mov~ecx,0", "mov~esi,ecx", "mov~rdi,r13", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 7, 0, 0, 5, 1, 1, 32, -1, 4.5962303557114596e-05, ["mov     eax, [rbp+var_1D8]", "mov     dword ptr [rbp+length], eax", "not     eax", "test    dword ptr [rbp+omitted_permissions], eax", "jz      loc_5041"], ["mov~eax,[rbp+0]", "mov~[word ptr [rbp+0],eax", "not~eax", "test~[word ptr [rbp+0],eax", "jz~FOO"]], [0, 0, 6, 0, 1, 6, 2, 2, 30, -1, 0.0011398651282164421, ["mov     esi, dword ptr [rbp+length]", "or      esi, dword ptr [rbp+omitted_permissions]; mode", "mov     rdi, [rbp+dst_name]; file", "call    _chmod", "test    eax, eax", "jz      loc_5041"], ["mov~esi,[word ptr [rbp+0]", "or~esi,[word ptr [rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 4, 0, 2, 11, 1, 3, 15, -1, 0.00033472813603861317, ["mov     rsi, src_name_0; name", "mov     edi, 1; n", "call    quote_n", "mov     rsi, [rbp+dst_name]; name", "xor     edi, edi; n", "mov     r12, rax", "call    quote_n", "mov     edx, 5", "mov     rbx, rax", "lea     rsi, aCannotOverwrit_0; \"cannot overwrite non-directory %s with \"...", "jmp     loc_46B8"], ["mov~rsi,src_name_0", "mov~edi,0", "call~FOO", "mov~rsi,[rbp+0]", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~edx,0", "mov~rbx,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 370, 0, 0, 2, 0, 1, 14, 30, 0.005730089742929771, ["cmp     byte ptr [x_0+18h], 0", "jz      loc_681E"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 369, 0, 0, 3, 1, 1, 15, 29, 0.0058292457524703216, ["mov     edx, [x_0]", "test    edx, edx", "jz      loc_681E"], ["mov~edx,<TAG>", "test~edx,edx", "jz~FOO"]], [0, 0, 29, 0, 1, 13, 1, 2, 25, -1, 0.0022089483089549277, ["mov     rax, [rbp+var_238]", "mov     rdi, [rbp+dst_name]; file", "lea     rsi, [rbp+timespec]; timespec", "mov     [rbp+timespec.tv_sec], rax", "mov     rax, [rbp+var_230]", "mov     [rbp+timespec.tv_nsec], rax", "mov     rax, [rbp+var_228]", "mov     [rbp+timespec.tv_sec+10h], rax", "mov     rax, [rbp+var_220]", "mov     [rbp+timespec.tv_nsec+10h], rax", "call    utimens", "test    eax, eax", "jz      loc_4FA4"], ["mov~rax,[rbp+0]", "mov~rdi,[rbp+0]", "lea~rsi,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 30, 0, 0, 2, 0, 1, 24, -1, 0.02754980475213449, ["cmp     byte ptr [r15+1Eh], 0", "jnz     loc_5FFF"], ["cmp~[yte ptr [r15+0],0", "jnz~FOO"]], [0, 0, 400, 0, 1, 12, 1, 2, 15, 35, 0.008285471254562525, ["mov     rdx, [rbp+stats]; src_stat", "mov     rdi, [rbp+dst_name]; dst_name", "mov     rsi, r12; dst_stat", "mov     byte ptr [rbp+delayed_ok], r9b", "mov     byte ptr [rbp+dst_backup], r11b", "mov     byte ptr [rbp+earlier_file], r8b", "call    utimecmp", "test    eax, eax", "movzx   r8d, byte ptr [rbp+earlier_file]", "movzx   r11d, byte ptr [rbp+dst_backup]", "movzx   r9d, byte ptr [rbp+delayed_ok]", "js      loc_56E8"], ["mov~rdx,[rbp+0]", "mov~rdi,[rbp+0]", "mov~rsi,r12", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r11b", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r11d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "js~FOO"]], [1, 0, 403, 0, 0, 3, 1, 1, 14, 36, 0.004987216351303981, ["xor     ecx, ecx", "cmp     byte ptr [x_0+1Eh], 0", "jz      short loc_480D"], ["xor~ecx,ecx", "cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 3, 0, 2, 10, 4, 3, 23, -1, 0.00015443333995190505, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     esi, [r12]; errnum", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "xor     ebx, ebx", "call    _error", "jmp     loc_48EB"], ["xor~edi,edi", "call~FOO", "mov~esi,<TAG>", "mov~rcx,rbx", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "xor~ebx,ebx", "call~FOO", "jmp~FOO"]], [1, 0, 4, 0, 1, 6, 0, 2, 22, -1, 0.0003738267355978655, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "mov     edx, 5", "mov     rbx, rax", "lea     rsi, aCannotBackupS; \"cannot backup %s\"", "jmp     loc_5842"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~edx,0", "mov~rbx,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 16, -1, 0.0004957800477027427, ["cmp     [rbp+omitted_permissions], 0", "jz      loc_4E10"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 22, 0, 0, 3, 0, 1, 28, -1, 0.00023348850207014217, ["mov     rax, [rbp+device]", "mov     r8d, [rax]", "jmp     loc_6A4A"], ["mov~rax,[rbp+0]", "mov~r8d,<TAG>", "jmp~FOO"]], [1, 0, 101, 0, 0, 2, 0, 1, 27, 2, 0.005745287944639325, ["cmp     byte ptr [x_0+16h], 0", "jnz     loc_74DF"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 23, 0, 1, 4, 0, 2, 26, -1, 0.005002537119156353, ["mov     rdi, r14; ptr", "call    free", "cmp     byte ptr [x_0+21h], 0", "jz      short loc_706B"], ["mov~rdi,r14", "call~FOO", "cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 34, 0, 1, 5, 1, 2, 25, -1, 0.014527764908332783, ["mov     rsi, [rbp+dst_name]; to", "mov     rdi, src_link_val; from", "call    _symlink", "test    eax, eax", "jz      loc_7057"], ["mov~rsi,[rbp+0]", "mov~rdi,src_link_val", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 24, 0, 1, 1, 0, 1, 32, -1, 0.00027025834491583385, ["call    free"], ["call~FOO"]], [0, 0, 22, 0, 1, 1, 0, 1, 27, -1, 0.0, ["call    restore_default_fscreatecon_or_die"], ["call~FOO"]], [1, 0, 14, 0, 1, 6, 0, 2, 24, -1, 0.0001029555599679367, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "mov     edx, 5", "mov     src_name_0, rax", "lea     rsi, aSettingPermiss; \"setting permissions for %s\"", "jmp     loc_5151"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~edx,0", "mov~src_name_0,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [2, 0, 62, 0, 1, 8, 2, 2, 23, -1, 0.0021234584243386943, ["mov     rdi, [rbp+dst_name]; file", "mov     esi, r14d", "or      esi, 1C0h; mode", "call    _chmod", "test    eax, eax", "mov     dword ptr [rbp+length], r14d", "mov     byte ptr [rbp+restore_dst_mode], 1", "jnz     loc_6850"], ["mov~rdi,[rbp+0]", "mov~esi,r14d", "or~esi,0", "call~FOO", "test~eax,eax", "mov~[word ptr [rbp+0],r14d", "mov~[yte ptr [rbp+0],0", "jnz~FOO"]], [0, 0, 264, 0, 1, 7, 1, 2, 13, 19, 0.010530882991006097, ["mov     rsi, [rbp+earlier_file]; dest", "mov     rdi, src_name_0; source", "mov     byte ptr [rbp+delayed_ok], r8b", "call    same_name", "test    al, al", "movzx   r8d, byte ptr [rbp+delayed_ok]", "jnz     loc_5350"], ["mov~rsi,[rbp+0]", "mov~rdi,src_name_0", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "test~al,al", "movzx~r8d,[yte ptr [rbp+0]", "jnz~FOO"]], [1, 0, 274, 0, 0, 2, 0, 1, 12, 20, 0.018242009300318916, ["cmp     dword ptr [rbp+ptr], 4000h", "jz      loc_5050"], ["cmp~[word ptr [rbp+0],0", "jz~FOO"]], [2, 0, 3, 0, 0, 4, 0, 1, 17, -1, 4.688154962825689e-05, ["mov     rax, [rbp+omitted_permissions]", "mov     ebx, 1", "mov     byte ptr [rax], 1", "jmp     short loc_48EB"], ["mov~rax,[rbp+0]", "mov~ebx,0", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 262, 0, 0, 2, 0, 1, 14, 18, 0.002632720747751524, ["cmp     dword ptr [x_0+4], 4", "jz      loc_4C72"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [0, 0, 501, 0, 0, 2, 1, 1, 5, 24, 0.010944911421448586, ["test    r14b, r14b", "jnz     loc_4910"], ["test~r14b,r14b", "jnz~FOO"]], [1, 0, 507, 0, 0, 2, 0, 1, 4, 25, 0.009606121443436949, ["cmp     byte ptr [rbp+format], 0", "jz      loc_4880"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [1, 0, 4, 0, 1, 6, 0, 2, 19, -1, 0.00043020716129459264, ["mov     rdi, src_name_0; name", "call    quote", "mov     edx, 5", "mov     r12, rax", "lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "jmp     loc_48C9"], ["mov~rdi,src_name_0", "call~FOO", "mov~edx,0", "mov~r12,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 11, 0, 1, 4, 1, 2, 18, -1, 0.0013549687088637383, ["mov     rdi, src_name_0; name", "call    _unlink", "test    eax, eax", "jnz     loc_6870"], ["mov~rdi,src_name_0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 199, 0, 0, 2, 0, 1, 17, 12, 0.16223406211161853, ["cmp     byte ptr [x_0+25h], 0", "jz      loc_4EE0"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 234, 0, 0, 3, 1, 1, 16, 13, 0.0800485607057848, ["test    al, al", "mov     dword ptr [rbp+omitted_permissions], 0", "jz      loc_4D68"], ["test~al,al", "mov~[word ptr [rbp+0],0", "jz~FOO"]], [1, 0, 232, 0, 0, 2, 0, 1, 16, 13, 0.11027275869422934, ["cmp     dword ptr [rbp+ptr], 4000h", "jnz     short loc_4D68"], ["cmp~[word ptr [rbp+0],0", "jnz~FOO"]], [0, 0, 20, 0, 1, 6, 1, 2, 28, -1, 0.0020554342150741647, ["mov     edx, [rbp+group]; group", "mov     esi, [rbp+owner]; owner", "mov     rdi, [rbp+dst_name]; file", "call    _lchown", "test    eax, eax", "jz      loc_4DC9"], ["mov~edx,[rbp+0]", "mov~esi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 27, -1, 0.003296416411116259, ["cmp     byte ptr [x_0+1Ch], 0", "jz      loc_4DC9"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 67, 0, 1, 6, 1, 2, 41, -1, 0.002787154087703429, ["mov     edi, [rbp+mode]; fd", "mov     edx, 1; whence", "mov     rsi, rcx; offset", "call    _lseek", "test    rax, rax", "js      loc_7735"], ["mov~edi,[rbp+0]", "mov~edx,0", "mov~rsi,rcx", "call~FOO", "test~rax,rax", "js~FOO"]], [0, 0, 67, 0, 0, 2, 0, 0, 40, -1, 0.004125576367286606, ["cmp     rdx, rax", "jb      loc_72BF"], ["cmp~rdx,rax", "jb~FOO"]], [1, 0, 497, 0, 0, 2, 0, 1, 6, 28, 0.005995200309847209, ["cmp     dword ptr [rbp+ptr], 8000h", "jnz     loc_4714"], ["cmp~[word ptr [rbp+0],0", "jnz~FOO"]], [0, 0, 498, 0, 1, 5, 1, 2, 6, 25, 0.005809267471190829, ["mov     rdx, [rbp+stats]; stats", "mov     rsi, src_name_0; file", "call    record_file", "test    r14b, r14b", "jz      loc_4889"], ["mov~rdx,[rbp+0]", "mov~rsi,src_name_0", "call~FOO", "test~r14b,r14b", "jz~FOO"]], [0, 0, 493, 0, 0, 1, 0, 1, 7, 28, 0.0003088666799038101, ["jmp     loc_473B"], ["jmp~FOO"]], [1, 0, 3, 0, 3, 15, 4, 4, 7, -1, 3.3092858561122513e-05, ["mov     rdi, src_name_0; name", "call    quote", "lea     rsi, aWarningSourceF; \"warning: source file %s specified more \"...", "mov     rbx, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "mov     ebx, r12d", "call    _error", "jmp     loc_48EB"], ["mov~rdi,src_name_0", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "mov~ebx,r12d", "call~FOO", "jmp~FOO"]], [0, 0, 501, 0, 1, 6, 1, 2, 6, 27, 8.824762282966004e-05, ["mov     rdx, [rbp+stats]; stats", "mov     rsi, src_name_0; file", "call    seen_file", "test    al, al", "mov     r12d, eax", "jnz     loc_5868"], ["mov~rdx,[rbp+0]", "mov~rsi,src_name_0", "call~FOO", "test~al,al", "mov~r12d,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 27, -1, 0.0001718990153036086, ["jmp     loc_48EB"], ["jmp~FOO"]], [2, 0, 28, 0, 4, 17, 3, 5, 26, -1, 0.0011941006464138372, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aPreservingTime; \"preserving times for %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r14, rax", "call    _dcgettext", "mov     [rbp+format], rax", "call    ___errno_location", "mov     rdx, [rbp+format]; format", "mov     esi, [rax]; errnum", "xor     edi, edi; status", "xor     eax, eax", "mov     rcx, r14", "call    _error", "cmp     byte ptr [r15+20h], 0", "jz      loc_4FA4"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r14,rax", "call~FOO", "mov~[rbp+0],rax", "call~FOO", "mov~rdx,[rbp+0]", "mov~esi,<TAG>", "xor~edi,edi", "xor~eax,eax", "mov~rcx,r14", "call~FOO", "cmp~[yte ptr [r15+0],0", "jz~FOO"]], [1, 0, 457, 0, 0, 2, 0, 1, 14, 33, 0.011631526953520469, ["cmp     byte ptr [x_0+18h], 0", "jnz     loc_5F78"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 464, 0, 0, 3, 1, 1, 13, 34, 0.015443946825904598, ["mov     esi, [x_0]", "test    esi, esi", "jz      loc_58A0"], ["mov~esi,<TAG>", "test~esi,esi", "jz~FOO"]], [0, 0, 517, 0, 1, 5, 2, 2, 2, 27, 0.0038020017502445195, ["call    ___lxstat", "test    eax, eax", "setnz   bl", "test    bl, bl", "jz      loc_45A2"], ["call~FOO", "test~eax,eax", "setnz~bl", "test~bl,bl", "jz~FOO"]], [3, 0, 519, 0, 0, 9, 0, 1, 1, 28, 0.005725064531074194, ["mov     rax, qword ptr [rbp+fildes]", "cmp     dword ptr [r15+4], 2", "mov     dst_name_0, r13; filename", "mov     edi, 1; ver", "mov     byte ptr [rax], 0", "lea     rax, [rbp+src_mode]", "mov     [rbp+stats], rax", "mov     new_dst, rax; stat_buf", "jz      loc_48A0"], ["mov~rax,[word ptr [rbp+0]", "cmp~[word ptr [r15+0],0", "mov~dst_name_0,r13", "mov~edi,0", "mov~<TAG>,0", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~new_dst,rax", "jz~FOO"]], [0, 1, 40, 0, 0, 2, 0, 1, 23, -1, 0.01802457696295806, ["cmp     dword ptr [rbp+ptr], 0A000h", "jz      loc_6781"], ["cmp~[word ptr [rbp+0],<STR>", "jz~FOO"]], [3, 0, 75, 0, 0, 10, 2, 1, 22, -1, 0.020565373103595356, ["mov     esi, [rbp+mode]", "mov     eax, esi", "and     eax, 0B000h", "cmp     eax, 2000h", "setz    dl", "cmp     dword ptr [rbp+ptr], 0C000h", "setz    al", "or      dl, al", "mov     byte ptr [rbp+delayed_ok], dl", "jz      loc_60A5"], ["mov~esi,[rbp+0]", "mov~eax,esi", "and~eax,0", "cmp~eax,0", "setz~dl", "cmp~[word ptr [rbp+0],0", "setz~al", "or~dl,al", "mov~[yte ptr [rbp+0],dl", "jz~FOO"]], [1, 0, 456, 0, 0, 2, 0, 1, 15, 33, 0.003349732683242512, ["cmp     byte ptr [x_0+15h], 0", "jnz     loc_5F78"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [2, 0, 16, 0, 3, 13, 2, 4, 17, -1, 0.0, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aRemovedS; \"removed %s\\n\"", "mov     r12, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rdx, r12", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_5427"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rdx,r12", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 16, -1, 0.0024543870099499195, ["cmp     byte ptr [x_0+27h], 0", "jnz     loc_688C"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 1, 433, 0, 0, 4, 1, 1, 16, 34, 0.0032688390289819904, ["mov     eax, [rdx+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_652E"], ["mov~eax,[rdx+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 4, 0, 1, 5, 0, 1, 3, -1, 8.824762282966004e-05, ["mov     rdi, src_name_0; name", "call    quote", "lea     rsi, aCannotStatS; \"cannot stat %s\"", "mov     new_dst, rax", "mov     edx, 5; category"], ["mov~rdi,src_name_0", "call~FOO", "lea~rsi,<TAG>", "mov~new_dst,rax", "mov~edx,0"]], [0, 0, 517, 0, 1, 5, 2, 2, 2, 27, 0.0038020017502445195, ["call    ___xstat", "test    eax, eax", "setnz   bl", "test    bl, bl", "jnz     loc_48B2"], ["call~FOO", "test~eax,eax", "setnz~bl", "test~bl,bl", "jnz~FOO"]], [0, 0, 35, 0, 0, 2, 1, 1, 41, -1, 0.001161927033923857, ["test    eax, eax", "jnz     short loc_742D"], ["test~eax,eax", "jnz~FOO"]], [1, 0, 37, 0, 1, 9, 0, 2, 40, -1, 0.00238636280068539, ["mov     r9, [rbp+delayed_ok]; dst_sb", "mov     rcx, [rbp+stats]; src_sb", "movzx   r8d, r12b; new_dst", "mov     edx, [rbp+mode]; dest_desc", "mov     rsi, [rbp+dst_name]; dst_name", "mov     rdi, x_0; x", "call    set_owner", "cmp     eax, 0FFFFFFFFh", "jz      loc_7673"], ["mov~r9,[rbp+0]", "mov~rcx,[rbp+0]", "movzx~r8d,r12b", "mov~edx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rdi,x_0", "call~FOO", "cmp~eax,0", "jz~FOO"]], [1, 0, 13, 0, 2, 8, 1, 3, 30, -1, 0.00024635794706613423, ["lea     rsi, aFailedToPreser_1; \"failed to preserve ownership for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r12, rax", "call    ___errno_location", "mov     rcx, [rbp+dst_name]", "jmp     loc_5163"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~r12,rax", "call~FOO", "mov~rcx,[rbp+0]", "jmp~FOO"]], [0, 0, 19, 0, 1, 4, 1, 2, 29, -1, 0.0011545730653547187, ["mov     rdi, x_0; x", "call    chown_failure_ok", "test    al, al", "jnz     loc_4DC9"], ["mov~rdi,x_0", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 25, 0, 0, 1, 0, 1, 41, -1, 0.0011398651282164421, ["jmp     loc_74C5"], ["jmp~FOO"]], [1, 0, 26, 0, 1, 9, 1, 2, 40, -1, 0.002787154087703429, ["mov     r8d, dword ptr [rbp+ancestors]; mode", "mov     ecx, [rbp+mode]; dest_desc", "mov     rdi, src_name_0; src_name", "mov     rdx, [rbp+dst_name]; dst_name", "mov     esi, [rbp+fildes]; source_desc", "mov     r12d, 1", "call    copy_acl", "test    eax, eax", "jz      loc_6EBC"], ["mov~r8d,[word ptr [rbp+0]", "mov~ecx,[rbp+0]", "mov~rdi,src_name_0", "mov~rdx,[rbp+0]", "mov~esi,[rbp+0]", "mov~r12d,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 13, 0, 1, 6, 0, 2, 24, -1, 0.00013604841852905922, ["mov     dst_mode_bits_0, src_name_0; name", "call    quote", "mov     edx, 5", "mov     r12, rax", "lea     rsi, aSHasUnknownFil; \"%s has unknown file type\"", "jmp     loc_4D47"], ["mov~dst_mode_bits_0,src_name_0", "call~FOO", "mov~edx,0", "mov~r12,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [2, 0, 12, 0, 4, 20, 5, 5, 15, -1, 4.412381141483002e-05, ["mov     rsi, [rbp+earlier_file]; name", "mov     edi, 1; n", "call    quote_n", "mov     rsi, [rbp+dst_name]; name", "xor     edi, edi; n", "mov     r12, rax", "call    quote_n", "lea     rsi, aWillNotCreateH; \"will not create hard link %s to directo\"...", "mov     src_name_0, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     r8, r12", "mov     rdx, rax; format", "mov     rcx, r13", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_4A17"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~rsi,[rbp+0]", "xor~edi,edi", "mov~r12,rax", "call~FOO", "lea~rsi,<TAG>", "mov~src_name_0,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~r8,r12", "mov~rdx,rax", "mov~rcx,r13", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 34, 0, 0, 1, 1, 0, 42, -1, 0.0, ["and     dword ptr [rbp+ancestors], 0FFFFF1FFh"], ["and~[word ptr [rbp+0],0"]], [1, 0, 407, 0, 0, 2, 0, 1, 20, 30, 0.005293018877637317, ["cmp     dword ptr [rbp+ptr], 4000h", "jz      loc_526B"], ["cmp~[word ptr [rbp+0],0", "jz~FOO"]], [0, 0, 412, 0, 0, 3, 1, 1, 19, 31, 0.005009891087725492, ["movzx   r11d, byte ptr [x_0+18h]", "test    r11b, r11b", "jz      loc_70CD"], ["movzx~r11d,[yte ptr [x_0+0]", "test~r11b,r11b", "jz~FOO"]], [1, 1, 431, 0, 0, 5, 1, 1, 17, 33, 0.0018090762680080307, ["mov     esi, [r14+18h]", "mov     ecx, esi", "and     ecx, 0F000h", "cmp     ecx, 0A000h", "jnz     loc_5FB0"], ["mov~esi,[r14+0]", "mov~ecx,esi", "and~ecx,0", "cmp~ecx,<STR>", "jnz~FOO"]], [0, 0, 482, 0, 0, 3, 0, 1, 9, 33, 0.019235775586295144, ["mov     rax, [rbp+var_1E8]", "cmp     [rbp+ino], rax", "jz      loc_5480"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jz~FOO"]], [1, 0, 486, 0, 1, 10, 3, 2, 8, 26, 0.030038755414359356, ["lea     r12, [rbp+dst_mode]", "mov     rsi, [rbp+dst_name]; filename", "mov     edi, 1; ver", "mov     rdx, r12; stat_buf", "call    ___lxstat", "test    eax, eax", "setnz   r8b", "xor     r9d, r9d", "test    r8b, r8b", "jz      loc_47A2"], ["lea~r12,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "mov~rdx,r12", "call~FOO", "test~eax,eax", "setnz~r8b", "xor~r9d,r9d", "test~r8b,r8b", "jz~FOO"]], [2, 0, 486, 0, 1, 10, 2, 2, 13, 26, 0.0008935071811503078, ["lea     r12, [rbp+dst_mode]", "mov     rsi, [rbp+dst_name]; filename", "mov     edi, 1; ver", "mov     rdx, r12; stat_buf", "call    ___xstat", "test    eax, eax", "mov     r9d, 1", "setnz   r8b", "test    r8b, r8b", "jnz     loc_4BDD"], ["lea~r12,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "mov~rdx,r12", "call~FOO", "test~eax,eax", "mov~r9d,0", "setnz~r8b", "test~r8b,r8b", "jnz~FOO"]], [1, 0, 405, 0, 0, 3, 1, 1, 21, 35, 0.0005589016112545135, ["xor     r14d, r14d", "cmp     byte ptr [x_0+26h], 0", "jnz     loc_47E5"], ["xor~r14d,r14d", "cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 3, 0, 3, 11, 4, 3, 4, -1, 0.00011582500496392879, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rdx, rbx; format", "mov     rcx, r12", "xor     edi, edi; status", "xor     eax, eax", "xor     ebx, ebx", "call    _error"], ["xor~edi,edi", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rbx", "mov~rcx,r12", "xor~edi,edi", "xor~eax,eax", "xor~ebx,ebx", "call~FOO"]], [1, 0, 4, 0, 1, 6, 0, 2, 33, -1, 0.0006563416947955964, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "mov     edx, 5", "mov     r12, rax", "lea     rsi, aCannotStatS; \"cannot stat %s\"", "jmp     loc_48C9"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~edx,0", "mov~r12,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 380, 0, 0, 2, 0, 1, 22, 34, 0.001571910781653319, ["mov     eax, [x_0+8]", "jmp     loc_56F7"], ["mov~eax,[x_0+0]", "jmp~FOO"]], [0, 1, 425, 0, 0, 2, 0, 1, 19, 33, 0.004890389098476993, ["cmp     eax, 0A000h", "jz      loc_6539"], ["cmp~eax,<STR>", "jz~FOO"]], [1, 0, 426, 0, 0, 2, 0, 1, 18, 34, 0.003686176745280591, ["cmp     dword ptr [x_0+4], 2", "jnz     loc_55E0"], ["cmp~[word ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 5, -1, 0.0038240636559519346, ["mov     rcx, [rbp+var_38]", "xor     rcx, fs:28h", "mov     eax, ebx", "jnz     loc_7221"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [0, 0, 3, 0, 2, 11, 5, 3, 16, -1, 0.000887991704723454, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     r8, r12", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "xor     ebx, ebx", "jmp     loc_48EB"], ["xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~r8,r12", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "xor~ebx,ebx", "jmp~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 16, -1, 0.0067114155654098735, ["mov     rdi, [rbp+dst_backup]; old", "test    rdi, rdi", "jz      loc_48EB"], ["mov~rdi,[rbp+0]", "test~rdi,rdi", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 18, -1, 0.0015388179230921967, ["cmp     byte ptr [x_0+27h], 0", "jz      loc_48EB"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [3, 0, 3, 0, 4, 19, 3, 5, 19, -1, 0.0, ["mov     rsi, [rbp+dst_name]; name", "mov     edi, 1; n", "call    quote_n", "mov     rsi, [rbp+dst_backup]; name", "xor     edi, edi; n", "mov     r13, rax", "call    quote_n", "lea     rsi, aSSUnbackup; \"%s -> %s (unbackup)\\n\"", "mov     r12, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, r13", "mov     rsi, rax", "mov     rdx, r12", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_48EB"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~rsi,[rbp+0]", "xor~edi,edi", "mov~r13,rax", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,r13", "mov~rsi,rax", "mov~rdx,r12", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 3, 0, 3, 14, 4, 4, 5, -1, 2.206190570741501e-05, ["mov     rdi, src_name_0; name", "call    quote", "lea     rsi, aOmittingDirect; \"omitting directory %s\"", "mov     new_dst, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_48EB"], ["mov~rdi,src_name_0", "call~FOO", "lea~rsi,<TAG>", "mov~new_dst,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,r12", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 3, 0, 3, 14, 3, 4, 10, -1, 0.00022061905707415006, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aCannotStatS; \"cannot stat %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     src_name_0, rax", "call    _dcgettext", "mov     esi, [r12]; errnum", "mov     rdx, rax; format", "mov     rcx, r13", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_48EB"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~src_name_0,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rax", "mov~rcx,r13", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 14, -1, 0.002426809627815651, ["mov     ebx, 1", "jmp     loc_48EB"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 3, 0, 1, 6, 0, 2, 17, -1, 3.3092858561122513e-05, ["mov     rdi, [x_0+30h]; ht", "mov     rdx, [rbp+stats]; stats", "mov     rsi, [rbp+dst_name]; file", "call    record_file", "movzx   ebx, byte ptr [rbp+format]", "jmp     loc_48EB"], ["mov~rdi,[x_0+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "call~FOO", "movzx~ebx,[yte ptr [rbp+0]", "jmp~FOO"]], [0, 0, 3, 0, 2, 8, 2, 3, 17, -1, 5.5154764268537516e-05, ["mov     esi, [r9]; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     rsi, [rbp+src_mode]; dev", "mov     rdi, [rbp+ino]; ino", "call    forget_created", "jmp     loc_48EB"], ["mov~esi,<TAG>", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "jmp~FOO"]], [1, 0, 3, 0, 4, 16, 3, 5, 18, -1, 5.515476426853752e-06, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aCannotUnBackup; \"cannot un-backup %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r13, rax", "call    _dcgettext", "mov     r12, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r13", "mov     rdx, r12; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_48EB"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r13,rax", "call~FOO", "mov~r12,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r13", "mov~rdx,r12", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 3, 0, 3, 13, 2, 4, 19, -1, 1.1030952853707504e-05, ["mov     rdi, src_name_0; name", "call    quote", "lea     rsi, aRemovedS; \"removed %s\\n\"", "mov     r12, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rdx, r12", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_48EB"], ["mov~rdi,src_name_0", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rdx,r12", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 28, -1, 2.206190570741501e-05, ["movzx   ebx, byte ptr [rbp+format]", "jmp     loc_48EB"], ["movzx~ebx,[yte ptr [rbp+0]", "jmp~FOO"]], [3, 0, 3, 0, 4, 23, 5, 5, 15, -1, 8.824762282966004e-05, ["mov     rsi, cs:top_level_dst_name; name", "mov     edi, 1; n", "call    quote_n", "mov     rsi, cs:top_level_src_name; name", "xor     edi, edi; n", "mov     r12, rax", "call    quote_n", "lea     rsi, aCannotMoveSToA; \"cannot move %s to a subdirectory of its\"...", "mov     rbx, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     r8, r12", "xor     eax, eax", "xor     esi, esi; errnum", "xor     edi, edi; status", "call    _error", "mov     rax, qword ptr [rbp+fildes]", "mov     ebx, r14d", "mov     byte ptr [rax], 1", "jmp     loc_48EB"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,<TAG>", "xor~edi,edi", "mov~r12,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~r8,r12", "xor~eax,eax", "xor~esi,esi", "xor~edi,edi", "call~FOO", "mov~rax,[word ptr [rbp+0]", "mov~ebx,r14d", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 5, 0, 1, 28, -1, 2.7577382134268758e-05, ["cmp     byte ptr [r15+20h], 0", "movzx   eax, byte ptr [rbp+delayed_ok]", "cmovnz  eax, ebx", "mov     ebx, eax", "jmp     loc_48EB"], ["cmp~[yte ptr [r15+0],0", "movzx~eax,[yte ptr [rbp+0]", "cmovnz~eax,ebx", "mov~ebx,eax", "jmp~FOO"]], [1, 0, 3, 0, 1, 9, 1, 2, 28, -1, 2.206190570741501e-05, ["mov     edx, [r15+10h]; mode", "mov     rdi, [rbp+dst_name]; name", "mov     esi, 0FFFFFFFFh; desc", "call    set_acl", "test    eax, eax", "movzx   eax, byte ptr [rbp+delayed_ok]", "cmovnz  eax, ebx", "mov     ebx, eax", "jmp     loc_48EB"], ["mov~edx,[r15+0]", "mov~rdi,[rbp+0]", "mov~esi,0", "call~FOO", "test~eax,eax", "movzx~eax,[yte ptr [rbp+0]", "cmovnz~eax,ebx", "mov~ebx,eax", "jmp~FOO"]], [1, 0, 3, 0, 4, 18, 5, 5, 22, -1, 0.00015443333995190505, ["mov     rsi, src_name_0; name", "mov     edi, 1; n", "call    quote_n", "mov     rsi, [rbp+dst_name]; name", "mov     src_name_0, rax", "xor     edi, edi; n", "call    quote_n", "mov     rdx, fmt; format", "mov     rcx, rax", "mov     r8, r13", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     rdi, tmp_backup; ptr", "xor     ebx, ebx", "call    free", "jmp     loc_48EB"], ["mov~rsi,src_name_0", "mov~edi,0", "call~FOO", "mov~rsi,[rbp+0]", "mov~src_name_0,rax", "xor~edi,edi", "call~FOO", "mov~rdx,fmt", "mov~rcx,rax", "mov~r8,r13", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~rdi,tmp_backup", "xor~ebx,ebx", "call~FOO", "jmp~FOO"]], [1, 0, 3, 0, 3, 15, 5, 4, 20, -1, 6.618571712224503e-05, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aCannotOverwrit; \"cannot overwrite directory %s with non-\"...", "mov     rbx, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "xor     ebx, ebx", "call    _error", "jmp     loc_48EB"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "xor~ebx,ebx", "call~FOO", "jmp~FOO"]], [1, 0, 4, 0, 2, 11, 2, 3, 20, -1, 0.0001139865128216442, ["mov     rsi, [rbp+dst_name]; name", "xor     edi, edi; n", "call    quote_n", "mov     rsi, src_name_0; name", "xor     edi, edi; n", "mov     r12, rax", "call    quote_n", "mov     edx, 5", "mov     rbx, rax", "lea     rsi, aCannotMoveDire; \"cannot move directory onto non-director\"...", "jmp     loc_46B8"], ["mov~rsi,[rbp+0]", "xor~edi,edi", "call~FOO", "mov~rsi,src_name_0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~edx,0", "mov~rbx,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [2, 0, 4, 0, 2, 11, 1, 3, 16, -1, 0.0006655341555070194, ["mov     rsi, [rbp+dst_name]; name", "mov     edi, 1; n", "call    quote_n", "mov     rsi, src_name_0; name", "xor     edi, edi; n", "mov     r12, rax", "call    quote_n", "mov     edx, 5", "mov     rbx, rax", "lea     rsi, aSAndSAreTheSam; \"%s and %s are the same file\"", "jmp     loc_46B8"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~rsi,src_name_0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~edx,0", "mov~rbx,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [2, 0, 4, 0, 2, 11, 1, 3, 19, -1, 5.8831748553106686e-05, ["mov     rsi, src_name_0; name", "mov     edi, 1; n", "call    quote_n", "mov     rsi, [rbp+dst_name]; name", "xor     edi, edi; n", "mov     r12, rax", "call    quote_n", "mov     edx, 5", "mov     rbx, rax", "lea     rsi, aWillNotOverwri; \"will not overwrite just-created %s with\"...", "jmp     loc_46B8"], ["mov~rsi,src_name_0", "mov~edi,0", "call~FOO", "mov~rsi,[rbp+0]", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~edx,0", "mov~rbx,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [2, 0, 4, 0, 2, 11, 1, 2, 15, -1, 0.0003510294330335367, ["mov     rsi, [rbp+dst_name]; name", "mov     edi, 1; n", "call    quote_n", "mov     rsi, src_name_0; name", "xor     edi, edi; n", "mov     r12, rax", "call    quote_n", "lea     rsi, aWillNotCopySTh; \"will not copy %s through just-created s\"...", "mov     rbx, rax", "mov     edx, 5; category", "nop     dword ptr [rax]"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~rsi,src_name_0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0", "nop~<TAG>"]], [2, 0, 71, 1, 0, 10, 2, 1, 19, -1, 0.02319441686706231, ["sub     rsp, 30h", "mov     rsi, [rbp+ancestors]", "lea     r14, [rsp+3C0h+var_3B1]", "and     r14, 0FFFFFFFFFFFFFFF0h", "test    r12b, r12b", "mov     [rbp+ptr], r14", "mov     [r14], rsi", "mov     [r14+8], rdx", "mov     [r14+10h], rcx", "jnz     short loc_5119"], ["sub~rsp,0", "mov~rsi,[rbp+0]", "lea~r14,[rsp+0]", "and~r14,0", "test~r12b,r12b", "mov~[rbp+0],r14", "mov~<TAG>,rsi", "mov~[r14+0],rdx", "mov~[r14+0],rcx", "jnz~FOO"]], [0, 0, 72, 0, 0, 1, 0, 1, 18, -1, 0.02316132400850119, ["jmp     loc_50D8"], ["jmp~FOO"]], [0, 0, 77, 0, 0, 3, 1, 1, 19, -1, 0.0004449150984328693, ["mov     rax, [rax]", "test    rax, rax", "jz      loc_50D8"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [2, 0, 35, 0, 4, 17, 3, 5, 24, -1, 0.00025738889991984177, ["mov     rdi, src_name_0; name", "call    quote", "lea     rsi, aCannotAccessS; \"cannot access %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, rax", "call    _dcgettext", "mov     qword ptr [rbp+fildes], rax", "call    ___errno_location", "mov     rdx, qword ptr [rbp+fildes]; format", "mov     esi, [rax]; errnum", "mov     rcx, r14", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     byte ptr [rbp+delayed_ok], 0", "jmp     loc_4F8C"], ["mov~rdi,src_name_0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,rax", "call~FOO", "mov~[word ptr [rbp+0],rax", "call~FOO", "mov~rdx,[word ptr [rbp+0]", "mov~esi,<TAG>", "mov~rcx,r14", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~[yte ptr [rbp+0],0", "jmp~FOO"]], [0, 0, 44, 0, 1, 13, 1, 2, 23, -1, 0.008600466241607284, ["movdqu  xmm0, xmmword ptr [x_0]", "mov     rdi, src_name_0; dir", "movaps  xmmword ptr [rbp+dev], xmm0", "movdqu  xmm0, xmmword ptr [x_0+10h]", "movaps  [rbp+var_2D0], xmm0", "movdqu  xmm0, xmmword ptr [x_0+20h]", "movaps  [rbp+var_2C0], xmm0", "movdqu  xmm0, xmmword ptr [x_0+30h]", "movaps  [rbp+var_2B0], xmm0", "call    savedir", "test    rax, rax", "mov     [rbp+abase], rax", "jz      loc_68C5"], ["movdqu~xmm0,<TAG>", "mov~rdi,src_name_0", "movaps~[mmword ptr [rbp+0],xmm0", "movdqu~xmm0,[mmword ptr [x_0+0]", "movaps~[rbp+0],xmm0", "movdqu~xmm0,[mmword ptr [x_0+0]", "movaps~[rbp+0],xmm0", "movdqu~xmm0,[mmword ptr [x_0+0]", "movaps~[rbp+0],xmm0", "call~FOO", "test~rax,rax", "mov~[rbp+0],rax", "jz~FOO"]], [0, 0, 0, 0, 0, 8, 0, 0, 6, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "pop~rbp", "retn"]], [2, 0, 107, 0, 1, 7, 1, 2, 25, 4, 0.01356807201006023, ["mov     rdi, [rbp+dst_name]; file", "xor     eax, eax", "mov     esi, 201h; flags", "call    open_safer", "cmp     byte ptr [x_0+21h], 0", "mov     [rbp+mode], eax", "jnz     loc_722E"], ["mov~rdi,[rbp+0]", "xor~eax,eax", "mov~esi,0", "call~FOO", "cmp~[yte ptr [x_0+0],0", "mov~[rbp+0],eax", "jnz~FOO"]], [1, 0, 108, 0, 1, 7, 2, 2, 24, 5, 0.07837492002559181, ["mov     eax, [rbp+mode]", "and     eax, 1FFh", "mov     dword ptr [rbp+x], eax", "call    ___errno_location", "test    r12b, r12b", "mov     [rbp+device], rax", "jz      loc_70F4"], ["mov~eax,[rbp+0]", "and~eax,0", "mov~[word ptr [rbp+0],eax", "call~FOO", "test~r12b,r12b", "mov~[rbp+0],rax", "jz~FOO"]], [2, 0, 70, 0, 0, 4, 1, 1, 20, -1, 0.013443054544384879, ["mov     eax, [rbp+var_1D8]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_5FE0"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 429, 0, 0, 2, 0, 1, 18, 34, 0.0007997440818937941, ["cmp     byte ptr [x_0+15h], 0", "jz      loc_652E"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 1, 437, 0, 0, 4, 1, 1, 17, 33, 0.002182290172891801, ["mov     eax, [rdx+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_6910"], ["mov~eax,[rdx+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [1, 1, 440, 0, 0, 4, 1, 1, 19, 34, 0.0007298813804869799, ["mov     eax, [rdx+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_6910"], ["mov~eax,[rdx+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 292, 0, 0, 3, 1, 1, 6, 23, 0.009512848608751715, ["mov     r8d, 1", "and     r8b, [x_0+27h]", "jnz     loc_5460"], ["mov~r8d,0", "and~r8b,[x_0+0]", "jnz~FOO"]], [1, 0, 103, 0, 0, 2, 0, 1, 26, 3, 0.004348953162574183, ["cmp     [rbp+mode], 0", "js      loc_7236"], ["cmp~[rbp+0],0", "js~FOO"]], [1, 0, 289, 0, 0, 1, 0, 0, 7, 22, 0.009451933235770682, ["mov     [rbp+dst_backup], 0"], ["mov~[rbp+0],0"]], [0, 0, 290, 0, 0, 2, 1, 1, 7, 23, 0.0031438215633066385, ["xor     r8d, r8d", "jmp     loc_4920"], ["xor~r8d,r8d", "jmp~FOO"]], [1, 1, 428, 0, 0, 4, 1, 1, 19, 34, 0.0002647428684889801, ["mov     eax, [r14+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_652E"], ["mov~eax,[r14+0]", "and~eax,0", "cmp~eax,<STR>", "jnz~FOO"]], [1, 0, 250, 0, 1, 5, 0, 2, 14, 19, 0.006695788382200455, ["call    ___errno_location", "mov     r9, rax", "mov     eax, [rax]", "cmp     eax, 16h", "jz      loc_60D1"], ["call~FOO", "mov~r9,rax", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 85, 0, 0, 2, 0, 1, 27, -1, 0.0012207587824769638, ["mov     dword ptr [rbp+omitted_permissions], 0", "jmp     loc_6C0B"], ["mov~[word ptr [rbp+0],0", "jmp~FOO"]], [0, 0, 86, 0, 0, 1, 0, 1, 28, -1, 0.0004559460512865768, ["jmp     loc_7125"], ["jmp~FOO"]], [1, 0, 288, 0, 0, 2, 0, 1, 8, 21, 0.19558700602780288, ["cmp     byte ptr [x_0+18h], 0", "jnz     loc_4B5C"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 292, 0, 0, 2, 0, 1, 9, 22, 0.1781088289295318, ["cmp     byte ptr [x_0+27h], 0", "jz      loc_492B"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 291, 0, 0, 2, 0, 1, 10, 22, 0.0013273913267294697, ["cmp     dword ptr [rbp+ptr], 4000h", "jz      loc_492B"], ["cmp~[word ptr [rbp+0],0", "jz~FOO"]], [0, 0, 289, 0, 0, 1, 0, 1, 24, 22, 0.0006980141833540471, ["jmp     loc_492B"], ["jmp~FOO"]], [2, 0, 289, 0, 0, 3, 0, 1, 23, 22, 0.004743309727094226, ["mov     r12d, 1", "mov     [rbp+dst_backup], 0", "jmp     loc_492B"], ["mov~r12d,0", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 68, 0, 1, 8, 2, 2, 20, -1, 0.008302630514557182, ["mov     esi, dword ptr [rbp+omitted_permissions]", "mov     r14, [rbp+dst_name]", "not     esi", "and     esi, edi; mode", "mov     dst_mode_bits_0, r14; path", "call    _mkdir", "test    eax, eax", "jz      loc_5C00"], ["mov~esi,[word ptr [rbp+0]", "mov~r14,[rbp+0]", "not~esi", "and~esi,edi", "mov~dst_mode_bits_0,r14", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 413, 0, 0, 4, 0, 1, 20, 34, 0.0015994881637875881, ["mov     rax, [rdx]", "cmp     [r14], rax", "setz    al", "jmp     loc_56D8"], ["mov~rax,<TAG>", "cmp~<TAG>,rax", "setz~al", "jmp~FOO"]], [1, 0, 431, 0, 0, 2, 0, 1, 21, 35, 0.00031622064847294844, ["cmp     byte ptr [x_0+15h], 0", "jnz     loc_692F"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 285, 0, 0, 2, 0, 1, 9, 20, 0.10006116050526667, ["cmp     byte ptr [x_0+1Fh], 0", "jz      loc_4C50"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 288, 0, 1, 7, 0, 2, 8, 21, 0.009470318157193527, ["mov     rsi, [rbp+dst_name]; dst", "mov     rdi, src_name_0; src", "mov     byte ptr [rbp+earlier_file], r8b", "call    emit_verbose", "cmp     byte ptr [x_0+18h], 0", "movzx   r8d, byte ptr [rbp+earlier_file]", "jz      loc_4936"], ["mov~rsi,[rbp+0]", "mov~rdi,src_name_0", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "cmp~[yte ptr [x_0+0],0", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [1, 0, 287, 0, 0, 2, 0, 1, 9, 20, 0.11274847221302979, ["cmp     [rbp+var_270], 1", "jnz     loc_4936"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 292, 0, 0, 2, 0, 1, 12, 21, 0.002412101690677374, ["cmp     dword ptr [rbp+ptr], 4000h", "jz      loc_4936"], ["cmp~[word ptr [rbp+0],0", "jz~FOO"]], [1, 0, 291, 0, 0, 2, 0, 1, 13, 21, 0.0006986270140681419, ["cmp     byte ptr [x_0+27h], 0", "jz      loc_4936"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 36, 0, 0, 2, 0, 1, 26, -1, 0.0013420992638677463, ["mov     byte ptr [rbp+delayed_ok], 1", "jmp     loc_5E28"], ["mov~[yte ptr [rbp+0],0", "jmp~FOO"]], [1, 0, 40, 0, 0, 3, 0, 1, 25, -1, 0.0050190835484369145, ["mov     rax, [rbp+abase]", "cmp     byte ptr [rax], 0", "jz      loc_693D"], ["mov~rax,[rbp+0]", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 284, 0, 0, 2, 0, 0, 10, 20, 0.004189923592266566, ["cmp     [rbp+var_270], 1", "jbe     loc_4C30"], ["cmp~[rbp+0],0", "jbe~FOO"]], [1, 0, 14, 0, 1, 5, 0, 1, 21, -1, 0.00024635794706613423, ["mov     rdi, r14; name", "call    quote", "lea     rsi, aCannotCreateDi; \"cannot create directory %s\"", "mov     src_name_0, rax", "mov     edx, 5; category"], ["mov~rdi,r14", "call~FOO", "lea~rsi,<TAG>", "mov~src_name_0,rax", "mov~edx,0"]], [1, 0, 10, 0, 1, 6, 1, 2, 32, -1, 0.0017318595980320782, ["mov     rsi, [rbp+dst_name]; filename", "lea     rdx, [rbp+dst_mode]; stat_buf", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jz      loc_65A5"], ["mov~rsi,[rbp+0]", "lea~rdx,[rbp+0]", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 11, 0, 0, 2, 1, 1, 31, -1, 0.0038865723887896103, ["test    r12b, r12b", "jnz     loc_7134"], ["test~r12b,r12b", "jnz~FOO"]], [1, 0, 8, 0, 1, 8, 1, 2, 16, -1, 0.0, ["test    r8b, r8b", "mov     eax, 0", "cmovnz  rax, [rbp+dst_backup]", "mov     rsi, [rbp+dst_name]; dst", "mov     rdi, src_name_0; src", "mov     rdx, rax; backup_dst_name", "call    emit_verbose", "jmp     loc_4E7D"], ["test~r8b,r8b", "mov~eax,0", "cmovnz~rax,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rdi,src_name_0", "mov~rdx,rax", "call~FOO", "jmp~FOO"]], [1, 0, 9, 0, 0, 3, 0, 1, 15, -1, 0.0008236444797434936, ["cmp     dword ptr [rbp+ptr], 4000h", "movzx   r8d, byte ptr [rbp+delayed_ok]", "jz      loc_612F"], ["cmp~[word ptr [rbp+0],0", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 422, 0, 0, 18, 0, 0, 20, 35, 0.0003125436641883793, ["movdqa  xmm0, xmmword ptr [rdx]", "movaps  xmmword ptr [rbp+timespec.tv_sec], xmm0", "movdqa  xmm0, xmmword ptr [rdx+10h]", "movaps  xmmword ptr [rbp+timespec.tv_sec+10h], xmm0", "movdqa  xmm0, xmmword ptr [rdx+20h]", "movaps  [rbp+var_B0], xmm0", "movdqa  xmm0, xmmword ptr [rdx+30h]", "movaps  [rbp+var_A0], xmm0", "movdqa  xmm0, xmmword ptr [rdx+40h]", "movaps  [rbp+var_90], xmm0", "movdqa  xmm0, xmmword ptr [rdx+50h]", "movaps  [rbp+var_80], xmm0", "movdqa  xmm0, xmmword ptr [rdx+60h]", "movaps  [rbp+var_70], xmm0", "movdqa  xmm0, xmmword ptr [rdx+70h]", "movaps  [rbp+var_60], xmm0", "movdqa  xmm0, xmmword ptr [rdx+80h]", "movaps  [rbp+var_50], xmm0"], ["movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [rdx+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [rdx+0]", "movaps~[rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [rdx+0]", "movaps~[rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [rdx+0]", "movaps~[rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [rdx+0]", "movaps~[rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [rdx+0]", "movaps~[rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [rdx+0]", "movaps~[rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [rdx+0]", "movaps~[rbp+0],xmm0"]], [0, 0, 46, 0, 1, 5, 1, 1, 37, -1, 0.0012501746567535172, ["mov     rsi, [rbp+length]; length", "mov     edi, [rbp+mode]; fd", "call    _ftruncate", "test    eax, eax", "jns     loc_73C1"], ["mov~rsi,[rbp+0]", "mov~edi,[rbp+0]", "call~FOO", "test~eax,eax", "jns~FOO"]], [0, 0, 47, 0, 0, 5, 1, 1, 36, -1, 0.023348850207014216, ["mov     r9d, ebx", "movzx   r14d, byte ptr [rbp+abase]", "movzx   ebx, byte ptr [rbp+nbytes]", "test    r9b, r9b", "jnz     loc_76D1"], ["mov~r9d,ebx", "movzx~r14d,[yte ptr [rbp+0]", "movzx~ebx,[yte ptr [rbp+0]", "test~r9b,r9b", "jnz~FOO"]], [0, 0, 13, 0, 2, 5, 1, 2, 21, -1, 0.0019662673461733624, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     r12, rax", "call    ___errno_location", "mov     rcx, r13"], ["xor~edi,edi", "call~FOO", "mov~r12,rax", "call~FOO", "mov~rcx,r13"]], [1, 0, 14, 0, 1, 6, 0, 2, 20, -1, 0.0018274611894308764, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "mov     edx, 5", "mov     src_name_0, rax", "lea     rsi, aCannotCreateLi; \"cannot create link %s\"", "jmp     loc_5151"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~edx,0", "mov~src_name_0,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 14, 0, 1, 6, 0, 2, 21, -1, 0.00013512917245791692, ["mov     rdi, src_name_0; name", "call    quote", "mov     edx, 5", "mov     src_name_0, rax", "lea     rsi, aCannotOpenSFor; \"cannot open %s for reading\"", "jmp     loc_5151"], ["mov~rdi,src_name_0", "call~FOO", "mov~edx,0", "mov~src_name_0,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 14, 0, 1, 6, 0, 2, 22, -1, 5.147777998396835e-05, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "mov     edx, 5", "mov     src_name_0, rax", "lea     rsi, aCannotStatS; \"cannot stat %s\"", "jmp     loc_5151"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~edx,0", "mov~src_name_0,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 14, 0, 1, 6, 0, 2, 24, -1, 8.457063854509087e-05, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "mov     edx, 5", "mov     src_name_0, rax", "lea     rsi, aCannotCreateFi; \"cannot create fifo %s\"", "jmp     loc_5151"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~edx,0", "mov~src_name_0,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 14, 0, 1, 6, 0, 2, 24, -1, 5.147777998396835e-05, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "mov     edx, 5", "mov     src_name_0, rax", "lea     rsi, aCannotCreateSp; \"cannot create special file %s\"", "jmp     loc_5151"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~edx,0", "mov~src_name_0,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 14, 0, 1, 6, 0, 2, 25, -1, 4.780079569939918e-05, ["mov     rdi, src_name_0; name", "call    quote", "mov     edx, 5", "mov     src_name_0, rax", "lea     rsi, aCannotReadSymb; \"cannot read symbolic link %s\"", "jmp     loc_5151"], ["mov~rdi,src_name_0", "call~FOO", "mov~edx,0", "mov~src_name_0,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 33, 0, 0, 3, 1, 1, 39, -1, 0.010619130613835757, ["mov     rax, 0FF00000000FFh", "test    [x_0+18h], rax", "jnz     loc_769C"], ["mov~rax,0", "test~[x_0+0],rax", "jnz~FOO"]], [1, 0, 40, 0, 0, 2, 0, 1, 38, -1, 0.016774402306204545, ["cmp     byte ptr [x_0+1Ch], 0", "jz      short loc_742D"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 38, 0, 0, 3, 0, 1, 40, -1, 3.676984284569168e-05, ["mov     eax, dword ptr [rbp+var_B0]", "cmp     [rbp+group], eax", "jz      short loc_742D"], ["mov~eax,[word ptr [rbp+0]", "cmp~[rbp+0],eax", "jz~FOO"]], [1, 1, 421, 0, 0, 3, 1, 1, 20, 34, 0.00499334465844493, ["and     esi, 0F000h", "cmp     esi, 0A000h", "jz      loc_71CD"], ["and~esi,0", "cmp~esi,<STR>", "jz~FOO"]], [0, 0, 422, 0, 0, 2, 0, 1, 19, 35, 0.0018421691265691532, ["mov     esi, [r14+18h]", "jmp     loc_5959"], ["mov~esi,[r14+0]", "jmp~FOO"]], [0, 0, 12, 0, 1, 5, 2, 1, 22, -1, 0.0012602863635360823, ["mov     esi, [rax]; errnum", "mov     rdx, r12; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~esi,<TAG>", "mov~rdx,r12", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [0, 0, 4, 0, 1, 5, 1, 2, 21, -1, 0.0003548289834609247, ["lea     rsi, aBackingUpSWoul_0; \"backing up %s would destroy source;  %s\"...", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax", "jmp     loc_6411"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rbx,rax", "jmp~FOO"]], [2, 0, 6, 0, 0, 3, 0, 1, 20, -1, 0.0018421691265691532, ["cmp     byte ptr [x_0+18h], 0", "mov     edx, 5; category", "jz      loc_6ED7"], ["cmp~[yte ptr [x_0+0],0", "mov~edx,0", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 21, -1, 0.005724145285003052, ["cmp     byte ptr [x_0+21h], 0", "jnz     loc_5450"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 12, 0, 2, 9, 4, 3, 21, -1, 0.0005828020091042131, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     un_backup"], ["xor~edi,edi", "call~FOO", "mov~rcx,r12", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 12, 0, 5, 22, 4, 6, 20, -1, 0.0016031651480721571, ["mov     rsi, src_name_0; name", "mov     edi, 1; n", "call    quote_n", "mov     rsi, [rbp+dst_name]; name", "xor     edi, edi; n", "mov     r12, rax", "call    quote_n", "lea     rsi, aCannotCreateSy; \"cannot create symbolic link %s to %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r14, rax", "call    _dcgettext", "mov     src_name_0, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     r8, r12", "mov     rcx, r14", "mov     rdx, r13; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     un_backup"], ["mov~rsi,src_name_0", "mov~edi,0", "call~FOO", "mov~rsi,[rbp+0]", "xor~edi,edi", "mov~r12,rax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r14,rax", "call~FOO", "mov~src_name_0,rax", "call~FOO", "mov~esi,<TAG>", "mov~r8,r12", "mov~rcx,r14", "mov~rdx,r13", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 18, 0, 1, 4, 1, 2, 24, -1, 0.00914006368536781, ["mov     rdi, [rbp+ptr]; ptr", "call    free", "test    r14b, r14b", "jz      un_backup"], ["mov~rdi,[rbp+0]", "call~FOO", "test~r14b,r14b", "jz~FOO"]], [1, 0, 12, 0, 5, 18, 3, 6, 24, -1, 0.001555364352372758, ["mov     rdi, src_name_0; name", "call    quote", "lea     rsi, aClosingS; \"closing %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     src_name_0, rax", "call    _dcgettext", "mov     r12, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "xor     edi, edi; status", "mov     rcx, r13", "mov     rdx, r12; format", "xor     eax, eax", "call    _error", "mov     rdi, [rbp+ptr]; ptr", "call    free", "jmp     un_backup"], ["mov~rdi,src_name_0", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~src_name_0,rax", "call~FOO", "mov~r12,rax", "call~FOO", "mov~esi,<TAG>", "xor~edi,edi", "mov~rcx,r13", "mov~rdx,r12", "xor~eax,eax", "call~FOO", "mov~rdi,[rbp+0]", "call~FOO", "jmp~FOO"]], [0, 0, 276, 0, 1, 7, 0, 1, 11, 19, 0.0047249248056713804, ["mov     rdx, [rbp+src_mode]; dev", "mov     rsi, [rbp+ino]; ino", "mov     rdi, [rbp+dst_name]; name", "mov     byte ptr [rbp+delayed_ok], r8b", "call    remember_copied", "movzx   r8d, byte ptr [rbp+delayed_ok]", "mov     [rbp+earlier_file], rax"], ["mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "movzx~r8d,[yte ptr [rbp+0]", "mov~[rbp+0],rax"]], [1, 0, 282, 0, 0, 2, 0, 1, 12, 20, 0.0005092623234128297, ["cmp     eax, 3", "jz      loc_494F"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 20, 0.0013145218817334776, ["cmp     eax, 4", "jz      loc_494F"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 278, 0, 0, 2, 0, 1, 11, 19, 0.00019120318279759673, ["cmp     dword ptr [rbp+ptr], 4000h", "jz      loc_494F"], ["cmp~[word ptr [rbp+0],0", "jz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 17, -1, 0.005327030982269582, ["cmp     [rbp+earlier_file], 0", "jnz     loc_4A22"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 10, 0, 1, 2, 0, 2, 16, -1, 0.001706120708040094, ["call    restore_default_fscreatecon_or_die", "jmp     loc_517C"], ["call~FOO", "jmp~FOO"]], [0, 0, 449, 0, 1, 11, 1, 2, 18, 32, 0.0044859208271743846, ["mov     rsi, [rbp+dst_name]; dest", "mov     rdi, src_name_0; source", "mov     byte ptr [rbp+delayed_ok], r9b", "mov     byte ptr [rbp+dst_backup], r8b", "mov     [rbp+earlier_file], rdx", "call    same_name", "test    al, al", "mov     rdx, [rbp+earlier_file]", "movzx   r8d, byte ptr [rbp+dst_backup]", "movzx   r9d, byte ptr [rbp+delayed_ok]", "jz      loc_6B57"], ["mov~rsi,[rbp+0]", "mov~rdi,src_name_0", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r8b", "mov~[rbp+0],rdx", "call~FOO", "test~al,al", "mov~rdx,[rbp+0]", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "jz~FOO"]], [1, 0, 451, 0, 0, 2, 0, 1, 17, 33, 0.003186106882579184, ["cmp     qword ptr [r14+10h], 1", "ja      loc_6949"], ["cmp~[word ptr [r14+0],0", "ja~FOO"]], [1, 0, 275, 0, 0, 2, 0, 1, 11, 18, 0.11887800501540659, ["cmp     [rbp+earlier_file], 0", "jz      loc_4C72"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 276, 0, 1, 7, 0, 2, 10, 19, 0.11291761349011997, ["mov     rsi, [rbp+src_mode]; dev", "mov     rdi, [rbp+ino]; ino", "mov     byte ptr [rbp+delayed_ok], r8b", "call    src_to_dest_lookup", "movzx   r8d, byte ptr [rbp+delayed_ok]", "mov     [rbp+earlier_file], rax", "jmp     loc_497F"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "movzx~r8d,[yte ptr [rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 4, 0, 4, 16, 3, 5, 31, -1, 3.3092858561122513e-05, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aPreservingPerm; \"preserving permissions for %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r13, rax", "call    _dcgettext", "mov     r12, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r13", "mov     rdx, r12; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_617B"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r13,rax", "call~FOO", "mov~r12,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r13", "mov~rdx,r12", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 8, 0, 1, 4, 0, 2, 18, -1, 0.0, ["mov     rsi, [rbp+src_mode]; dev", "mov     rdi, [rbp+ino]; ino", "call    forget_created", "jmp     loc_4A22"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "jmp~FOO"]], [1, 0, 30, 0, 0, 2, 0, 1, 40, -1, 0.005680940719659364, ["cmp     byte ptr [x_0+24h], 0", "jnz     loc_767B"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [2, 0, 117, 1, 1, 12, 3, 2, 20, 9, 0.0904924217353895, ["xor     esi, esi", "cmp     dword ptr [x_0+4], 2", "mov     eax, [rbp+var_268]", "mov     dst_mode_bits_0, src_name_0; file", "mov     dword ptr [rbp+ancestors], eax", "setz    sil", "xor     eax, eax", "shl     esi, 11h; flags", "call    open_safer", "test    eax, eax", "mov     [rbp+fildes], eax", "js      loc_6191"], ["xor~esi,esi", "cmp~[word ptr [x_0+0],0", "mov~eax,[rbp+0]", "mov~dst_mode_bits_0,src_name_0", "mov~[word ptr [rbp+0],eax", "setz~sil", "xor~eax,eax", "shl~esi,0", "call~FOO", "test~eax,eax", "mov~[rbp+0],eax", "js~FOO"]], [1, 0, 501, 0, 0, 2, 0, 1, 5, 25, 0.005278310940499039, ["cmp     byte ptr [rbp+format], 0", "jz      loc_4BA0"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [1, 0, 503, 0, 0, 2, 0, 1, 4, 26, 0.00350968149962127, ["cmp     byte ptr [x_0+23h], 0", "jz      loc_4AD0"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 1, 436, 0, 0, 5, 1, 1, 20, 33, 0.002002117942947912, ["mov     esi, [r14+18h]", "mov     ecx, esi", "and     ecx, 0F000h", "cmp     ecx, 0A000h", "jnz     loc_5FB0"], ["mov~esi,[r14+0]", "mov~ecx,esi", "and~ecx,0", "cmp~ecx,<STR>", "jnz~FOO"]], [0, 0, 21, 0, 1, 5, 1, 2, 13, -1, 0.007115454855212617, ["mov     rsi, [rbp+dst_name]; to", "mov     rdi, [rbp+earlier_file]; from", "call    _link", "test    eax, eax", "jz      loc_4E10"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 258, 0, 1, 6, 1, 2, 13, 20, 0.012325251321875851, ["mov     rsi, [rbp+dst_name]; new", "mov     rdi, src_name_0; old", "mov     byte ptr [rbp+delayed_ok], r8b", "call    _rename", "test    eax, eax", "jnz     loc_51A8"], ["mov~rsi,[rbp+0]", "mov~rdi,src_name_0", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 46, 0, 0, 3, 0, 1, 23, -1, 0.0030482199719078402, ["mov     rax, [rbp+device]", "cmp     [rbp+src_mode], rax", "jnz     loc_4F8C"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [1, 0, 47, 0, 0, 5, 1, 1, 22, -1, 0.013148895801619345, ["cmp     [rbp+device], 0", "setnz   al", "and     al, [x_0+1Bh]", "mov     byte ptr [rbp+delayed_ok], al", "jnz     loc_61AD"], ["cmp~[rbp+0],0", "setnz~al", "and~al,[x_0+0]", "mov~[yte ptr [rbp+0],al", "jnz~FOO"]], [0, 1, 248, 0, 0, 2, 0, 1, 15, 18, 0.005879497871026099, ["cmp     eax, 12h", "jz      loc_5E40"], ["cmp~eax,<STR>", "jz~FOO"]], [0, 0, 45, 0, 0, 1, 0, 1, 24, -1, 3.676984284569168e-05, ["jmp     loc_5CA5"], ["jmp~FOO"]], [0, 0, 427, 0, 0, 1, 0, 1, 22, 35, 0.0001470793713827667, ["jmp     loc_58E1"], ["jmp~FOO"]], [1, 0, 20, 0, 1, 4, 0, 2, 14, -1, 0.005669909766805657, ["call    ___errno_location", "cmp     dword ptr [rax], 11h", "mov     src_name_0, rax", "jz      loc_5408"], ["call~FOO", "cmp~<TAG>,0", "mov~src_name_0,rax", "jz~FOO"]], [3, 0, 310, 0, 3, 18, 3, 4, 22, 24, 6.618571712224503e-05, ["mov     rdi, [rbp+dst_name]; name", "mov     byte ptr [rbp+earlier_file], r8b", "call    quote", "lea     rsi, aRemovedS; \"removed %s\\n\"", "mov     r12, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, r12", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "movzx   r8d, byte ptr [rbp+earlier_file]", "mov     [rbp+dst_backup], 0", "mov     r12d, r8d", "xor     r8d, r8d", "jmp     loc_4610"], ["mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rdx,r12", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "movzx~r8d,[yte ptr [rbp+0]", "mov~[rbp+0],0", "mov~r12d,r8d", "xor~r8d,r8d", "jmp~FOO"]], [0, 0, 315, 0, 0, 3, 1, 1, 21, 24, 0.005807796677477, ["movzx   r8d, byte ptr [x_0+27h]", "test    r8b, r8b", "jnz     loc_7174"], ["movzx~r8d,[yte ptr [x_0+0]", "test~r8b,r8b", "jnz~FOO"]], [0, 0, 27, 0, 1, 6, 1, 2, 31, -1, 0.0020664651679278725, ["mov     rdi, dest_link_val; s1", "mov     rsi, r14; s2", "call    _strcmp", "test    eax, eax", "mov     rdi, dest_link_val; ptr", "jnz     loc_770B"], ["mov~rdi,dest_link_val", "mov~rsi,r14", "call~FOO", "test~eax,eax", "mov~rdi,dest_link_val", "jnz~FOO"]], [0, 0, 418, 0, 0, 18, 0, 0, 21, 33, 0.00212161993219641, ["movdqa  xmm0, xmmword ptr [r14]", "movaps  xmmword ptr [rbp+dot_sb.st_dev], xmm0", "movdqa  xmm0, xmmword ptr [r14+10h]", "movaps  xmmword ptr [rbp+dot_sb.st_nlink], xmm0", "movdqa  xmm0, xmmword ptr [r14+20h]", "movaps  xmmword ptr [rbp+dot_sb.st_gid], xmm0", "movdqa  xmm0, xmmword ptr [r14+30h]", "movaps  xmmword ptr [rbp+dot_sb.st_size], xmm0", "movdqa  xmm0, xmmword ptr [r14+40h]", "movaps  xmmword ptr [rbp+dot_sb.st_blocks], xmm0", "movdqa  xmm0, xmmword ptr [r14+50h]", "movaps  xmmword ptr [rbp+dot_sb.st_atim.tv_nsec], xmm0", "movdqa  xmm0, xmmword ptr [r14+60h]", "movaps  xmmword ptr [rbp+dot_sb.st_mtim.tv_nsec], xmm0", "movdqa  xmm0, xmmword ptr [r14+70h]", "movaps  xmmword ptr [rbp+dot_sb.st_ctim.tv_nsec], xmm0", "movdqa  xmm0, xmmword ptr [r14+80h]", "movaps  xmmword ptr [rbp+dot_sb.__glibc_reserved+8], xmm0"], ["movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r14+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r14+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r14+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r14+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r14+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r14+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r14+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r14+0]", "movaps~[mmword ptr [rbp+0],xmm0"]], [1, 0, 66, 0, 1, 6, 1, 2, 21, -1, 0.006497231230833719, ["mov     rsi, [rbp+dst_name]; filename", "lea     rdx, [rbp+dst_mode]; stat_buf", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jnz     loc_61C6"], ["mov~rsi,[rbp+0]", "lea~rdx,[rbp+0]", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 349, 0, 0, 2, 0, 1, 18, 28, 0.0025858391981232656, ["cmp     byte ptr [x_0+18h], 0", "jz      loc_637C"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 17, 29, 0.0038893301270030356, ["cmp     edx, 3", "jz      loc_61E6"], ["cmp~edx,0", "jz~FOO"]], [0, 0, 417, 0, 0, 3, 0, 1, 22, 32, 0.006294997095182415, ["mov     rax, [rbp+dot_sb.st_ino]", "cmp     [rbp+timespec.tv_nsec], rax", "jnz     loc_47C1"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [1, 0, 419, 0, 1, 10, 1, 2, 21, 33, 0.0038828954045050414, ["mov     rsi, [rbp+dst_name]; filename", "lea     rdx, [rbp+dot_sb]; stat_buf", "mov     edi, 1; ver", "mov     byte ptr [rbp+dst_backup], r9b", "mov     byte ptr [rbp+earlier_file], r8b", "call    ___xstat", "test    eax, eax", "movzx   r8d, byte ptr [rbp+earlier_file]", "movzx   r9d, byte ptr [rbp+dst_backup]", "jz      loc_59E2"], ["mov~rsi,[rbp+0]", "lea~rdx,[rbp+0]", "mov~edi,0", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "jz~FOO"]], [1, 0, 67, 2, 1, 18, 2, 1, 33, -1, 0.045594605128657685, ["lea     rdi, [r9+rcx]; n", "mov     [rbp+nbytes], rcx", "call    xmalloc", "mov     rcx, [rbp+abase]", "mov     [rbp+ptr], rax", "xor     edx, edx", "xor     r9d, r9d", "mov     byte ptr [rbp+abase], r14b", "mov     [rbp+length], 0", "lea     rsi, [rax+rcx-1]", "mov     rax, rsi", "div     rcx", "mov     rcx, [rbp+nbytes]", "mov     byte ptr [rbp+nbytes], bl", "mov     ebx, r9d", "mov     r14, rcx", "sub     rsi, rdx", "mov     [rbp+buf], rsi"], ["lea~rdi,<TAG>", "mov~[rbp+0],rcx", "call~FOO", "mov~rcx,[rbp+0]", "mov~[rbp+0],rax", "xor~edx,edx", "xor~r9d,r9d", "mov~[yte ptr [rbp+0],r14b", "mov~[rbp+0],0", "lea~rsi,[rax+0]", "mov~rax,rsi", "div~,rcx", "mov~rcx,[rbp+0]", "mov~[yte ptr [rbp+0],bl", "mov~ebx,r9d", "mov~r14,rcx", "sub~rsi,rdx", "mov~[rbp+0],rsi"]], [0, 0, 69, 2, 0, 11, 2, 1, 32, -1, 0.024080570079643482, ["lea     rcx, [rsi+rax-1]", "xor     edx, edx", "mov     rax, rcx", "div     rsi", "sub     rcx, rdx", "setz    dl", "cmp     r8, rcx", "setb    al", "or      dl, al", "mov     byte ptr [rbp+restore_dst_mode], dl", "jz      short loc_6D52"], ["lea~rcx,[rsi+0]", "xor~edx,edx", "mov~rax,rcx", "div~,rsi", "sub~rcx,rdx", "setz~dl", "cmp~r8,rcx", "setb~al", "or~dl,al", "mov~[yte ptr [rbp+0],dl", "jz~FOO"]], [1, 0, 74, 1, 0, 6, 0, 1, 34, -1, 0.0013751921224288688, ["mov     rax, [rbp+dot_sb.st_size]", "mov     byte ptr [rbp+restore_dst_mode], 1", "cqo", "idiv    rsi", "cmp     [rbp+dot_sb.st_blocks], rax", "jl      loc_6D52"], ["mov~rax,[rbp+0]", "mov~[yte ptr [rbp+0],0", "cqo~,", "idiv~,rsi", "cmp~[rbp+0],rax", "jl~FOO"]], [1, 0, 68, 0, 0, 2, 0, 1, 32, -1, 0.02218692317309036, ["mov     byte ptr [rbp+restore_dst_mode], 1", "jmp     loc_6D52"], ["mov~[yte ptr [rbp+0],0", "jmp~FOO"]], [1, 0, 68, 0, 0, 2, 0, 0, 33, -1, 0.0, ["mov     byte ptr [rbp+restore_dst_mode], 0", "mov     rcx, rsi"], ["mov~[yte ptr [rbp+0],0", "mov~rcx,rsi"]], [1, 0, 279, 0, 0, 2, 0, 1, 10, 19, 0.09645220042996203, ["cmp     byte ptr [x_0+23h], 0", "jz      short loc_4C67"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 280, 0, 0, 1, 0, 0, 13, 20, 4.412381141483002e-05, ["nop"], ["nop"]], [2, 0, 348, 0, 0, 4, 1, 1, 19, 27, 0.004539543514657682, ["mov     ecx, [rbp+var_268]", "and     ecx, 0F000h", "cmp     ecx, 4000h", "jnz     loc_637C"], ["mov~ecx,[rbp+0]", "and~ecx,0", "cmp~ecx,0", "jnz~FOO"]], [0, 0, 350, 0, 0, 3, 1, 1, 20, 28, 0.0022849393175026897, ["mov     edx, [x_0]", "test    edx, edx", "jnz     loc_61F1"], ["mov~edx,<TAG>", "test~edx,edx", "jnz~FOO"]], [0, 0, 416, 0, 0, 3, 0, 1, 23, 32, 0.0008309984483126319, ["mov     rax, [rbp+dot_sb.st_dev]", "cmp     [rbp+timespec.tv_sec], rax", "jnz     loc_47C1"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [0, 0, 410, 0, 0, 1, 0, 1, 22, 32, 0.0022392834293026233, ["jmp     loc_47C1"], ["jmp~FOO"]], [2, 0, 4, 0, 3, 17, 2, 3, 16, -1, 0.0008383524168817703, ["mov     rsi, [rbp+dst_name]; name", "mov     edi, 1; n", "mov     [rbp+format], r9", "call    quote_n", "mov     rsi, src_name_0; name", "xor     edi, edi; n", "mov     r14, rax", "call    quote_n", "lea     rsi, aCannotMoveSToS; \"cannot move %s to %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r12, rax", "call    _dcgettext", "mov     r9, [rbp+format]", "mov     r8, r14", "mov     rcx, r12", "mov     rdx, rax; format"], ["mov~rsi,[rbp+0]", "mov~edi,0", "mov~[rbp+0],r9", "call~FOO", "mov~rsi,src_name_0", "xor~edi,edi", "mov~r14,rax", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~r9,[rbp+0]", "mov~r8,r14", "mov~rcx,r12", "mov~rdx,rax"]], [1, 0, 412, 0, 0, 2, 0, 1, 24, 38, 0.0005864789933887822, ["cmp     byte ptr [x_0+17h], 0", "jz      loc_55E0"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [2, 0, 12, 0, 4, 19, 4, 4, 15, -1, 0.00022061905707415006, ["mov     rsi, [rbp+earlier_file]; name", "mov     edi, 1; n", "call    quote_n", "mov     rsi, [rbp+dst_name]; name", "xor     edi, edi; n", "mov     r12, rax", "call    quote_n", "lea     rsi, aCannotCreateHa; \"cannot create hard link %s to %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, rax", "call    _dcgettext", "mov     esi, [r13+0]; errnum", "mov     rdx, rax; format", "mov     r8, r12", "mov     rcx, r14", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~rsi,[rbp+0]", "xor~edi,edi", "mov~r12,rax", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,rax", "call~FOO", "mov~esi,[r13+0]", "mov~rdx,rax", "mov~r8,r12", "mov~rcx,r14", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [0, 0, 13, 0, 0, 1, 0, 1, 18, -1, 0.0001139865128216442, ["jmp     loc_49C9"], ["jmp~FOO"]], [2, 0, 347, 0, 0, 3, 1, 1, 20, 26, 0.00430636142794459, ["and     eax, 0F000h", "cmp     eax, 4000h", "jnz     loc_637C"], ["and~eax,0", "cmp~eax,0", "jnz~FOO"]], [0, 0, 410, 0, 0, 1, 0, 0, 25, 37, 0.0016601584044829791, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [0, 0, 346, 0, 0, 2, 1, 1, 19, 25, 0.012186751580490412, ["test    edx, edx", "jnz     loc_637C"], ["test~edx,edx", "jnz~FOO"]], [2, 0, 349, 0, 0, 3, 1, 1, 18, 26, 0.0072736877455919086, ["and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_6219"], ["and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 15, -1, 0.006888830057140336, ["cmp     byte ptr [x_0+21h], 0", "jnz     loc_5450"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [3, 0, 12, 0, 4, 22, 5, 5, 14, -1, 0.007258366977739537, ["mov     rsi, cs:top_level_dst_name; name", "mov     edi, 1; n", "call    quote_n", "mov     rsi, cs:top_level_src_name; name", "xor     edi, edi; n", "mov     r12, rax", "call    quote_n", "lea     rsi, aCannotCopyADir; \"cannot copy a directory, %s, into itsel\"...", "mov     src_name_0, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, r12", "mov     rdx, rax; format", "mov     rcx, r13", "xor     eax, eax", "xor     esi, esi; errnum", "xor     edi, edi; status", "call    _error", "mov     rax, qword ptr [rbp+fildes]", "mov     byte ptr [rax], 1", "jmp     loc_4A17"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,<TAG>", "xor~edi,edi", "mov~r12,rax", "call~FOO", "lea~rsi,<TAG>", "mov~src_name_0,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~r8,r12", "mov~rdx,rax", "mov~rcx,r13", "xor~eax,eax", "xor~esi,esi", "xor~edi,edi", "call~FOO", "mov~rax,[word ptr [rbp+0]", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 12, 0, 3, 14, 3, 4, 16, -1, 3.860833498797626e-05, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r12, rax", "call    _dcgettext", "mov     esi, [r13+0]; errnum", "mov     rdx, rax; format", "mov     rcx, r12", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_4A17"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r12,rax", "call~FOO", "mov~esi,[r13+0]", "mov~rdx,rax", "mov~rcx,r12", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 25, 0, 1, 6, 0, 2, 38, -1, 0.0005515476426853752, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "mov     edx, 5", "mov     r12, rax", "lea     rsi, aWritingS; \"writing %s\"", "jmp     loc_6E9A"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~edx,0", "mov~r12,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 26, 0, 0, 3, 0, 1, 38, -1, 0.00020958810422044258, ["movzx   r14d, byte ptr [rbp+abase]", "movzx   ebx, byte ptr [rbp+nbytes]", "jmp     loc_76EB"], ["movzx~r14d,[yte ptr [rbp+0]", "movzx~ebx,[yte ptr [rbp+0]", "jmp~FOO"]], [2, 0, 409, 0, 0, 3, 0, 1, 12, 36, 0.005571979418693296, ["cmp     dword ptr [rbp+ptr], 4000h", "mov     r11d, 1", "jnz     loc_47D4"], ["cmp~[word ptr [rbp+0],0", "mov~r11d,0", "jnz~FOO"]], [0, 0, 478, 0, 0, 3, 1, 1, 11, 34, 0.0018324864012864545, ["movzx   ecx, byte ptr [x_0+17h]", "test    cl, cl", "jnz     loc_5A18"], ["movzx~ecx,[yte ptr [x_0+0]", "test~cl,cl", "jnz~FOO"]], [0, 0, 410, 0, 0, 1, 0, 1, 21, 37, 0.00047616946485170723, ["jmp     loc_5A18"], ["jmp~FOO"]], [0, 0, 67, 0, 0, 2, 0, 1, 39, -1, 0.0, ["mov     rax, rsi", "jmp     loc_6DF4"], ["mov~rax,rsi", "jmp~FOO"]], [1, 0, 67, 0, 0, 3, 0, 1, 38, -1, 0.00689434553356719, ["lea     rsi, [rax+8]", "cmp     qword ptr [rsi-8], 0", "jz      loc_7226"], ["lea~rsi,[rax+0]", "cmp~[word ptr [rsi-8]+0],0", "jz~FOO"]], [2, 0, 4, 0, 3, 17, 2, 4, 18, -1, 2.9415874276553343e-05, ["mov     rsi, [rbp+dst_name]; name", "mov     edi, 1; n", "call    quote_n", "mov     rsi, src_name_0; name", "xor     edi, edi; n", "mov     r14, rax", "call    quote_n", "lea     rsi, aInterDeviceMov; \"inter-device move failed: %s to %s; una\"...", "mov     r12, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, r14", "mov     rcx, r12", "mov     rdx, rax", "mov     r9, [rbp+omitted_permissions]", "jmp     loc_520F"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~rsi,src_name_0", "xor~edi,edi", "mov~r14,rax", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~r8,r14", "mov~rcx,r12", "mov~rdx,rax", "mov~r9,[rbp+0]", "jmp~FOO"]], [1, 0, 310, 0, 0, 3, 1, 1, 18, 24, 0.13870197552108995, ["xor     r12d, r12d", "mov     [rbp+dst_backup], 0", "jmp     loc_4610"], ["xor~r12d,r12d", "mov~[rbp+0],0", "jmp~FOO"]], [2, 0, 328, 0, 0, 4, 1, 1, 17, 25, 0.13312399036139855, ["mov     eax, [rbp+var_1D8]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_6221"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 327, 0, 0, 2, 0, 1, 18, 25, 0.00880760302297135, ["cmp     byte ptr [x_0+18h], 0", "jnz     loc_6221"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 105, 0, 0, 2, 1, 0, 26, 3, 0.007796125929357778, ["test    eax, eax", "jns     loc_7537"], ["test~eax,eax", "jns~FOO"]], [0, 0, 395, 0, 0, 3, 1, 1, 13, 38, 0.0005142875352684075, ["movzx   r11d, byte ptr [x_0+18h]", "test    r11b, r11b", "jz      loc_4E10"], ["movzx~r11d,[yte ptr [x_0+0]", "test~r11b,r11b", "jz~FOO"]], [2, 0, 309, 0, 0, 4, 0, 1, 23, 23, 0.0008806377361543158, ["cmp     qword ptr [x_0+30h], 0", "movzx   r12d, byte ptr [rbp+format]", "mov     [rbp+dst_backup], 0", "jnz     loc_4628"], ["cmp~[word ptr [x_0+0],0", "movzx~r12d,[yte ptr [rbp+0]", "mov~[rbp+0],0", "jnz~FOO"]], [1, 0, 94, 0, 0, 2, 0, 1, 26, -1, 0.00561475500253712, ["cmp     r8d, 11h", "jnz     loc_6BF8"], ["cmp~r8d,0", "jnz~FOO"]], [1, 0, 95, 0, 1, 13, 3, 1, 25, -1, 0.06471492340841735, ["mov     r12d, dword ptr [rbp+omitted_permissions]", "mov     rdi, [rbp+dst_name]; file", "xor     eax, eax", "mov     esi, 0C1h; flags", "not     r12d", "and     r12d, dword ptr [rbp+x]", "mov     edx, r12d", "call    open_safer", "mov     rcx, [rbp+device]", "test    eax, eax", "mov     [rbp+mode], eax", "mov     r8d, [rcx]", "jns     loc_6BF8"], ["mov~r12d,[word ptr [rbp+0]", "mov~rdi,[rbp+0]", "xor~eax,eax", "mov~esi,0", "not~r12d", "and~r12d,[word ptr [rbp+0]", "mov~edx,r12d", "call~FOO", "mov~rcx,[rbp+0]", "test~eax,eax", "mov~[rbp+0],eax", "mov~r8d,<TAG>", "jns~FOO"]], [0, 0, 490, 0, 0, 2, 1, 1, 6, 24, 0.004346072858217937, ["test    r14b, r14b", "jnz     loc_5238"], ["test~r14b,r14b", "jnz~FOO"]], [0, 0, 394, 0, 0, 1, 0, 0, 14, 37, 0.0014560857766893903, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 6, 0, 1, 4, 1, 2, 17, -1, 0.004588876387142321, ["mov     rsi, [rbp+dst_name]; new", "call    _rename", "test    eax, eax", "jnz     loc_5630"], ["mov~rsi,[rbp+0]", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 393, 0, 0, 2, 1, 0, 13, 36, 0.005748964928923894, ["mov     eax, [x_0+8]", "xor     r14d, r14d"], ["mov~eax,[x_0+0]", "xor~r14d,r14d"]], [1, 0, 395, 0, 0, 2, 0, 1, 12, 30, 0.0851388551831996, ["cmp     byte ptr [x_0+18h], 0", "jnz     loc_5A40"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 303, 0, 0, 3, 1, 1, 11, 22, 0.006329805879743005, ["mov     edx, [x_0]", "test    edx, edx", "jnz     loc_5240"], ["mov~edx,<TAG>", "test~edx,edx", "jnz~FOO"]], [1, 0, 391, 0, 0, 2, 0, 1, 15, 34, 0.013669189077885882, ["cmp     eax, 3", "jz      loc_64A4"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 392, 0, 0, 2, 0, 1, 14, 35, 0.015181042449557902, ["cmp     eax, 2", "jz      loc_5FEC"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 290, 0, 0, 1, 0, 1, 14, 23, 3.676984284569168e-05, ["jmp     loc_4B23"], ["jmp~FOO"]], [1, 0, 390, 0, 0, 2, 0, 1, 16, 33, 0.013840781677832443, ["cmp     eax, 4", "jz      loc_6452"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 311, 0, 0, 2, 0, 1, 22, 23, 0.005693810164655357, ["cmp     byte ptr [rbp+format], 0", "jz      loc_7250"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [1, 0, 409, 0, 0, 3, 1, 1, 11, 31, 0.09362901189626979, ["xor     r11d, r11d", "cmp     dword ptr [rbp+ptr], 4000h", "jz      loc_5260"], ["xor~r11d,r11d", "cmp~[word ptr [rbp+0],0", "jz~FOO"]], [0, 0, 383, 0, 0, 2, 1, 1, 17, 32, 0.019599551898181855, ["test    r14b, r14b", "jz      loc_5709"], ["test~r14b,r14b", "jz~FOO"]], [2, 0, 75, 0, 0, 4, 1, 1, 33, -1, 0.002117942947911841, ["mov     eax, [rbp+dot_sb.st_mode]", "and     eax, 0F000h", "cmp     eax, 8000h", "jnz     loc_6CA6"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 32, -1, 0.002996742191923872, ["cmp     eax, 2", "jnz     loc_6CA6"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 19, -1, 8.273214640280628e-05, ["cmp     [rbp+omitted_permissions], 0", "jz      short loc_5A98"], ["cmp~[rbp+0],0", "jz~FOO"]], [3, 0, 371, 0, 0, 7, 2, 1, 13, 29, 0.08908058233625774, ["mov     eax, [rbp+var_1D8]", "xor     r9d, 1", "mov     r14d, r9d", "mov     edx, eax", "and     edx, 0F000h", "cmp     edx, 4000h", "jz      loc_57A8"], ["mov~eax,[rbp+0]", "xor~r9d,0", "mov~r14d,r9d", "mov~edx,eax", "and~edx,0", "cmp~edx,0", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 0, 16, -1, 0.0007032232444238533, ["mov     rax, [rbp+omitted_permissions]", "mov     byte ptr [rax], 1"], ["mov~rax,[rbp+0]", "mov~<TAG>,0"]], [1, 0, 9, 0, 0, 2, 0, 1, 15, -1, 0.002196385279315983, ["cmp     [rbp+omitted_permissions], 0", "jnz     loc_5A85"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 372, 0, 0, 2, 0, 1, 18, 29, 0.023038145034968118, ["cmp     dword ptr [rbp+ptr], 4000h", "jz      loc_528C"], ["cmp~[word ptr [rbp+0],0", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 17, -1, 0.0009823676346940625, ["test    r14b, r14b", "jz      loc_4E10"], ["test~r14b,r14b", "jz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 1, 16, -1, 0.0006836126615728179, ["jmp     loc_5A8F"], ["jmp~FOO"]], [2, 0, 21, 0, 3, 17, 3, 4, 27, -1, 0.0010681639346673433, ["mov     rdi, [rbp+dst_name]; name", "mov     dword ptr [rbp+ptr], r8d", "call    quote", "lea     rsi, aCannotCreateRe; \"cannot create regular file %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r12, rax", "call    _dcgettext", "mov     r8d, dword ptr [rbp+ptr]", "mov     rdx, rax; format", "mov     rcx, r12", "xor     edi, edi; status", "xor     eax, eax", "mov     esi, r8d; errnum", "call    _error", "mov     [rbp+ptr], 0", "jmp     loc_5B8F"], ["mov~rdi,[rbp+0]", "mov~[word ptr [rbp+0],r8d", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~r8d,[word ptr [rbp+0]", "mov~rdx,rax", "mov~rcx,r12", "xor~edi,edi", "xor~eax,eax", "mov~esi,r8d", "call~FOO", "mov~[rbp+0],0", "jmp~FOO"]], [2, 0, 86, 0, 0, 3, 0, 1, 26, -1, 0.05928034063582412, ["cmp     [rbp+mode], 0", "mov     r12d, 1", "js      loc_6A4A"], ["cmp~[rbp+0],0", "mov~r12d,0", "js~FOO"]], [1, 0, 93, 0, 0, 2, 0, 1, 27, -1, 0.004743309727094226, ["cmp     byte ptr [x_0+18h], 0", "jz      loc_6B8B"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [2, 0, 48, 0, 1, 13, 3, 2, 22, -1, 0.029778057228583406, ["mov     eax, dword ptr [rbp+omitted_permissions]", "mov     rsi, [rbp+dst_name]; path", "lea     rcx, [rbp+var_2E8]; dev", "xor     edi, edi; ver", "mov     [rbp+var_2E8], 0", "not     eax", "and     eax, [rbp+mode]", "mov     edx, eax; mode", "mov     r14d, eax", "call    ___xmknod", "test    eax, eax", "mov     byte ptr [rbp+delayed_ok], 1", "jz      loc_4F8C"], ["mov~eax,[word ptr [rbp+0]", "mov~rsi,[rbp+0]", "lea~rcx,[rbp+0]", "xor~edi,edi", "mov~[rbp+0],0", "not~eax", "and~eax,[rbp+0]", "mov~edx,eax", "mov~r14d,eax", "call~FOO", "test~eax,eax", "mov~[yte ptr [rbp+0],0", "jz~FOO"]], [0, 1, 79, 0, 0, 2, 0, 1, 21, -1, 0.05183260896742928, ["cmp     dword ptr [rbp+ptr], 1000h", "jz      loc_625C"], ["cmp~[word ptr [rbp+0],<STR>", "jz~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 18, -1, 0.00047800795699399183, ["movzx   ebx, byte ptr [x_0+27h]", "test    bl, bl", "jz      loc_4E10"], ["movzx~ebx,[yte ptr [x_0+0]", "test~bl,bl", "jz~FOO"]], [1, 0, 367, 0, 0, 2, 0, 1, 16, 28, 0.006693337059344075, ["cmp     byte ptr [rbp+format], 0", "jnz     loc_574F"], ["cmp~[yte ptr [rbp+0],0", "jnz~FOO"]], [2, 0, 24, 0, 3, 17, 4, 4, 28, -1, 0.0004081452555871776, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aCannotFstatS; \"cannot fstat %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r12, rax", "call    _dcgettext", "mov     rdx, rax; format", "mov     rax, [rbp+device]", "mov     rcx, r12", "xor     edi, edi; status", "xor     r12d, r12d", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    _error", "mov     [rbp+ptr], 0", "jmp     loc_6EBC"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rcx,r12", "xor~edi,edi", "xor~r12d,r12d", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 84, 0, 1, 8, 1, 2, 27, -1, 0.05856332870033314, ["lea     rax, [rbp+timespec]", "mov     esi, [rbp+mode]; fildes", "mov     edi, 1; ver", "mov     rdx, rax; stat_buf", "mov     [rbp+delayed_ok], rax", "call    ___fxstat", "test    eax, eax", "jnz     loc_7266"], ["lea~rax,[rbp+0]", "mov~esi,[rbp+0]", "mov~edi,0", "mov~rdx,rax", "mov~[rbp+0],rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 322, 0, 0, 4, 1, 1, 21, 24, 0.004002397393753539, ["xor     r8d, r8d", "cmp     dword ptr [x_0+4], 2", "mov     [rbp+dst_backup], 0", "jnz     loc_4610"], ["xor~r8d,r8d", "cmp~[word ptr [x_0+0],0", "mov~[rbp+0],0", "jnz~FOO"]], [1, 0, 324, 0, 0, 2, 0, 1, 20, 25, 0.0028845941712445124, ["cmp     byte ptr [x_0+1Fh], 0", "jz      loc_6A9C"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 47, 0, 1, 6, 2, 2, 23, -1, 0.0009376309925651378, ["mov     rdi, [rbp+dst_name]; path", "mov     esi, r14d", "and     esi, 0FFFFEFFFh; mode", "call    _mkfifo", "test    eax, eax", "jz      loc_4F8C"], ["mov~rdi,[rbp+0]", "mov~esi,r14d", "and~esi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 393, 0, 0, 3, 0, 1, 21, 36, 0.003089279629752195, ["mov     eax, [x_0+8]", "mov     r14d, r11d", "jmp     loc_5A47"], ["mov~eax,[x_0+0]", "mov~r14d,r11d", "jmp~FOO"]], [1, 0, 407, 0, 0, 2, 0, 1, 20, 37, 0.0008273214640280627, ["cmp     dword ptr [rbp+ptr], 4000h", "jz      loc_72B3"], ["cmp~[word ptr [rbp+0],0", "jz~FOO"]], [0, 0, 406, 0, 0, 3, 1, 1, 21, 37, 0.0002530990849211777, ["movzx   r14d, byte ptr [x_0+26h]", "test    r14b, r14b", "jz      loc_72B3"], ["movzx~r14d,[yte ptr [x_0+0]", "test~r14b,r14b", "jz~FOO"]], [0, 0, 502, 0, 0, 4, 1, 1, 5, 26, 0.0004666093057118275, ["mov     r8d, [x_0]", "mov     rdi, [x_0+38h]; ht", "test    r8d, r8d", "jz      loc_4AA8"], ["mov~r8d,<TAG>", "mov~rdi,[x_0+0]", "test~r8d,r8d", "jz~FOO"]], [2, 0, 350, 0, 0, 4, 1, 1, 17, 27, 0.004628710383558488, ["mov     ecx, [rbp+var_268]", "and     ecx, 0F000h", "cmp     ecx, 4000h", "jnz     loc_637C"], ["mov~ecx,[rbp+0]", "and~ecx,0", "cmp~ecx,0", "jnz~FOO"]], [0, 0, 499, 0, 0, 2, 0, 1, 7, 26, 0.0018237842051463072, ["mov     rdi, [x_0+38h]", "jmp     loc_45E1"], ["mov~rdi,[x_0+0]", "jmp~FOO"]], [0, 0, 310, 0, 0, 1, 0, 1, 23, 24, 0.0011288341753627345, ["jmp     loc_4610"], ["jmp~FOO"]], [0, 0, 350, 0, 0, 2, 0, 1, 17, 27, 0.0011043209467989402, ["mov     eax, [rbp+var_1D8]", "jmp     loc_52C7"], ["mov~eax,[rbp+0]", "jmp~FOO"]], [0, 0, 347, 0, 0, 2, 1, 1, 19, 28, 0.0007501047940521102, ["test    edx, edx", "jnz     loc_637C"], ["test~edx,edx", "jnz~FOO"]], [0, 0, 67, 0, 0, 1, 0, 1, 35, -1, 0.04018576124605643, ["jz      loc_73A6"], ["jz~FOO"]], [0, 0, 67, 0, 1, 7, 1, 2, 34, -1, 0.04604319721137512, ["mov     rsi, [rbp+buf]; buf", "mov     edi, [rbp+fildes]; fd", "mov     rdx, r14; nbytes", "call    _read", "test    rax, rax", "mov     rcx, rax", "js      loc_6E64"], ["mov~rsi,[rbp+0]", "mov~edi,[rbp+0]", "mov~rdx,r14", "call~FOO", "test~rax,rax", "mov~rcx,rax", "js~FOO"]], [0, 0, 67, 0, 0, 2, 0, 1, 42, -1, 0.00030518969561924096, ["movzx   ebx, byte ptr [rbp+restore_dst_mode]", "jmp     loc_6DAF"], ["movzx~ebx,[yte ptr [rbp+0]", "jmp~FOO"]], [0, 0, 71, 0, 0, 3, 0, 0, 32, -1, 0.001011170678256521, ["mov     rdx, [rbp+dot_sb.st_size]", "cmp     rax, rdx", "jbe     loc_6D25"], ["mov~rdx,[rbp+0]", "cmp~rax,rdx", "jbe~FOO"]], [6, 1, 72, 1, 1, 23, 1, 2, 31, -1, 0.02634191541465352, ["mov     rdi, [rbp+dot_sb.st_blksize]", "mov     rax, 1FFFFFFFFFFFFFFFh", "mov     r8, 7FFFFFFFFFFFFFFFh", "sub     r8, r9", "mov     rsi, rcx; b", "mov     [rbp+restore_dst_mode], r9", "mov     [rbp+ptr], r8", "lea     rdx, [rdi-1]", "cmp     rdx, rax", "mov     eax, 200h", "mov     rdx, r8; lcm_max", "cmova   rdi, rax; a", "call    buffer_lcm", "mov     edx, [rbp+dot_sb.st_mode]", "cmp     rax, 2000h", "mov     rsi, rax", "mov     eax, 2000h", "mov     r8, [rbp+ptr]", "mov     r9, [rbp+restore_dst_mode]", "cmovnb  rax, rsi", "and     edx, 0F000h", "cmp     edx, 8000h", "jz      loc_72E7"], ["mov~rdi,[rbp+0]", "mov~rax,0", "mov~r8,0", "sub~r8,r9", "mov~rsi,rcx", "mov~[rbp+0],r9", "mov~[rbp+0],r8", "lea~rdx,[rdi-1]+0]", "cmp~rdx,rax", "mov~eax,<STR>", "mov~rdx,r8", "cmova~rdi,rax", "call~FOO", "mov~edx,[rbp+0]", "cmp~rax,0", "mov~rsi,rax", "mov~eax,0", "mov~r8,[rbp+0]", "mov~r9,[rbp+0]", "cmovnb~rax,rsi", "and~edx,0", "cmp~edx,0", "jz~FOO"]], [0, 0, 70, 0, 0, 2, 0, 1, 33, -1, 0.0, ["lea     rax, [rdx+1]", "jmp     loc_6D25"], ["lea~rax,[rdx+0]", "jmp~FOO"]], [1, 0, 113, 0, 1, 6, 1, 2, 21, 8, 0.0890078393304947, ["mov     esi, [rbp+fildes]; fildes", "lea     rdx, [rbp+dot_sb]; stat_buf", "mov     edi, 1; ver", "call    ___fxstat", "test    eax, eax", "jnz     loc_62DB"], ["mov~esi,[rbp+0]", "lea~rdx,[rbp+0]", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 78, 0, 0, 3, 0, 1, 31, -1, 0.026882432104485186, ["mov     eax, [x_0+0Ch]", "cmp     eax, 3", "jz      loc_74D3"], ["mov~eax,[x_0+0]", "cmp~eax,0", "jz~FOO"]], [4, 1, 79, 2, 0, 16, 2, 1, 30, -1, 0.054463491223038514, ["xor     edx, edx", "mov     eax, 8", "div     rcx", "mov     rcx, qword ptr [rbp+var_A0+8]", "lea     rdx, [rcx-1]", "imul    rax, rsi", "mov     esi, 200h", "mov     [rbp+abase], rax", "lea     r9, [rax+7]", "mov     rax, 1FFFFFFFFFFFFFFFh", "cmp     rdx, rax", "mov     eax, dword ptr [rbp+timespec.tv_nsec+10h]", "cmova   rcx, rsi", "and     eax, 0F000h", "cmp     eax, 8000h", "jz      loc_7300"], ["xor~edx,edx", "mov~eax,0", "div~,rcx", "mov~rcx,[word ptr [rbp+0]", "lea~rdx,[rcx-1]+0]", "imul~rax,rsi", "mov~esi,<STR>", "mov~[rbp+0],rax", "lea~r9,[rax+0]", "mov~rax,0", "cmp~rdx,rax", "mov~eax,[word ptr [rbp+0]", "cmova~rcx,rsi", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 184, 0, 0, 3, 0, 1, 19, 10, 0.14363036012384084, ["mov     eax, dword ptr [rbp+ptr]", "cmp     eax, 8000h", "jz      loc_5AE0"], ["mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 1, 183, 0, 0, 5, 1, 1, 20, 10, 0.05247424272508659, ["cmp     eax, 0A000h", "setnz   al", "and     al, [x_0+14h]", "mov     byte ptr [rbp+restore_dst_mode], al", "jnz     loc_5AE0"], ["cmp~eax,<STR>", "setnz~al", "and~al,[x_0+0]", "mov~[yte ptr [rbp+0],al", "jnz~FOO"]], [1, 0, 309, 0, 0, 2, 0, 1, 8, 23, 0.1814038971130771, ["cmp     byte ptr [rbp+format], 0", "jz      loc_4B08"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [1, 0, 308, 0, 0, 2, 0, 1, 9, 23, 0.009173953223857256, ["cmp     qword ptr [x_0+30h], 0", "jz      loc_4B08"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [1, 1, 296, 0, 0, 4, 1, 1, 13, 23, 0.0033110017821117166, ["mov     eax, [rdx+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_4B08"], ["mov~eax,[rdx+0]", "and~eax,0", "cmp~eax,<STR>", "jnz~FOO"]], [0, 0, 295, 0, 1, 7, 1, 2, 14, 23, 0.0010239175571096944, ["mov     rdi, [x_0+30h]; ht", "mov     rsi, [rbp+dst_name]; file", "mov     byte ptr [rbp+earlier_file], r8b", "call    seen_file", "test    al, al", "movzx   r8d, byte ptr [rbp+earlier_file]", "jz      loc_4B08"], ["mov~rdi,[x_0+0]", "mov~rsi,[rbp+0]", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "test~al,al", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [1, 0, 298, 0, 1, 9, 1, 2, 13, 23, 0.0012317897353306712, ["lea     r14, [rbp+timespec]", "mov     rsi, [rbp+dst_name]; filename", "mov     edi, 1; ver", "mov     byte ptr [rbp+earlier_file], r8b", "mov     rdx, r14; stat_buf", "call    ___lxstat", "test    eax, eax", "movzx   r8d, byte ptr [rbp+earlier_file]", "jnz     loc_4B08"], ["lea~r14,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "mov~[yte ptr [rbp+0],r8b", "mov~rdx,r14", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "jnz~FOO"]], [1, 0, 344, 0, 0, 6, 2, 1, 18, 26, 0.003937437338059483, ["xor     edx, edx", "cmp     byte ptr [rax+1], 2Eh ; '.'", "setz    dl", "movzx   eax, byte ptr [rax+rdx+1]", "test    al, al", "jz      loc_57BE"], ["xor~edx,edx", "cmp~[yte ptr [rax+0],0", "setz~dl", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [1, 0, 345, 0, 1, 6, 0, 2, 17, 27, 0.012714398825326084, ["mov     rdi, src_name_0; name", "mov     byte ptr [rbp+earlier_file], r8b", "call    last_component", "cmp     byte ptr [rax], 2Eh ; '.'", "movzx   r8d, byte ptr [rbp+earlier_file]", "jz      loc_6B0E"], ["mov~rdi,src_name_0", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "cmp~<TAG>,0", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 20, 0, 1, 5, 1, 2, 19, -1, 0.004533721622873784, ["mov     rsi, [rbp+dst_name]; to", "mov     dst_mode_bits_0, src_name_0; from", "call    _link", "test    eax, eax", "jz      loc_4DC9"], ["mov~rsi,[rbp+0]", "mov~dst_mode_bits_0,src_name_0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 187, 0, 0, 3, 1, 1, 18, 11, 0.14923408417352424, ["movzx   r14d, byte ptr [x_0+17h]", "test    r14b, r14b", "jnz     loc_5310"], ["movzx~r14d,[yte ptr [x_0+0]", "test~r14b,r14b", "jnz~FOO"]], [2, 0, 21, 0, 4, 17, 3, 5, 22, -1, 0.007220677888822704, ["mov     rdi, src_name_0; name", "call    quote", "lea     rsi, aCannotFstatS; \"cannot fstat %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     [rbp+ptr], rax", "call    _dcgettext", "mov     r12, rax", "call    ___errno_location", "mov     rcx, [rbp+ptr]", "mov     esi, [rax]; errnum", "mov     rdx, r12; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     [rbp+ptr], 0", "jmp     loc_5B8F"], ["mov~rdi,src_name_0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~[rbp+0],rax", "call~FOO", "mov~r12,rax", "call~FOO", "mov~rcx,[rbp+0]", "mov~esi,<TAG>", "mov~rdx,r12", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 343, 0, 0, 2, 0, 1, 19, 27, 0.0006195718519499048, ["cmp     al, 2Fh ; '/'", "jnz     loc_639C"], ["cmp~al,0", "jnz~FOO"]], [1, 0, 289, 0, 0, 3, 1, 0, 11, 22, 0.0028202469462645517, ["test    r8b, r8b", "mov     edx, 0", "cmovnz  rdx, [rbp+dst_backup]; backup_dst_name"], ["test~r8b,r8b", "mov~edx,0", "cmovnz~rdx,[rbp+0]"]], [0, 0, 290, 0, 0, 1, 0, 1, 13, 23, 3.676984284569168e-05, ["jmp     loc_4B23"], ["jmp~FOO"]], [0, 0, 329, 0, 0, 1, 0, 1, 20, 26, 0.0006306028048036123, ["jmp     loc_57BE"], ["jmp~FOO"]], [1, 0, 33, 0, 0, 2, 0, 1, 24, -1, 0.0020296953250821806, ["cmp     qword ptr [r15+30h], 0", "jz      loc_4F99"], ["cmp~[word ptr [r15+0],0", "jz~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 23, -1, 0.031153249351012276, ["cmp     byte ptr [rbp+format], 0", "jnz     loc_632A"], ["cmp~[yte ptr [rbp+0],0", "jnz~FOO"]], [0, 0, 111, 0, 0, 3, 0, 1, 22, 7, 0.0804156463035277, ["mov     rax, [rbp+dot_sb.st_ino]", "cmp     [rbp+ino], rax", "jnz     short loc_5B55"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [1, 1, 467, 0, 0, 4, 1, 1, 17, 34, 0.005293018877637317, ["mov     eax, [rbp+dot_sb.st_mode]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_5590"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jnz~FOO"]], [1, 1, 469, 0, 0, 5, 1, 1, 16, 35, 0.004382965267206448, ["mov     eax, dword ptr [rbp+timespec.tv_nsec+10h]", "mov     rdx, [rbp+delayed_ok]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_6B31"], ["mov~eax,[word ptr [rbp+0]", "mov~rdx,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 466, 0, 0, 2, 0, 1, 18, 33, 0.006118501849523095, ["cmp     byte ptr [x_0+15h], 0", "jz      loc_5590"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 110, 0, 0, 3, 0, 1, 23, 6, 0.07895220655826918, ["mov     rax, [rbp+dot_sb.st_dev]", "cmp     [rbp+src_mode], rax", "jz      loc_69D0"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jz~FOO"]], [1, 0, 32, 0, 1, 7, 1, 2, 25, -1, 0.0010185246468256595, ["lea     r14, [rbp+timespec]", "mov     rsi, [rbp+dst_name]; filename", "mov     edi, 1; ver", "mov     rdx, r14; stat_buf", "call    ___lxstat", "test    eax, eax", "jnz     loc_4F99"], ["lea~r14,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "mov~rdx,r14", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 289, 0, 0, 5, 2, 1, 7, 22, 0.005256494167077264, ["mov     r12d, r8d", "mov     [rbp+dst_backup], 0", "xor     r8d, r8d", "xor     edx, edx", "jmp     loc_4B33"], ["mov~r12d,r8d", "mov~[rbp+0],0", "xor~r8d,r8d", "xor~edx,edx", "jmp~FOO"]], [2, 0, 310, 0, 0, 3, 0, 1, 22, 24, 0.0011288341753627345, ["mov     r12d, 1", "mov     [rbp+dst_backup], 0", "jmp     loc_4610"], ["mov~r12d,0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 313, 0, 1, 5, 0, 2, 21, 25, 0.001513691863814308, ["call    ___errno_location", "cmp     dword ptr [rax], 2", "mov     __old, rax", "movzx   r8d, byte ptr [rbp+earlier_file]", "jz      loc_7351"], ["call~FOO", "cmp~<TAG>,0", "mov~__old,rax", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [1, 0, 292, 0, 0, 2, 0, 1, 11, 21, 0.0030972464290354293, ["cmp     dword ptr [rbp+ptr], 4000h", "jz      loc_4B5C"], ["cmp~[word ptr [rbp+0],0", "jz~FOO"]], [1, 0, 291, 0, 0, 2, 0, 1, 12, 21, 0.0007023039983527111, ["cmp     byte ptr [x_0+27h], 0", "jz      loc_4B5C"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 31, 0, 1, 5, 0, 2, 26, -1, 0.0, ["mov     rdi, [r15+30h]; ht", "mov     rsi, [rbp+dst_name]; file", "mov     rdx, r14; stats", "call    record_file", "jmp     loc_4F99"], ["mov~rdi,[r15+0]", "mov~rsi,[rbp+0]", "mov~rdx,r14", "call~FOO", "jmp~FOO"]], [1, 0, 50, 0, 0, 2, 0, 1, 23, -1, 0.0011600885417815724, ["mov     byte ptr [rbp+restore_dst_mode], 0", "jmp     loc_5C65"], ["mov~[yte ptr [rbp+0],0", "jmp~FOO"]], [2, 0, 64, 0, 0, 5, 1, 1, 22, -1, 0.0048720041770541475, ["mov     r14d, [rbp+var_1D8]", "mov     eax, r14d", "and     eax, 1C0h", "cmp     eax, 1C0h", "jz      loc_6370"], ["mov~r14d,[rbp+0]", "mov~eax,r14d", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [2, 0, 21, 0, 3, 14, 4, 3, 23, -1, 0.00015443333995190505, ["mov     rdi, src_name_0; name", "call    quote", "lea     rsi, aSkippingFileSA; \"skipping file %s, as it was replaced wh\"...", "mov     r12, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     [rbp+ptr], 0"], ["mov~rdi,src_name_0", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,r12", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~[rbp+0],0"]], [0, 0, 404, 0, 0, 2, 0, 1, 22, 37, 0.00010234272925384183, ["mov     r11d, r14d", "jmp     loc_47E5"], ["mov~r11d,r14d", "jmp~FOO"]], [1, 0, 13, 0, 2, 8, 0, 3, 23, -1, 0.0001250174656753517, ["mov     rdi, r12; ptr", "call    free", "mov     rdi, [rbp+dst_name]; name", "call    quote", "mov     edx, 5", "mov     r12, rax", "lea     rsi, aSCanMakeRelati; \"%s: can make relative symbolic links on\"...", "jmp     loc_4D47"], ["mov~rdi,r12", "call~FOO", "mov~rdi,[rbp+0]", "call~FOO", "mov~edx,0", "mov~r12,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 13, 0, 1, 5, 0, 1, 20, -1, 0.00112699568322045, ["mov     dst_mode_bits_0, src_name_0; name", "call    quote", "lea     rsi, aCannotCopyCycl; \"cannot copy cyclic symbolic link %s\"", "mov     r12, rax", "mov     edx, 5; category"], ["mov~dst_mode_bits_0,src_name_0", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "mov~edx,0"]], [0, 0, 346, 0, 0, 2, 1, 1, 16, 26, 0.13413699953179734, ["test    edx, edx", "jnz     loc_637C"], ["test~edx,edx", "jnz~FOO"]], [0, 0, 20, 0, 1, 4, 1, 2, 23, -1, 0.013092821791279664, ["mov     edi, [rbp+fildes]; fd", "call    _close", "test    eax, eax", "js      loc_6722"], ["mov~edi,[rbp+0]", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 21, 0, 0, 2, 0, 1, 29, -1, 0.0025545848317044292, ["mov     r14d, r12d", "jmp     loc_5B8F"], ["mov~r14d,r12d", "jmp~FOO"]], [1, 0, 21, 0, 3, 15, 3, 4, 29, -1, 0.0025545848317044292, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aClosingS; \"closing %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r12, rax", "call    _dcgettext", "mov     rdx, rax; format", "mov     rax, [rbp+device]", "mov     rcx, r12", "xor     edi, edi; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    _error", "jmp     loc_5B8F"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r12,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rcx,r12", "xor~edi,edi", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 21, 0, 1, 6, 3, 2, 30, -1, 0.0003088666799038101, ["xor     edi, edi; status", "xor     eax, eax", "xor     r14d, r14d", "call    _error", "mov     [rbp+ptr], 0", "jmp     loc_5B8F"], ["xor~edi,edi", "xor~eax,eax", "xor~r14d,r14d", "call~FOO", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 323, 0, 0, 3, 1, 1, 18, 26, 0.009615313904148368, ["movzx   r12d, byte ptr [x_0+18h]", "test    r12b, r12b", "jnz     short loc_63BC"], ["movzx~r12d,[yte ptr [x_0+0]", "test~r12b,r12b", "jnz~FOO"]], [0, 0, 487, 0, 0, 1, 0, 0, 7, 27, 0.0029304339086588067, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 92, 0, 1, 8, 1, 2, 28, -1, 0.00402262080731867, ["mov     rsi, [rbp+dst_name]; filename", "lea     rdx, [rbp+timespec]; stat_buf", "mov     edi, 1; ver", "mov     dword ptr [rbp+ptr], r8d", "call    ___lxstat", "test    eax, eax", "mov     r8d, dword ptr [rbp+ptr]", "jnz     short loc_6BF8"], ["mov~rsi,[rbp+0]", "lea~rdx,[rbp+0]", "mov~edi,0", "mov~[word ptr [rbp+0],r8d", "call~FOO", "test~eax,eax", "mov~r8d,[word ptr [rbp+0]", "jnz~FOO"]], [2, 0, 322, 0, 0, 4, 1, 1, 19, 25, 0.004137832981568504, ["mov     eax, [rbp+var_1D8]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_6FEE"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 235, 0, 0, 5, 2, 1, 15, 14, 0.1089128873396525, ["mov     ecx, edi", "and     ecx, 3Fh", "test    al, al", "mov     dword ptr [rbp+omitted_permissions], ecx", "jz      loc_4CE6"], ["mov~ecx,edi", "and~ecx,0", "test~al,al", "mov~[word ptr [rbp+0],ecx", "jz~FOO"]], [1, 0, 240, 0, 0, 3, 0, 1, 14, 15, 0.19185400901596547, ["cmp     byte ptr [x_0+1Ch], 0", "movzx   eax, byte ptr [x_0+21h]", "jnz     loc_4E20"], ["cmp~[yte ptr [x_0+0],0", "movzx~eax,[yte ptr [x_0+0]", "jnz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 25, -1, 0.006378648487656364, ["cmp     byte ptr [rbp+format], 0", "jz      loc_4E10"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [1, 1, 91, 0, 0, 4, 1, 1, 29, -1, 0.0028570167891102433, ["mov     eax, dword ptr [rbp+timespec.tv_nsec+10h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     short loc_6BF8"], ["mov~eax,[word ptr [rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jnz~FOO"]], [1, 0, 43, 0, 0, 2, 0, 1, 37, -1, 0.02103602709202021, ["cmp     byte ptr [x_0+1Eh], 0", "jnz     loc_75CD"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 44, 0, 0, 3, 0, 1, 40, -1, 0.0007206889197755569, ["movzx   r14d, byte ptr [rbp+abase]", "movzx   ebx, byte ptr [rbp+nbytes]", "jmp     loc_73C1"], ["movzx~r14d,[yte ptr [rbp+0]", "movzx~ebx,[yte ptr [rbp+0]", "jmp~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 26, -1, 0.0037284620645531364, ["cmp     qword ptr [x_0+30h], 0", "jz      loc_4E10"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [1, 0, 90, 0, 0, 2, 0, 1, 30, -1, 0.0019230627808296747, ["cmp     byte ptr [x_0+29h], 0", "jz      loc_7587"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 42, 0, 1, 14, 1, 2, 38, -1, 0.002323854067847714, ["mov     rax, [rbp+var_238]", "mov     rsi, [rbp+dst_name]; file", "lea     rdx, [rbp+var_2A0]; timespec", "mov     edi, [rbp+mode]; fd", "mov     [rbp+var_2A0.tv_sec], rax", "mov     rax, [rbp+var_230]", "mov     [rbp+var_2A0.tv_nsec], rax", "mov     rax, [rbp+var_228]", "mov     [rbp+var_290], rax", "mov     rax, [rbp+var_220]", "mov     [rbp+var_288], rax", "call    gl_futimens", "test    eax, eax", "jz      loc_73CC"], ["mov~rax,[rbp+0]", "mov~rsi,[rbp+0]", "lea~rdx,[rbp+0]", "mov~edi,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 41, 0, 3, 16, 3, 4, 39, -1, 0.001312683389591193, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aPreservingTime; \"preserving times for %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     [rbp+restore_dst_mode], rax", "call    _dcgettext", "mov     rdx, rax; format", "mov     rax, [rbp+device]", "mov     rcx, [rbp+restore_dst_mode]", "xor     edi, edi; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    _error", "cmp     byte ptr [x_0+20h], 0", "jz      loc_73CC"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~[rbp+0],rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rcx,[rbp+0]", "xor~edi,edi", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO", "cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 495, 0, 0, 2, 0, 1, 7, 27, 0.010389073963764544, ["cmp     byte ptr [x_0+14h], 0", "jz      loc_4BB0"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 494, 0, 0, 3, 0, 1, 8, 27, 0.00015443333995190505, ["mov     eax, dword ptr [rbp+ptr]", "cmp     eax, 4000h", "jz      loc_4BB0"], ["mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 1, 493, 0, 0, 2, 0, 1, 9, 27, 0.00011030952853707503, ["cmp     eax, 0A000h", "jz      loc_4BB0"], ["cmp~eax,<STR>", "jz~FOO"]], [1, 0, 492, 0, 0, 2, 0, 1, 8, 27, 0.0021767746964649476, ["cmp     byte ptr [x_0+18h], 0", "jnz     loc_4BB0"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 491, 0, 0, 2, 0, 1, 9, 27, 0.0003235746170420868, ["cmp     byte ptr [x_0+25h], 0", "jnz     loc_4BB0"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 490, 0, 0, 2, 0, 1, 10, 27, 0.00025371191563527257, ["cmp     byte ptr [x_0+17h], 0", "jnz     loc_4BB0"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 489, 0, 0, 3, 1, 1, 11, 27, 0.00017649524565932007, ["mov     edi, [x_0]", "test    edi, edi", "jnz     loc_4BB0"], ["mov~edi,<TAG>", "test~edi,edi", "jnz~FOO"]], [1, 0, 488, 0, 0, 2, 0, 1, 12, 27, 9.192460711422919e-05, ["cmp     byte ptr [x_0+15h], 0", "jnz     loc_4BB0"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 39, 0, 0, 3, 0, 1, 39, -1, 0.004460181937182401, ["mov     eax, dword ptr [rbp+timespec.tv_nsec+14h]", "cmp     [rbp+owner], eax", "jnz     short loc_73EF"], ["mov~eax,[word ptr [rbp+0]", "cmp~[rbp+0],eax", "jnz~FOO"]], [1, 0, 312, 0, 1, 4, 0, 2, 9, 25, 0.015049896676741604, ["call    ___errno_location", "cmp     dword ptr [rax], 2", "mov     r12, rax", "jz      loc_45F9"], ["call~FOO", "cmp~<TAG>,0", "mov~r12,rax", "jz~FOO"]], [0, 0, 320, 0, 2, 11, 1, 3, 19, 26, 0.005580436482547808, ["mov     esi, [x_0]; backup_type", "mov     rdi, [rbp+dst_name]; file", "mov     byte ptr [rbp+earlier_file], r8b", "call    find_backup_file_name", "mov     rsi, src_name_0; s2", "mov     rdi, rax; s1", "mov     r12, rax", "call    _strcmp", "test    eax, eax", "movzx   r8d, byte ptr [rbp+earlier_file]", "jnz     loc_6EED"], ["mov~esi,<TAG>", "mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "mov~rsi,src_name_0", "mov~rdi,rax", "mov~r12,rax", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "jnz~FOO"]], [1, 0, 5, 0, 1, 7, 1, 2, 27, -1, 0.002492995344937896, ["lea     rbx, [rbp+timespec]", "mov     rsi, [rbp+dst_name]; filename", "mov     edi, 1; ver", "mov     rdx, rbx; stat_buf", "call    ___lxstat", "test    eax, eax", "jz      loc_771D"], ["lea~rbx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "mov~rdx,rbx", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 410, 0, 0, 1, 0, 1, 19, 32, 0.007469793574102265, ["jmp     loc_47C1"], ["jmp~FOO"]], [1, 0, 87, 0, 1, 8, 1, 1, 31, -1, 0.00024268096278156509, ["mov     rdi, [rbp+dst_name]; file", "mov     edx, r12d", "mov     esi, 41h ; 'A'; flags", "xor     eax, eax", "call    open_safer", "mov     [rbp+mode], eax", "mov     rax, [rbp+device]", "mov     r8d, [rax]"], ["mov~rdi,[rbp+0]", "mov~edx,r12d", "mov~esi,0", "xor~eax,eax", "call~FOO", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~r8d,<TAG>"]], [0, 0, 4, 0, 1, 5, 0, 2, 28, -1, 0.0, ["mov     rdi, [x_0+30h]; ht", "mov     rsi, [rbp+dst_name]; file", "mov     rdx, rbx; stats", "call    record_file", "jmp     loc_5BF2"], ["mov~rdi,[x_0+0]", "mov~rsi,[rbp+0]", "mov~rdx,rbx", "call~FOO", "jmp~FOO"]], [0, 0, 18, 0, 1, 5, 1, 2, 19, -1, 0.004531883130731499, ["mov     rsi, [rbp+dst_name]; to", "mov     rdi, src_name_0; from", "call    _symlink", "test    eax, eax", "jnz     loc_53B0"], ["mov~rsi,[rbp+0]", "mov~rdi,src_name_0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 4, 0, 1, 4, 1, 1, 21, -1, 0.0003548289834609247, ["lea     rsi, aBackingUpSWoul; \"backing up %s would destroy source;  %s\"...", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rbx,rax"]], [0, 0, 19, 0, 1, 4, 1, 2, 15, -1, 0.004048359697310654, ["mov     rdi, [rbp+dst_name]; name", "call    _unlink", "test    eax, eax", "jnz     loc_64F4"], ["mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 283, 0, 0, 3, 0, 1, 11, 21, 0.0023054691464248684, ["cmp     byte ptr [rbp+format], 0", "mov     eax, [x_0+4]", "jz      short loc_4C46"], ["cmp~[yte ptr [rbp+0],0", "mov~eax,[x_0+0]", "jz~FOO"]], [0, 0, 15, 0, 1, 5, 1, 2, 17, -1, 0.0009394694847074224, ["mov     rsi, [rbp+dst_name]; to", "mov     rdi, [rbp+earlier_file]; from", "call    _link", "test    eax, eax", "jz      loc_4E10"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 67, 1, 0, 3, 0, 1, 39, -1, 0.004967605768452946, ["add     rax, 1", "cmp     byte ptr [rax-1], 0", "jz      short loc_6E03"], ["add~rax,0", "cmp~[yte ptr [rax-1]+0],0", "jz~FOO"]], [1, 0, 82, 0, 1, 5, 0, 2, 28, -1, 0.05651524845382811, ["call    _getpagesize", "movsxd  rsi, eax", "mov     ecx, 8", "mov     rax, rsi", "jmp     short loc_6C49"], ["call~FOO", "movsxd~rsi,eax", "mov~ecx,0", "mov~rax,rsi", "jmp~FOO"]], [0, 0, 82, 0, 0, 1, 0, 0, 30, -1, 0.0, ["mov     rcx, rdx"], ["mov~rcx,rdx"]], [0, 0, 82, 1, 0, 5, 2, 1, 29, -1, 0.056132842088232916, ["xor     edx, edx", "div     rcx", "mov     rax, rcx", "test    rdx, rdx", "jnz     short loc_6C46"], ["xor~edx,edx", "div~,rcx", "mov~rax,rcx", "test~rdx,rdx", "jnz~FOO"]], [3, 0, 315, 1, 3, 23, 5, 4, 20, 25, 0.003767683230255207, ["or      rdx, 0FFFFFFFFFFFFFFFFh", "mov     byte ptr [rbp+earlier_file], r8b", "xor     eax, eax", "mov     rcx, rdx", "mov     rdi, __old", "mov     rsi, __old; src", "repne scasb", "mov     rdx, rcx", "not     rdx; n", "lea     rax, [__len+1Eh]", "and     rax, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rax", "lea     rdi, [rsp+390h+var_388+7]", "and     rdi, 0FFFFFFFFFFFFFFF0h; dest", "call    _memcpy", "mov     rdi, __old; ptr", "mov     [rbp+dst_backup], rax", "call    free", "mov     rsi, [rbp+dst_backup]; new", "mov     rdi, [rbp+dst_name]; old", "call    _rename", "test    eax, eax", "jz      loc_7210"], ["or~rdx,0", "mov~[yte ptr [rbp+0],r8b", "xor~eax,eax", "mov~rcx,rdx", "mov~rdi,__old", "mov~rsi,__old", "scasb~<TAG>,", "mov~rdx,rcx", "not~rdx", "lea~rax,[__len+0]", "and~rax,0", "sub~rsp,rax", "lea~rdi,[rsp+0]", "and~rdi,0", "call~FOO", "mov~rdi,__old", "mov~[rbp+0],rax", "call~FOO", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 389, 0, 0, 2, 0, 1, 17, 33, 0.0004338841455791618, ["cmp     byte ptr [x_0+28h], 0", "jz      loc_5A62"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [2, 0, 28, 0, 0, 3, 0, 1, 41, -1, 0.0034673961803487253, ["cmp     dword ptr [rbp+omitted_permissions], 0", "mov     r12d, 1", "jz      loc_6EBC"], ["cmp~[word ptr [rbp+0],0", "mov~r12d,0", "jz~FOO"]], [1, 0, 260, 0, 0, 1, 0, 0, 11, 18, 0.09663788813633277, ["mov     [rbp+earlier_file], 0"], ["mov~[rbp+0],0"]], [1, 0, 473, 0, 1, 13, 1, 2, 13, 32, 0.0038461255616593494, ["lea     r14, [rbp+dot_sb]", "mov     rsi, [rbp+dst_name]; filename", "mov     edi, 1; ver", "mov     byte ptr [rbp+delayed_ok], r9b", "mov     byte ptr [rbp+dst_backup], r8b", "mov     rdx, r14; stat_buf", "mov     byte ptr [rbp+earlier_file], cl", "call    ___lxstat", "test    eax, eax", "movzx   ecx, byte ptr [rbp+earlier_file]", "movzx   r8d, byte ptr [rbp+dst_backup]", "movzx   r9d, byte ptr [rbp+delayed_ok]", "jnz     loc_47C1"], ["lea~r14,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r8b", "mov~rdx,r14", "mov~[yte ptr [rbp+0],cl", "call~FOO", "test~eax,eax", "movzx~ecx,[yte ptr [rbp+0]", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "jnz~FOO"]], [1, 0, 472, 0, 1, 13, 1, 2, 14, 32, 0.0011030952853707504, ["lea     rax, [rbp+timespec]", "mov     rsi, src_name_0; filename", "mov     edi, 1; ver", "mov     byte ptr [rbp+dst_backup], r9b", "mov     byte ptr [rbp+earlier_file], r8b", "mov     rdx, rax; stat_buf", "mov     byte ptr [rbp+restore_dst_mode], cl", "mov     [rbp+delayed_ok], rax", "call    ___lxstat", "test    eax, eax", "movzx   r8d, byte ptr [rbp+earlier_file]", "movzx   r9d, byte ptr [rbp+dst_backup]", "jnz     loc_47C1"], ["lea~rax,[rbp+0]", "mov~rsi,src_name_0", "mov~edi,0", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r8b", "mov~rdx,rax", "mov~[yte ptr [rbp+0],cl", "mov~[rbp+0],rax", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "jnz~FOO"]], [1, 0, 414, 0, 0, 2, 0, 1, 15, 32, 0.006263129898049483, ["cmp     byte ptr [x_0+18h], 0", "jnz     loc_47C1"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 413, 0, 0, 2, 0, 1, 16, 32, 0.00038056787345290885, ["cmp     dword ptr [x_0+4], 2", "jz      loc_47C1"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [1, 1, 412, 0, 0, 4, 1, 1, 17, 32, 0.0002187805649318655, ["mov     eax, [rdx+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_47C1"], ["mov~eax,[rdx+0]", "and~eax,0", "cmp~eax,<STR>", "jnz~FOO"]], [1, 1, 411, 0, 0, 4, 1, 1, 18, 32, 4.963928784168377e-05, ["mov     eax, [r14+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_47C1"], ["mov~eax,[r14+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [0, 0, 410, 0, 0, 1, 0, 1, 16, 32, 0.006469041017985356, ["jmp     loc_47C1"], ["jmp~FOO"]], [1, 1, 453, 0, 0, 5, 1, 1, 15, 32, 0.011171903917949323, ["mov     esi, [r14+18h]", "mov     eax, esi", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_47C1"], ["mov~esi,[r14+0]", "mov~eax,esi", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [0, 0, 430, 0, 0, 3, 0, 1, 18, 32, 0.008558180922334738, ["mov     rcx, [r14+8]", "cmp     [rdx+8], rcx", "jnz     loc_47C1"], ["mov~rcx,[r14+0]", "cmp~[rdx+0],rcx", "jnz~FOO"]], [0, 0, 429, 0, 0, 3, 0, 1, 19, 32, 0.000843867893308624, ["mov     rcx, [r14]", "cmp     [rdx], rcx", "jnz     loc_47C1"], ["mov~rcx,<TAG>", "cmp~<TAG>,rcx", "jnz~FOO"]], [1, 0, 423, 0, 1, 10, 1, 2, 18, 32, 0.013108448974489083, ["lea     rdx, [rbp+timespec]; stat_buf", "mov     rsi, src_name_0; filename", "mov     edi, 1; ver", "mov     byte ptr [rbp+dst_backup], r9b", "mov     byte ptr [rbp+earlier_file], r8b", "call    ___xstat", "test    eax, eax", "movzx   r8d, byte ptr [rbp+earlier_file]", "movzx   r9d, byte ptr [rbp+dst_backup]", "jnz     loc_47C1"], ["lea~rdx,[rbp+0]", "mov~rsi,src_name_0", "mov~edi,0", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "jnz~FOO"]], [1, 0, 468, 0, 0, 2, 0, 1, 10, 32, 0.020594911544014733, ["cmp     dword ptr [x_0+4], 2", "jz      loc_5670"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [0, 0, 27, 0, 1, 4, 1, 2, 42, -1, 0.0022944381935711606, ["call    cached_umask", "not     eax", "test    dword ptr [rbp+omitted_permissions], eax", "jz      loc_6EBC"], ["call~FOO", "not~eax", "test~[word ptr [rbp+0],eax", "jz~FOO"]], [0, 0, 259, 0, 0, 3, 1, 1, 12, 17, 0.20037358160331223, ["movzx   r14d, byte ptr [x_0+18h]", "test    r14b, r14b", "jnz     loc_4E40"], ["movzx~r14d,[yte ptr [x_0+0]", "test~r14b,r14b", "jnz~FOO"]], [1, 0, 49, 0, 1, 6, 0, 2, 24, -1, 0.0017575984880240623, ["mov     rdx, [rbp+dst_mode]; dev", "mov     rsi, [rbp+var_1E8]; ino", "mov     rdi, [rbp+dst_name]; name", "call    remember_copied", "cmp     byte ptr [x_0+27h], 0", "jnz     loc_670C"], ["mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 26, 0, 1, 5, 1, 2, 43, -1, 0.001158250049639288, ["mov     esi, dword ptr [rbp+x]; mode", "mov     edi, [rbp+mode]; fd", "call    _fchmod", "test    eax, eax", "jz      loc_6EBC"], ["mov~esi,[word ptr [rbp+0]", "mov~edi,[rbp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 481, 0, 0, 3, 0, 1, 10, 33, 0.0018196169562904624, ["mov     rax, [rbp+dst_mode]", "cmp     [rbp+src_mode], rax", "jnz     loc_47B6"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [1, 1, 242, 0, 0, 4, 1, 1, 13, 16, 0.19175840742456668, ["mov     edi, [rbp+mode]", "and     edi, 0FFFh", "cmp     byte ptr [x_0+24h], 0", "jz      short loc_4C9D"], ["mov~edi,[rbp+0]", "and~edi,<STR>", "cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 246, 0, 1, 6, 1, 2, 16, 17, 0.004298394628661357, ["mov     rdi, [rbp+dst_name]; name", "mov     [rbp+omitted_permissions], r9", "mov     r12d, r14d", "call    _unlink", "test    eax, eax", "jz      loc_4C80"], ["mov~rdi,[rbp+0]", "mov~[rbp+0],r9", "mov~r12d,r14d", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 245, 0, 0, 3, 0, 1, 17, 17, 0.0008457063854509086, ["mov     r9, [rbp+omitted_permissions]", "cmp     dword ptr [r9], 2", "jz      loc_4C80"], ["mov~r9,[rbp+0]", "cmp~<TAG>,0", "jz~FOO"]], [0, 1, 241, 0, 0, 2, 1, 0, 14, 16, 0.0, ["mov     edi, [x_0+10h]", "and     edi, 0FFFh"], ["mov~edi,[x_0+0]", "and~edi,<STR>"]], [0, 0, 388, 0, 1, 11, 1, 2, 18, 33, 3.370568927521737e-05, ["mov     esi, [rbp+var_1D8]; mode", "mov     rdi, [rbp+dst_name]; file", "mov     byte ptr [rbp+delayed_ok], r9b", "mov     byte ptr [rbp+dst_backup], r11b", "mov     byte ptr [rbp+earlier_file], r8b", "call    writable_destination", "test    al, al", "movzx   r8d, byte ptr [rbp+earlier_file]", "movzx   r11d, byte ptr [rbp+dst_backup]", "movzx   r9d, byte ptr [rbp+delayed_ok]", "jnz     loc_5A62"], ["mov~esi,[rbp+0]", "mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r11b", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "test~al,al", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r11d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "jnz~FOO"]], [1, 0, 48, 0, 0, 2, 0, 1, 21, -1, 0.012711334671755614, ["mov     byte ptr [rbp+restore_dst_mode], 0", "jmp     loc_5C8A"], ["mov~[yte ptr [rbp+0],0", "jmp~FOO"]], [0, 0, 48, 0, 1, 5, 1, 2, 25, -1, 0.0, ["mov     rsi, [rbp+dst_name]; dst", "xor     edx, edx; backup_dst_name", "mov     rdi, src_name_0; src", "call    emit_verbose", "jmp     loc_5C8A"], ["mov~rsi,[rbp+0]", "xor~edx,edx", "mov~rdi,src_name_0", "call~FOO", "jmp~FOO"]], [1, 0, 477, 0, 0, 2, 0, 1, 12, 33, 0.0027540612291423066, ["cmp     dword ptr [x_0+4], 2", "jz      loc_778C"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [2, 0, 310, 0, 0, 3, 0, 1, 21, 24, 0.002257668350725469, ["mov     r12d, 1", "mov     r8d, 1", "jmp     loc_4610"], ["mov~r12d,0", "mov~r8d,0", "jmp~FOO"]], [1, 0, 237, 0, 0, 2, 0, 1, 15, 14, 0.08213218513370754, ["cmp     dword ptr [rbp+ptr], 4000h", "jz      loc_5618"], ["cmp~[word ptr [rbp+0],0", "jz~FOO"]], [1, 0, 25, 0, 3, 14, 3, 3, 44, -1, 1.4707937138276672e-05, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aPreservingPerm; \"preserving permissions for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r12, rax", "call    _dcgettext", "mov     rdx, rax; format", "mov     rax, [rbp+device]", "mov     rcx, r12", "xor     edi, edi; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    _error"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rcx,r12", "xor~edi,edi", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO"]], [1, 0, 24, 0, 0, 3, 1, 1, 42, -1, 0.00017649524565932007, ["movzx   r12d, byte ptr [x_0+20h]", "xor     r12d, 1", "jmp     loc_6EBC"], ["movzx~r12d,[yte ptr [x_0+0]", "xor~r12d,0", "jmp~FOO"]], [0, 0, 387, 0, 2, 9, 1, 3, 16, 34, 0.00047984644913627643, ["mov     rdi, [rbp+dst_name]; dst_name", "lea     rsi, [r12+18h]; dst_sb", "mov     byte ptr [rbp+delayed_ok], r9b", "mov     byte ptr [rbp+dst_backup], r11b", "mov     byte ptr [rbp+earlier_file], r8b", "call    overwrite_prompt", "call    yesno", "test    al, al", "jz      loc_5FEC"], ["mov~rdi,[rbp+0]", "lea~rsi,[r12+0]", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r11b", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 233, 0, 1, 4, 0, 1, 17, 14, 0.0016417734830601334, ["mov     dword ptr [rbp+delayed_ok], edi", "call    ___errno_location", "mov     edi, dword ptr [rbp+delayed_ok]", "mov     dword ptr [rax], 5Fh ; '_'"], ["mov~[word ptr [rbp+0],edi", "call~FOO", "mov~edi,[word ptr [rbp+0]", "mov~<TAG>,0"]], [0, 0, 234, 0, 0, 1, 0, 1, 16, 15, 0.0002855791127682053, ["jmp     loc_4CCF"], ["jmp~FOO"]], [0, 1, 235, 0, 0, 5, 2, 1, 16, 15, 0.001256302963894465, ["mov     ecx, edi", "and     ecx, 12h", "test    al, al", "mov     dword ptr [rbp+omitted_permissions], ecx", "jnz     loc_4CCF"], ["mov~ecx,edi", "and~ecx,<STR>", "test~al,al", "mov~[word ptr [rbp+0],ecx", "jnz~FOO"]], [0, 0, 23, 0, 0, 3, 0, 1, 28, -1, 0.0010791948875210507, ["mov     eax, [rbp+var_1D0]", "cmp     [rbp+group], eax", "jnz     loc_4FC2"], ["mov~eax,[rbp+0]", "cmp~[rbp+0],eax", "jnz~FOO"]], [0, 0, 24, 0, 2, 10, 4, 2, 37, -1, 0.0032063302961443142, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, rax; format", "mov     rax, [rbp+device]", "mov     rcx, r12", "xor     edi, edi; status", "xor     r12d, r12d", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    _error"], ["xor~edi,edi", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rcx,r12", "xor~edi,edi", "xor~r12d,r12d", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO"]], [1, 0, 25, 0, 1, 8, 0, 2, 42, -1, 0.0005515476426853752, ["mov     rdi, [rbp+dst_name]; name", "movzx   r14d, byte ptr [rbp+abase]", "movzx   ebx, byte ptr [rbp+nbytes]", "call    quote", "mov     edx, 5", "mov     r12, rax", "lea     rsi, aCannotLseekS; \"cannot lseek %s\"", "jmp     loc_6E9A"], ["mov~rdi,[rbp+0]", "movzx~r14d,[yte ptr [rbp+0]", "movzx~ebx,[yte ptr [rbp+0]", "call~FOO", "mov~edx,0", "mov~r12,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 25, 0, 1, 7, 0, 1, 36, -1, 0.002937910443370765, ["mov     rdi, src_name_0; name", "movzx   r14d, byte ptr [rbp+abase]", "movzx   ebx, byte ptr [rbp+nbytes]", "call    quote", "lea     rsi, aReadingS; \"reading %s\"", "mov     r12, rax", "mov     edx, 5; category"], ["mov~rdi,src_name_0", "movzx~r14d,[yte ptr [rbp+0]", "movzx~ebx,[yte ptr [rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "mov~edx,0"]], [0, 0, 384, 0, 0, 4, 0, 1, 17, 33, 0.0013874487367107656, ["movzx   r8d, byte ptr [rbp+earlier_file]", "movzx   r11d, byte ptr [rbp+dst_backup]", "movzx   r9d, byte ptr [rbp+delayed_ok]", "jmp     loc_5A62"], ["movzx~r8d,[yte ptr [rbp+0]", "movzx~r11d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "jmp~FOO"]], [1, 0, 42, 0, 0, 2, 0, 1, 24, -1, 0.006614894727939933, ["cmp     dword ptr [x_0+4], 3", "jnz     short loc_5D01"], ["cmp~[word ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 41, 0, 0, 1, 0, 0, 25, -1, 0.0, ["mov     dword ptr [rbp+dev+4], 2"], ["mov~[word ptr [rbp+0],0"]], [1, 0, 97, 0, 0, 2, 0, 1, 29, -1, 0.0015627183209418964, ["cmp     byte ptr [x_0+27h], 0", "jz      loc_69F6"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 99, 0, 1, 4, 1, 2, 28, 1, 0.004044682713026084, ["mov     rdi, [rbp+dst_name]; name", "call    _unlink", "test    eax, eax", "jnz     loc_7796"], ["mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 78, 0, 0, 6, 1, 1, 17, -1, 0.0282521087504872, ["mov     rsi, [rbp+ancestors]", "mov     rdx, [rbp+ino]", "mov     rcx, [rbp+src_mode]", "test    rsi, rsi", "mov     rax, rsi", "jnz     short loc_4D24"], ["mov~rsi,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "test~rsi,rsi", "mov~rax,rsi", "jnz~FOO"]], [0, 0, 79, 0, 0, 1, 0, 1, 17, -1, 0.0003217361248998022, ["jmp     loc_4CF2"], ["jmp~FOO"]], [2, 0, 96, 0, 3, 13, 2, 4, 30, -1, 0.0, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aRemovedS; \"removed %s\\n\"", "mov     r12, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rdx, r12", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_69F6"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rdx,r12", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 77, 0, 0, 2, 0, 1, 18, -1, 0.003675145792426883, ["cmp     [rax+8], rdx", "jnz     short loc_4D18"], ["cmp~[rax+0],rdx", "jnz~FOO"]], [0, 0, 77, 0, 0, 2, 0, 1, 19, -1, 0.0019653481001022204, ["cmp     [rax+10h], rcx", "jnz     short loc_4D18"], ["cmp~[rax+0],rcx", "jnz~FOO"]], [0, 0, 73, 0, 0, 1, 0, 1, 35, -1, 1.838492142284584e-05, ["jmp     loc_6CA6"], ["jmp~FOO"]], [1, 0, 424, 0, 0, 2, 0, 1, 17, 33, 0.006112986373096241, ["cmp     dword ptr [x_0+4], 2", "jnz     loc_55E0"], ["cmp~[word ptr [x_0+0],0", "jnz~FOO"]], [2, 0, 522, 1, 0, 26, 1, 1, 0, 29, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "mov     r13, src_name_0", "push    rbx", "mov     r14d, edx", "mov     r15, x_0", "mov     r12d, edx", "sub     rsp, 368h", "mov     eax, [rbp+command_line_arg]", "mov     [rbp+device], device_0", "mov     device_0, fs:28h", "mov     [rbp+var_38], device_0", "xor     ecx, ecx", "cmp     byte ptr [x_0+18h], 0", "mov     [rbp+dst_name], dst_name_0", "mov     dword ptr [rbp+format], eax", "mov     rax, [rbp+copy_into_self]", "mov     [rbp+ancestors], ancestors_0", "mov     qword ptr [rbp+fildes], rax", "mov     rax, [rbp+rename_succeeded]", "mov     [rbp+omitted_permissions], rax", "jz      short loc_4562"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "mov~r13,src_name_0", "push~rbx", "mov~r14d,edx", "mov~r15,x_0", "mov~r12d,edx", "sub~rsp,0", "mov~eax,[rbp+0]", "mov~[rbp+0],device_0", "mov~device_0,<TAG>", "mov~[rbp+0],device_0", "xor~ecx,ecx", "cmp~[yte ptr [x_0+0],0", "mov~[rbp+0],dst_name_0", "mov~[word ptr [rbp+0],eax", "mov~rax,[rbp+0]", "mov~[rbp+0],ancestors_0", "mov~[word ptr [rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jz~FOO"]], [0, 0, 471, 0, 0, 4, 0, 1, 15, 36, 0.0011986968767695486, ["mov     rax, [rbp+dot_sb.st_ino]", "cmp     [rbp+timespec.tv_nsec], rax", "movzx   ecx, byte ptr [rbp+restore_dst_mode]", "jnz     short loc_556C"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "movzx~ecx,[yte ptr [rbp+0]", "jnz~FOO"]], [0, 0, 521, 0, 0, 2, 1, 1, 1, 29, 3.676984284569168e-06, ["test    rax, rax", "jz      short loc_4562"], ["test~rax,rax", "jz~FOO"]], [1, 0, 520, 0, 0, 1, 0, 0, 2, 29, 0.0, ["mov     byte ptr [rax], 0"], ["mov~<TAG>,0"]], [1, 0, 428, 0, 0, 2, 0, 1, 20, 35, 0.0007059809826372803, ["cmp     byte ptr [x_0+17h], 0", "jz      loc_58E1"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 38, 0, 0, 15, 0, 0, 26, -1, 0.0019120318279759673, ["movzx   eax, r12b", "mov     [rbp+x], x_0", "mov     r14, [rbp+abase]", "mov     dword ptr [rbp+device], eax", "lea     rax, [rbp+dev]", "mov     x_0, qword ptr [rbp+fildes]", "mov     ecx, 1", "mov     byte ptr [rbp+buf], r12b", "mov     byte ptr [rbp+nbytes], bl", "mov     [rbp+dst_backup], rax", "lea     rax, [rbp+var_2E8]", "mov     [rbp+ancestors], src_name_0", "mov     r12d, ecx", "mov     [rbp+earlier_file], rax", "nop     dword ptr [rax+rax+00000000h]"], ["movzx~eax,r12b", "mov~[rbp+0],x_0", "mov~r14,[rbp+0]", "mov~[word ptr [rbp+0],eax", "lea~rax,[rbp+0]", "mov~x_0,[word ptr [rbp+0]", "mov~ecx,0", "mov~[yte ptr [rbp+0],r12b", "mov~[yte ptr [rbp+0],bl", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~[rbp+0],src_name_0", "mov~r12d,ecx", "mov~[rbp+0],rax", "nop~[word ptr [rax+0]"]], [0, 0, 470, 0, 0, 3, 0, 0, 16, 36, 0.0, ["mov     rax, [rbp+dot_sb.st_dev]", "cmp     [rbp+timespec.tv_sec], rax", "setz    cl"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "setz~cl"]], [1, 0, 28, 0, 0, 2, 0, 1, 18, -1, 0.011981453291268634, ["cmp     byte ptr [src_name_0+0], 2Fh ; '/'", "jz      short loc_4DB2"], ["cmp~[yte ptr [src_name_0+0],0", "jz~FOO"]], [4, 0, 87, 0, 2, 15, 3, 3, 27, -1, 0.003965627550907847, ["mov     rax, [rbp+device]", "lea     rsi, aFailedToGetFil; \"failed to get file system create contex\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     dword ptr [rax], 5Fh ; '_'", "call    _dcgettext", "mov     rdx, rax; format", "mov     rax, [rbp+device]", "xor     edi, edi; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    _error", "cmp     byte ptr [x_0+22h], 0", "mov     [rbp+ptr], 0", "jnz     loc_6EBC"], ["mov~rax,[rbp+0]", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~<TAG>,0", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "xor~edi,edi", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO", "cmp~[yte ptr [x_0+0],0", "mov~[rbp+0],0", "jnz~FOO"]], [0, 0, 465, 0, 0, 1, 0, 0, 17, 35, 0.0005276472448356756, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [1, 1, 466, 0, 0, 6, 1, 1, 12, 35, 0.010273494091086256, ["mov     eax, [rbp+var_268]", "mov     r14, r12", "mov     rdx, [rbp+stats]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_5590"], ["mov~eax,[rbp+0]", "mov~r14,r12", "mov~rdx,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jnz~FOO"]], [1, 1, 465, 0, 0, 4, 1, 1, 13, 35, 0.0006067024069539127, ["mov     eax, [rbp+var_1D8]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_5590"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jnz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 30, -1, 0.0049547363234569534, ["cmp     byte ptr [rbp+restore_dst_mode], 0", "jnz     short loc_65BF"], ["cmp~[yte ptr [rbp+0],0", "jnz~FOO"]], [0, 0, 418, 0, 0, 2, 1, 1, 14, 33, 0.005165550089105586, ["test    cl, cl", "jnz     loc_56A8"], ["test~cl,cl", "jnz~FOO"]], [2, 0, 27, 0, 1, 12, 1, 2, 19, -1, 0.006158948676653356, ["mov     dst_mode_bits_0, [rbp+dst_name]; file", "call    dir_name", "lea     r8, asc_1242A+1; \".\"", "mov     rdi, rax", "mov     ecx, 2", "mov     r12, rax", "mov     rsi, r8", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     loc_5EC0"], ["mov~dst_mode_bits_0,[rbp+0]", "call~FOO", "lea~r8,<TAG>", "mov~rdi,rax", "mov~ecx,0", "mov~r12,rax", "mov~rsi,r8", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [0, 0, 19, 0, 1, 2, 0, 1, 20, -1, 0.0003198976327575176, ["mov     rdi, r12; ptr", "call    free"], ["mov~rdi,r12", "call~FOO"]], [1, 0, 26, 0, 1, 6, 1, 2, 20, -1, 0.004423412094336709, ["lea     rdx, [rbp+dot_sb]; stat_buf", "mov     rsi, r8; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jnz     loc_4DAA"], ["lea~rdx,[rbp+0]", "mov~rsi,r8", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 25, 0, 1, 6, 1, 2, 21, -1, 0.0035593207874629546, ["lea     rdx, [rbp+timespec]; stat_buf", "mov     rsi, r12; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jnz     loc_4DAA"], ["lea~rdx,[rbp+0]", "mov~rsi,r12", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 20, 0, 0, 1, 0, 1, 24, -1, 6.434722497996044e-05, ["jmp     loc_4DAA"], ["jmp~FOO"]], [1, 0, 22, 0, 2, 10, 2, 2, 31, -1, 0.00010663254425250587, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aNotWritingThro; \"not writing through dangling symlink %s\"", "mov     r12, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rax; format", "xor     esi, esi; errnum"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,r12", "mov~rdx,rax", "xor~esi,esi"]], [1, 0, 397, 0, 0, 3, 0, 1, 13, 34, 0.02320177083563145, ["cmp     byte ptr [x_0+18h], 0", "mov     eax, [x_0+8]", "jnz     loc_5A47"], ["cmp~[yte ptr [x_0+0],0", "mov~eax,[x_0+0]", "jnz~FOO"]], [2, 0, 515, 0, 0, 6, 1, 1, 3, 26, 0.011273633816489067, ["mov     eax, [rbp+var_268]", "mov     [rbp+mode], eax", "and     eax, 0F000h", "cmp     eax, 4000h", "mov     dword ptr [rbp+ptr], eax", "jz      loc_46E0"], ["mov~eax,[rbp+0]", "mov~[rbp+0],eax", "and~eax,0", "cmp~eax,0", "mov~[word ptr [rbp+0],eax", "jz~FOO"]], [0, 0, 23, 0, 1, 4, 1, 2, 28, -1, 0.007421992778402865, ["mov     edi, [rbp+mode]; fd", "call    _close", "test    eax, eax", "js      loc_7367"], ["mov~edi,[rbp+0]", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 22, 0, 2, 12, 1, 3, 29, 0, 0.0010001397254028137, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r12, rax", "call    _dcgettext", "mov     rdx, rax", "mov     rax, [rbp+device]", "mov     rcx, r12", "mov     esi, [rax]", "jmp     loc_75B1"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rcx,r12", "mov~esi,<TAG>", "jmp~FOO"]], [0, 0, 67, 0, 0, 2, 1, 1, 39, -1, 0.00034931350703407095, ["xor     ebx, ebx", "jmp     loc_6DAF"], ["xor~ebx,ebx", "jmp~FOO"]], [1, 0, 67, 0, 0, 3, 0, 1, 35, -1, 0.003930696200204441, ["mov     rax, [rbp+device]", "cmp     dword ptr [rax], 4", "jz      loc_6DAF"], ["mov~rax,[rbp+0]", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 20, -1, 0.0034343033217876027, ["cmp     byte ptr [rbp+format], 0", "jz      short loc_4E10"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 21, -1, 0.0019782175450982122, ["cmp     qword ptr [x_0+30h], 0", "jz      short loc_4E10"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [1, 0, 67, 1, 0, 3, 0, 1, 36, -1, 0.014906494289643406, ["add     [rbp+length], rax", "cmp     byte ptr [rbp+restore_dst_mode], 0", "jz      short loc_6E16"], ["add~[rbp+0],rax", "cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [1, 0, 67, 0, 0, 3, 0, 0, 37, -1, 0.007493693971951964, ["mov     rax, [rbp+buf]", "lea     rdx, [rax+rcx]", "mov     byte ptr [rdx], 1"], ["mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~<TAG>,0"]], [1, 0, 5, 0, 1, 7, 1, 2, 22, -1, 0.0009927857568336753, ["lea     rbx, [rbp+timespec]", "mov     rsi, [rbp+dst_name]; filename", "mov     edi, 1; ver", "mov     rdx, rbx; stat_buf", "call    ___lxstat", "test    eax, eax", "jnz     short loc_4E10"], ["lea~rbx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "mov~rdx,rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [4, 1, 38, 2, 6, 34, 4, 7, 27, -1, 0.0010920643325170428, ["mov     rdi, [rbp+ancestors]; dir", "xor     edx, edx; base_in_result", "mov     rsi, r14; abase", "call    file_name_concat", "mov     rdi, [rbp+dst_name]; dir", "xor     edx, edx; base_in_result", "mov     rsi, r14; abase", "mov     rbx, rax", "call    file_name_concat", "sub     rsp, 8", "mov     r9, [rbp+dst_backup]; x", "mov     r8, [rbp+ptr]; ancestors", "mov     rcx, [rbp+src_mode]; device", "mov     edx, dword ptr [rbp+device]; new_dst", "mov     rsi, rax; dst_name", "push    0; rename_succeeded", "push    [rbp+earlier_file]; copy_into_self", "mov     rdi, rbx; src_name", "push    0; command_line_arg", "mov     r13, rax", "call    copy_internal", "and     r12d, eax", "movzx   eax, byte ptr [rbp+var_2E8]", "add     rsp, 20h", "or      [r15], al", "mov     rdi, r13; ptr", "call    free", "mov     rdi, rbx; ptr", "call    free", "mov     rdi, r14; s", "call    _strlen", "lea     r14, [r14+rax+1]", "cmp     byte ptr [r14], 0", "jnz     loc_5D70"], ["mov~rdi,[rbp+0]", "xor~edx,edx", "mov~rsi,r14", "call~FOO", "mov~rdi,[rbp+0]", "xor~edx,edx", "mov~rsi,r14", "mov~rbx,rax", "call~FOO", "sub~rsp,0", "mov~r9,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,[rbp+0]", "mov~edx,[word ptr [rbp+0]", "mov~rsi,rax", "push~0", "push~[rbp+0]", "mov~rdi,rbx", "push~0", "mov~r13,rax", "call~FOO", "and~r12d,eax", "movzx~eax,[yte ptr [rbp+0]", "add~rsp,<STR>", "or~<TAG>,al", "mov~rdi,r13", "call~FOO", "mov~rdi,rbx", "call~FOO", "mov~rdi,r14", "call~FOO", "lea~r14,[r14+0]", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 310, 0, 0, 4, 2, 0, 7, 24, 0.022129807350536712, ["xor     r14d, r14d", "xor     r8d, r8d", "mov     r12d, 1", "mov     [rbp+dst_backup], 0"], ["xor~r14d,r14d", "xor~r8d,r8d", "mov~r12d,0", "mov~[rbp+0],0"]], [0, 0, 496, 0, 1, 6, 1, 2, 6, 25, 0.002708221491728011, ["mov     rdi, [x_0+38h]; ht", "mov     rdx, [rbp+stats]; stats", "mov     rsi, src_name_0; file", "call    record_file", "test    r14b, r14b", "jnz     loc_45F9"], ["mov~rdi,[x_0+0]", "mov~rdx,[rbp+0]", "mov~rsi,src_name_0", "call~FOO", "test~r14b,r14b", "jnz~FOO"]], [0, 0, 4, 0, 1, 5, 0, 1, 23, -1, 0.0, ["mov     rdi, [x_0+30h]; ht", "mov     rsi, [rbp+dst_name]; file", "mov     rdx, rbx; stats", "call    record_file", "nop     dword ptr [rax+rax+00h]"], ["mov~rdi,[x_0+0]", "mov~rsi,[rbp+0]", "mov~rdx,rbx", "call~FOO", "nop~[word ptr [rax+0]"]], [0, 0, 412, 0, 0, 2, 1, 1, 15, 33, 0.0056178191561075935, ["test    al, al", "jz      loc_55E0"], ["test~al,al", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 16, -1, 0.0009302770239959995, ["cmp     byte ptr [rbp+format], 0", "jz      loc_4E10"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [1, 0, 379, 0, 0, 2, 0, 1, 14, 33, 0.02337642758914848, ["cmp     eax, 2", "jz      loc_4E10"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 375, 0, 0, 2, 1, 1, 16, 31, 0.04467106924251673, ["test    r11b, r11b", "jnz     loc_4E10"], ["test~r11b,r11b", "jnz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 17, -1, 7.353968569138336e-06, ["jmp     loc_4E10"], ["jmp~FOO"]], [1, 0, 310, 0, 0, 3, 1, 1, 20, 24, 0.004700411577107586, ["xor     r8d, r8d", "mov     [rbp+dst_backup], 0", "jmp     loc_4610"], ["xor~r8d,r8d", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 36, 0, 0, 5, 0, 0, 28, -1, 0.0002647428684889801, ["mov     byte ptr [rbp+delayed_ok], r12b", "movzx   ebx, byte ptr [rbp+nbytes]", "movzx   r12d, byte ptr [rbp+buf]", "mov     r13, [rbp+ancestors]", "mov     r15, [rbp+x]"], ["mov~[yte ptr [rbp+0],r12b", "movzx~ebx,[yte ptr [rbp+0]", "movzx~r12d,[yte ptr [rbp+0]", "mov~r13,[rbp+0]", "mov~r15,[rbp+0]"]], [2, 0, 352, 0, 0, 4, 1, 1, 16, 27, 0.001582328903792932, ["mov     eax, [rbp+var_268]", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     loc_57B6"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [1, 0, 307, 0, 0, 2, 0, 1, 10, 22, 0.009636640412998877, ["cmp     byte ptr [x_0+18h], 0", "jnz     loc_4EC0"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 35, 0, 1, 3, 0, 2, 27, -1, 0.0009008611497194461, ["mov     rdi, [rbp+abase]; ptr", "call    free", "jmp     loc_4F8C"], ["mov~rdi,[rbp+0]", "call~FOO", "jmp~FOO"]], [0, 0, 47, 0, 1, 11, 3, 2, 23, -1, 0.001029555599679367, ["mov     edx, dword ptr [rbp+omitted_permissions]", "mov     rax, [rbp+var_258]", "lea     rcx, [rbp+dev]; dev", "xor     edi, edi; ver", "not     edx", "mov     [rbp+dev], rax", "and     edx, esi; mode", "mov     rsi, [rbp+dst_name]; path", "call    ___xmknod", "test    eax, eax", "jnz     loc_661F"], ["mov~edx,[word ptr [rbp+0]", "mov~rax,[rbp+0]", "lea~rcx,[rbp+0]", "xor~edi,edi", "not~edx", "mov~[rbp+0],rax", "and~edx,esi", "mov~rsi,[rbp+0]", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 67, 0, 0, 2, 0, 1, 38, -1, 0.0038424485773747804, ["cmp     rcx, r14", "jz      short loc_6E5D"], ["cmp~rcx,r14", "jz~FOO"]], [2, 0, 67, 0, 0, 4, 1, 1, 39, -1, 0.0016730278494789714, ["mov     eax, [rbp+dot_sb.st_mode]", "and     eax, 0F000h", "cmp     eax, 8000h", "jz      loc_7778"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 67, 0, 1, 8, 0, 2, 37, -1, 0.005982453430994036, ["mov     rsi, [rbp+buf]; buf", "mov     edi, [rbp+mode]; fd", "mov     rdx, rcx; count", "mov     [rbp+var_388], rcx", "call    full_write", "mov     rcx, [rbp+var_388]", "cmp     rcx, rax", "jnz     loc_7764"], ["mov~rsi,[rbp+0]", "mov~edi,[rbp+0]", "mov~rdx,rcx", "mov~[rbp+0],rcx", "call~FOO", "mov~rcx,[rbp+0]", "cmp~rcx,rax", "jnz~FOO"]], [0, 0, 299, 0, 0, 3, 1, 1, 12, 24, 0.0036860541791377717, ["test    r14b, r14b", "lea     rdx, [rbp+dst_mode]; stats", "jz      loc_5F38"], ["test~r14b,r14b", "lea~rdx,[rbp+0]", "jz~FOO"]], [1, 0, 353, 0, 0, 2, 0, 1, 15, 27, 0.1341786720203558, ["cmp     byte ptr [x_0+18h], 0", "jnz     loc_663F"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 297, 0, 0, 2, 0, 1, 14, 24, 2.5738889991984176e-05, ["mov     rdx, r14", "jmp     loc_464E"], ["mov~rdx,r14", "jmp~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 14, -1, 0.004938189894176393, ["cmp     byte ptr [x_0+27h], 0", "jz      short loc_4E7D"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 467, 0, 0, 1, 1, 0, 11, 36, 0.0065634169479559645, ["xor     ecx, ecx"], ["xor~ecx,ecx"]], [0, 0, 24, 0, 0, 2, 1, 1, 40, -1, 0.0005147777998396835, ["xor     r12d, r12d", "jmp     loc_6EBC"], ["xor~r12d,r12d", "jmp~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 15, -1, 0.0025555040777755717, ["mov     rax, [rbp+omitted_permissions]", "test    rax, rax", "jz      short loc_4E8C"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 6, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     byte ptr [rax], 1"], ["mov~<TAG>,0"]], [1, 0, 467, 0, 0, 2, 0, 1, 13, 36, 0.0004118222398717468, ["mov     ecx, 1", "jmp     loc_5672"], ["mov~ecx,0", "jmp~FOO"]], [0, 0, 24, 0, 1, 7, 1, 2, 41, -1, 4.412381141483002e-05, ["mov     edx, [x_0+10h]; mode", "mov     esi, [rbp+mode]; desc", "mov     rdi, [rbp+dst_name]; name", "call    set_acl", "test    eax, eax", "setz    r12b", "jmp     loc_6EBC"], ["mov~edx,[x_0+0]", "mov~esi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "setz~r12b", "jmp~FOO"]], [0, 0, 377, 0, 2, 12, 1, 3, 16, 32, 0.0004007912870180393, ["mov     rdi, [rbp+dst_name]; dst_name", "lea     rsi, [r12+18h]; dst_sb", "mov     byte ptr [rbp+delayed_ok], r9b", "mov     byte ptr [rbp+dst_backup], r11b", "mov     byte ptr [rbp+earlier_file], r8b", "call    overwrite_prompt", "call    yesno", "test    al, al", "movzx   r8d, byte ptr [rbp+earlier_file]", "movzx   r11d, byte ptr [rbp+dst_backup]", "movzx   r9d, byte ptr [rbp+delayed_ok]", "jnz     loc_5709"], ["mov~rdi,[rbp+0]", "lea~rsi,[r12+0]", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r11b", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "call~FOO", "test~al,al", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r11d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "jnz~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 15, 32, 0.023944521661114417, ["cmp     eax, 3", "jz      loc_6660"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 360, 0, 0, 2, 0, 1, 18, 29, 0.02288187320287393, ["cmp     dword ptr [rbp+ptr], 4000h", "jz      loc_57A8"], ["cmp~[word ptr [rbp+0],0", "jz~FOO"]], [3, 0, 374, 0, 0, 7, 2, 1, 17, 30, 0.04546407218655547, ["mov     eax, [rbp+var_1D8]", "xor     r9d, 1", "mov     r14d, r9d", "mov     edx, eax", "and     edx, 0F000h", "cmp     edx, 4000h", "jz      loc_66B0"], ["mov~eax,[rbp+0]", "xor~r9d,0", "mov~r14d,r9d", "mov~edx,eax", "and~edx,0", "cmp~edx,0", "jz~FOO"]], [1, 0, 351, 0, 0, 2, 0, 1, 19, 29, 0.0020569662918594024, ["cmp     byte ptr [x_0+18h], 0", "jz      short loc_66D2"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [2, 0, 360, 0, 0, 5, 1, 1, 20, 29, 0.00013420992638677463, ["mov     eax, [rbp+var_1D8]", "mov     edx, eax", "and     edx, 0F000h", "cmp     edx, 4000h", "jz      loc_66C0"], ["mov~eax,[rbp+0]", "mov~edx,eax", "and~edx,0", "cmp~edx,0", "jz~FOO"]], [1, 0, 413, 0, 1, 8, 1, 1, 14, 34, 0.0012127919831937306, ["mov     rsi, [rbp+dst_name]; dest", "mov     rdi, src_name_0; source", "mov     byte ptr [rbp+dst_backup], r9b", "mov     byte ptr [rbp+earlier_file], r8b", "call    same_name", "movzx   r8d, byte ptr [rbp+earlier_file]", "movzx   r9d, byte ptr [rbp+dst_backup]", "xor     eax, 1"], ["mov~rsi,[rbp+0]", "mov~rdi,src_name_0", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "xor~eax,0"]], [0, 0, 405, 0, 0, 3, 1, 1, 12, 35, 0.015588574874430987, ["movzx   r14d, byte ptr [x_0+26h]", "test    r14b, r14b", "jz      loc_56E8"], ["movzx~r14d,[yte ptr [x_0+0]", "test~r14b,r14b", "jz~FOO"]], [0, 0, 24, 0, 0, 3, 0, 1, 22, -1, 0.0027044219413006228, ["mov     rax, [rbp+timespec.tv_nsec]", "cmp     [rbp+dot_sb.st_ino], rax", "jz      loc_6F87"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jz~FOO"]], [0, 0, 23, 0, 0, 3, 0, 1, 23, -1, 0.0009229230554268611, ["mov     rax, [rbp+timespec.tv_sec]", "cmp     [rbp+dot_sb.st_dev], rax", "jnz     loc_5F0C"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [1, 0, 366, 0, 0, 3, 0, 1, 19, 28, 0.02305714278710506, ["cmp     byte ptr [rbp+format], 0", "mov     edx, [x_0]", "jz      short loc_57AB"], ["cmp~[yte ptr [rbp+0],0", "mov~edx,<TAG>", "jz~FOO"]], [0, 0, 24, 0, 0, 3, 0, 1, 27, -1, 0.0020885270736352873, ["mov     eax, [rbp+var_1D4]", "cmp     [rbp+owner], eax", "jz      loc_676A"], ["mov~eax,[rbp+0]", "cmp~[rbp+0],eax", "jz~FOO"]], [0, 0, 363, 0, 1, 8, 1, 2, 18, 30, 0.001674866341621256, ["mov     rdi, [x_0+30h]; ht", "mov     rsi, [rbp+dst_name]; file", "mov     rdx, r12; stats", "mov     byte ptr [rbp+earlier_file], r8b", "call    seen_file", "test    al, al", "movzx   r8d, byte ptr [rbp+earlier_file]", "jnz     loc_6FBC"], ["mov~rdi,[x_0+0]", "mov~rsi,[rbp+0]", "mov~rdx,r12", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "test~al,al", "movzx~r8d,[yte ptr [rbp+0]", "jnz~FOO"]], [1, 0, 361, 0, 0, 2, 0, 1, 19, 29, 0.0019727020686713588, ["cmp     dword ptr [rbp+ptr], 4000h", "jz      short loc_57A8"], ["cmp~[word ptr [rbp+0],0", "jz~FOO"]], [0, 0, 452, 0, 0, 2, 1, 1, 16, 34, 0.003928857708062156, ["test    cl, cl", "jz      short loc_5F9D"], ["test~cl,cl", "jz~FOO"]], [0, 0, 37, 0, 1, 6, 1, 2, 24, -1, 0.016241239584942016, ["mov     rsi, [rbp+size]; size", "mov     dst_mode_bits_0, src_name_0; file", "call    areadlink_with_size", "test    rax, rax", "mov     r14, rax", "jz      loc_6FA0"], ["mov~rsi,[rbp+0]", "mov~dst_mode_bits_0,src_name_0", "call~FOO", "test~rax,rax", "mov~r14,rax", "jz~FOO"]], [0, 0, 354, 0, 0, 1, 0, 0, 14, 28, 0.11041279051240001, ["mov     edx, [x_0]"], ["mov~edx,<TAG>"]], [0, 0, 25, 0, 0, 2, 1, 1, 26, -1, 0.005363800825115274, ["test    r12b, r12b", "jnz     short loc_4FC2"], ["test~r12b,r12b", "jnz~FOO"]], [1, 0, 33, 0, 1, 4, 0, 2, 26, -1, 0.00817393606459726, ["call    ___errno_location", "cmp     byte ptr [x_0+26h], 0", "mov     r13d, [rax]", "jz      short loc_67DD"], ["call~FOO", "cmp~[yte ptr [x_0+0],0", "mov~r13d,<TAG>", "jz~FOO"]], [0, 0, 32, 0, 0, 2, 1, 1, 27, -1, 0.0054934145211463364, ["test    r12b, r12b", "jnz     short loc_67DD"], ["test~r12b,r12b", "jnz~FOO"]], [0, 0, 404, 0, 0, 1, 1, 0, 13, 37, 0.002018664372228473, ["xor     r14d, r14d"], ["xor~r14d,r14d"]]], "func_feature": [289, 383, 748, 30, 523, 862, 2, 2630, 0.01271, 51, 17], "succs": [[8], [0, 100], [32], [32, 2], [17, 212], [291, 4], [299, 4], [290, 4], [16, 24], [8, 519], [8], [181], [11], [11], [19, 13], [13, 14], [18, 115], [212, 22], [20, 21], [213, 13], [26, 23], [20, 455], [34], [100], [114, 23], [26, 23], [196, 23], [101], [27, 29], [27, 287], [9, 66], [9, 30], [36, 463], [32, 3], [100], [34], [107, 47], [281], [435, 37], [57, 42], [520, 39], [39], [57], [166], [408, 43], [48, 240], [203, 45], [100], [86, 407], [60, 134], [296, 49], [95], [274, 51], [321, 450], [424, 53], [436, 53], [82, 469], [56, 469], [304, 429], [58, 491], [366, 62], [475, 60], [369], [100], [298, 63], [100], [65, 9], [73, 401], [456, 67], [464, 77], [69, 78], [85, 517], [488, 71], [401, 76], [385], [385, 74], [90, 442], [95], [464, 77], [173, 87], [497, 79], [178], [81, 469], [422], [465, 83], [182], [239], [173], [275, 94], [88, 294], [402, 99], [410, 405], [91, 375], [91, 375], [97, 33], [100], [95], [480], [163, 404], [98, 119], [242, 127], [100], [100, 261], [104, 100], [100], [100], [100], [100], [100], [100], [100], [100], [100], [100], [100], [100], [100], [100], [101], [101], [101], [101], [130, 147], [122], [122, 439], [328], [432, 125], [], [254, 135], [128, 258], [416, 147], [138, 442], [402, 131], [202, 131], [136, 335], [140, 38], [142], [136], [442, 148], [113, 207], [289], [140], [152, 150], [144, 142], [324, 142], [142], [142], [158, 215], [478], [209, 148], [225, 157], [152, 150], [195, 150], [154, 150], [267, 150], [487], [448, 155], [384, 186], [166], [96, 25], [25, 159], [498], [161, 498], [176], [360, 243], [360, 164], [178], [166], [166], [166], [166], [166], [166], [84, 198], [173, 374], [80, 173], [219, 214], [176], [181], [116], [179, 382], [190, 191], [181], [181], [181, 358], [181], [194], [186, 188], [186, 226], [393, 186], [197, 102], [190], [89, 133], [192, 132], [46, 407], [194], [114], [102], [392, 501], [168, 308], [259, 476], [200, 105], [402, 149], [210, 107], [139, 495], [208, 328], [205, 126], [412, 231], [126], [99], [233, 383], [313], [211, 269], [41, 12], [218], [169, 342], [227, 319], [216, 514], [229, 270], [218, 230], [303], [224, 220], [441, 220], [220], [220], [393, 189], [225], [235, 319], [227, 117], [232, 270], [270], [109], [236, 119], [239], [233], [237, 319], [245], [251, 319], [237, 301], [102, 191], [239], [239], [], [428], [243], [509, 255], [418, 245], [245], [249], [248, 386], [109], [313], [251, 253], [251, 5], [451, 38], [107, 260], [145, 486], [282, 283], [257, 282], [137, 353], [262], [110, 103], [266], [275, 262], [153, 492], [268, 423], [265, 277], [324], [271, 391], [256, 146], [509, 263], [481, 52], [306, 222], [272, 306], [276, 286], [28, 518], [279], [280, 276], [512, 28], [107, 286], [279], [348], [281, 289], [281, 354], [328, 292], [72, 284], [107, 111], [297, 217], [465], [288, 387], [313, 6], [290, 7], [328, 170], [266], [293, 295], [344, 293], [64, 61], [238, 319], [61], [313], [238], [118, 319], [165, 471], [468, 302], [303], [307, 221], [305, 221], [221], [329, 322], [273, 223], [306, 309], [312, 199], [285, 199], [314, 143], [486, 143], [316, 143], [121, 143], [494, 143], [323, 252], [352, 318], [469, 167], [320, 311], [348], [352, 326], [151], [324], [252], [334, 31], [31, 327], [333, 343], [68, 332], [330, 452], [378, 68], [129, 343], [340, 31], [151], [313], [336, 35], [152, 339], [152, 325], [31], [408], [44, 341], [348], [33], [182], [182], [252, 319], [184, 185], [348], [348], [348], [376, 355], [92], [282, 359], [376, 483], [425, 55], [420, 356], [362, 107], [282, 363], [364, 174], [360], [377, 107], [379, 462], [365, 174], [497, 174], [92, 367], [368, 92], [369, 92], [370, 92], [371, 92], [372, 92], [92, 373], [92, 93], [80, 175], [106, 475], [180, 390], [112, 380], [270], [282], [112], [469, 183], [116], [241, 75], [187, 188], [234, 107], [386, 59], [389], [389], [388, 310], [337, 419], [271, 415], [465, 406], [407], [395, 270], [444, 270], [397, 270], [398, 270], [270, 399], [270, 119], [270], [516, 270], [403, 270], [270, 447], [177, 270], [496, 270], [409, 465], [411, 204], [417, 206], [465, 421], [405, 246], [357, 414], [411, 413], [250, 411], [357], [271, 423], [206], [206], [394, 500], [313], [426, 54], [422], [465], [277, 431], [55], [424], [424, 437], [1, 10], [465], [428], [428], [271], [433, 156], [156], [258, 438], [434, 466], [123, 439], [436], [258], [440, 124], [346, 124], [306], [404, 119], [445, 70], [449, 331], [70, 446], [70], [99, 247], [474], [331], [457, 381], [465, 141], [68], [68, 454], [508, 68], [160, 26], [508, 396], [458, 459], [381], [458, 460], [458, 510], [458], [351], [480, 266], [201, 50], [349, 350], [351], [303], [430, 303], [107, 470], [473, 107], [472, 491], [249], [107, 477], [474, 484], [313], [475, 366], [107], [400, 119], [107, 108], [107, 503], [505, 107], [107], [313], [487], [347, 300], [264, 338], [328], [328, 171], [490, 467], [361, 467], [489, 244], [315, 317], [347, 485], [315], [162, 498], [453], [465], [499, 479], [479], [453], [465], [481, 482], [481, 502], [506, 518], [504, 278], [228, 117], [506, 518], [478], [522, 463], [345, 511], [345, 461], [217, 493], [1, 427], [120, 515], [507, 518], [193, 132], [40, 172], [493], [513, 1], [521, 13], [13, 15], [33]], "fname": "copy_internal", "n_num": 523}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[1, 0, 0, 0, 1, 5, 0, 1, 0, 0, 0.0, ["lea     options, __PRETTY_FUNCTION___6822; \"valid_options\"", "lea     dst_name, aCopyC; \"copy.c\"", "lea     src_name, aCoHardLinkCoSy; \"!(co->hard_link && co->symbolic_link)\"", "mov     edx, 816h; line", "call    ___assert_fail"], ["lea~options,<TAG>", "lea~dst_name,<TAG>", "lea~src_name,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 4, 0, 0.05555555555555555, ["cmp     byte ptr [options+25h], 0", "jnz     loc_7887"], ["cmp~[yte ptr [options+0],0", "jnz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 2, 0, 0.0, ["lea     options, __PRETTY_FUNCTION___6822; \"valid_options\"", "lea     dst_name, aCopyC; \"copy.c\"", "lea     src_name, aValidBackupTyp; \"VALID_BACKUP_TYPE (co->backup_type)\"", "mov     edx, 814h; line", "call    ___assert_fail"], ["lea~options,<TAG>", "lea~dst_name,<TAG>", "lea~src_name,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 1, 0, 0.09722222222222221, ["cmp     dword ptr [options], 3", "ja      loc_7868"], ["cmp~<TAG>,0", "ja~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 3, 0, 0.0, ["lea     options, __PRETTY_FUNCTION___6822; \"valid_options\"", "lea     dst_name, aCopyC; \"copy.c\"", "lea     src_name, aValidSparseMod; \"VALID_SPARSE_MODE (co->sparse_mode)\"", "mov     edx, 815h; line", "call    ___assert_fail"], ["lea~options,<TAG>", "lea~dst_name,<TAG>", "lea~src_name,<TAG>", "mov~edx,0", "call~FOO"]], [2, 0, 5, 1, 0, 4, 0, 1, 2, 0, 0.1388888888888889, ["mov     eax, [options+0Ch]", "sub     eax, 1", "cmp     eax, 2", "ja      short loc_7849"], ["mov~eax,[options+0]", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 1, 0, 0.0, ["lea     options, __PRETTY_FUNCTION___6822; \"valid_options\"", "lea     dst_name, aCopyC; \"copy.c\"", "lea     src_name, aCoNull; \"co != NULL\"", "mov     edx, 813h; line", "call    ___assert_fail"], ["lea~options,<TAG>", "lea~dst_name,<TAG>", "lea~src_name,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 9, 1, 0, 3, 1, 1, 0, 0, 0.0, ["sub     rsp, 8", "test    options, options", "jz      short loc_782A"], ["sub~rsp,0", "test~options,options", "jz~FOO"]], [3, 0, 0, 2, 1, 13, 2, 1, 4, 0, 0.0, ["sub     rsp, 8", "movzx   edx, dl; new_dst", "mov     cs:top_level_src_name, src_name", "push    rename_succeeded_0; rename_succeeded", "push    copy_into_self_0; copy_into_self", "mov     rename_succeeded_0, options; x", "push    1; command_line_arg", "xor     r8d, r8d; ancestors", "xor     ecx, ecx; device", "mov     cs:top_level_dst_name, dst_name", "call    copy_internal", "add     rsp, 28h", "retn"], ["sub~rsp,0", "movzx~edx,dl", "mov~<TAG>,src_name", "push~rename_succeeded_0", "push~copy_into_self_0", "mov~rename_succeeded_0,options", "push~0", "xor~r8d,r8d", "xor~ecx,ecx", "mov~<TAG>,dst_name", "call~FOO", "add~rsp,0", "retn"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, 0, 0.125, ["cmp     byte ptr [options+17h], 0", "jz      short loc_77FD"], ["cmp~[yte ptr [options+0],0", "jz~FOO"]]], "func_feature": [5, 3, 10, 0, 10, 10, 2, 46, 0.04167, 8, 4], "succs": [[], [0, 8], [], [2, 5], [], [9, 4], [], [3, 6], [], [8, 1]], "fname": "copy", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 0, 1, 0, 5, 1, 0, 0, 0, 0.0, ["mov     rax, [p]", "xor     edx, edx", "div     table_size", "mov     rax, rdx", "retn"], ["mov~rax,<TAG>", "xor~edx,edx", "div~,table_size", "mov~rax,rdx", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 0, 1], "succs": [[]], "fname": "src_to_dest_hash", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 2, 0, 0, 4, 1, 1, 0, 0, 0.0, ["xor     eax, eax", "mov     rdx, [b]", "cmp     [a], rdx", "jz      short loc_78D0"], ["xor~eax,eax", "mov~rdx,<TAG>", "cmp~<TAG>,rdx", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["mov     rax, [b+8]", "cmp     [a+8], rax", "setz    al", "retn"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "setz~al", "retn"]]], "func_feature": [0, 1, 1, 0, 3, 2, 0, 9, 0.0, 0, 0], "succs": [[1, 2], [], []], "fname": "src_to_dest_compare", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 1, 0, 1, 7, 0, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, a", "mov     a, [a+10h]; ptr", "call    free", "mov     rdi, a; ptr", "pop     a", "jmp     free"], ["push~rbx", "mov~rbx,a", "mov~a,[a+0]", "call~FOO", "mov~rdi,a", "pop~a", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 0, 2, 0, 2, 1, 0, 7, 0.0, 0, 0], "succs": [[1], []], "fname": "src_to_dest_free", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[1, 1, 4, 1, 1, 13, 2, 2, 0, 0, 0.0, ["push    rbx", "sub     rsp, 20h", "mov     [rsp+28h+var_28], ino", "mov     ino, cs:src_to_dest; table", "mov     [rsp+28h+dev], dev_0", "mov     dev_0, rsp; entry", "mov     [rsp+28h+var_18], 0", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "call    hash_delete", "test    ent, ent", "jz      short loc_794F"], ["push~rbx", "sub~rsp,<STR>", "mov~<TAG>,ino", "mov~ino,<TAG>", "mov~[rsp+0],dev_0", "mov~dev_0,rsp", "mov~[rsp+0],0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~ent,ent", "jz~FOO"]], [0, 0, 3, 0, 2, 5, 0, 2, 0, 2, 0.0, ["mov     rdi, [ent+10h]; ptr", "mov     rbx, ent", "call    free", "mov     rdi, ent; ptr", "call    free"], ["mov~rdi,[ent+0]", "mov~rbx,ent", "call~FOO", "mov~rdi,ent", "call~FOO"]], [0, 1, 0, 1, 0, 3, 0, 0, 0, -1, 0.0, ["add     rsp, 20h", "pop     rbx", "retn"], ["add~rsp,<STR>", "pop~rbx", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 0, 1, 0.3333333333333333, ["mov     rax, [rsp+28h+var_10]", "xor     rax, fs:28h", "jnz     short loc_7965"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [4, 3, 6, 3, 5, 5, 2, 25, 0.06667, 2, 2], "succs": [[1, 3], [3], [], [2, 4], []], "fname": "forget_created", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0.07500000000000001, ["mov     e, [e+10h]"], ["mov~e,[e+0]"]], [1, 0, 5, 1, 1, 11, 2, 2, 0, 3, 0.0, ["sub     rsp, 28h", "mov     [rsp+28h+var_28], ino", "mov     ino, cs:src_to_dest; table", "mov     [rsp+28h+dev], dev_0", "mov     dev_0, rsp; entry", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "call    hash_lookup", "test    e, e", "jz      short loc_79C0"], ["sub~rsp,0", "mov~<TAG>,ino", "mov~ino,<TAG>", "mov~[rsp+0],dev_0", "mov~dev_0,rsp", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~e,e", "jz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, 2, 0.07500000000000001, ["xor     eax, eax", "jmp     short loc_79A5"], ["xor~eax,eax", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.30000000000000004, ["mov     rdx, [rsp+28h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_79C4"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 3, -1, 0.0, ["add     rsp, 28h", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [2, 4, 5, 2, 6, 6, 1, 20, 0.075, 2, 2], "succs": [[4], [0, 2], [4], [], [3, 5], []], "fname": "src_to_dest_lookup", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 1, 0, 0, 2, 1, 1, 0, 0, 0.05, ["xor     eax, eax", "jmp     short loc_7A34"], ["xor~eax,eax", "jmp~FOO"]], [0, 0, 3, 0, 0, 3, 0, 1, 1, -1, 0.15000000000000002, ["cmp     ent, ent_from_table", "mov     dev, ent_from_table", "jz      short loc_7A40"], ["cmp~ent,ent_from_table", "mov~dev,ent_from_table", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [2, 0, 5, 1, 3, 21, 1, 4, 0, 1, 0.0, ["push    r13", "push    r12", "mov     r13, name", "push    rbp", "push    rbx", "mov     edi, 18h; n", "mov     r12, ino", "mov     rbp, dev", "sub     rsp, 8", "call    xmalloc", "mov     rdi, name; string", "mov     rbx, rax", "call    xstrdup", "mov     rdi, cs:src_to_dest; table", "mov     rsi, ent; entry", "mov     [ent+10h], rax", "mov     [ent], ino", "mov     [ent+8], dev", "call    hash_insert", "test    ent_from_table, ent_from_table", "jz      short loc_7A44"], ["push~r13", "push~r12", "mov~r13,name", "push~rbp", "push~rbx", "mov~edi,0", "mov~r12,ino", "mov~rbp,dev", "sub~rsp,0", "call~FOO", "mov~rdi,name", "mov~rbx,rax", "call~FOO", "mov~rdi,<TAG>", "mov~rsi,ent", "mov~[ent+0],rax", "mov~<TAG>,ino", "mov~[ent+0],dev", "call~FOO", "test~ent_from_table,ent_from_table", "jz~FOO"]], [0, 0, 1, 0, 2, 5, 0, 2, 2, -1, 0.05, ["mov     rdi, [ent+10h]; ptr", "call    free", "mov     rdi, ent; ptr", "call    free", "mov     rax, [ent_from_table+10h]"], ["mov~rdi,[ent+0]", "call~FOO", "mov~rdi,ent", "call~FOO", "mov~rax,[ent_from_table+0]"]], [1, 0, 0, 1, 0, 6, 0, 0, 3, -1, 0.0, ["add     rsp, 8", "pop     ent", "pop     ent_from_table", "pop     ino", "pop     name", "retn"], ["add~rsp,0", "pop~ent", "pop~ent_from_table", "pop~ino", "pop~name", "retn"]]], "func_feature": [6, 2, 9, 0, 6, 6, 3, 38, 0.04167, 1, 2], "succs": [[5], [0, 4], [], [1, 2], [5], []], "fname": "remember_copied", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[2, 0, 5, 1, 1, 12, 2, 2, 0, 0, 0.0, ["push    rbx", "mov     rsi, file; filename", "mov     rbx, file", "mov     edi, 1; ver", "sub     rsp, 0A0h", "mov     rdx, rsp; stat_buf", "mov     rax, fs:28h", "mov     [rsp+0A8h+var_10], rax", "xor     eax, eax", "call    ___xstat", "test    eax, eax", "js      short loc_7AB8"], ["push~rbx", "mov~rsi,file", "mov~rbx,file", "mov~edi,0", "sub~rsp,0", "mov~rdx,rsp", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 0, 1, 0.30000000000000004, ["mov     rcx, [rsp+0A8h+var_10]", "xor     rcx, fs:28h", "jnz     short loc_7AE1"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 3, 0, 3, 12, 3, 4, 0, 2, 0.07500000000000001, ["mov     rdi, file; name", "call    quote", "mov     file, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "lea     rdx, format+4; format", "xor     eax, eax", "mov     rcx, rbx", "xor     edi, edi; status", "call    _error", "xor     eax, eax", "jmp     short loc_7A98"], ["mov~rdi,file", "call~FOO", "mov~file,rax", "call~FOO", "mov~esi,<TAG>", "lea~rdx,<TAG>", "xor~eax,eax", "mov~rcx,rbx", "xor~edi,edi", "call~FOO", "xor~eax,eax", "jmp~FOO"]], [1, 0, 3, 0, 1, 5, 0, 1, 0, 2, 0.07500000000000001, ["mov     rdx, [rsp+0A8h+sb.st_dev]; dev", "mov     rsi, [rsp+0A8h+sb.st_ino]; ino", "mov     rdi, file; name", "call    remember_copied", "mov     eax, 1"], ["mov~rdx,<TAG>", "mov~rsi,[rsp+0]", "mov~rdi,file", "call~FOO", "mov~eax,0"]], [1, 0, 0, 1, 0, 3, 0, 0, 0, -1, 0.0, ["add     rsp, 0A0h", "pop     rbx", "retn"], ["add~rsp,0", "pop~rbx", "retn"]]], "func_feature": [6, 6, 9, 1, 6, 6, 0, 36, 0.075, 2, 2], "succs": [[3, 4], [], [1, 5], [2], [2], []], "fname": "remember_created", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [2, 0, 2, 1, 1, 10, 2, 2, 0, 1, 0.0, ["lea     r8, src_to_dest_free; data_freer", "lea     rcx, src_to_dest_compare; comparator", "lea     rdx, src_to_dest_hash; hasher", "sub     rsp, 8", "xor     esi, esi; tuning", "mov     edi, 67h ; 'g'; candidate", "call    hash_initialize", "test    rax, rax", "mov     cs:src_to_dest, rax", "jz      short loc_7B26"], ["lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "sub~rsp,0", "xor~esi,esi", "mov~edi,0", "call~FOO", "test~rax,rax", "mov~<TAG>,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 2, 3, 0, 3, 2, 1, 13, 0.0, 4, 2], "succs": [[], [0, 2], []], "fname": "hash_init", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     rdi, cs:src_to_dest; table", "jmp     hash_free"], ["mov~rdi,<TAG>", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 1, 2, 0.0, 1, 0], "succs": [[], [0]], "fname": "forget_all", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0.08333333333333333, ["jmp     _chmod"], ["jmp~FOO"]], [1, 0, 4, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     eax, esi", "mov     esi, edx; mode", "cmp     eax, 0FFFFFFFFh", "jz      short loc_7B50"], ["mov~eax,esi", "mov~esi,edx", "cmp~eax,0", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0.0, [], []], [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0.0, [], []], [0, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.08333333333333333, ["mov     edi, eax; file", "jmp     _fchmod"], ["mov~edi,eax", "jmp~FOO"]]], "func_feature": [0, 0, 3, 0, 5, 4, 2, 7, 0.03333, 0, 0], "succs": [[2], [0, 4], [], [], [3]], "fname": "chmod_or_fchmod", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     short chmod_or_fchmod"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 2, 1, 0.0, 0, 0], "succs": [[1], []], "fname": "qset_acl", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 2, 0, 1, 8, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "mov     rbp, name", "push    rbx", "call    chmod_or_fchmod", "test    eax, eax", "mov     ebx, eax", "jz      short loc_7BB9"], ["push~r12", "push~rbp", "mov~rbp,name", "push~rbx", "call~FOO", "test~eax,eax", "mov~ebx,eax", "jz~FOO"]], [1, 0, 1, 0, 4, 15, 3, 4, 0, 1, 0.0, ["mov     rdi, name; name", "call    quote", "lea     rsi, aSettingPermiss; \"setting permissions for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r12, rax", "call    _dcgettext", "mov     name, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r12", "mov     rdx, rbp; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rdi,name", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~name,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r12", "mov~rdx,rbp", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0.0, ["mov     eax, ebx", "pop     rbx", "pop     rbp", "pop     r12", "retn"], ["mov~eax,ebx", "pop~rbx", "pop~rbp", "pop~r12", "retn"]]], "func_feature": [5, 4, 6, 0, 3, 3, 2, 28, 0.0, 1, 0], "succs": [[1, 2], [2], []], "fname": "set_acl", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 2, 0, 1, 11, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "mov     rbp, dst_name", "push    rbx", "mov     edx, r8d; mode", "mov     esi, ecx; desc", "mov     src_name, dst_name; name", "call    qset_acl", "test    eax, eax", "mov     ebx, eax", "jz      short loc_7C11"], ["push~r12", "push~rbp", "mov~rbp,dst_name", "push~rbx", "mov~edx,r8d", "mov~esi,ecx", "mov~src_name,dst_name", "call~FOO", "test~eax,eax", "mov~ebx,eax", "jz~FOO"]], [1, 0, 1, 0, 4, 15, 3, 4, 0, 1, 0.0, ["mov     rdi, dst_name; name", "call    quote", "lea     rsi, aPreservingPerm; \"preserving permissions for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r12, rax", "call    _dcgettext", "mov     dst_name, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r12", "mov     rdx, rbp; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rdi,dst_name", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~dst_name,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r12", "mov~rdx,rbp", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0.0, ["mov     eax, ebx", "pop     ret", "pop     rbp", "pop     r12", "retn"], ["mov~eax,ebx", "pop~ret", "pop~rbp", "pop~r12", "retn"]]], "func_feature": [5, 4, 6, 0, 3, 3, 3, 31, 0.0, 1, 0], "succs": [[1, 2], [2], []], "fname": "copy_acl", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[1, 0, 12, 0, 1, 3, 0, 2, 0, 0, 0.06439393939393939, ["call    ___errno_location", "cmp     dword ptr [rax], 22h ; '\"'", "jz      short loc_7C86"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 12, 0, 1, 7, 1, 2, 2, 4, 0.3560606060606061, ["mov     rdx, buf_size; len", "mov     rsi, buffer; buf", "mov     rdi, file; path", "call    _readlink", "test    rax, rax", "mov     r12, rax", "js      short loc_7CD8"], ["mov~rdx,buf_size", "mov~rsi,buffer", "mov~rdi,file", "call~FOO", "test~rax,rax", "mov~r12,rax", "js~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 5, 1, 0.15151515151515152, ["cmp     buf_size, r15", "ja      short loc_7D00"], ["cmp~buf_size,r15", "ja~FOO"]], [0, 0, 12, 0, 1, 4, 0, 2, 4, 2, 0.26515151515151514, ["mov     rdi, buffer; ptr", "call    free", "cmp     buf_size, r14", "ja      short loc_7CC0"], ["mov~rdi,buffer", "call~FOO", "cmp~buf_size,r14", "ja~FOO"]], [0, 0, 12, 1, 1, 6, 1, 2, 5, 5, 0.07575757575757576, ["add     buf_size, buf_size", "mov     rdi, buf_size; size", "call    _malloc", "test    rax, rax", "mov     buffer, rax", "jnz     short loc_7C70"], ["add~buf_size,buf_size", "mov~rdi,buf_size", "call~FOO", "test~rax,rax", "mov~buffer,rax", "jnz~FOO"]], [0, 0, 12, 0, 1, 5, 1, 2, 1, 5, 0.21212121212121213, ["mov     rdi, buf_size; size", "call    _malloc", "test    rax, rax", "mov     rbp, rax", "jz      short loc_7CAB"], ["mov~rdi,buf_size", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 4, -1, 0.011363636363636364, ["mov     byte ptr [buffer+link_length+0], 0", "jmp     short loc_7CAB"], ["mov~[yte ptr [buffer+0],0", "jmp~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 3, 3, 0.32196969696969696, ["cmp     buf_size, link_length", "ja      short loc_7CF0"], ["cmp~buf_size,link_length", "ja~FOO"]], [0, 0, 1, 0, 1, 4, 1, 2, 4, -1, 0.011363636363636364, ["mov     rdi, buffer; ptr", "xor     ebp, ebp", "call    free", "jmp     short loc_7CAB"], ["mov~rdi,buffer", "xor~ebp,ebp", "call~FOO", "jmp~FOO"]], [1, 0, 1, 0, 1, 4, 1, 2, 6, 0, 0.007575757575757576, ["call    ___errno_location", "xor     ebp, ebp", "mov     dword ptr [rax], 0Ch", "jmp     short loc_7CAB"], ["call~FOO", "xor~ebp,ebp", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 6, 6, 0.09848484848484848, ["mov     buf_size, 7FFFFFFFFFFFFFFFh", "jmp     short loc_7C60"], ["mov~buf_size,0", "jmp~FOO"]], [5, 0, 12, 1, 0, 15, 0, 0, 0, 6, 0.0, ["push    r15", "push    r14", "mov     eax, 401h", "push    r13", "push    r12", "mov     r13, file", "push    rbp", "push    rbx", "lea     rbx, [size+1]", "mov     r14, 3FFFFFFFFFFFFFFFh", "mov     r15, 7FFFFFFFFFFFFFFEh", "sub     rsp, 8", "cmp     size, 401h", "cmovnb  rbx, rax", "nop     dword ptr [rax+00000000h]"], ["push~r15", "push~r14", "mov~eax,0", "push~r13", "push~r12", "mov~r13,file", "push~rbp", "push~rbx", "lea~rbx,[size+0]", "mov~r14,0", "mov~r15,0", "sub~rsp,0", "cmp~size,0", "cmovnb~rbx,rax", "nop~[word ptr [rax+0]"]], [1, 0, 0, 1, 0, 9, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "mov     rax, rbp", "pop     buf_size", "pop     rbp", "pop     r12", "pop     file", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "mov~rax,rbp", "pop~buf_size", "pop~rbp", "pop~r12", "pop~file", "pop~r14", "pop~r15", "retn"]]], "func_feature": [7, 5, 18, 0, 13, 19, 2, 65, 0.12121, 0, 3], "succs": [[8, 7], [0, 7], [9, 10], [2, 4], [1, 12], [1, 12], [12], [3, 6], [12], [12], [5], [5], []], "fname": "areadlink_with_size", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.14285714285714285, ["cmp     ent, ent_from_table", "jz      short loc_7D80"], ["cmp~ent,ent_from_table", "jz~FOO"]], [2, 0, 5, 1, 3, 23, 1, 4, 1, 1, 0.11904761904761904, ["push    r13", "push    r12", "mov     r13, ht", "push    rbp", "push    rbx", "mov     r12, file", "mov     edi, 18h; n", "mov     rbp, stats", "sub     rsp, 8", "call    xmalloc", "mov     rdi, file; string", "mov     rbx, rax", "call    xstrdup", "mov     [ent], rax", "mov     rax, [stats+8]", "mov     rsi, ent; entry", "mov     rdi, ht; table", "mov     [ent+8], rax", "mov     rax, [stats+0]", "mov     [ent+10h], rax", "call    hash_insert", "test    ent_from_table, ent_from_table", "jz      short loc_7D92"], ["push~r13", "push~r12", "mov~r13,ht", "push~rbp", "push~rbx", "mov~r12,file", "mov~edi,0", "mov~rbp,stats", "sub~rsp,0", "call~FOO", "mov~rdi,file", "mov~rbx,rax", "call~FOO", "mov~<TAG>,rax", "mov~rax,[stats+0]", "mov~rsi,ent", "mov~rdi,ht", "mov~[ent+0],rax", "mov~rax,[stats+0]", "mov~[ent+0],rax", "call~FOO", "test~ent_from_table,ent_from_table", "jz~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 3, -1, 0.0, ["add     rsp, 8", "pop     ent", "pop     stats", "pop     file", "pop     ht", "retn"], ["add~rsp,0", "pop~ent", "pop~stats", "pop~file", "pop~ht", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 7, 0, 0, 2, 1, 1, 0, 2, 0.0, ["test    ht, ht", "jz      short locret_7D90"], ["test~ht,ht", "jz~FOO"]], [1, 0, 1, 1, 0, 7, 0, 1, 3, -1, 0.07142857142857142, ["add     rsp, 8", "mov     rdi, ent; x", "pop     ent", "pop     stats", "pop     file", "pop     ht", "jmp     triple_free"], ["add~rsp,0", "mov~rdi,ent", "pop~ent", "pop~stats", "pop~file", "pop~ht", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []]], "func_feature": [4, 2, 8, 0, 8, 7, 6, 42, 0.04167, 0, 3], "succs": [[2, 6], [0, 3], [], [], [], [1, 4], [7], []], "fname": "record_file", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 28h", "retn"], ["add~rsp,0", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 1, 0.3333333333333333, ["mov     rcx, [rsp+28h+var_10]", "xor     rcx, fs:28h", "jnz     short loc_7DF1"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 3, 0, 1, 9, 1, 1, 1, 2, 0.0, ["mov     rax, [stats+8]", "mov     [rsp+28h+new_ent.name], file", "mov     file, rsp; entry", "mov     [rsp+28h+new_ent.st_ino], rax", "mov     rax, [stats]", "mov     [rsp+28h+new_ent.st_dev], rax", "call    hash_lookup", "test    rax, rax", "setnz   al"], ["mov~rax,[stats+0]", "mov~<TAG>,file", "mov~file,rsp", "mov~[rsp+0],rax", "mov~rax,<TAG>", "mov~[rsp+0],rax", "call~FOO", "test~rax,rax", "setnz~al"]], [1, 0, 4, 1, 0, 6, 2, 1, 0, 2, 0.0, ["sub     rsp, 28h", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "test    ht, ht", "jz      short loc_7DDC"], ["sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~ht,ht", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 4, 4, 1, 5, 5, 3, 21, 0.06667, 1, 2], "succs": [[], [0, 4], [1], [1, 2], []], "fname": "seen_file", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[2, 0, 0, 3, 1, 15, 2, 1, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rbp, p", "mov     rbx, table_size", "sub     rsp, 8", "mov     p, [p]; x", "call    hash_pjw", "xor     tmp, [p+8]", "xor     edx, edx", "add     rsp, 8", "div     table_size", "pop     table_size", "pop     p", "mov     rax, rdx", "retn"], ["push~rbp", "push~rbx", "mov~rbp,p", "mov~rbx,table_size", "sub~rsp,0", "mov~p,<TAG>", "call~FOO", "xor~tmp,[p+0]", "xor~edx,edx", "add~rsp,0", "div~,table_size", "pop~table_size", "pop~p", "mov~rax,rdx", "retn"]]], "func_feature": [1, 2, 1, 0, 1, 0, 0, 15, 0.0, 0, 3], "succs": [[]], "fname": "triple_hash", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 0, 1, 0, 5, 1, 0, 0, 0, 0.0, ["mov     rax, [p+8]", "xor     edx, edx", "div     table_size", "mov     rax, rdx", "retn"], ["mov~rax,[p+0]", "xor~edx,edx", "div~,table_size", "mov~rax,rdx", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 0, 1], "succs": [[]], "fname": "triple_hash_no_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 2, 0, 0, 3, 0, 1, 0, 0, 0.16666666666666666, ["mov     rcx, [b+10h]", "cmp     [a+10h], rcx", "jnz     short locret_7ECC"], ["mov~rcx,[b+0]", "cmp~[a+0],rcx", "jnz~FOO"]], [0, 0, 3, 0, 0, 4, 1, 1, 0, 2, 0.0, ["xor     eax, eax", "mov     rdx, [b+8]", "cmp     [a+8], rdx", "jz      short loc_7ED0"], ["xor~eax,eax", "mov~rdx,[b+0]", "cmp~[a+0],rdx", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, -1, 0.0, ["rep retn"], ["retn"]], [2, 0, 0, 2, 1, 6, 0, 1, 2, 0, 0.0, ["sub     rsp, 8", "mov     b, [b]; dest", "mov     a, [a]; source", "call    same_name", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~b,<TAG>", "mov~a,<TAG>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 1, 3, 0, 4, 4, 0, 14, 0.04167, 0, 2], "succs": [[2, 3], [0, 2], [], []], "fname": "triple_compare", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 2, 0, 0, 3, 0, 1, 0, 0, 0.16666666666666666, ["mov     rcx, [b+10h]", "cmp     [a+10h], rcx", "jnz     short locret_7EFC"], ["mov~rcx,[b+0]", "cmp~[a+0],rcx", "jnz~FOO"]], [0, 0, 3, 0, 0, 4, 1, 1, 0, 2, 0.0, ["xor     eax, eax", "mov     rdx, [b+8]", "cmp     [a+8], rdx", "jz      short loc_7F00"], ["xor~eax,eax", "mov~rdx,[b+0]", "cmp~[a+0],rdx", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, -1, 0.0, ["rep retn"], ["retn"]], [2, 0, 0, 2, 1, 8, 1, 1, 2, 0, 0.0, ["sub     rsp, 8", "mov     b, [b]; s2", "mov     a, [a]; s1", "call    _strcmp", "test    eax, eax", "setz    al", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~b,<TAG>", "mov~a,<TAG>", "call~FOO", "test~eax,eax", "setz~al", "add~rsp,0", "retn"]]], "func_feature": [1, 2, 3, 0, 4, 4, 0, 16, 0.04167, 0, 2], "succs": [[2, 3], [0, 2], [], []], "fname": "triple_compare_ino_str", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 1, 0, 1, 7, 0, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, a", "mov     a, [a]; ptr", "call    free", "mov     rdi, a; ptr", "pop     a", "jmp     free"], ["push~rbx", "mov~rbx,a", "mov~a,<TAG>", "call~FOO", "mov~rdi,a", "pop~a", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 0, 2, 0, 2, 1, 1, 7, 0.0, 0, 0], "succs": [[1], []], "fname": "triple_free", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, r8", "retn"], ["mov~rax,r8", "retn"]], [0, 0, 1, 0, 0, 1, 0, 1, 6, -1, 0.005555555555555556, ["jmp     short loc_957E"], ["jmp~FOO"]], [0, 0, 1, 0, 0, 3, 0, 0, 2, -1, 0.08333333333333334, ["cmp     size, lcm_max", "cmovbe  lcm_max, size", "mov     r8, rcx"], ["cmp~size,lcm_max", "cmovbe~lcm_max,size", "mov~r8,rcx"]], [0, 0, 7, 1, 0, 4, 2, 1, 3, 1, 0.2111111111111111, ["xor     edx, edx", "div     n", "test    r, r", "jnz     short loc_95C8"], ["xor~edx,edx", "div~,n", "test~r,r", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 4, 0, 0.0, ["mov     rax, n", "mov     n, r", "jmp     short loc_9593"], ["mov~rax,n", "mov~n,r", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 0, 2, 2, 0.11111111111111112, ["mov     r8, b", "mov     rax, a"], ["mov~r8,b", "mov~rax,a"]], [0, 0, 10, 0, 0, 3, 1, 1, 0, 4, 0.0, ["test    a, a", "mov     rcx, lcm_max", "jnz     short loc_9588"], ["test~a,a", "mov~rcx,lcm_max", "jnz~FOO"]], [0, 0, 3, 1, 0, 5, 1, 1, 5, -1, 0.06666666666666667, ["xor     edx, edx", "mov     q, lcm", "div     b", "cmp     rax, q", "jnz     short loc_9574"], ["xor~edx,edx", "mov~q,lcm", "div~,b", "cmp~rax,q", "jnz~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 1, 3, 0.07777777777777778, ["test    b, b", "jz      short loc_9574"], ["test~b,b", "jz~FOO"]], [0, 0, 4, 2, 0, 8, 1, 1, 4, -1, 0.17777777777777778, ["xor     edx, edx", "mov     rax, a", "div     n", "mov     n, b", "imul    r8, rax", "mov     r9, rax", "cmp     lcm, lcm_max", "ja      short loc_9574"], ["xor~edx,edx", "mov~rax,a", "div~,n", "mov~n,b", "imul~r8,rax", "mov~r9,rax", "cmp~lcm,lcm_max", "ja~FOO"]], [1, 0, 2, 0, 0, 3, 1, 0, 1, -1, 0.011111111111111112, ["test    b, b", "mov     edi, 2000h", "cmovnz  rdi, b"], ["test~b,b", "mov~edi,0", "cmovnz~rdi,b"]]], "func_feature": [0, 7, 7, 0, 11, 15, 1, 36, 0.06768, 0, 4], "succs": [[], [0], [0], [9, 4], [3], [3], [8, 10], [1, 2], [2, 5], [2, 7], [2]], "fname": "buffer_lcm", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[3, 0, 0, 2, 1, 10, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     r9, cs:argmatch_die; exit_fn", "lea     rdx, backup_args; arglist", "lea     rcx, backup_types; vallist", "mov     r8d, 4; valsize", "call    __xargmatch_internal", "lea     rdx, backup_types", "mov     eax, [rdx+rax*4]", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~r9,<TAG>", "lea~rdx,<TAG>", "lea~rcx,<TAG>", "mov~r8d,0", "call~FOO", "lea~rdx,<TAG>", "mov~eax,<TAG>", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 2, 10, 0.0, 3, 2], "succs": [[]], "fname": "get_version_0", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[1, 0, 5, 0, 0, 4, 1, 1, 0, 0, 0.04692192192192192, ["mov     ecx, [r13+0]", "mov     edx, 0FFh", "test    ecx, ecx", "jnz     short loc_9CAF"], ["mov~ecx,[r13+0]", "mov~edx,0", "test~ecx,ecx", "jnz~FOO"]], [3, 0, 6, 0, 2, 11, 1, 3, 3, -1, 0.11261261261261261, ["mov     esi, 2Eh ; '.'", "movzx   r14d, word ptr [rbx]", "mov     [rbx], si", "call    ___errno_location", "mov     esi, 3; name", "mov     dword ptr [rax], 0", "mov     rdi, s; path", "mov     r13, rax", "call    _pathconf", "test    rax, rax", "js      short loc_9CE0"], ["mov~esi,0", "movzx~r14d,<TAG>", "mov~<TAG>,si", "call~FOO", "mov~esi,0", "mov~<TAG>,0", "mov~rdi,s", "mov~r13,rax", "call~FOO", "test~rax,rax", "js~FOO"]], [1, 0, 35, 1, 1, 6, 1, 2, 14, 11, 0.1478978978978979, ["add     edx, 1", "mov     rdi, r12; dirp", "mov     [rax], dl", "call    _readdir", "test    rax, rax", "jnz     loc_9A91"], ["add~edx,0", "mov~rdi,r12", "mov~<TAG>,dl", "call~FOO", "test~rax,rax", "jnz~FOO"]], [2, 1, 35, 2, 1, 15, 0, 2, 13, 12, 0.12087087087087087, ["mov     rax, [rsp+78h+filelen]", "lea     rdx, [r15+2]; n", "mov     edi, 7E2Eh", "mov     rsi, rbx; src", "add     rax, rbp", "lea     rcx, [rax+r9+2]", "mov     [rax], di", "mov     byte ptr [rax+2], 30h ; '0'", "mov     rdi, rcx; dest", "call    _memcpy", "add     r15, rax", "movzx   edx, byte ptr [r15-1]", "lea     rax, [r15-1]", "cmp     dl, 39h ; '9'", "jnz     short loc_9BF7"], ["mov~rax,[rsp+0]", "lea~rdx,[r15+0]", "mov~edi,<STR>", "mov~rsi,rbx", "add~rax,rbp", "lea~rcx,[rax+0]", "mov~<TAG>,di", "mov~[yte ptr [rax+0],0", "mov~rdi,rcx", "call~FOO", "add~r15,rax", "movzx~edx,[yte ptr [r15-1]+0]", "lea~rax,[r15-1]+0]", "cmp~dl,0", "jnz~FOO"]], [3, 0, 35, 1, 0, 5, 0, 1, 15, 12, 0.024774774774774775, ["mov     byte ptr [rax], 30h ; '0'", "sub     rax, 1", "movzx   edx, byte ptr [rax]", "cmp     dl, 39h ; '9'", "jz      short loc_9BE8"], ["mov~<TAG>,0", "sub~rax,0", "movzx~edx,<TAG>", "cmp~dl,0", "jz~FOO"]], [1, 0, 35, 1, 0, 4, 0, 0, 13, 1, 0.03228228228228228, ["mov     eax, 2", "mov     [rsp+78h+var_40], r9", "mul     rcx", "jo      loc_9CEF"], ["mov~eax,0", "mov~[rsp+0],r9", "mul~,rcx", "jo~FOO"]], [0, 0, 35, 0, 0, 9, 0, 0, 12, 2, 0.1111111111111111, ["movzx   esi, r8b", "movzx   r9d, r8b", "mov     [rsp+78h+var_48], esi", "mov     rsi, [rsp+78h+filelen]", "lea     rax, [r15+r9]", "mov     [rsp+78h+var_50], rax", "lea     rcx, [rax+rsi+3]", "cmp     rcx, [rsp+78h+ssize]", "jb      short loc_9BAB"], ["movzx~esi,r8b", "movzx~r9d,r8b", "mov~[rsp+0],esi", "mov~rsi,[rsp+0]", "lea~rax,<TAG>", "mov~[rsp+0],rax", "lea~rcx,[rax+0]", "cmp~rcx,[rsp+0]", "jb~FOO"]], [4, 0, 35, 2, 0, 9, 1, 0, 10, 6, 0.024774774774774775, ["cmp     cl, 39h ; '9'", "setz    al", "add     r15, 1", "and     r8d, eax", "movsx   eax, byte ptr [rbx+r15]", "mov     ecx, eax", "sub     eax, 30h ; '0'", "cmp     eax, 9", "jbe     short loc_9AF0"], ["cmp~cl,0", "setz~al", "add~r15,0", "and~r8d,eax", "movsx~eax,<TAG>", "mov~ecx,eax", "sub~eax,0", "cmp~eax,0", "jbe~FOO"]], [0, 0, 35, 0, 0, 1, 0, 0, 9, 7, 0.015765765765765764, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [0, 0, 35, 0, 1, 4, 1, 2, 3, 11, 0.22672672672672672, ["mov     rdi, r12; dirp", "call    _readdir", "test    rax, rax", "jz      loc_9C10"], ["mov~rdi,r12", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 35, 0, 0, 2, 0, 1, 4, 10, 0.18393393393393392, ["cmp     qword ptr [rax], 0", "jz      short loc_9A80"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 35, 0, 1, 5, 0, 1, 5, 9, 0.17717717717717718, ["lea     rbx, [rax+13h]", "mov     rdi, rbx; s", "call    _strlen", "cmp     rax, r13", "jb      short loc_9A80"], ["lea~rbx,[rax+0]", "mov~rdi,rbx", "call~FOO", "cmp~rax,r13", "jb~FOO"]], [0, 0, 35, 0, 1, 8, 1, 2, 6, 8, 0.17492492492492492, ["mov     rax, [rsp+78h+var_70]", "lea     r15, [r14+2]", "mov     rsi, rbx; s2", "mov     rdx, r15; n", "lea     rdi, [rbp+rax+0]; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_9A80"], ["mov~rax,[rsp+0]", "lea~r15,[r14+0]", "mov~rsi,rbx", "mov~rdx,r15", "lea~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 35, 1, 0, 5, 0, 1, 7, 7, 0.17192192192192193, ["add     rbx, r15", "movzx   eax, byte ptr [rbx]", "lea     edx, [rax-31h]", "cmp     dl, 8", "ja      short loc_9A80"], ["add~rbx,r15", "movzx~eax,<TAG>", "lea~edx,[rax-31h]+0]", "cmp~dl,0", "ja~FOO"]], [1, 0, 35, 0, 0, 2, 0, 1, 9, 5, 0.19519519519519518, ["cmp     cl, 7Eh ; '~'", "jnz     loc_9A80"], ["cmp~cl,0", "jnz~FOO"]], [1, 0, 35, 0, 0, 2, 0, 1, 10, 4, 0.14564564564564564, ["cmp     byte ptr [rbx+r15+1], 0", "jnz     loc_9A80"], ["cmp~[yte ptr [rbx+0],0", "jnz~FOO"]], [0, 0, 35, 0, 0, 2, 0, 1, 12, 4, 0.03303303303303303, ["mov     byte ptr [rsp+78h+var_40], r8b", "jnz     loc_9A80"], ["mov~[yte ptr [rsp+0],r8b", "jnz~FOO"]], [0, 0, 35, 0, 1, 8, 1, 2, 13, 3, 0.006756756756756757, ["mov     rax, [rsp+78h+filelen]", "mov     rdx, r15; n", "mov     rsi, rbx; s2", "lea     rdi, [rbp+rax+2]; s1", "call    _memcmp", "test    eax, eax", "movzx   r8d, byte ptr [rsp+78h+var_40]", "jg      loc_9A80"], ["mov~rax,[rsp+0]", "mov~rdx,r15", "mov~rsi,rbx", "lea~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rsp+0]", "jg~FOO"]], [0, 0, 35, 0, 0, 1, 0, 0, 2, 12, 0.036036036036036036, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 13, 0, 0, 1, 0, 0, 15, -1, 0.06831831831831832, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [4, 0, 35, 1, 0, 8, 0, 1, 8, 6, 0.16816816816816815, ["cmp     al, 39h ; '9'", "movsx   eax, byte ptr [rbx+1]", "mov     r15d, 1", "setz    r8b", "mov     ecx, eax", "sub     eax, 30h ; '0'", "cmp     eax, 9", "ja      short loc_9B0C"], ["cmp~al,0", "movsx~eax,[yte ptr [rbx+0]", "mov~r15d,0", "setz~r8b", "mov~ecx,eax", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [3, 1, 37, 2, 4, 32, 0, 5, 0, 14, 0.0, ["push    r15", "push    r14", "mov     r15d, esi", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, file", "sub     rsp, 48h", "mov     [rsp+78h+backup_type], esi", "call    _strlen", "mov     rdi, cs:simple_backup_suffix; s", "mov     r14, rax", "mov     [rsp+78h+filelen], rax", "lea     r12, [r14+1]", "call    _strlen", "lea     rdx, [rax+1]", "mov     eax, 9", "cmp     rdx, 9", "mov     [rsp+78h+simple_backup_suffix_size], rdx", "cmovnb  rax, simple_backup_suffix_size_0", "add     rax, r12", "mov     rdi, rax; n", "mov     [rsp+78h+ssize], rax", "call    xmalloc", "mov     rdx, r12; n", "mov     rsi, file; src", "mov     rdi, rax; dest", "mov     rbp, rax", "call    _memcpy", "cmp     r15d, 1", "jz      loc_9C30"], ["push~r15", "push~r14", "mov~r15d,esi", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,file", "sub~rsp,<STR>", "mov~[rsp+0],esi", "call~FOO", "mov~rdi,<TAG>", "mov~r14,rax", "mov~[rsp+0],rax", "lea~r12,[r14+0]", "call~FOO", "lea~rdx,[rax+0]", "mov~eax,0", "cmp~rdx,0", "mov~[rsp+0],rdx", "cmovnb~rax,simple_backup_suffix_size_0", "add~rax,r12", "mov~rdi,rax", "mov~[rsp+0],rax", "call~FOO", "mov~rdx,r12", "mov~rsi,file", "mov~rdi,rax", "mov~rbp,rax", "call~FOO", "cmp~r15d,0", "jz~FOO"]], [1, 0, 12, 0, 1, 4, 0, 2, 4, -1, 0.1996996996996997, ["mov     rdi, r12; dirp", "call    _closedir", "cmp     [rsp+78h+var_48], 1", "jz      short loc_9C4B"], ["mov~rdi,r12", "call~FOO", "cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 5, -1, 0.06043543543543543, ["cmp     [rsp+78h+var_48], 2", "jnz     short loc_9C67"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 35, 0, 0, 2, 0, 1, 11, 3, 0.13813813813813813, ["cmp     r15, [rsp+78h+var_50]", "ja      short loc_9B56"], ["cmp~r15,[rsp+0]", "ja~FOO"]], [0, 0, 35, 0, 1, 7, 0, 1, 14, 13, 0.024024024024024024, ["lea     rax, [rcx+rcx]", "mov     rdi, rbp; p", "mov     rsi, rax; n", "mov     [rsp+78h+ssize], rax", "call    xrealloc", "mov     r9, [rsp+78h+var_40]", "mov     rbp, rax"], ["lea~rax,<TAG>", "mov~rdi,rbp", "mov~rsi,rax", "mov~[rsp+0],rax", "call~FOO", "mov~r9,[rsp+0]", "mov~rbp,rax"]], [1, 0, 7, 0, 2, 8, 0, 3, 2, -1, 0.14301801801801803, ["mov     rdi, s; name", "call    last_component", "mov     rdi, rax; name", "mov     rbx, rax", "call    base_len", "cmp     rax, 0Eh", "mov     r12, rax", "ja      short loc_9C80"], ["mov~rdi,s", "call~FOO", "mov~rdi,rax", "mov~rbx,rax", "call~FOO", "cmp~rax,0", "mov~r12,rax", "ja~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 2, -1, 0.04954954954954955, ["cmp     [rsp+78h+backup_type], 2", "jnz     short loc_9C4B"], ["cmp~[rsp+0],0", "jnz~FOO"]], [5, 0, 36, 2, 3, 23, 1, 4, 1, 13, 0.02027027027027027, ["mov     rdi, s; name", "call    last_component", "mov     file, rax", "sub     rax, s", "mov     rdi, rbx; name", "mov     [rsp+78h+var_70], rax", "call    base_len", "movzx   r13d, word ptr [rbx]", "mov     r8d, 2Eh ; '.'", "mov     filelen_0, rax", "mov     [rbx], r8w", "mov     rdi, s; name", "call    _opendir", "mov     [rsp+78h+var_50], 1", "mov     r12, rax", "mov     [rsp+78h+var_48], 2", "mov     [rbx], r13w", "add     rbx, r14", "test    rax, rax", "mov     dword ptr [rbx], 7E317E2Eh", "mov     byte ptr [rbx+4], 0", "lea     r13, [r14+4]", "jz      loc_9C26"], ["mov~rdi,s", "call~FOO", "mov~file,rax", "sub~rax,s", "mov~rdi,rbx", "mov~[rsp+0],rax", "call~FOO", "movzx~r13d,<TAG>", "mov~r8d,0", "mov~filelen_0,rax", "mov~<TAG>,r8w", "mov~rdi,s", "call~FOO", "mov~[rsp+0],0", "mov~r12,rax", "mov~[rsp+0],0", "mov~<TAG>,r13w", "add~rbx,r14", "test~rax,rax", "mov~<TAG>,0", "mov~[yte ptr [rbx+0],0", "lea~r13,[r14+0]", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 4, -1, 0.0259009009009009, ["mov     rdx, rax"], ["mov~rdx,rax"]], [0, 0, 4, 0, 0, 1, 0, 1, 5, -1, 0.0007507507507507507, ["jmp     short loc_9CAC"], ["jmp~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 3, -1, 0.01951951951951952, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [0, 0, 2, 0, 0, 3, 0, 0, 5, -1, 0.028528528528528527, ["cmp     r12, rdx", "mov     [rbx], r14w", "jbe     short loc_9C67"], ["cmp~r12,rdx", "mov~<TAG>,r14w", "jbe~FOO"]], [0, 0, 8, 0, 1, 5, 0, 1, 1, -1, 0.012012012012012012, ["mov     rax, [rsp+78h+filelen]", "mov     rdx, [rsp+78h+simple_backup_suffix_size]; n", "mov     rsi, cs:simple_backup_suffix; src", "lea     rdi, [s+rax+0]; dest", "call    _memcpy"], ["mov~rax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,<TAG>", "lea~rdi,[s+0]", "call~FOO"]], [2, 0, 1, 2, 0, 9, 0, 1, 6, -1, 0.0, ["mov     rax, [rsp+78h+filelen]", "lea     rcx, [rdx-1]", "add     rax, s", "sub     rax, rbx", "cmp     rax, rdx", "cmovnb  rax, rcx", "mov     byte ptr [rbx+rax], 7Eh ; '~'", "mov     byte ptr [rbx+rax+1], 0", "jmp     short loc_9C67"], ["mov~rax,[rsp+0]", "lea~rcx,[rdx-1]+0]", "add~rax,s", "sub~rax,rbx", "cmp~rax,rdx", "cmovnb~rax,rcx", "mov~<TAG>,0", "mov~[yte ptr [rbx+0],0", "jmp~FOO"]], [0, 0, 35, 0, 0, 1, 0, 0, 14, 13, 0.015765765765765764, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 14, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 1, 0, 1, 0, 9, 0, 0, 3, -1, 0.0, ["add     rsp, 48h", "mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [21, 8, 44, 4, 38, 62, 2, 223, 0.07796, 1, 16], "succs": [[32, 30], [0, 29], [10, 19], [2, 35], [2, 4], [25, 36], [3, 5], [14, 7], [7], [10, 22], [9, 11], [9, 12], [9, 13], [9, 20], [9, 15], [24, 9], [9, 17], [9, 6], [9], [22], [8, 14], [33, 28], [26, 23], [27, 37], [16, 6], [3], [1, 37], [26, 31], [18, 27], [32], [29], [33], [34, 37], [26], [37], [4], [], []], "fname": "find_backup_file_name", "n_num": 38}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[1, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.16666666666666666, ["cmp     byte ptr [version], 0", "jz      short loc_9D10"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 0, 1, 0.0, ["test    version, version", "jz      short loc_9D10"], ["test~version,version", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 2, -1, 0.16666666666666666, ["jmp     get_version_0"], ["jmp~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 2", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []]], "func_feature": [0, 1, 3, 0, 5, 5, 0, 7, 0.06667, 0, 0], "succs": [[2, 3], [0, 3], [4], [], []], "fname": "get_version", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[1, 0, 4, 0, 0, 2, 0, 1, 0, 0, 0.11904761904761904, ["cmp     byte ptr [rax], 0", "jz      short loc_9D60"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 5, 1, 1, 5, 1, 2, 1, 1, 0.14285714285714285, ["lea     context, aVersionControl; \"VERSION_CONTROL\"", "sub     rsp, 8", "call    _getenv", "test    rax, rax", "jz      short loc_9D60"], ["lea~context,<TAG>", "sub~rsp,0", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 0, 2, 0.0, ["test    version, version", "jz      short loc_9D2A"], ["test~version,version", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 1, 2, 0.047619047619047616, ["cmp     byte ptr [version], 0", "jnz     short loc_9D52"], ["cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 0, 1, 0, 3, 0, 0, 2, 0, 0.0, ["mov     eax, 2", "add     rsp, 8", "retn"], ["mov~eax,0", "add~rsp,0", "retn"]], [1, 0, 2, 1, 0, 3, 0, 0, 3, -1, 0.09523809523809523, ["lea     rdi, asc_1465E; \"$\"", "mov     rsi, rax; version", "add     rsp, 8"], ["lea~rdi,<TAG>", "mov~rsi,rax", "add~rsp,0"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [0, 0, 1, 0, 0, 1, 0, 1, 2, -1, 0.11904761904761904, ["jmp     get_version_0"], ["jmp~FOO"]]], "func_feature": [1, 2, 6, 0, 8, 10, 1, 18, 0.06548, 2, 3], "succs": [[4, 5], [0, 4], [1, 3], [1, 7], [], [7], [], [6]], "fname": "xget_version", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[1, 0, 4, 0, 0, 3, 0, 1, 0, 0, 0.07142857142857142, ["cmp     byte ptr [file+length-1], 2Fh ; '/'", "lea     rax, [length-1]", "jnz     short loc_A133"], ["cmp~[yte ptr [file+0],0", "lea~rax,[length-1]+0]", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 2, -1, 0.19047619047619047, ["cmp     prefix_length, length", "jnz     short loc_A120"], ["cmp~prefix_length,length", "jnz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 4, -1, 0.023809523809523808, ["mov     length, rax"], ["mov~length,rax"]], [1, 0, 0, 1, 0, 6, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "mov     rdx, length", "mov     rax, rdx", "pop     file", "pop     prefix_length", "retn"], ["add~rsp,0", "mov~rdx,length", "mov~rax,rdx", "pop~file", "pop~prefix_length", "retn"]], [2, 0, 7, 2, 1, 12, 1, 1, 0, 1, 0.0, ["push    rbp", "push    rbx", "xor     ebp, ebp", "mov     rbx, file", "sub     rsp, 8", "cmp     byte ptr [file], 2Fh ; '/'", "setz    bpl", "call    last_component", "mov     rcx, rax", "sub     rcx, file", "cmp     length, prefix_length", "jbe     short loc_A140"], ["push~rbp", "push~rbx", "xor~ebp,ebp", "mov~rbx,file", "sub~rsp,0", "cmp~<TAG>,0", "setz~bpl", "call~FOO", "mov~rcx,rax", "sub~rcx,file", "cmp~length,prefix_length", "jbe~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 2, 1, 0.023809523809523808, ["jmp     short loc_A140"], ["jmp~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 1, 2, 0.11904761904761904, ["cmp     byte ptr [rax-1], 2Fh ; '/'", "lea     rdx, [length-1]", "jz      short loc_A12E"], ["cmp~[yte ptr [rax-1]+0],0", "lea~rdx,[length-1]+0]", "jz~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 3, -1, 0.0, ["add     rsp, 8", "mov     rax, length", "pop     file", "pop     prefix_length", "retn"], ["add~rsp,0", "mov~rax,length", "pop~file", "pop~prefix_length", "retn"]]], "func_feature": [1, 1, 5, 0, 8, 10, 2, 33, 0.05357, 0, 4], "succs": [[2, 7], [0, 7], [1], [], [3, 6], [3], [1, 5], []], "fname": "dir_len", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[1, 0, 2, 1, 3, 18, 2, 4, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rbp, file", "sub     rsp, 8", "call    dir_len", "test    rax, rax", "mov     rbx, rax", "setz    al", "movzx   eax, al", "lea     rdi, [length+rax+1]; n", "call    xmalloc", "mov     rdx, length; n", "mov     rsi, file; src", "mov     rdi, dir; dest", "call    _memcpy", "test    length, length", "mov     rcx, rax", "jnz     short loc_A192"], ["push~rbp", "push~rbx", "mov~rbp,file", "sub~rsp,0", "call~FOO", "test~rax,rax", "mov~rbx,rax", "setz~al", "movzx~eax,al", "lea~rdi,[length+0]", "call~FOO", "mov~rdx,length", "mov~rsi,file", "mov~rdi,dir", "call~FOO", "test~length,length", "mov~rcx,rax", "jnz~FOO"]], [2, 0, 1, 0, 0, 2, 0, 0, 0, 1, 0.0, ["mov     byte ptr [rax], 2Eh ; '.'", "mov     ebx, 1"], ["mov~<TAG>,0", "mov~ebx,0"]], [2, 0, 0, 1, 0, 6, 0, 0, 0, 0, 0.0, ["mov     byte ptr [rcx+length], 0", "add     rsp, 8", "mov     rax, rcx", "pop     length", "pop     file", "retn"], ["mov~<TAG>,0", "add~rsp,0", "mov~rax,rcx", "pop~length", "pop~file", "retn"]]], "func_feature": [3, 2, 4, 0, 3, 3, 3, 26, 0.0, 0, 2], "succs": [[1, 2], [2], []], "fname": "dir_name", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[2, 0, 14, 0, 0, 3, 0, 1, 0, 0, 0.02380952380952381, ["cmp     edx, 4000h", "mov     eax, 64h ; 'd'", "jz      short loc_A210"], ["cmp~edx,0", "mov~eax,0", "jz~FOO"]], [3, 0, 15, 0, 0, 5, 1, 1, 0, 4, 0.0, ["mov     edx, edi", "mov     eax, 2Dh ; '-'", "and     edx, 0F000h", "cmp     edx, 8000h", "jz      short loc_A210"], ["mov~edx,edi", "mov~eax,0", "and~edx,0", "cmp~edx,0", "jz~FOO"]], [2, 0, 6, 1, 0, 3, 1, 1, 2, 2, 0.1142857142857143, ["and     eax, 0FFFFFFB5h", "add     eax, 78h ; 'x'", "jmp     loc_A258"], ["and~eax,0", "add~eax,0", "jmp~FOO"]], [10, 1, 8, 2, 0, 21, 6, 1, 1, 3, 0.2666666666666667, ["mov     [str], al", "mov     eax, edi", "and     eax, 100h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFBBh", "add     eax, 72h ; 'r'", "mov     [str+1], al", "mov     eax, edi", "and     eax, 80h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFB6h", "add     eax, 77h ; 'w'", "mov     [str+2], al", "mov     eax, edi", "and     eax, 40h", "cmp     eax, 1", "sbb     eax, eax", "test    edi, 800h", "jz      loc_A2F0"], ["mov~<TAG>,al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,<STR>", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "test~edi,0", "jz~FOO"]], [1, 1, 11, 0, 0, 3, 0, 1, 4, 4, 0.0380952380952381, ["cmp     edx, 0A000h", "mov     eax, 6Ch ; 'l'", "jz      short loc_A210"], ["cmp~edx,<STR>", "mov~eax,0", "jz~FOO"]], [2, 0, 12, 0, 0, 3, 0, 1, 3, 4, 0.04285714285714286, ["cmp     edx, 2000h", "mov     eax, 63h ; 'c'", "jz      short loc_A210"], ["cmp~edx,0", "mov~eax,0", "jz~FOO"]], [3, 0, 9, 0, 0, 5, 0, 0, 6, 4, 0.0, ["cmp     edx, 0C000h", "mov     eax, 73h ; 's'", "mov     edx, 3Fh ; '?'", "cmovnz  eax, edx", "nop     dword ptr [rax+00000000h]"], ["cmp~edx,0", "mov~eax,0", "mov~edx,0", "cmovnz~eax,edx", "nop~[word ptr [rax+0]"]], [1, 1, 10, 0, 0, 3, 0, 1, 5, 4, 0.02380952380952381, ["cmp     edx, 1000h", "mov     eax, 70h ; 'p'", "jz      short loc_A210"], ["cmp~edx,<STR>", "mov~eax,0", "jz~FOO"]], [2, 1, 0, 1, 0, 6, 1, 0, 6, -1, 0.0, ["and     eax, 0FFFFFFE0h", "add     eax, 74h ; 't'", "mov     [str+9], al", "mov     eax, 20h ; ' '", "mov     [str+0Ah], ax", "retn"], ["and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,<STR>", "mov~[str+0],ax", "retn"]], [10, 1, 2, 2, 0, 21, 6, 1, 5, -1, 0.12380952380952381, ["mov     [str+6], al", "mov     eax, edi", "and     eax, 4", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFBBh", "add     eax, 72h ; 'r'", "mov     [str+7], al", "mov     eax, edi", "and     eax, 2", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFB6h", "add     eax, 77h ; 'w'", "mov     [str+8], al", "mov     eax, edi", "and     eax, 1", "cmp     eax, 1", "sbb     eax, eax", "and     edi, 200h", "jz      short loc_A300"], ["mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~edi,<STR>", "jz~FOO"]], [2, 0, 13, 0, 0, 3, 0, 1, 2, 4, 0.0380952380952381, ["cmp     edx, 6000h", "mov     eax, 62h ; 'b'", "jz      short loc_A210"], ["cmp~edx,0", "mov~eax,0", "jz~FOO"]], [10, 1, 5, 2, 0, 21, 6, 1, 3, 1, 0.2380952380952381, ["mov     [str+3], al", "mov     eax, edi", "and     eax, 20h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFBBh", "add     eax, 72h ; 'r'", "mov     [str+4], al", "mov     eax, edi", "and     eax, 10h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFB6h", "add     eax, 77h ; 'w'", "mov     [str+5], al", "mov     eax, edi", "and     eax, 8", "cmp     eax, 1", "sbb     eax, eax", "test    edi, 400h", "jz      loc_A318"], ["mov~[str+0],al", "mov~eax,edi", "and~eax,<STR>", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "test~edi,0", "jz~FOO"]], [2, 0, 6, 1, 0, 2, 1, 0, 2, 2, 0.1142857142857143, ["and     eax, 0FFFFFFE0h", "add     eax, 73h ; 's'"], ["and~eax,0", "add~eax,0"]], [2, 1, 0, 1, 0, 6, 1, 0, 6, -1, 0.0, ["and     eax, 0FFFFFFB5h", "add     eax, 78h ; 'x'", "mov     [str+9], al", "mov     eax, 20h ; ' '", "mov     [str+0Ah], ax", "retn"], ["and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,<STR>", "mov~[str+0],ax", "retn"]], [2, 0, 3, 1, 0, 3, 1, 1, 4, 0, 0.07857142857142858, ["and     eax, 0FFFFFFB5h", "add     eax, 78h ; 'x'", "jmp     loc_A29D"], ["and~eax,0", "add~eax,0", "jmp~FOO"]], [2, 0, 3, 1, 0, 2, 1, 0, 4, -1, 0.07857142857142858, ["and     eax, 0FFFFFFE0h", "add     eax, 73h ; 's'"], ["and~eax,0", "add~eax,0"]]], "func_feature": [0, 25, 11, 0, 16, 23, 2, 110, 0.07381, 0, 12], "succs": [[10, 3], [0, 3], [11], [2, 12], [3, 7], [3, 4], [3], [3, 6], [], [8, 13], [3, 5], [14, 15], [11], [], [9], [9]], "fname": "strmode", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     edi, [statp+18h]; mode", "jmp     strmode"], ["mov~edi,[statp+0]", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 0, 0], "succs": [[1], []], "fname": "filemodestring", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[1, 0, 8, 0, 0, 3, 0, 0, 0, 0, 0.0, ["cmp     byte ptr [dirbase+dirbaselen-1], 2Fh ; '/'", "setnz   bl", "movzx   ebx, bl"], ["cmp~[yte ptr [dirbase+0],0", "setnz~bl", "movzx~ebx,bl"]], [1, 0, 9, 3, 2, 20, 1, 3, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r15, base_in_result", "push    r13", "push    r12", "mov     r14, dir", "push    rbp", "push    rbx", "mov     r12, abase", "sub     rsp, 18h", "call    last_component", "mov     r13, rax", "mov     rdi, dirbase; name", "mov     rbp, r13", "sub     rbp, dir", "call    base_len", "add     rbp, rax", "test    rax, rax", "mov     rbx, rax", "jz      short loc_A384"], ["push~r15", "push~r14", "mov~r15,base_in_result", "push~r13", "push~r12", "mov~r14,dir", "push~rbp", "push~rbx", "mov~r12,abase", "sub~rsp,0", "call~FOO", "mov~r13,rax", "mov~rdi,dirbase", "mov~rbp,r13", "sub~rbp,dir", "call~FOO", "add~rbp,rax", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 1, 3, 0, 0.0, ["jmp     short loc_A400"], ["jmp~FOO"]], [2, 0, 7, 1, 0, 3, 0, 1, 2, 1, 0.1111111111111111, ["add     r12, 1", "cmp     byte ptr [r12], 2Fh ; '/'", "jnz     short loc_A391"], ["add~r12,0", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 7, 0, 0, 4, 0, 1, 1, 2, 0.19444444444444442, ["movzx   eax, byte ptr [abase]", "cmp     al, 2Fh ; '/'", "mov     [rsp+48h+var_39], al", "jz      short loc_A400"], ["movzx~eax,<TAG>", "cmp~al,0", "mov~[rsp+0],al", "jz~FOO"]], [1, 0, 3, 0, 1, 8, 1, 2, 3, -1, 0.16666666666666666, ["mov     rdi, p_concat; dest", "mov     rdx, dirlen; n", "mov     rsi, dir; src", "call    _mempcpy", "test    base_in_result, base_in_result", "mov     byte ptr [rax], 2Fh ; '/'", "lea     rdi, [rax+rbx]; dest", "jz      short loc_A3DF"], ["mov~rdi,p_concat", "mov~rdx,dirlen", "mov~rsi,dir", "call~FOO", "test~base_in_result,base_in_result", "mov~<TAG>,0", "lea~rdi,<TAG>", "jz~FOO"]], [0, 0, 4, 1, 2, 9, 1, 3, 2, -1, 0.2777777777777778, ["mov     rdi, r12; s", "call    _strlen", "lea     rdi, [rbx+dirlen+1]", "mov     [rsp+48h+baselen], rax", "add     rdi, baselen_0; size", "call    _malloc", "test    rax, rax", "mov     dirbase, rax", "jz      short loc_A3EE"], ["mov~rdi,r12", "call~FOO", "lea~rdi,[rbx+0]", "mov~<TAG>,rax", "add~rdi,baselen_0", "call~FOO", "test~rax,rax", "mov~dirbase,rax", "jz~FOO"]], [1, 0, 1, 0, 1, 4, 0, 1, 4, -1, 0.027777777777777776, ["mov     rdx, [rsp+48h+baselen]; n", "mov     rsi, r12; src", "call    _mempcpy", "mov     byte ptr [rax], 0"], ["mov~rdx,<TAG>", "mov~rsi,r12", "call~FOO", "mov~<TAG>,0"]], [1, 0, 2, 1, 0, 6, 1, 0, 4, -1, 0.0, ["xor     eax, eax", "cmp     [rsp+48h+var_39], 2Fh ; '/'", "mov     rcx, p", "setz    al", "sub     rcx, rax", "mov     [base_in_result], rcx"], ["xor~eax,eax", "cmp~[rsp+0],0", "mov~rcx,p", "setz~al", "sub~rcx,rax", "mov~<TAG>,rcx"]], [1, 0, 0, 1, 0, 9, 0, 0, 3, -1, 0.0, ["add     rsp, 18h", "mov     rax, p_concat", "pop     rbx", "pop     dirlen", "pop     r12", "pop     p_concat", "pop     dir", "pop     base_in_result", "retn"], ["add~rsp,0", "mov~rax,p_concat", "pop~rbx", "pop~dirlen", "pop~r12", "pop~p_concat", "pop~dir", "pop~base_in_result", "retn"]]], "func_feature": [6, 4, 12, 0, 10, 14, 1, 67, 0.07778, 0, 7], "succs": [[4], [0, 4], [3], [2, 6], [3, 6], [8, 7], [9, 5], [9], [7], []], "fname": "mfile_name_concat", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 4, 1, 2, 0, 1, 0.0, ["sub     rsp, 8", "call    mfile_name_concat", "test    p, p", "jz      short loc_A423"], ["sub~rsp,0", "call~FOO", "test~p,p", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 1, 3, 0, 3, 2, 4, 7, 0.0, 0, 2], "succs": [[], [0, 2], []], "fname": "file_name_concat", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[1, 0, 0, 1, 0, 8, 0, 0, 0, 0, 0.0, ["add     rsp, 138h", "pop     rbx", "pop     rbp", "pop     r12", "pop     source_basename", "pop     dest_basename", "pop     source_baselen", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~source_basename", "pop~dest_basename", "pop~source_baselen", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 1, 1, 0.16363636363636364, ["mov     rcx, [rsp+168h+var_40]", "xor     rcx, fs:28h", "mov     eax, ebx", "jnz     loc_C842"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [1, 0, 9, 0, 3, 12, 1, 4, 2, 5, 0.10909090909090909, ["mov     rdi, source; file", "call    dir_name", "mov     rdi, dest; file", "mov     source, rax", "call    dir_name", "mov     rdx, rsp; stat_buf", "mov     rsi, source_dirname; filename", "mov     edi, 1; ver", "mov     dest, rax", "call    ___xstat", "test    eax, eax", "jnz     short loc_C820"], ["mov~rdi,source", "call~FOO", "mov~rdi,dest", "mov~source,rax", "call~FOO", "mov~rdx,rsp", "mov~rsi,source_dirname", "mov~edi,0", "mov~dest,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 10, 0, 1, 6, 1, 2, 1, 2, 0.06363636363636363, ["mov     rdx, source_baselen; n", "mov     rsi, dest_basename; s2", "mov     rdi, source_basename; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_C737"], ["mov~rdx,source_baselen", "mov~rsi,dest_basename", "mov~rdi,source_basename", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 3, 0, 2, 5, 0, 3, 5, 2, 0.16363636363636364, ["mov     rdi, source_dirname; ptr", "call    free", "mov     rdi, dest_dirname; ptr", "call    free", "jmp     loc_C737"], ["mov~rdi,source_dirname", "call~FOO", "mov~rdi,dest_dirname", "call~FOO", "jmp~FOO"]], [1, 0, 11, 1, 4, 25, 2, 5, 0, 2, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, source", "push    rbp", "push    rbx", "mov     rbp, dest", "xor     ebx, ebx", "sub     rsp, 138h", "mov     rax, fs:28h", "mov     [rsp+168h+var_40], rax", "xor     eax, eax", "call    last_component", "mov     rdi, dest; name", "mov     r13, rax", "call    last_component", "mov     rdi, source_basename; name", "mov     r14, rax", "call    base_len", "mov     rdi, dest_basename; name", "mov     r15, rax", "call    base_len", "cmp     source_baselen, dest_baselen", "jz      short loc_C768"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,source", "push~rbp", "push~rbx", "mov~rbp,dest", "xor~ebx,ebx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~rdi,dest", "mov~r13,rax", "call~FOO", "mov~rdi,source_basename", "mov~r14,rax", "call~FOO", "mov~rdi,dest_basename", "mov~r15,rax", "call~FOO", "cmp~source_baselen,dest_baselen", "jz~FOO"]], [0, 0, 5, 0, 0, 4, 1, 1, 4, 3, 0.21818181818181817, ["xor     ebx, ebx", "mov     rax, [rsp+168h+dest_dir_stats.st_ino]", "cmp     [rsp+168h+source_dir_stats.st_ino], rax", "jnz     short loc_C7DD"], ["xor~ebx,ebx", "mov~rax,[rsp+0]", "cmp~[rsp+0],rax", "jnz~FOO"]], [1, 0, 6, 0, 2, 8, 1, 3, 4, 4, 0.0, ["call    ___errno_location", "mov     esi, [rax]; errnum", "lea     rdx, format+4; format", "mov     rcx, dest_dirname", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     short loc_C7BD"], ["call~FOO", "mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,dest_dirname", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 7, 0, 1, 6, 1, 2, 3, 4, 0.19999999999999998, ["lea     rdx, [rsp+168h+dest_dir_stats]; stat_buf", "mov     rsi, dest_dirname; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jnz     short loc_C7F8"], ["lea~rdx,[rsp+0]", "mov~rsi,dest_dirname", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 4, 0, 0, 3, 0, 0, 5, 3, 0.0, ["mov     rax, [rsp+168h+dest_dir_stats.st_dev]", "cmp     [rsp+168h+source_dir_stats.st_dev], rax", "setz    bl"], ["mov~rax,[rsp+0]", "cmp~<TAG>,rax", "setz~bl"]], [1, 0, 8, 0, 2, 8, 1, 3, 3, 5, 0.0, ["call    ___errno_location", "mov     esi, [rax]; errnum", "lea     rdx, format+4; format", "mov     rcx, source_dirname", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_C7A4"], ["call~FOO", "mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,source_dirname", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]]], "func_feature": [16, 9, 25, 1, 12, 16, 4, 90, 0.07652, 2, 2], "succs": [[], [0, 4], [9, 11], [1, 2], [], [1], [1, 3], [10, 5], [7], [8, 7], [5], [9]], "fname": "same_name", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[1, 0, 0, 1, 0, 9, 0, 0, 0, 0, 0.0, ["add     rsp, 18h", "mov     rax, r14", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "mov~rax,r14", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 1, 0, 0, 2, 1, 1, 1, -1, 0.002380952380952381, ["xor     r14d, r14d", "jmp     short loc_C971"], ["xor~r14d,r14d", "jmp~FOO"]], [0, 0, 1, 0, 1, 5, 1, 2, 5, -1, 0.0, ["mov     rdi, name_space; ptr", "xor     r14d, r14d", "call    free", "mov     [r12], ebx", "jmp     short loc_C971"], ["mov~rdi,name_space", "xor~r14d,r14d", "call~FOO", "mov~<TAG>,ebx", "jmp~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 4, -1, 0.07857142857142858, ["test    ebx, ebx", "jnz     short loc_C993"], ["test~ebx,ebx", "jnz~FOO"]], [0, 0, 19, 0, 0, 3, 0, 0, 9, 2, 0.1, ["cmp     r8, allocated", "mov     rbx, allocated", "jnb     short loc_C8F0"], ["cmp~r8,allocated", "mov~rbx,allocated", "jnb~FOO"]], [0, 0, 19, 0, 0, 3, 0, 0, 8, 1, 0.1, ["lea     rcx, [allocated+allocated]", "cmp     rcx, allocated", "jb      loc_C9A4"], ["lea~rcx,<TAG>", "cmp~rcx,allocated", "jb~FOO"]], [0, 2, 19, 0, 2, 9, 1, 3, 1, 5, 0.04285714285714286, ["mov     rbp, dirp", "mov     edi, 200h; n", "xor     r13d, r13d", "call    xmalloc", "mov     ebx, 200h", "mov     r14, rax", "call    ___errno_location", "mov     r12, rax", "jmp     short loc_C894"], ["mov~rbp,dirp", "mov~edi,<STR>", "xor~r13d,r13d", "call~FOO", "mov~ebx,<STR>", "mov~r14,rax", "call~FOO", "mov~r12,rax", "jmp~FOO"]], [1, 0, 21, 1, 0, 9, 1, 1, 0, 6, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "test    dirp, dirp", "jz      loc_C98E"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "test~dirp,dirp", "jz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 4, -1, 0.0, ["mov     ebx, [r12]", "jmp     short loc_C96D"], ["mov~ebx,<TAG>", "jmp~FOO"]], [1, 0, 4, 0, 1, 6, 1, 2, 3, -1, 0.14047619047619048, ["mov     byte ptr [name_space+used], 0", "mov     rdi, dirp; dirp", "mov     ebx, [r12]", "call    _closedir", "test    eax, eax", "jnz     short loc_C988"], ["mov~<TAG>,0", "mov~rdi,dirp", "mov~ebx,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 19, 0, 0, 2, 1, 1, 4, 2, 0.18333333333333335, ["test    dl, dl", "jnz     short loc_C8CC"], ["test~dl,dl", "jnz~FOO"]], [1, 0, 19, 0, 0, 4, 0, 1, 3, 3, 0.22380952380952382, ["movzx   edx, byte ptr [dp+13h]", "lea     r15, [dp+13h]", "cmp     dl, 2Eh ; '.'", "jnz     short loc_C890"], ["movzx~edx,[yte ptr [dp+0]", "lea~r15,[dp+0]", "cmp~dl,0", "jnz~FOO"]], [0, 0, 19, 0, 0, 2, 0, 1, 5, 3, 0.002380952380952381, ["movzx   edx, byte ptr [dp+15h]", "jmp     loc_C890"], ["movzx~edx,[yte ptr [dp+0]", "jmp~FOO"]], [0, 0, 19, 0, 1, 8, 0, 1, 10, 6, 0.10476190476190478, ["mov     rdi, name_space; p", "mov     rsi, allocated; n", "mov     [rsp+48h+var_40], r8", "mov     [rsp+48h+n], entry_size", "call    xrealloc", "mov     r8, [rsp+48h+var_40]", "mov     rdx, [rsp+48h+n]; n", "mov     name_space, rax"], ["mov~rdi,name_space", "mov~rsi,allocated", "mov~[rsp+0],r8", "mov~<TAG>,entry_size", "call~FOO", "mov~r8,[rsp+0]", "mov~rdx,<TAG>", "mov~name_space,rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 19, 1, 1, 6, 0, 1, 5, 1, 0.17142857142857143, ["mov     rdi, entry; s", "call    _strlen", "lea     rdx, [rax+1]", "mov     r8, used", "add     r8, entry_size", "jb      loc_C9A4"], ["mov~rdi,entry", "call~FOO", "lea~rdx,[rax+0]", "mov~r8,used", "add~r8,entry_size", "jb~FOO"]], [1, 0, 19, 0, 1, 5, 1, 2, 2, 4, 0.39047619047619053, ["mov     dword ptr [r12], 0", "mov     rdi, dirp; dirp", "call    _readdir", "test    dp, dp", "jz      loc_C958"], ["mov~<TAG>,0", "mov~rdi,dirp", "call~FOO", "test~dp,dp", "jz~FOO"]], [0, 0, 19, 0, 0, 3, 1, 1, 5, 2, 0.03571428571428572, ["movzx   edx, byte ptr [dp+14h]", "test    dl, dl", "jz      short loc_C894"], ["movzx~edx,[yte ptr [dp+0]", "test~dl,dl", "jz~FOO"]], [0, 0, 19, 0, 1, 7, 0, 2, 7, 5, 0.19285714285714287, ["lea     rdi, [name_space+used]; dest", "mov     rsi, entry; src", "mov     [rsp+48h+n], r8", "call    _memcpy", "mov     r8, [rsp+48h+n]", "mov     r13, r8", "jmp     loc_C894"], ["lea~rdi,<TAG>", "mov~rsi,entry", "mov~<TAG>,r8", "call~FOO", "mov~r8,<TAG>", "mov~r13,r8", "jmp~FOO"]], [0, 0, 19, 0, 0, 2, 0, 1, 6, 3, 0.15476190476190477, ["cmp     allocated, r8", "ja      short loc_C925"], ["cmp~allocated,r8", "ja~FOO"]], [1, 0, 19, 0, 0, 2, 0, 1, 4, 3, 0.06190476190476191, ["cmp     byte ptr [dp+14h], 2Eh ; '.'", "jz      loc_C948"], ["cmp~[yte ptr [dp+0],0", "jz~FOO"]], [0, 0, 19, 0, 0, 1, 0, 0, 7, 2, 0.08571428571428572, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]]], "func_feature": [9, 9, 24, 1, 22, 32, 2, 93, 0.09416, 0, 3], "succs": [[], [0], [0], [0, 2], [13, 5], [4, 14], [16], [1, 6], [3], [8, 3], [16, 15], [10, 20], [10], [18], [], [19, 14], [9, 11], [16, 15], [16], [18, 21], [17, 12], [5]], "fname": "savedirstream", "n_num": 22}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[2, 0, 1, 2, 1, 5, 0, 2, 0, 0, 0.0, ["sub     rsp, 8", "call    _opendir", "add     rsp, 8", "mov     rdi, rax; dirp", "jmp     savedirstream"], ["sub~rsp,0", "call~FOO", "add~rsp,0", "mov~rdi,rax", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 0, 2, 0, 2, 1, 1, 5, 0.0, 0, 2], "succs": [[1], []], "fname": "savedir", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[2, 0, 1, 2, 1, 5, 0, 2, 0, 0, 0.0, ["sub     rsp, 8", "call    _fdopendir", "add     rsp, 8", "mov     rdi, rax; dirp", "jmp     savedirstream"], ["sub~rsp,0", "call~FOO", "add~rsp,0", "mov~rdi,rax", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 0, 2, 0, 2, 1, 0, 5, 0.0, 0, 2], "succs": [[1], []], "fname": "fdsavedir", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[5, 0, 0, 3, 2, 18, 0, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rbp, file", "sub     rsp, 8", "call    last_component", "cmp     byte ptr [had_slash], 0", "mov     rbx, had_slash", "cmovz   rbx, file", "mov     rdi, base; name", "call    base_len", "add     base, had_slash", "cmp     byte ptr [base_lim], 0", "mov     byte ptr [base_lim], 0", "setnz   al", "add     rsp, 8", "pop     base_lim", "pop     file", "retn"], ["push~rbp", "push~rbx", "mov~rbp,file", "sub~rsp,0", "call~FOO", "cmp~<TAG>,0", "mov~rbx,had_slash", "cmovz~rbx,file", "mov~rdi,base", "call~FOO", "add~base,had_slash", "cmp~<TAG>,0", "mov~<TAG>,0", "setnz~al", "add~rsp,0", "pop~base_lim", "pop~file", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 3, 18, 0.0, 0, 3], "succs": [[]], "fname": "strip_trailing_slashes", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 0, 1, 0, 5, 1, 0, 0, 0, 0.0, ["mov     rax, [p]", "xor     edx, edx", "div     table_size", "mov     rax, rdx", "retn"], ["mov~rax,<TAG>", "xor~edx,edx", "div~,table_size", "mov~rax,rdx", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 0, 1], "succs": [[]], "fname": "dev_info_hash", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["mov     rax, [b]", "cmp     [a], rax", "setz    al", "retn"], ["mov~rax,<TAG>", "cmp~<TAG>,rax", "setz~al", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 4, 0.0, 0, 0], "succs": [[]], "fname": "dev_info_compare", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[1, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.0042293233082706765, ["mov     ebx, 0FFFFFFFEh", "jmp     loc_CB36"], ["mov~ebx,0", "jmp~FOO"]], [3, 1, 25, 1, 0, 18, 2, 1, 13, 4, 0.17152255639097744, ["mov     rax, [rsp+138h+dst_a_s_0]", "mov     edx, 38E38E39h", "mov     [rsp+138h+timespec.tv_sec], rax", "movsxd  rax, dword ptr [rsp+138h+var_110]", "mov     [rsp+138h+timespec.tv_nsec], rax", "movzx   eax, [rsp+138h+var_111]", "or      rax, dst_m_s", "mov     [rsp+138h+timespec.tv_sec+10h], rax", "mov     eax, r10d", "mul     edx", "shr     edx, 1", "lea     eax, [rdx+dst_m_ns]", "cdqe", "mov     [rsp+138h+timespec.tv_nsec+10h], rax", "mov     eax, [dst_stat+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      short loc_CDFB"], ["mov~rax,[rsp+0]", "mov~edx,0", "mov~[rsp+0],rax", "movsxd~rax,[word ptr [rsp+0]", "mov~[rsp+0],rax", "movzx~eax,[rsp+0]", "or~rax,dst_m_s", "mov~[rsp+0],rax", "mov~eax,r10d", "mul~,edx", "shr~edx,0", "lea~eax,<TAG>", "cdqe~", "mov~[rsp+0],rax", "mov~eax,[dst_stat+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [0, 0, 22, 0, 1, 9, 1, 2, 16, 3, 0.010964912280701754, ["mov     rdi, [rsp+138h+dst_name]; file", "mov     [rsp+138h+timespec.tv_nsec+10h], rsi", "mov     rsi, rbx; timespec", "mov     [rsp+138h+timespec.tv_sec+10h], dst_m_s", "call    utimens", "test    ebp, ebp", "mov     r9, [rsp+138h+res]", "mov     r10d, dword ptr [rsp+138h+src_ns]", "jnz     loc_CDFB"], ["mov~rdi,[rsp+0]", "mov~[rsp+0],rsi", "mov~rsi,rbx", "mov~[rsp+0],dst_m_s", "call~FOO", "test~ebp,ebp", "mov~r9,[rsp+0]", "mov~r10d,[word ptr [rsp+0]", "jnz~FOO"]], [0, 0, 24, 0, 1, 8, 1, 2, 14, 3, 0.15977443609022557, ["lea     rbx, [rsp+138h+timespec]", "mov     c_0, [rsp+138h+dst_name]; file", "mov     dword ptr [rsp+138h+src_ns], r10d", "mov     [rsp+138h+res], r9", "mov     rsi, rbx; timespec", "call    utimens", "test    eax, eax", "jz      loc_CF2A"], ["lea~rbx,[rsp+0]", "mov~c_0,[rsp+0]", "mov~[word ptr [rsp+0],r10d", "mov~[rsp+0],r9", "mov~rsi,rbx", "call~FOO", "test~eax,eax", "jz~FOO"]], [6, 0, 40, 12, 0, 33, 2, 1, 11, 10, 0.017543859649122806, ["mov     eax, esi", "mov     ecx, esi", "imul    r11d", "mov     eax, esi", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     ecx, eax", "mov     eax, edi", "imul    r11d", "mov     eax, edi", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "mov     edx, edi", "add     eax, eax", "sub     edx, eax", "mov     eax, r8d", "or      ecx, edx", "imul    r11d", "mov     eax, r8d", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "mov     edx, r8d", "add     eax, eax", "sub     edx, eax", "or      ecx, edx", "jnz     loc_CEB0"], ["mov~eax,esi", "mov~ecx,esi", "imul~,r11d", "mov~eax,esi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~ecx,eax", "mov~eax,edi", "imul~,r11d", "mov~eax,edi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "mov~edx,edi", "add~eax,eax", "sub~edx,eax", "mov~eax,r8d", "or~ecx,edx", "imul~,r11d", "mov~eax,r8d", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "mov~edx,r8d", "add~eax,eax", "sub~edx,eax", "or~ecx,edx", "jnz~FOO"]], [6, 0, 40, 7, 0, 23, 0, 1, 10, 10, 0.03884711779448621, ["mov     eax, esi", "sar     esi, 1Fh", "lea     r12d, [res_0+res_0*4]", "imul    r11d", "mov     eax, edi", "sar     edi, 1Fh", "add     r12d, r12d", "mov     r10d, r12d", "sar     edx, 2", "sub     edx, esi", "mov     esi, edx", "imul    r11d", "mov     eax, r8d", "sar     r8d, 1Fh", "sar     edx, 2", "sub     edx, edi", "mov     edi, edx", "imul    r11d", "sar     edx, 2", "sub     edx, r8d", "cmp     dword ptr [rsp+138h+res], r12d", "mov     r8d, edx", "jle     loc_CEB0"], ["mov~eax,esi", "sar~esi,0", "lea~r12d,<TAG>", "imul~,r11d", "mov~eax,edi", "sar~edi,0", "add~r12d,r12d", "mov~r10d,r12d", "sar~edx,0", "sub~edx,esi", "mov~esi,edx", "imul~,r11d", "mov~eax,r8d", "sar~r8d,0", "sar~edx,0", "sub~edx,edi", "mov~edi,edx", "imul~,r11d", "sar~edx,0", "sub~edx,r8d", "cmp~[word ptr [rsp+0],r12d", "mov~r8d,edx", "jle~FOO"]], [1, 0, 29, 0, 0, 3, 0, 1, 11, 6, 0.18217418546365913, ["cmp     dst_m_s, rcx", "mov     ebx, 0FFFFFFFFh", "jl      loc_CB36"], ["cmp~dst_m_s,rcx", "mov~ebx,0", "jl~FOO"]], [4, 0, 31, 3, 0, 11, 0, 1, 10, 7, 0.17982456140350878, ["mov     a_0, [rsp+138h+src_ns]", "mov     edx, 10624DD3h", "mov     eax, esi", "imul    edx", "mov     eax, esi", "sar     eax, 1Fh", "sar     edx, 6", "sub     edx, eax", "imul    r12d, edx, 3E8h", "cmp     dst_m_s, src_s", "jnz     short loc_CD7C"], ["mov~a_0,[rsp+0]", "mov~edx,0", "mov~eax,esi", "imul~,edx", "mov~eax,esi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "imul~r12d,edx,0", "cmp~dst_m_s,src_s", "jnz~FOO"]], [0, 0, 30, 0, 0, 2, 0, 1, 11, 7, 0.00046992481203007516, ["cmp     r12d, r14d", "jle     loc_CB36"], ["cmp~r12d,r14d", "jle~FOO"]], [1, 0, 10, 0, 0, 8, 2, 1, 18, -1, 0.07957393483709273, ["xor     eax, eax", "cmp     r10d, 77359400h", "mov     dword ptr [rsp+138h+res], r10d", "setz    al", "not     eax", "cdqe", "and     src_s, rax", "jmp     loc_CE10"], ["xor~eax,eax", "cmp~r10d,0", "mov~[word ptr [rsp+0],r10d", "setz~al", "not~eax", "cdqe~", "and~src_s,rax", "jmp~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 17, -1, 0.09649122807017543, ["cmp     r10d, 2710h", "jz      short loc_CFED"], ["cmp~r10d,0", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 21, -1, 0.0017230576441102756, ["mov     r10d, 77359400h", "jmp     short loc_CFED"], ["mov~r10d,0", "jmp~FOO"]], [0, 0, 11, 0, 0, 2, 0, 1, 20, -1, 0.006892230576441102, ["mov     r10d, esi", "jmp     short loc_CFED"], ["mov~r10d,esi", "jmp~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 17, 0, 0.03258145363408521, ["mov     r10d, 3E8h", "jmp     short loc_CFED"], ["mov~r10d,0", "jmp~FOO"]], [0, 0, 16, 1, 0, 4, 0, 1, 21, -1, 0.002349624060150376, ["lea     esi, [res_0+res_0*4]", "add     esi, esi", "cmp     esi, r10d", "jnz     short loc_CFB6"], ["lea~esi,<TAG>", "add~esi,esi", "cmp~esi,r10d", "jnz~FOO"]], [1, 0, 10, 0, 0, 1, 0, 0, 7, -1, 0.005012531328320802, ["mov     dword ptr [rsp+138h+res], 3E8h"], ["mov~[word ptr [rsp+0],0"]], [10, 0, 46, 12, 0, 35, 2, 1, 6, 11, 0.10682957393483708, ["mov     res_0, [dst_stat+50h]", "mov     ecx, 68DB8BADh", "mov     rsi, [dst_stat+70h]", "mov     eax, edi", "mov     [rsp+138h+var_110], rdi", "imul    ecx", "mov     eax, edi", "sar     eax, 1Fh", "sar     edx, 0Ch", "sub     edx, eax", "imul    eax, edx, 2710h", "mov     r11d, edx", "sub     edi, eax", "mov     eax, esi", "imul    ecx", "mov     eax, esi", "sar     eax, 1Fh", "sar     edx, 0Ch", "sub     edx, eax", "imul    eax, edx, 2710h", "mov     r10d, edx", "sub     esi, eax", "mov     eax, r14d", "imul    ecx", "mov     eax, r14d", "or      esi, edi", "sar     eax, 1Fh", "mov     edi, r14d", "mov     ecx, edx", "sar     ecx, 0Ch", "sub     ecx, eax", "imul    eax, ecx, 2710h", "sub     edi, eax", "or      esi, edi", "jnz     loc_CE08"], ["mov~res_0,[dst_stat+0]", "mov~ecx,0", "mov~rsi,[dst_stat+0]", "mov~eax,edi", "mov~[rsp+0],rdi", "imul~,ecx", "mov~eax,edi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "imul~eax,edx,0", "mov~r11d,edx", "sub~edi,eax", "mov~eax,esi", "imul~,ecx", "mov~eax,esi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "imul~eax,edx,0", "mov~r10d,edx", "sub~esi,eax", "mov~eax,r14d", "imul~,ecx", "mov~eax,r14d", "or~esi,edi", "sar~eax,0", "mov~edi,r14d", "mov~ecx,edx", "sar~ecx,0", "sub~ecx,eax", "imul~eax,ecx,0", "sub~edi,eax", "or~esi,edi", "jnz~FOO"]], [1, 0, 9, 0, 0, 6, 2, 0, 6, -1, 0.020363408521303257, ["xor     eax, eax", "cmp     edi, 77359400h", "setz    al", "not     eax", "cdqe", "and     src_s, rax"], ["xor~eax,eax", "cmp~edi,0", "setz~al", "not~eax", "cdqe~", "and~src_s,rax"]], [0, 0, 48, 0, 0, 6, 1, 1, 5, 12, 0.11779448621553884, ["movzx   eax, byte ptr [r9+0Ch]", "mov     edi, [dst_res_0+8]", "mov     dword ptr [rsp+138h+res], edi", "test    al, al", "mov     [rsp+138h+var_111], al", "jz      short loc_CB68"], ["movzx~eax,[yte ptr [r9+0]", "mov~edi,[dst_res_0+0]", "mov~[word ptr [rsp+0],edi", "test~al,al", "mov~[rsp+0],al", "jz~FOO"]], [0, 0, 28, 0, 0, 1, 0, 1, 12, 5, 0.18170426065162906, ["jz      loc_CF10"], ["jz~FOO"]], [1, 0, 49, 0, 0, 2, 0, 1, 5, 13, 0.0, ["mov     cs:new_dst_res_4900, 0", "jmp     loc_CAE5"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 50, 0, 0, 2, 0, 1, 4, 13, 0.09147869674185463, ["cmp     cs:new_dst_res_4900, dst_res_0", "jz      loc_CE80"], ["cmp~<TAG>,dst_res_0", "jz~FOO"]], [1, 0, 40, 1, 0, 2, 0, 1, 12, 11, 0.014411027568922305, ["sub     r9d, 1", "jnz     loc_CC6E"], ["sub~r9d,0", "jnz~FOO"]], [1, 0, 16, 1, 0, 2, 0, 1, 20, -1, 0.023496240601503758, ["sub     r8d, 1", "jz      short loc_D04D"], ["sub~r8d,0", "jz~FOO"]], [0, 0, 20, 0, 0, 3, 0, 1, 17, 2, 0.005325814536340852, ["mov     rax, [rsp+138h+dst_status.st_mtim.tv_sec]", "mov     rcx, [rsp+138h+dst_status.st_mtim.tv_nsec]", "jmp     loc_CF78"], ["mov~rax,[rsp+0]", "mov~rcx,[rsp+0]", "jmp~FOO"]], [0, 0, 8, 2, 0, 4, 0, 0, 7, -1, 0.08865914786967419, ["mov     eax, r12d", "cdq", "idiv    dword ptr [rsp+138h+res]", "sub     r12d, edx"], ["mov~eax,r12d", "cdq~,", "idiv~,[word ptr [rsp+0]", "sub~r12d,edx"]], [1, 0, 9, 0, 0, 4, 0, 1, 8, -1, 0.07706766917293233, ["mov     eax, dword ptr [rsp+138h+res]", "mov     byte ptr [r9+0Ch], 1", "mov     [r9+8], eax", "jmp     loc_CB0C"], ["mov~eax,[word ptr [rsp+0]", "mov~[yte ptr [r9+0],0", "mov~[r9+0],eax", "jmp~FOO"]], [2, 0, 57, 1, 0, 20, 2, 1, 0, 17, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     ebx, ecx", "sub     rsp, 108h", "mov     r15, [dst_stat+58h]", "mov     r13, [src_stat+58h]", "mov     rax, fs:28h", "mov     [rsp+138h+var_40], rax", "xor     eax, eax", "mov     rax, [src_stat+60h]", "and     ebx, 1", "mov     [rsp+138h+dst_name], dst_name_0", "mov     r14, [dst_stat+60h]", "mov     [rsp+138h+src_ns], rax", "mov     r12d, eax", "jz      short loc_CB17"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~ebx,ecx", "sub~rsp,0", "mov~r15,[dst_stat+0]", "mov~r13,[src_stat+0]", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rax,[src_stat+0]", "and~ebx,0", "mov~[rsp+0],dst_name_0", "mov~r14,[dst_stat+0]", "mov~[rsp+0],rax", "mov~r12d,eax", "jz~FOO"]], [4, 0, 19, 4, 0, 12, 2, 1, 16, 1, 0.1444235588972431, ["and     eax, 1", "mov     esi, 0Ah", "imul    eax, 3B9ACA00h", "add     eax, ecx", "mov     ecx, 3E8h", "cdq", "idiv    ecx", "cdq", "mov     ecx, eax", "idiv    esi", "test    edx, edx", "jz      loc_D05A"], ["and~eax,0", "mov~esi,0", "imul~eax,,0", "add~eax,ecx", "mov~ecx,0", "cdq~,", "idiv~,ecx", "cdq~,", "mov~ecx,eax", "idiv~,esi", "test~edx,edx", "jz~FOO"]], [1, 0, 23, 0, 1, 18, 4, 2, 15, 2, 0.15664160401002505, ["mov     rsi, [rsp+138h+dst_name]; filename", "lea     rdx, [rsp+138h+dst_status]; stat_buf", "mov     edi, 1; ver", "call    ___xstat", "mov     ebp, eax", "mov     rax, [rsp+138h+dst_status.st_mtim.tv_sec]", "mov     rcx, [rsp+138h+dst_status.st_mtim.tv_nsec]", "movsxd  rsi, r14d", "mov     r9, [rsp+138h+res]", "mov     r10d, dword ptr [rsp+138h+src_ns]", "mov     rdi, rsi", "mov     rdx, rax", "xor     rdi, rcx", "xor     rdx, dst_m_s", "or      rdx, rdi", "movsxd  rdi, ebp", "or      rdx, rdi", "jnz     loc_D00A"], ["mov~rsi,[rsp+0]", "lea~rdx,[rsp+0]", "mov~edi,0", "call~FOO", "mov~ebp,eax", "mov~rax,[rsp+0]", "mov~rcx,[rsp+0]", "movsxd~rsi,r14d", "mov~r9,[rsp+0]", "mov~r10d,[word ptr [rsp+0]", "mov~rdi,rsi", "mov~rdx,rax", "xor~rdi,rcx", "xor~rdx,dst_m_s", "or~rdx,rdi", "movsxd~rdi,ebp", "or~rdx,rdi", "jnz~FOO"]], [1, 0, 33, 0, 0, 9, 1, 1, 11, 9, 0.03446115288220551, ["cmp     r12d, 77359400h", "mov     r9, [rsp+138h+dst_res]", "setz    [rsp+138h+var_111]", "movzx   ecx, [rsp+138h+var_111]", "mov     [r9+8], r12d", "not     ecx", "movsxd  rcx, ecx", "and     rcx, src_s", "jmp     loc_CD46"], ["cmp~r12d,0", "mov~r9,[rsp+0]", "setz~[rsp+0]", "movzx~ecx,[rsp+0]", "mov~[r9+0],r12d", "not~ecx", "movsxd~rcx,ecx", "and~rcx,src_s", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 1, -1, 0.07894736842105263, ["cmp     src_s, dst_s", "jg      loc_CEE0"], ["cmp~src_s,dst_s", "jg~FOO"]], [0, 0, 27, 2, 0, 7, 0, 1, 13, 5, 0.008928571428571428, ["mov     eax, r12d", "cdq", "idiv    r10d", "mov     eax, r12d", "sub     eax, edx", "cmp     eax, r14d", "jle     loc_CD90"], ["mov~eax,r12d", "cdq~,", "idiv~,r10d", "mov~eax,r12d", "sub~eax,edx", "cmp~eax,r14d", "jle~FOO"]], [2, 0, 33, 0, 0, 4, 0, 1, 14, 9, 0.008615288220551378, ["mov     dword ptr [r9+8], 3B9ACA00h", "mov     rcx, src_s", "mov     r10d, 3B9ACA00h", "jmp     loc_CD46"], ["mov~[word ptr [r9+0],0", "mov~rcx,src_s", "mov~r10d,0", "jmp~FOO"]], [1, 0, 35, 0, 0, 6, 3, 1, 13, 10, 0.016917293233082706, ["mov     rax, [rsp+138h+dst_a_s_0]", "mov     r9, [rsp+138h+dst_res]", "or      rax, dst_m_s", "or      rax, [dst_stat+68h]", "test    al, 1", "jnz     loc_CE90"], ["mov~rax,[rsp+0]", "mov~r9,[rsp+0]", "or~rax,dst_m_s", "or~rax,[dst_stat+0]", "test~al,0", "jnz~FOO"]], [1, 0, 56, 0, 0, 3, 0, 1, 1, 16, 0.015037593984962405, ["cmp     cs:ht_4899, 0", "mov     rbp, dst_stat", "jz      loc_CE28"], ["cmp~<TAG>,0", "mov~rbp,dst_stat", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 2, -1, 0.04057017543859649, ["mov     ebx, 1", "jl      short loc_CB36"], ["mov~ebx,0", "jl~FOO"]], [0, 0, 5, 0, 0, 2, 0, 1, 3, -1, 0.015664160401002505, ["cmp     r12d, r14d", "jg      loc_CEE0"], ["cmp~r12d,r14d", "jg~FOO"]], [0, 0, 40, 0, 0, 2, 0, 0, 9, 11, 0.02631578947368421, ["mov     [rsp+138h+dst_res], dst_res_0", "mov     r9d, edx"], ["mov~[rsp+0],dst_res_0", "mov~r9d,edx"]], [3, 0, 16, 0, 0, 3, 0, 0, 18, -1, 0.05482456140350877, ["mov     r8d, 6", "mov     esi, 2710h", "mov     edi, 66666667h"], ["mov~r8d,0", "mov~esi,0", "mov~edi,0"]], [0, 0, 54, 0, 0, 3, 1, 1, 2, 15, 0.04824561403508772, ["mov     rsi, cs:new_dst_res_4900; entry", "test    rsi, rsi", "jz      loc_CE58"], ["mov~rsi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [1, 0, 55, 0, 1, 8, 1, 2, 2, 16, 0.0, ["mov     r8, cs:data_freer; data_freer", "lea     options, dev_info_compare; comparator", "lea     src_stat, dev_info_hash; hasher", "xor     esi, esi; tuning", "mov     edi, 10h; candidate", "call    hash_initialize", "mov     cs:ht_4899, rax", "jmp     loc_CAA9"], ["mov~r8,<TAG>", "lea~options,<TAG>", "lea~src_stat,<TAG>", "xor~esi,esi", "mov~edi,0", "call~FOO", "mov~<TAG>,rax", "jmp~FOO"]], [0, 0, 32, 0, 0, 2, 0, 1, 9, 8, 0.19266917293233082, ["cmp     dst_m_s, src_s", "jg      loc_CB36"], ["cmp~dst_m_s,src_s", "jg~FOO"]], [2, 0, 33, 0, 0, 4, 0, 1, 8, 9, 0.08583959899749373, ["mov     dword ptr [dst_res_0+8], 2710h", "mov     m, src_s", "mov     r10d, 2710h", "jmp     loc_CD46"], ["mov~[word ptr [dst_res_0+0],0", "mov~m,src_s", "mov~r10d,0", "jmp~FOO"]], [1, 0, 33, 0, 0, 3, 0, 1, 9, 9, 0.010338345864661654, ["mov     dword ptr [dst_res_0+8], 2710h", "mov     rcx, src_s", "jmp     loc_CD46"], ["mov~[word ptr [dst_res_0+0],0", "mov~rcx,src_s", "jmp~FOO"]], [4, 0, 33, 0, 0, 5, 1, 0, 14, 9, 0.008615288220551378, ["mov     rcx, src_s", "mov     dword ptr [r9+8], 77359400h", "mov     [rsp+138h+var_111], 1", "and     rcx, 0FFFFFFFFFFFFFFFEh", "mov     r10d, 77359400h"], ["mov~rcx,src_s", "mov~[word ptr [r9+0],0", "mov~[rsp+0],0", "and~rcx,0", "mov~r10d,0"]], [10, 0, 42, 12, 0, 36, 2, 1, 8, 10, 0.03101503759398496, ["mov     r12d, 66666667h", "mov     eax, r11d", "imul    r12d", "mov     eax, r11d", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     r11d, eax", "mov     eax, r10d", "imul    r12d", "mov     eax, r10d", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     r10d, eax", "mov     eax, ecx", "imul    r12d", "mov     eax, ecx", "or      r11d, r10d", "sar     eax, 1Fh", "mov     dword ptr [rsp+138h+dst_res], r11d", "mov     r10d, 2710h", "mov     r11d, 66666667h", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "mov     edx, 5", "add     eax, eax", "sub     ecx, eax", "mov     eax, dword ptr [rsp+138h+dst_res]", "or      eax, ecx", "jnz     loc_CF00"], ["mov~r12d,0", "mov~eax,r11d", "imul~,r12d", "mov~eax,r11d", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~r11d,eax", "mov~eax,r10d", "imul~,r12d", "mov~eax,r10d", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~r10d,eax", "mov~eax,ecx", "imul~,r12d", "mov~eax,ecx", "or~r11d,r10d", "sar~eax,0", "mov~[word ptr [rsp+0],r11d", "mov~r10d,0", "mov~r11d,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "mov~edx,0", "add~eax,eax", "sub~ecx,eax", "mov~eax,[word ptr [rsp+0]", "or~eax,ecx", "jnz~FOO"]], [1, 0, 44, 0, 0, 7, 0, 1, 7, 10, 0.1099624060150376, ["cmp     dword ptr [rsp+138h+res], 2710h", "mov     rax, [dst_stat+48h]", "mov     esi, r11d", "mov     edi, r10d", "mov     r8d, ecx", "mov     [rsp+138h+dst_a_s_0], rax", "jle     loc_CEEA"], ["cmp~[word ptr [rsp+0],0", "mov~rax,[dst_stat+0]", "mov~esi,r11d", "mov~edi,r10d", "mov~r8d,ecx", "mov~[rsp+0],rax", "jle~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 3, -1, 0.03383458646616541, ["mov     eax, ebx", "mov     rbx, [rsp+138h+var_40]", "xor     rbx, fs:28h", "jnz     loc_D048"], ["mov~eax,ebx", "mov~rbx,[rsp+0]", "xor~rbx,<TAG>", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, -1, 0.010964912280701754, ["mov     ebx, 0FFFFFFFFh", "jmp     loc_CB36"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 14, -1, 0.0014097744360902255, ["jmp     loc_CB36"], ["jmp~FOO"]], [0, 0, 3, 0, 0, 2, 0, 0, 4, -1, 0.00046992481203007516, ["setl    bl", "movzx   ebx, bl"], ["setl~bl", "movzx~ebx,bl"]], [0, 0, 52, 0, 1, 7, 1, 2, 3, 14, 0.07894736842105263, ["mov     rax, [dst_stat+0]", "mov     rdi, cs:ht_4899; table", "mov     [rsi], rax", "call    hash_insert", "test    rax, rax", "mov     r9, rax", "jz      loc_CEA6"], ["mov~rax,[dst_stat+0]", "mov~rdi,<TAG>", "mov~<TAG>,rax", "call~FOO", "test~rax,rax", "mov~r9,rax", "jz~FOO"]], [3, 0, 53, 0, 1, 7, 0, 2, 3, 15, 0.0, ["mov     edi, 10h; n", "call    xmalloc", "mov     rsi, rax", "mov     cs:new_dst_res_4900, rax", "mov     dword ptr [rax+8], 77359400h", "mov     byte ptr [rax+0Ch], 0", "jmp     loc_CAB9"], ["mov~edi,0", "call~FOO", "mov~rsi,rax", "mov~<TAG>,rax", "mov~[word ptr [rax+0],0", "mov~[yte ptr [rax+0],0", "jmp~FOO"]], [4, 0, 16, 5, 0, 17, 0, 1, 19, -1, 0.04981203007518797, ["mov     eax, ecx", "sar     ecx, 1Fh", "imul    edi", "sar     edx, 2", "sub     edx, ecx", "mov     eax, edx", "mov     ecx, edx", "imul    edi", "mov     eax, edx", "mov     edx, ecx", "sar     eax, 2", "sar     edx, 1Fh", "sub     eax, edx", "lea     eax, [rax+rax*4]", "add     eax, eax", "cmp     ecx, eax", "jz      short loc_D055"], ["mov~eax,ecx", "sar~ecx,0", "imul~,edi", "sar~edx,0", "sub~edx,ecx", "mov~eax,edx", "mov~ecx,edx", "imul~,edi", "mov~eax,edx", "mov~edx,ecx", "sar~eax,0", "sar~edx,0", "sub~eax,edx", "lea~eax,<TAG>", "add~eax,eax", "cmp~ecx,eax", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 108h", "pop     rbx", "pop     rbp", "pop     r12", "pop     src_s", "pop     dst_ns", "pop     dst_s", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~src_s", "pop~dst_ns", "pop~dst_s", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [8, 32, 56, 2, 58, 87, 1, 405, 0.05139, 6, 65], "succs": [[49], [0, 3], [0, 24], [0, 29], [30, 22], [4, 30], [49, 19], [8, 6], [49, 6], [26], [9, 39], [9], [9], [9], [9, 55], [26], [47, 15], [25], [16, 17], [32, 1], [18], [18, 20], [34, 5], [11, 14], [28], [31], [25], [35, 31], [10, 13], [2, 28], [42], [50, 36], [1, 51], [42], [33, 45], [40, 41], [49, 37], [50, 52], [5], [55], [53, 54], [40], [49, 7], [42], [42], [42], [44, 38], [43, 46], [], [48, 56], [49], [49], [49], [57, 21], [53], [12, 23], [], []], "fname": "utimecmp", "n_num": 58}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 3, 1, 1, 1, 0, 0.08333333333333333, ["xor     ecx, ecx; flags", "mov     edi, 0FFFFFF9Ch; fd", "jmp     _utimensat"], ["xor~ecx,ecx", "mov~edi,0", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 0, 1, 0.0, ["test    edi, edi", "js      short loc_D080"], ["test~edi,edi", "js~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []], [0, 0, 1, 0, 0, 2, 0, 1, 1, -1, 0.08333333333333333, ["mov     file, timespec; path", "jmp     _futimens"], ["mov~file,timespec", "jmp~FOO"]]], "func_feature": [0, 2, 3, 0, 5, 4, 1, 7, 0.03333, 0, 0], "succs": [[], [0], [1, 4], [], [3]], "fname": "gl_futimens", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["mov     rdx, timespec; times", "xor     ecx, ecx; flags", "mov     timespec, file; path", "mov     edi, 0FFFFFF9Ch; fd", "jmp     _utimensat"], ["mov~rdx,timespec", "xor~ecx,ecx", "mov~timespec,file", "mov~edi,0", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 4, 5, 0.0, 0, 0], "succs": [[], [0]], "fname": "utimens", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0.0, ["push    cs:qword_219D00", "jmp     cs:qword_219D08"], ["push~<TAG>", "jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 86, 2, 0.0, 2, 0], "succs": [[]], "fname": "sub_2BC0", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:localtime_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "localtime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strverscmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "strverscmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strncpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strncpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswcntrl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswcntrl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fnmatch_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fnmatch", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:signal_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "signal", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:tcgetpgrp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "tcgetpgrp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:wcwidth_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "wcwidth", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strcoll_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strcoll", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mktime_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mktime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fwrite_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 7, 1, 0.0, 1, 0], "succs": [[]], "fname": "fwrite_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strftime_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strftime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fflush_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fflush_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 0, 1, 0, 5, 1, 0, 0, 0, 0.0, ["mov     rax, [p]", "xor     edx, edx", "div     table_size", "mov     rax, rdx", "retn"], ["mov~rax,<TAG>", "xor~edx,edx", "div~,table_size", "mov~rax,rdx", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 0, 1], "succs": [[]], "fname": "dev_ino_hash", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 2, 0, 0, 4, 1, 1, 0, 0, 0.0, ["xor     eax, eax", "mov     rdx, [b]", "cmp     [a], rdx", "jz      short loc_5140"], ["xor~eax,eax", "mov~rdx,<TAG>", "cmp~<TAG>,rdx", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["mov     rax, [b+8]", "cmp     [a+8], rax", "setz    al", "retn"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "setz~al", "retn"]]], "func_feature": [0, 1, 1, 0, 3, 2, 0, 9, 0.0, 0, 0], "succs": [[1, 2], [], []], "fname": "dev_ino_compare", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     eax, cs:interrupt_signal", "test    eax, eax", "jnz     short locret_5160"], ["mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0.0, ["mov     cs:interrupt_signal, edi"], ["mov~<TAG>,edi"]]], "func_feature": [0, 1, 1, 0, 3, 3, 0, 5, 0.0, 1, 0], "succs": [[1, 2], [], [1]], "fname": "sighandler", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[12, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0.0, ["pop     rbx", "mov     cs:cwd_n_used, 0", "mov     cs:any_has_acl, 0", "pop     rbp", "mov     cs:inode_number_width, 0", "mov     cs:block_size_width, 0", "mov     cs:nlink_width, 0", "mov     cs:owner_width, 0", "mov     cs:group_width, 0", "mov     cs:author_width, 0", "mov     cs:scontext_width, 0", "mov     cs:major_device_number_width, 0", "mov     cs:minor_device_number_width, 0", "mov     cs:file_size_width, 0", "pop     r12", "retn"], ["pop~rbx", "mov~<TAG>,0", "mov~<TAG>,0", "pop~rbp", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "pop~r12", "retn"]], [0, 0, 3, 0, 0, 6, 1, 1, 0, 0, 0.0, ["mov     rax, cs:cwd_n_used", "push    r12", "push    rbp", "push    rbx", "test    rax, rax", "jz      short loc_51AE"], ["mov~rax,<TAG>", "push~r12", "push~rbp", "push~rbx", "test~rax,rax", "jz~FOO"]], [1, 0, 2, 1, 2, 8, 0, 3, 2, 0, 0.16666666666666666, ["mov     rbp, [rbx]", "add     rbx, 8", "mov     rdi, [f+0]; ptr", "call    free", "mov     rdi, [f+8]; ptr", "call    free", "cmp     rbx, r12", "jnz     short loc_5190"], ["mov~rbp,<TAG>", "add~rbx,0", "mov~rdi,[f+0]", "call~FOO", "mov~rdi,[f+0]", "call~FOO", "cmp~rbx,r12", "jnz~FOO"]], [0, 0, 2, 0, 0, 3, 0, 0, 1, 0, 0.16666666666666666, ["mov     rbx, cs:sorted_file", "lea     r12, [rbx+rax*8]", "nop     dword ptr [rax+rax+00h]"], ["mov~rbx,<TAG>", "lea~r12,<TAG>", "nop~[word ptr [rax+0]"]]], "func_feature": [2, 1, 4, 0, 4, 5, 2, 33, 0.08333, 13, 1], "succs": [[], [0, 3], [0, 2], [2]], "fname": "clear_files", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     free"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 1, 0.0, 0, 0], "succs": [[1], []], "fname": "dev_ino_free", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 44, 0, 0, 1, 0, 1, 0, 0, 0.6506342494714588, ["jle     loc_5358"], ["jle~FOO"]], [3, 0, 44, 2, 0, 6, 0, 1, 6, 9, 0.3580866807610994, ["mov     [r9], cl; jumptable 0000000000005301 default case", "movzx   ecx, byte ptr [r8]", "add     count, 1", "add     r9, 1", "cmp     cl, 3Dh ; '='", "jnz     short loc_5280"], ["mov~<TAG>,cl", "movzx~ecx,<TAG>", "add~count,0", "add~r9,0", "cmp~cl,0", "jnz~FOO"]], [0, 0, 44, 0, 0, 1, 0, 0, 2, 9, 0.32478858350951373, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 44, 1, 0, 4, 0, 1, 6, 5, 0.44714587737843553, ["movzx   r13d, cl", "movsxd  r13, dword ptr [r11+r13*4]", "add     r13, r11", "jmp     r13; switch jump"], ["movzx~r13d,cl", "movsxd~r13,<TAG>", "add~r13,r11", "jmp~r13"]], [2, 0, 44, 1, 0, 4, 0, 1, 5, 6, 0.4704016913319239, ["movzx   ecx, byte ptr [r8+1]", "add     r8, 2", "cmp     cl, 78h ; 'x'; switch 121 cases", "ja      short loc_52AE; jumptable 0000000000005301 default case"], ["movzx~ecx,[yte ptr [r8+0]", "add~r8,0", "cmp~cl,0", "ja~FOO"]], [2, 0, 44, 2, 0, 4, 0, 1, 9, 11, 0.17019027484143764, ["mov     [r9], r14b", "add     count, 1", "add     r9, 1", "jmp     loc_526F"], ["mov~<TAG>,r14b", "add~count,0", "add~r9,0", "jmp~FOO"]], [0, 1, 44, 0, 0, 4, 0, 1, 8, 3, 0.21088794926004228, ["movzx   r13d, byte ptr [r8]", "lea     ecx, [r13-30h]", "cmp     cl, 36h ; '6'", "ja      short loc_53F8"], ["movzx~r13d,<TAG>", "lea~ecx,[r13-30h]+0]", "cmp~cl,<STR>", "ja~FOO"]], [1, 0, 44, 0, 0, 2, 1, 1, 11, 4, 0.06871035940803383, ["test    r15d, 3FFh", "jz      short loc_53F8"], ["test~r15d,0", "jz~FOO"]], [0, 0, 44, 0, 0, 1, 0, 0, 13, 12, 0.019027484143763214, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 44, 0, 0, 2, 0, 1, 7, 10, 0.0, ["mov     ecx, 0Dh; jumptable 0000000000005301 case 114", "jmp     loc_52AE; jumptable 0000000000005301 default case"], ["mov~ecx,0", "jmp~FOO"]], [1, 0, 44, 0, 0, 2, 0, 1, 4, 7, 0.5895877378435518, ["cmp     cl, 5Ch ; '\\'", "jz      short loc_52E8"], ["cmp~cl,0", "jz~FOO"]], [1, 0, 44, 0, 0, 2, 0, 1, 7, 10, 0.0, ["mov     ecx, 1Bh; jumptable 0000000000005301 case 101", "jmp     loc_52AE; jumptable 0000000000005301 default case"], ["mov~ecx,0", "jmp~FOO"]], [1, 0, 44, 0, 0, 2, 0, 1, 5, 12, 0.10068710359408034, ["cmp     cl, 5Eh ; '^'", "jnz     short loc_52D0"], ["cmp~cl,0", "jnz~FOO"]], [0, 1, 44, 0, 0, 2, 0, 1, 7, 10, 0.0, ["mov     ecx, 20h ; ' '; jumptable 0000000000005301 case 95", "jmp     loc_52AE; jumptable 0000000000005301 default case"], ["mov~ecx,<STR>", "jmp~FOO"]], [2, 0, 44, 1, 0, 5, 0, 1, 7, 10, 0.039640591966173366, ["movzx   r13d, byte ptr [r8]; jumptable 0000000000005301 cases 48-55", "sub     ecx, 30h ; '0'", "lea     r14d, [r13-30h]", "cmp     r14b, 7", "ja      short loc_52AE; jumptable 0000000000005301 default case"], ["movzx~r13d,<TAG>", "sub~ecx,0", "lea~r14d,[r13-30h]+0]", "cmp~r14b,0", "ja~FOO"]], [0, 0, 1, 0, 0, 3, 1, 1, 7, -1, 0.0015856236786469346, ["mov     r14, r8; jumptable 0000000000005301 case 0", "xor     eax, eax", "jmp     short loc_533F"], ["mov~r14,r8", "xor~eax,eax", "jmp~FOO"]], [1, 0, 44, 0, 0, 2, 0, 1, 7, 10, 0.0, ["mov     ecx, 7Fh; jumptable 0000000000005301 case 63", "jmp     loc_52AE; jumptable 0000000000005301 default case"], ["mov~ecx,0", "jmp~FOO"]], [1, 0, 44, 0, 0, 2, 0, 1, 7, 10, 0.0, ["mov     ecx, 9; jumptable 0000000000005301 case 116", "jmp     loc_52AE; jumptable 0000000000005301 default case"], ["mov~ecx,0", "jmp~FOO"]], [1, 0, 44, 0, 0, 5, 0, 1, 6, 11, 0.08905919661733616, ["movzx   ecx, byte ptr [p+1]", "lea     r14, [p+1]", "lea     r13d, [rcx-40h]", "cmp     r13b, 3Eh ; '>'", "ja      loc_5338"], ["movzx~ecx,[yte ptr [p+0]", "lea~r14,[p+0]", "lea~r13d,[rcx-40h]+0]", "cmp~r13b,0", "ja~FOO"]], [0, 0, 44, 0, 0, 2, 1, 0, 7, 4, 0.15116279069767444, ["xor     r14d, r14d; jumptable 0000000000005301 cases 88,120", "nop     dword ptr [rax+rax+00h]"], ["xor~r14d,r14d", "nop~[word ptr [rax+0]"]], [1, 0, 44, 0, 0, 2, 0, 1, 7, 10, 0.0, ["mov     ecx, 7; jumptable 0000000000005301 case 97", "jmp     loc_52AE; jumptable 0000000000005301 default case"], ["mov~ecx,0", "jmp~FOO"]], [2, 0, 44, 1, 0, 2, 1, 0, 7, 10, 0.027748414376321355, ["add     r8, 2", "and     ecx, 1Fh"], ["add~r8,0", "and~ecx,0"]], [2, 0, 44, 2, 0, 4, 0, 1, 10, 4, 0.011099365750528542, ["shl     r14d, 4", "add     r8, 1", "lea     r14d, [r13+r14-37h]", "jmp     loc_53A8"], ["shl~r14d,0", "add~r8,0", "lea~r14d,[r13+0]", "jmp~FOO"]], [1, 0, 44, 1, 0, 4, 1, 1, 9, 2, 0.1178646934460888, ["mov     r15, rax", "shl     r15, cl", "test    r15d, 7E0000h", "jnz     loc_54A0"], ["mov~r15,rax", "shl~r15,cl", "test~r15d,0", "jnz~FOO"]], [2, 0, 44, 1, 0, 6, 0, 0, 8, 11, 0.020084566596194505, ["add     r8, 1", "lea     ecx, [r13+rcx*8-30h]", "movzx   r13d, byte ptr [p]", "lea     r14d, [r13-30h]", "cmp     r14b, 7", "jbe     short loc_5319"], ["add~r8,0", "lea~ecx,[r13+0]", "movzx~r13d,<TAG>", "lea~r14d,[r13-30h]+0]", "cmp~r14b,0", "jbe~FOO"]], [0, 0, 44, 0, 0, 1, 0, 1, 9, 10, 0.022198731501057084, ["jmp     loc_52AE; jumptable 0000000000005301 default case"], ["jmp~FOO"]], [2, 0, 44, 2, 0, 4, 0, 1, 11, 0, 0.0010570824524312897, ["shl     r14d, 4", "add     r8, 1", "lea     r14d, [r13+r14-57h]", "jmp     loc_53A8"], ["shl~r14d,0", "add~r8,0", "lea~r14d,[r13+0]", "jmp~FOO"]], [1, 0, 44, 0, 0, 2, 0, 1, 7, 10, 0.0, ["mov     ecx, 0Bh; jumptable 0000000000005301 case 118", "jmp     loc_52AE; jumptable 0000000000005301 default case"], ["mov~ecx,0", "jmp~FOO"]], [2, 1, 44, 2, 0, 7, 0, 0, 12, 3, 0.023255813953488372, ["add     r8, 1", "shl     r14d, 4", "lea     r14d, [r13+r14-30h]", "movzx   r13d, byte ptr [p]", "lea     ecx, [r13-30h]", "cmp     cl, 36h ; '6'", "jbe     short loc_53B5"], ["add~r8,0", "shl~r14d,0", "lea~r14d,[r13+0]", "movzx~r13d,<TAG>", "lea~ecx,[r13-30h]+0]", "cmp~cl,<STR>", "jbe~FOO"]], [1, 0, 44, 0, 0, 2, 0, 1, 7, 12, 0.04281183932346723, ["cmp     cl, 3Fh ; '?'", "jz      short loc_5370"], ["cmp~cl,0", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 1, 0, 8, -1, 0.0015856236786469346, ["xor     eax, eax"], ["xor~eax,eax"]], [3, 0, 44, 3, 0, 5, 0, 1, 3, 11, 0.09328752642706131, ["mov     [q], cl", "add     p, 1", "add     r10, 1", "add     r9, 1", "jmp     short loc_526F"], ["mov~<TAG>,cl", "add~p,0", "add~r10,0", "add~r9,0", "jmp~FOO"]], [0, 0, 44, 0, 0, 2, 1, 1, 2, 12, 0.07029598308668077, ["test    r12b, r12b", "jz      short loc_52D0"], ["test~r12b,r12b", "jz~FOO"]], [0, 1, 44, 0, 0, 2, 0, 1, 5, 12, 0.022463002114164906, ["cmp     cl, 3Ah ; ':'", "jnz     loc_52D0"], ["cmp~cl,<STR>", "jnz~FOO"]], [1, 0, 44, 0, 0, 2, 0, 1, 7, 10, 0.0, ["mov     ecx, 8; jumptable 0000000000005301 case 98", "jmp     loc_52AE; jumptable 0000000000005301 default case"], ["mov~ecx,0", "jmp~FOO"]], [1, 0, 44, 0, 0, 2, 0, 1, 7, 10, 0.0, ["mov     ecx, 0Ch; jumptable 0000000000005301 case 102", "jmp     loc_52AE; jumptable 0000000000005301 default case"], ["mov~ecx,0", "jmp~FOO"]], [1, 0, 44, 0, 0, 2, 0, 1, 7, 10, 0.0, ["mov     ecx, 0Ah; jumptable 0000000000005301 case 110", "jmp     loc_52AE; jumptable 0000000000005301 default case"], ["mov~ecx,0", "jmp~FOO"]], [1, 0, 44, 0, 0, 3, 0, 1, 1, 10, 0.35650105708245244, ["movzx   ecx, byte ptr [p]", "cmp     cl, 3Dh ; '='", "jz      short loc_52C2"], ["movzx~ecx,<TAG>", "cmp~cl,0", "jz~FOO"]], [0, 0, 44, 0, 0, 2, 1, 1, 10, 1, 0.08826638477801269, ["test    r15, rbp", "jnz     loc_54B8"], ["test~r15,rbp", "jnz~FOO"]], [0, 0, 1, 0, 0, 3, 0, 1, 3, -1, 0.015856236786469344, ["mov     eax, edx", "mov     r14, p", "jmp     short loc_533F"], ["mov~eax,edx", "mov~r14,p", "jmp~FOO"]], [0, 0, 0, 0, 0, 10, 0, 0, 4, -1, 0.0, ["mov     [dest], q", "mov     [src], r14", "mov     [output_count], r10", "pop     output_count", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~<TAG>,q", "mov~<TAG>,r14", "mov~<TAG>,r10", "pop~output_count", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 1, 0, 0, 3, 0, 1, 5, -1, 0.0021141649048625794, ["mov     r14, p", "mov     eax, 1", "jmp     short loc_533F"], ["mov~r14,p", "mov~eax,0", "jmp~FOO"]], [0, 0, 44, 0, 0, 2, 1, 1, 4, 13, 0.04254756871035941, ["test    cl, cl", "jz      short loc_5365"], ["test~cl,cl", "jz~FOO"]], [2, 0, 44, 0, 0, 14, 1, 0, 0, 11, 0.0, ["mov     r8, [src]", "mov     r9, [dest]", "lea     r11, off_12C20", "push    r15", "xor     r10d, r10d", "push    r14", "mov     eax, 1", "push    r13", "push    r12", "mov     r12d, edx", "push    rbp", "mov     rbp, 7E000000000000h", "push    rbx", "mov     rbx, output_count"], ["mov~r8,<TAG>", "mov~r9,<TAG>", "lea~r11,<TAG>", "push~r15", "xor~r10d,r10d", "push~r14", "mov~eax,0", "push~r13", "push~r12", "mov~r12d,edx", "push~rbp", "mov~rbp,0", "push~rbx", "mov~rbx,output_count"]], [3, 0, 44, 2, 0, 5, 0, 1, 8, 11, 0.022198731501057084, ["mov     byte ptr [r9], 7Fh", "add     count, 1", "add     r9, 1", "mov     r8, p", "jmp     loc_526F"], ["mov~<TAG>,0", "add~count,0", "add~r9,0", "mov~r8,p", "jmp~FOO"]]], "func_feature": [0, 10, 36, 0, 45, 75, 3, 148, 0.10384, 1, 21], "succs": [[10, 42], [0, 32], [0], [1, 34, 35, 36, 9, 11, 13, 14, 15, 16, 17, 19, 20, 27], [1, 3], [37], [5, 23], [28, 5], [5], [1], [4, 12], [1], [18, 31], [1], [24, 1], [40], [1], [1], [21, 29], [6], [1], [1], [6], [38, 22], [24, 25], [1], [6], [1], [8, 23], [44, 30], [40], [37], [39, 31], [41, 31], [1], [1], [1], [32, 2], [26, 7], [40], [], [40], [33, 41], [37], [37]], "fname": "get_funky_string", "n_num": 45}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[1, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["cmp     byte ptr [rsi], 30h ; '0'", "setnz   al", "retn"], ["cmp~<TAG>,0", "setnz~al", "retn"]], [1, 0, 4, 0, 0, 3, 0, 1, 1, 0, 0.15000000000000002, ["cmp     len, 1", "mov     rsi, [rdi+8]", "jz      short loc_5520"], ["cmp~len,0", "mov~rsi,[rdi+0]", "jz~FOO"]], [1, 0, 5, 2, 0, 8, 2, 1, 0, 0, 0.0, ["lea     rax, color_indicator", "mov     edi, edi", "shl     type, 4", "add     rdi, rax", "xor     eax, eax", "mov     len, [rdi]", "test    len, len", "jz      short locret_5517"], ["lea~rax,<TAG>", "mov~edi,edi", "shl~type,0", "add~rdi,rax", "xor~eax,eax", "mov~len,<TAG>", "test~len,len", "jz~FOO"]], [2, 0, 1, 0, 0, 7, 1, 0, 3, 0, 0.0, ["lea     rdi, a00; \"00\"", "mov     ecx, 2", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "setnz   al"], ["lea~rdi,<TAG>", "mov~ecx,0", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "setnz~al"]], [2, 0, 2, 0, 0, 3, 0, 1, 2, 0, 0.15000000000000002, ["cmp     len, 2", "mov     eax, 1", "jnz     short locret_5517"], ["cmp~len,0", "mov~eax,0", "jnz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 3, 3, 0, 6, 7, 4, 25, 0.05, 2, 2], "succs": [[], [0, 4], [1, 5], [5], [3, 5], []], "fname": "is_colored", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 2, 0, 0, 4, 2, 1, 0, 0, 0.3333333333333333, ["mov     [new+8], rax", "xor     eax, eax", "test    name, name", "jz      short loc_5572"], ["mov~[new+0],rax", "xor~eax,eax", "test~name,name", "jz~FOO"]], [1, 1, 4, 1, 1, 14, 2, 2, 0, 2, 0.0, ["push    r13", "push    r12", "mov     r12, realname", "push    rbp", "push    rbx", "mov     rbp, name", "mov     edi, 20h ; ' '; n", "mov     r13d, edx", "sub     rsp, 8", "call    xmalloc", "mov     rbx, rax", "xor     eax, eax", "test    realname, realname", "jz      short loc_555F"], ["push~r13", "push~r12", "mov~r12,realname", "push~rbp", "push~rbx", "mov~rbp,name", "mov~edi,<STR>", "mov~r13d,edx", "sub~rsp,0", "call~FOO", "mov~rbx,rax", "xor~eax,eax", "test~realname,realname", "jz~FOO"]], [0, 0, 3, 0, 1, 2, 0, 1, 1, 2, 0.0, ["mov     rdi, realname; string", "call    xstrdup"], ["mov~rdi,realname", "call~FOO"]], [1, 0, 0, 1, 0, 11, 0, 0, 2, 0, 0.0, ["mov     [new], rax", "mov     rax, cs:pending_dirs", "mov     [new+10h], r13b", "mov     cs:pending_dirs, new", "mov     [new+18h], rax", "add     rsp, 8", "pop     new", "pop     name", "pop     realname", "pop     r13", "retn"], ["mov~<TAG>,rax", "mov~rax,<TAG>", "mov~[new+0],r13b", "mov~<TAG>,new", "mov~[new+0],rax", "add~rsp,0", "pop~new", "pop~name", "pop~realname", "pop~r13", "retn"]], [0, 0, 1, 0, 1, 2, 0, 1, 2, 1, 0.0, ["mov     rdi, name; string", "call    xstrdup"], ["mov~rdi,name", "call~FOO"]]], "func_feature": [3, 4, 5, 0, 5, 6, 4, 33, 0.06667, 1, 2], "succs": [[3, 4], [0, 2], [0], [], [3]], "fname": "queue_directory", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 3, 0, 0, 1, 0, 1, 1, -1, 0.15000000000000002, ["jl      short loc_55C0"], ["jl~FOO"]], [0, 0, 5, 0, 0, 3, 0, 1, 0, 1, 0.0, ["mov     rax, [b+40h]", "cmp     [a+40h], rax", "jg      short loc_55D0"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [0, 0, 1, 0, 0, 3, 0, 1, 2, -1, 0.1, ["mov     b, [b]; s2", "mov     a, [a]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []]], "func_feature": [0, 0, 3, 0, 6, 5, 0, 11, 0.04167, 0, 0], "succs": [[], [0, 3], [1, 4], [5], [], []], "fname": "strcmp_size", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 3, 0, 0, 1, 0, 1, 1, -1, 0.15000000000000002, ["jl      short loc_5600"], ["jl~FOO"]], [0, 0, 5, 0, 0, 4, 0, 1, 0, 1, 0.0, ["mov     rdx, [a+40h]", "cmp     [b+40h], rdx", "mov     rax, b", "jg      short loc_5610"], ["mov~rdx,[a+0]", "cmp~[b+0],rdx", "mov~rax,b", "jg~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 2, -1, 0.1, ["mov     b, [a]; s2", "mov     a, [b]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]]], "func_feature": [0, 0, 3, 0, 6, 5, 0, 12, 0.04167, 0, 0], "succs": [[], [0, 5], [1, 3], [], [], [4]], "fname": "rev_strcmp_size", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     b, [b]; s2", "mov     a, [a]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[], [0]], "fname": "strcmp_name", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     rax, b", "mov     b, [a]; s2", "mov     a, [b]; s1", "jmp     _strcmp"], ["mov~rax,b", "mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[1], []], "fname": "rev_strcmp_name", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 13, 0, 0, 2, 1, 1, 0, 0, 0.19005847953216373, ["test    rbx, rbx", "jz      short loc_5692"], ["test~rbx,rbx", "jz~FOO"]], [1, 0, 14, 1, 1, 8, 0, 2, 3, -1, 0.12280701754385964, ["lea     rdi, [rbx+rbx*2]", "shl     rdi, 3; n", "call    xmalloc", "mov     rbx, cs:cwd_n_used", "mov     cs:sorted_file, rax", "lea     rax, [rbx+rbx*2]", "mov     cs:sorted_file_alloc, rax", "jmp     loc_565E"], ["lea~rdi,<TAG>", "shl~rdi,0", "call~FOO", "mov~rbx,<TAG>", "mov~<TAG>,rax", "lea~rax,<TAG>", "mov~<TAG>,rax", "jmp~FOO"]], [1, 0, 19, 1, 0, 7, 0, 1, 0, 3, 0.0, ["push    rbx", "mov     rbx, cs:cwd_n_used", "mov     rax, rbx", "shr     rax, 1", "add     rax, rbx", "cmp     rax, cs:sorted_file_alloc", "ja      loc_5750"], ["push~rbx", "mov~rbx,<TAG>", "mov~rax,rbx", "shr~rax,0", "add~rax,rbx", "cmp~rax,<TAG>", "ja~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 16, 0, 0, 2, 1, 1, 2, 1, 0.09941520467836257, ["test    rcx, rcx", "jnz     short loc_57C1"], ["test~rcx,rcx", "jnz~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 2, 2, 0.0, ["mov     ecx, 1", "jmp     short loc_576B"], ["mov~ecx,0", "jmp~FOO"]], [1, 0, 18, 1, 1, 7, 1, 1, 1, 2, 0.011695906432748537, ["mov     rdi, cs:sorted_file; ptr", "call    free", "mov     edx, 18h", "xor     ecx, ecx", "mov     rax, rdx", "mul     rbx", "jo      short loc_57BA"], ["mov~rdi,<TAG>", "call~FOO", "mov~edx,0", "xor~ecx,ecx", "mov~rax,rdx", "mul~,rbx", "jo~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, -1, 0.0, ["pop     rbx", "retn"], ["pop~rbx", "retn"]], [1, 0, 10, 0, 0, 2, 0, 1, 2, -1, 0.23391812865497075, ["cmp     cs:sort_type_0, 0FFFFFFFFh", "jz      loc_574C"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 1, 1, 1, 13, 0, 1, 5, -1, 0.02046783625730994, ["cmp     ecx, 4", "mov     edx, 0", "cmovz   edx, cs:time_type_0", "cdqe", "movzx   r8d, cs:directories_first", "add     edx, ecx", "lea     rdx, [rax+rdx*2]", "movzx   eax, cs:sort_reverse", "lea     rax, [rax+rdx*2]", "lea     rdx, [r8+rax*2]", "lea     rax, sort_functions", "mov     rdx, [rax+rdx*8]; cmp", "call    mpsort"], ["cmp~ecx,0", "mov~edx,0", "cmovz~edx,<TAG>", "cdqe~", "movzx~r8d,<TAG>", "add~edx,ecx", "lea~rdx,<TAG>", "movzx~eax,<TAG>", "lea~rax,<TAG>", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~rdx,<TAG>", "call~FOO"]], [2, 0, 4, 2, 0, 5, 0, 1, 7, -1, 0.008771929824561403, ["mov     [rax], rdx", "add     rax, 8", "add     rdx, 0B8h", "cmp     rax, r8", "jnz     short loc_56E0"], ["mov~<TAG>,rdx", "add~rax,0", "add~rdx,0", "cmp~rax,r8", "jnz~FOO"]], [0, 0, 4, 0, 0, 4, 0, 0, 6, -1, 0.03508771929824561, ["mov     rdx, cs:cwd_file", "lea     r8, [rdi+rsi*8]", "mov     rax, rdi", "nop"], ["mov~rdx,<TAG>", "lea~r8,<TAG>", "mov~rax,rdi", "nop"]], [0, 0, 2, 0, 0, 2, 0, 0, 4, -1, 0.03216374269005848, ["mov     rsi, cs:cwd_n_used; n", "mov     rdi, cs:sorted_file; base"], ["mov~rsi,<TAG>", "mov~rdi,<TAG>"]], [0, 0, 9, 0, 1, 5, 1, 2, 3, -1, 0.21052631578947367, ["lea     rdi, failed_strcoll; env", "call    __setjmp", "test    eax, eax", "mov     ecx, cs:sort_type_0", "jz      short loc_5700"], ["lea~rdi,<TAG>", "call~FOO", "test~eax,eax", "mov~ecx,<TAG>", "jz~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 6, -1, 0.023391812865497075, ["mov     eax, 1", "jmp     short loc_570E"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 5, 0, 0, 4, 1, 1, 5, -1, 0.1023391812865497, ["mov     rsi, cs:cwd_n_used", "mov     rdi, cs:sorted_file", "test    rsi, rsi", "jz      short loc_56F3"], ["mov~rsi,<TAG>", "mov~rdi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 4, -1, 0.14619883040935672, ["cmp     ecx, 3", "jz      loc_579B"], ["cmp~ecx,0", "jz~FOO"]], [2, 0, 12, 2, 0, 5, 0, 1, 3, -1, 0.03216374269005848, ["mov     [rdx], rax", "add     rax, 0B8h", "add     rdx, 8", "cmp     rbx, rax", "jnz     short loc_5680"], ["mov~<TAG>,rax", "add~rax,0", "add~rdx,0", "cmp~rbx,rax", "jnz~FOO"]], [1, 0, 12, 2, 0, 5, 0, 0, 2, -1, 0.017543859649122806, ["imul    rbx, 0B8h", "mov     rax, cs:cwd_file", "mov     rdx, cs:sorted_file", "add     rbx, rax", "nop     dword ptr [rax+rax+00h]"], ["imul~rbx,,0", "mov~rax,<TAG>", "mov~rdx,<TAG>", "add~rbx,rax", "nop~[word ptr [rax+0]"]], [0, 1, 0, 0, 1, 5, 0, 1, 5, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___8924; \"sort_files\"", "lea     rsi, file; \"ls.c\"", "lea     rdi, aSortTypeSortVe; \"sort_type != sort_version\"", "mov     edx, 0CA3h; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,<STR>", "call~FOO"]]], "func_feature": [6, 5, 18, 0, 20, 27, 2, 85, 0.06433, 13, 10], "succs": [[8, 18], [0], [0, 6], [], [1, 3], [4], [4, 5], [], [13, 7], [7], [10, 14], [10], [9], [16, 12], [9], [11, 14], [19, 15], [8, 17], [17], []], "fname": "sort_files", "n_num": 20}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[3, 0, 1, 2, 1, 13, 0, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rbp, b", "mov     rbx, a", "sub     rsp, 8", "call    ___errno_location", "mov     dword ptr [rax], 0", "add     rsp, 8", "mov     rsi, b; s2", "mov     rdi, a; s1", "pop     a", "pop     b", "jmp     _strcoll"], ["push~rbp", "push~rbx", "mov~rbp,b", "mov~rbx,a", "sub~rsp,0", "call~FOO", "mov~<TAG>,0", "add~rsp,0", "mov~rsi,b", "mov~rdi,a", "pop~a", "pop~b", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 0, 2, 0, 2, 1, 28, 13, 0.0, 0, 2], "succs": [[1], []], "fname": "xstrcoll", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 5, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     rax, [b+40h]", "cmp     [a+40h], rax", "jg      short loc_5820"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 2, 0, 0.1, ["mov     b, [b]; b", "mov     a, [a]; a", "jmp     short xstrcoll"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, 0, 0.15000000000000002, ["mov     eax, 1", "jge     short loc_5818"], ["mov~eax,0", "jge~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 3, 0, 6, 5, 0, 11, 0.04167, 0, 0], "succs": [[], [0, 4], [], [2], [3, 5], []], "fname": "xstrcoll_size", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[1, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.15000000000000002, ["mov     eax, 1", "jge     short loc_5850"], ["mov~eax,0", "jge~FOO"]], [0, 0, 5, 0, 0, 4, 0, 1, 0, 1, 0.0, ["mov     rax, [a+40h]", "cmp     [b+40h], rax", "mov     rdx, b", "jg      short loc_5860"], ["mov~rax,[a+0]", "cmp~[b+0],rax", "mov~rdx,b", "jg~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 2, -1, 0.1, ["mov     b, [a]; b", "mov     a, [b]; a", "jmp     xstrcoll"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]]], "func_feature": [0, 0, 3, 0, 6, 5, 0, 12, 0.04167, 0, 0], "succs": [[2, 5], [0, 3], [], [], [], [4]], "fname": "rev_xstrcoll_size", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     b, [b]; b", "mov     a, [a]; a", "jmp     xstrcoll"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[], [0]], "fname": "xstrcoll_name", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     rax, b", "mov     b, [a]; b", "mov     a, [b]; a", "jmp     xstrcoll"], ["mov~rax,b", "mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[1], []], "fname": "rev_xstrcoll_name", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     rax, b", "mov     b, [a]; s2", "mov     a, [b]; s1", "jmp     _strverscmp"], ["mov~rax,b", "mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[1], []], "fname": "rev_xstrcoll_version", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     b, [b]; s2", "mov     a, [a]; s1", "jmp     _strverscmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[], [0]], "fname": "xstrcoll_version", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[2, 0, 18, 1, 0, 3, 0, 1, 0, 0, 0.47380952380952385, ["sub     i, 1", "cmp     i, 0FFFFFFFFFFFFFFFFh", "jz      loc_59A0"], ["sub~i,0", "cmp~i,0", "jz~FOO"]], [0, 0, 18, 0, 0, 3, 0, 1, 1, 7, 0.1285714285714286, ["mov     rbx, cs:cwd_n_used", "lea     r12, ds:0FFFFFFFFFFFFFFF8h[i*8]", "jmp     short loc_5901"], ["mov~rbx,<TAG>", "lea~r12,<TAG>", "jmp~FOO"]], [1, 0, 18, 1, 0, 1, 0, 0, 5, 7, 0.3023809523809524, ["sub     r12, 8"], ["sub~r12,0"]], [1, 0, 18, 0, 0, 6, 2, 1, 6, 2, 0.10476190476190478, ["xor     edx, edx", "cmp     byte ptr [rax+1], 2Eh ; '.'", "setz    dl", "movzx   eax, byte ptr [rax+rdx+1]", "test    al, al", "jz      loc_58FD"], ["xor~edx,edx", "cmp~[yte ptr [rax+0],0", "setz~dl", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [1, 0, 18, 0, 1, 3, 0, 2, 5, 3, 0.1761904761904762, ["call    last_component", "cmp     byte ptr [rax], 2Eh ; '.'", "jz      loc_5A00"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 18, 0, 1, 4, 0, 2, 5, 9, 0.09642857142857143, ["mov     rsi, [f+8]; realname", "mov     edx, r13d; command_line_arg", "call    queue_directory", "jmp     short loc_596C"], ["mov~rsi,[f+0]", "mov~edx,r13d", "call~FOO", "jmp~FOO"]], [0, 0, 18, 0, 0, 3, 1, 1, 4, 4, 0.25952380952380955, ["test    dirname, dirname", "mov     rdi, [f+0]; name", "jz      short loc_5988"], ["test~dirname,dirname", "mov~rdi,[f+0]", "jz~FOO"]], [1, 0, 18, 0, 0, 3, 0, 1, 6, 10, 0.09523809523809525, ["mov     rdi, [f+0]", "cmp     byte ptr [rdi], 2Fh ; '/'", "jz      short loc_5988"], ["mov~rdi,[f+0]", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 7, 1, 0.05, ["cmp     al, 2Fh ; '/'", "jz      loc_58FD"], ["cmp~al,0", "jz~FOO"]], [0, 0, 18, 0, 0, 1, 0, 1, 8, 0, 0.02380952380952381, ["jmp     loc_593C"], ["jmp~FOO"]], [1, 0, 18, 0, 0, 5, 0, 1, 3, 5, 0.3023809523809524, ["mov     rax, cs:sorted_file", "mov     rbp, [rax+r12]", "mov     eax, [f+0A0h]", "cmp     eax, 3", "jnz     short loc_58F8"], ["mov~rax,<TAG>", "mov~rbp,<TAG>", "mov~eax,[f+0]", "cmp~eax,0", "jnz~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 3, -1, 0.1285714285714286, ["mov     rdx, cs:cwd_n_used", "test    rdx, rdx", "jz      short loc_59E0"], ["mov~rdx,<TAG>", "test~rdx,rdx", "jz~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 4, 5, 0.026190476190476195, ["cmp     eax, 9", "jz      short loc_5925"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 2, 0, 0, 5, 1, 0, 4, -1, 0.045238095238095244, ["mov     rsi, cs:sorted_file", "lea     rdi, [rsi+rdx*8]", "mov     rax, rsi", "xor     edx, edx", "nop     dword ptr [rax+00h]"], ["mov~rsi,<TAG>", "lea~rdi,<TAG>", "mov~rax,rsi", "xor~edx,edx", "nop~[word ptr [rax+0]"]], [1, 0, 21, 1, 0, 11, 1, 1, 0, 8, 0.0, ["push    r15", "push    r14", "mov     r14, dirname", "push    r13", "push    r12", "movzx   r13d, sil", "push    rbp", "push    rbx", "sub     rsp, 8", "test    dirname, dirname", "jz      short loc_58E0"], ["push~r15", "push~r14", "mov~r14,dirname", "push~r13", "push~r12", "movzx~r13d,sil", "push~rbp", "push~rbx", "sub~rsp,0", "test~dirname,dirname", "jz~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 1, 8, 0.002380952380952381, ["cmp     cs:active_dir_set, 0", "jz      short loc_58E0"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 19, 0, 1, 4, 2, 1, 2, 8, 0.0, ["mov     command_line_arg, dirname; realname", "xor     edx, edx; command_line_arg", "xor     edi, edi; name", "call    queue_directory"], ["mov~command_line_arg,dirname", "xor~edx,edx", "xor~edi,edi", "call~FOO"]], [2, 0, 2, 2, 0, 9, 0, 1, 5, -1, 0.002380952380952381, ["mov     rcx, [rax]", "cmp     dword ptr [f+0A0h], 9", "mov     [rsi+j*8], f", "setnz   cl", "add     rax, 8", "movzx   ecx, cl", "add     j, rcx", "cmp     rdi, rax", "jnz     short loc_59C0"], ["mov~rcx,<TAG>", "cmp~[word ptr [f+0],0", "mov~<TAG>,f", "setnz~cl", "add~rax,0", "movzx~ecx,cl", "add~j,rcx", "cmp~rdi,rax", "jnz~FOO"]], [0, 0, 18, 0, 3, 11, 1, 3, 7, 9, 0.04166666666666667, ["mov     rsi, rdi; abase", "xor     edx, edx; base_in_result", "mov     rdi, dirname; dir", "call    file_name_concat", "mov     rsi, [f+8]; realname", "mov     r15, rax", "mov     rdi, name; name", "mov     edx, r13d; command_line_arg", "call    queue_directory", "mov     rdi, name; ptr", "call    free"], ["mov~rsi,rdi", "xor~edx,edx", "mov~rdi,dirname", "call~FOO", "mov~rsi,[f+0]", "mov~r15,rax", "mov~rdi,name", "mov~edx,r13d", "call~FOO", "mov~rdi,name", "call~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 6, 8, 0.17857142857142858, ["cmp     dword ptr [f+0A0h], 9", "jnz     short loc_58FD"], ["cmp~[word ptr [f+0],0", "jnz~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 4, -1, 0.0, ["mov     cs:cwd_n_used, rdx", "add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     command_line_arg", "pop     dirname", "pop     r15", "retn"], ["mov~<TAG>,rdx", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~command_line_arg", "pop~dirname", "pop~r15", "retn"]], [0, 0, 18, 0, 1, 3, 0, 2, 7, 8, 0.0, ["mov     rdi, [f+0]; ptr", "call    free", "jmp     loc_58FD"], ["mov~rdi,[f+0]", "call~FOO", "jmp~FOO"]]], "func_feature": [7, 9, 24, 0, 22, 34, 2, 95, 0.11082, 4, 6], "succs": [[10, 11], [0], [0], [8, 2], [3, 7], [19], [4, 5], [18, 5], [9, 2], [7], [12, 6], [20, 13], [2, 6], [17], [1, 15], [16, 1], [1], [17, 20], [19], [2, 21], [], [2]], "fname": "extract_dirs_from_files", "n_num": 22}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["pop     from", "pop     rbp", "pop     to", "retn"], ["pop~from", "pop~rbp", "pop~to", "retn"]], [0, 0, 11, 3, 0, 8, 1, 0, 6, 4, 0.16666666666666666, ["mov     rax, from", "xor     edx, edx", "div     rcx", "add     rcx, from", "mov     rbx, rcx", "sub     rbx, rdx", "cmp     from, to", "jnb     short loc_5ABD"], ["mov~rax,from", "xor~edx,edx", "div~,rcx", "add~rcx,from", "mov~rbx,rcx", "sub~rbx,rdx", "cmp~from,to", "jnb~FOO"]], [0, 0, 11, 0, 0, 3, 0, 0, 5, 4, 0.1858974358974359, ["mov     rbx, rbp", "cmp     rbx, to", "jb      short loc_5A86"], ["mov~rbx,rbp", "cmp~rbx,to", "jb~FOO"]], [0, 0, 11, 0, 0, 6, 0, 1, 1, 4, 0.07051282051282051, ["push    r12", "mov     r12, to", "push    rbp", "push    rbx", "mov     rbx, from", "jmp     short loc_5A86"], ["push~r12", "mov~r12,to", "push~rbp", "push~rbx", "mov~rbx,from", "jmp~FOO"]], [0, 0, 13, 0, 0, 2, 0, 0, 0, 5, 0.0, ["cmp     from, to", "jnb     locret_5AD8"], ["cmp~from,to", "jnb~FOO"]], [1, 0, 11, 0, 1, 4, 0, 2, 5, 0, 0.05448717948717949, ["mov     esi, 9; int", "call    ___overflow", "mov     rcx, cs:tabsize", "jmp     loc_5A70"], ["mov~esi,0", "call~FOO", "mov~rcx,<TAG>", "jmp~FOO"]], [1, 0, 11, 0, 0, 3, 0, 0, 5, 5, 0.05448717948717949, ["lea     rax, [rsi+1]", "mov     [rdi+28h], rax", "mov     byte ptr [rsi], 9"], ["lea~rax,[rsi+0]", "mov~[rdi+0],rax", "mov~<TAG>,0"]], [0, 0, 11, 0, 0, 2, 0, 0, 4, 1, 0.1858974358974359, ["cmp     rsi, r8", "jnb     short loc_5AE0"], ["cmp~rsi,r8", "jnb~FOO"]], [0, 0, 11, 0, 0, 2, 0, 0, 3, 6, 0.20512820512820512, ["cmp     rsi, r8", "jnb     short loc_5AC8"], ["cmp~rsi,r8", "jnb~FOO"]], [0, 0, 11, 2, 0, 9, 2, 0, 3, 2, 0.22435897435897434, ["xor     edx, edx", "mov     rax, to", "div     rcx", "xor     edx, edx", "mov     r9, rax", "mov     rax, rbp", "div     rcx", "cmp     r9, rax", "jbe     short loc_5AA5"], ["xor~edx,edx", "mov~rax,to", "div~,rcx", "xor~edx,edx", "mov~r9,rax", "mov~rax,rbp", "div~,rcx", "cmp~r9,rax", "jbe~FOO"]], [0, 0, 11, 0, 0, 7, 1, 1, 2, 3, 0.47435897435897434, ["mov     rcx, cs:tabsize", "mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "lea     rbp, [from+1]", "test    rcx, rcx", "mov     rsi, [rdi+28h]", "mov     r8, [rdi+30h]", "jnz     short loc_5A48"], ["mov~rcx,<TAG>", "mov~rdi,<TAG>", "lea~rbp,[from+0]", "test~rcx,rcx", "mov~rsi,[rdi+0]", "mov~r8,[rdi+0]", "jnz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, -1, 0.0, ["rep retn"], ["retn"]], [0, 1, 11, 0, 0, 3, 0, 0, 4, 5, 0.0641025641025641, ["lea     rax, [rsi+1]", "mov     [rdi+28h], rax", "mov     byte ptr [rsi], 20h ; ' '"], ["lea~rax,[rsi+0]", "mov~[rdi+0],rax", "mov~<TAG>,<STR>"]], [0, 1, 11, 0, 1, 3, 0, 2, 4, 5, 0.0641025641025641, ["mov     esi, 20h ; ' '; int", "call    ___overflow", "jmp     short loc_5AB5"], ["mov~esi,<STR>", "call~FOO", "jmp~FOO"]]], "func_feature": [2, 4, 6, 0, 14, 19, 2, 57, 0.125, 2, 5], "succs": [[], [0, 10], [0, 10], [10], [11, 3], [1], [1], [5, 6], [12, 13], [8, 7], [8, 9], [], [2], [2]], "fname": "indent", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 4, 0, 0.03446115288220551, ["mov     rax, rbx", "mov     rbx, [rbp+var_38]", "xor     rbx, fs:28h", "jnz     loc_5EF4"], ["mov~rax,rbx", "mov~rbx,[rbp+0]", "xor~rbx,<TAG>", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 6, 0, 0.028978696741854635, ["jmp     loc_5C0D"], ["jmp~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 5, 0, 0.07988721804511278, ["cmp     [rbp+out], 0", "jnz     loc_5BF2"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 2, 0, 0.015037593984962405, ["cmp     [rbp+width], 0", "jz      short loc_5BE8"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 55, 0, 0, 2, 0, 1, 1, 0, 0.03446115288220551, ["cmp     cs:qmark_funny_chars, 0", "jnz     loc_5C50"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 5, 0, 1, 5, 0, 1, 4, 0, 0.038377192982456135, ["mov     rcx, [rbp+out]; stream", "mov     rdi, [rbp+buf]; ptr", "mov     rdx, rbx; n", "mov     esi, 1; size", "call    _fwrite_unlocked"], ["mov~rcx,[rbp+0]", "mov~rdi,[rbp+0]", "mov~rdx,rbx", "mov~esi,0", "call~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 5, 0, 0.016604010025062656, ["cmp     [rbp+out], 0", "jnz     loc_5BF2"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 3, 0, 0.007518796992481203, ["cmp     [rbp+out], 0", "jz      short loc_5C21"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 13, 0, 0, 4, 0, 0, 3, 0, 0.008458646616541353, ["mov     r15, [rbp+buf]", "mov     rax, [rbp+var_2058]", "cmp     r15, rax", "jnb     short loc_5EDA"], ["mov~r15,[rbp+0]", "mov~rax,[rbp+0]", "cmp~r15,rax", "jnb~FOO"]], [1, 0, 43, 0, 1, 6, 0, 1, 2, 0, 0.03477443609022556, ["call    ___ctype_get_mb_cur_max", "mov     rcx, [rbp+buf]", "cmp     rax, 1", "lea     rdi, [rcx+len]", "mov     [rbp+var_2058], rdi", "jbe     loc_5EA0"], ["call~FOO", "mov~rcx,[rbp+0]", "cmp~rax,0", "lea~rdi,<TAG>", "mov~[rbp+0],rdi", "jbe~FOO"]], [2, 0, 34, 1, 0, 5, 0, 1, 12, 0, 0.039473684210526314, ["mov     byte ptr [rbx], 3Fh ; '?'", "add     displayed_width, 1", "mov     rbx, r15", "mov     r14, rcx", "jmp     loc_5D4C"], ["mov~<TAG>,0", "add~displayed_width,0", "mov~rbx,r15", "mov~r14,rcx", "jmp~FOO"]], [0, 0, 34, 0, 1, 5, 1, 2, 11, 0, 0.041353383458646614, ["call    _wcwidth", "mov     rdx, [rbp+bytes]", "test    eax, eax", "lea     rcx, [p+rdx]", "js      loc_5E00"], ["call~FOO", "mov~rdx,[rbp+0]", "test~eax,eax", "lea~rcx,<TAG>", "js~FOO"]], [0, 0, 34, 0, 1, 4, 1, 2, 11, 0, 0.03164160401002506, ["call    _wcwidth", "test    eax, eax", "lea     rcx, [p+1]", "js      short loc_5E00"], ["call~FOO", "test~eax,eax", "lea~rcx,[p+0]", "js~FOO"]], [1, 0, 14, 0, 1, 3, 0, 2, 3, 0, 0.010025062656641603, ["call    ___ctype_get_mb_cur_max", "cmp     rax, 1", "ja      loc_5DD0"], ["call~FOO", "cmp~rax,0", "ja~FOO"]], [0, 0, 8, 0, 0, 3, 2, 1, 4, 0, 0.004699248120300752, ["xor     ebx, ebx", "xor     r12d, r12d", "jmp     loc_5D74"], ["xor~ebx,ebx", "xor~r12d,r12d", "jmp~FOO"]], [0, 0, 36, 0, 0, 2, 0, 0, 3, 0, 0.03728070175438596, ["cmp     q, rdi", "jnb     loc_5EE2"], ["cmp~q,rdi", "jnb~FOO"]], [0, 0, 34, 0, 0, 4, 1, 1, 10, 0, 0.08145363408521303, ["test    bytes_0, bytes_0", "mov     edi, [rbp+wc]; c", "mov     [rbp+bytes], bytes_0", "jz      loc_5E18"], ["test~bytes_0,bytes_0", "mov~edi,[rbp+0]", "mov~[rbp+0],bytes_0", "jz~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 9, 0, 0.09586466165413533, ["cmp     bytes_0, 0FFFFFFFFFFFFFFFEh", "jz      loc_5E88"], ["cmp~bytes_0,0", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 5, 0, 0.05419799498746867, ["cmp     [rbp+width], 0", "jz      short loc_5C21"], ["cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 34, 1, 0, 4, 0, 1, 10, 0, 0.005952380952380952, ["mov     byte ptr [rbx], 3Fh ; '?'", "add     displayed_width, 1", "mov     r14, [rbp+var_2058]", "jmp     short loc_5E7B"], ["mov~<TAG>,0", "add~displayed_width,0", "mov~r14,[rbp+0]", "jmp~FOO"]], [0, 0, 34, 0, 0, 7, 1, 0, 4, 0, 0.040726817042606514, ["lea     rax, [rbp+wc]", "lea     options, [rbp+mbstate]", "mov     len, q", "mov     name, q", "xor     r12d, r12d", "mov     [rbp+pwc], rax", "nop     dword ptr [rax+rax+00000000h]"], ["lea~rax,[rbp+0]", "lea~options,[rbp+0]", "mov~len,q", "mov~name,q", "xor~r12d,r12d", "mov~[rbp+0],rax", "nop~[word ptr [rax+0]"]], [3, 0, 56, 1, 1, 13, 2, 2, 1, 0, 0.0, ["lea     rsi, [len+1]; buffersize", "lea     len, [len+1Fh]", "mov     r8, options; o", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, name; arg", "and     rax, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rax", "lea     rax, [rsp+2080h+buf+7]", "and     rax, 0FFFFFFFFFFFFFFF0h", "mov     rdi, rax; buffer", "mov     [rbp+buf], rax", "call    quotearg_buffer", "jmp     loc_5B6E"], ["lea~rsi,[len+0]", "lea~len,[len+0]", "mov~r8,options", "mov~rcx,0", "mov~rdx,name", "and~rax,0", "sub~rsp,rax", "lea~rax,[rsp+0]", "and~rax,0", "mov~rdi,rax", "mov~[rbp+0],rax", "call~FOO", "jmp~FOO"]], [4, 0, 57, 1, 1, 26, 1, 2, 0, 0, 0.0, ["push    rbp", "mov     r8, options; o", "mov     rbp, rsp", "push    r15", "push    r14", "lea     r15, [rbp+smallbuf]", "push    r13", "push    r12", "push    rbx", "mov     r14, name", "mov     r13, options", "mov     options, name; arg", "mov     esi, 2000h; buffersize", "sub     rsp, 2058h", "mov     [rbp+out], out_0", "mov     [rbp+width], width_0", "mov     out_0, r15; buffer", "mov     width_0, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rax, fs:28h", "mov     [rbp+var_38], rax", "xor     eax, eax", "call    quotearg_buffer", "cmp     rax, 1FFFh", "mov     rbx, rax", "mov     [rbp+buf], r15", "ja      loc_5D90"], ["push~rbp", "mov~r8,options", "mov~rbp,rsp", "push~r15", "push~r14", "lea~r15,[rbp+0]", "push~r13", "push~r12", "push~rbx", "mov~r14,name", "mov~r13,options", "mov~options,name", "mov~esi,0", "sub~rsp,0", "mov~[rbp+0],out_0", "mov~[rbp+0],width_0", "mov~out_0,r15", "mov~width_0,0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "call~FOO", "cmp~rax,0", "mov~rbx,rax", "mov~[rbp+0],r15", "ja~FOO"]], [0, 0, 3, 0, 0, 2, 0, 0, 6, 0, 0.004699248120300752, ["mov     rax, [rbp+width]", "mov     [rax], r12"], ["mov~rax,[rbp+0]", "mov~<TAG>,r12"]], [0, 0, 4, 0, 0, 1, 0, 1, 6, 0, 0.006265664160401002, ["jmp     loc_5C17"], ["jmp~FOO"]], [0, 0, 12, 0, 0, 4, 0, 0, 4, 0, 0.006265664160401002, ["mov     r15, [rbp+buf]", "lea     options, [r15+len]", "cmp     r15, plimit", "jnb     loc_5EEC"], ["mov~r15,[rbp+0]", "lea~options,<TAG>", "cmp~r15,plimit", "jnb~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 5, 0, 0.1237468671679198, ["movzx   eax, byte ptr [p]", "cmp     al, 3Fh ; '?'", "jg      loc_5E40"], ["movzx~eax,<TAG>", "cmp~al,0", "jg~FOO"]], [0, 0, 34, 0, 0, 2, 0, 0, 8, 0, 0.1463032581453634, ["cmp     p, [rbp+var_2058]", "jb      loc_5CA0"], ["cmp~p,[rbp+0]", "jb~FOO"]], [0, 0, 34, 0, 0, 5, 0, 1, 12, 0, 0.007832080200501253, ["movzx   edx, byte ptr [r14]", "mov     r14, p", "mov     [rbx], dl", "mov     rbx, r15", "jmp     loc_5D47"], ["movzx~edx,<TAG>", "mov~r14,p", "mov~<TAG>,dl", "mov~rbx,r15", "jmp~FOO"]], [1, 0, 12, 0, 0, 1, 0, 0, 6, 0, 0.0, ["mov     byte ptr [p_0], 3Fh ; '?'"], ["mov~<TAG>,0"]], [1, 0, 12, 0, 0, 3, 1, 1, 5, 0, 0.006892230576441102, ["movzx   edx, byte ptr [p_0]", "test    byte ptr [rcx+rdx*2+1], 40h", "jnz     short loc_5ECD"], ["movzx~edx,<TAG>", "test~[yte ptr [rcx+0],0", "jnz~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 6, 0, 0.02631578947368421, ["cmp     al, 25h ; '%'", "jge     loc_5E58"], ["cmp~al,0", "jge~FOO"]], [0, 0, 8, 0, 0, 2, 0, 1, 4, 0, 0.014724310776942355, ["mov     r12, len", "jmp     loc_5D74"], ["mov~r12,len", "jmp~FOO"]], [1, 0, 12, 1, 0, 3, 0, 1, 6, 0, 0.008771929824561403, ["add     p_0, 1", "cmp     p_0, [rbp+var_2058]", "jnz     short loc_5EC0"], ["add~p_0,0", "cmp~p_0,[rbp+0]", "jnz~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 6, 0, 0.08897243107769423, ["cmp     al, 41h ; 'A'", "jl      loc_5CC0"], ["cmp~al,0", "jl~FOO"]], [0, 0, 34, 0, 0, 2, 0, 0, 12, 0, 0.018170426065162906, ["mov     rdi, q", "nop     dword ptr [w]"], ["mov~rdi,q", "nop~<TAG>"]], [0, 0, 10, 0, 1, 5, 1, 1, 5, 0, 0.0037593984962406013, ["call    ___ctype_b_loc", "xor     r12d, r12d", "mov     rcx, [rax]", "mov     rax, r15", "nop     word ptr [p_1+p_1+00000000h]"], ["call~FOO", "xor~r12d,r12d", "mov~rcx,<TAG>", "mov~rax,r15", "nop~[ord ptr [p_1+0]"]], [1, 0, 34, 1, 1, 9, 0, 2, 8, 0, 0.1237468671679198, ["mov     rdx, [rbp+var_2058]", "mov     rdi, [rbp+pwc]; pwc", "mov     rcx, r13; p", "mov     rsi, p; s", "lea     r15, [q+1]", "sub     rdx, p; n", "call    _mbrtowc", "cmp     bytes_0, 0FFFFFFFFFFFFFFFFh", "jz      loc_5E70"], ["mov~rdx,[rbp+0]", "mov~rdi,[rbp+0]", "mov~rcx,r13", "mov~rsi,p", "lea~r15,[q+0]", "sub~rdx,p", "call~FOO", "cmp~bytes_0,0", "jz~FOO"]], [0, 0, 34, 0, 1, 4, 1, 2, 13, 0, 0.08991228070175439, ["mov     rdi, r13; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_5CD0"], ["mov~rdi,r13", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 34, 0, 0, 2, 0, 0, 7, 0, 0.08834586466165413, ["mov     qword ptr [rbp+mbstate.__count], 0", "nop     dword ptr [rax+rax+00h]"], ["mov~[word ptr [rbp+0],0", "nop~[word ptr [rax+0]"]], [1, 0, 34, 0, 0, 3, 0, 0, 7, 0, 0.005325814536340852, ["lea     edx, [rax-20h]", "cmp     dl, 3", "jbe     loc_5E58"], ["lea~edx,[rax-20h]+0]", "cmp~dl,0", "jbe~FOO"]], [0, 0, 34, 0, 0, 2, 0, 1, 10, 0, 0.03665413533834586, ["mov     rbx, q", "jmp     loc_5D60"], ["mov~rbx,q", "jmp~FOO"]], [3, 0, 34, 2, 0, 3, 0, 0, 9, 0, 0.019423558897243107, ["add     p, 1", "mov     byte ptr [rbx], 3Fh ; '?'", "add     displayed_width, 1"], ["add~p,0", "mov~<TAG>,0", "add~displayed_width,0"]], [0, 0, 12, 0, 1, 4, 0, 1, 4, 0, 0.004699248120300752, ["call    ___ctype_b_loc", "mov     rcx, [rax]", "mov     rax, r15", "xchg    ax, ax"], ["call~FOO", "mov~rcx,<TAG>", "mov~rax,r15", "xchg~ax,ax"]], [0, 0, 34, 0, 0, 5, 0, 1, 13, 0, 0.019110275689223057, ["mov     rsi, r14", "movsb", "cmp     p, rcx", "mov     r14, p", "jnz     short loc_5D38"], ["mov~rsi,r14", "movsb~<TAG>,<TAG>", "cmp~p,rcx", "mov~r14,p", "jnz~FOO"]], [0, 0, 34, 1, 0, 1, 0, 0, 14, 0, 0.020050125313283207, ["add     rbx, bytes_0"], ["add~rbx,bytes_0"]], [0, 0, 0, 0, 0, 8, 0, 0, 5, 0, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "pop~rbp", "retn"]], [0, 0, 34, 1, 0, 2, 0, 0, 13, 0, 0.039160401002506263, ["cdqe", "add     displayed_width, w"], ["cdqe~", "add~displayed_width,w"]], [1, 0, 34, 0, 0, 2, 0, 1, 7, 0, 0.013471177944862155, ["cmp     al, 5Fh ; '_'", "jle     short loc_5E58"], ["cmp~al,0", "jle~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 8, 0, 0.005325814536340852, ["lea     edx, [rax-61h]", "cmp     dl, 1Dh", "ja      loc_5CC0"], ["lea~edx,[rax-61h]+0]", "cmp~dl,0", "ja~FOO"]], [4, 0, 10, 1, 0, 8, 1, 1, 6, 0, 0.004699248120300752, ["movzx   edx, byte ptr [p_1]", "movzx   edx, word ptr [rcx+rdx*2]", "and     dx, 4000h", "cmp     dx, 1", "sbb     displayed_width, 0FFFFFFFFFFFFFFFFh", "add     p_1, 1", "cmp     plimit, p_1", "jnz     short loc_5BC0"], ["movzx~edx,<TAG>", "movzx~edx,<TAG>", "and~dx,0", "cmp~dx,0", "sbb~displayed_width,0", "add~p_1,0", "cmp~plimit,p_1", "jnz~FOO"]], [0, 0, 34, 0, 0, 1, 0, 0, 14, 0, 0.05639097744360902, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 8, 0, 0, 1, 0, 1, 7, 0, 0.005012531328320802, ["jmp     loc_5DE4"], ["jmp~FOO"]], [0, 0, 8, 0, 1, 5, 1, 1, 4, 0, 0.005012531328320802, ["mov     rdi, [rbp+buf]; string", "xor     edx, edx; flags", "mov     rsi, len; nbytes", "call    mbsnwidth", "movsxd  r12, eax"], ["mov~rdi,[rbp+0]", "xor~edx,edx", "mov~rsi,len", "call~FOO", "movsxd~r12,eax"]], [3, 0, 34, 3, 0, 5, 0, 1, 7, 0, 0.03164160401002506, ["mov     [q], al", "add     p, 1", "add     displayed_width, 1", "add     rbx, 1", "jmp     loc_5D60"], ["mov~<TAG>,al", "add~p,0", "add~displayed_width,0", "add~rbx,0", "jmp~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 5, 0, 0.002506265664160401, ["xor     r12d, r12d", "jmp     loc_5DE4"], ["xor~r12d,r12d", "jmp~FOO"]], [0, 0, 8, 1, 0, 1, 0, 0, 9, 0, 0.06516290726817042, ["sub     q, [rbp+buf]"], ["sub~q,[rbp+0]"]]], "func_feature": [13, 16, 49, 2, 58, 86, 4, 219, 0.03172, 2, 15], "succs": [[], [0, 47], [19], [2, 6], [8, 14], [10, 4], [19], [25, 6], [1, 6], [33, 44], [16, 9], [39], [11, 36], [11, 29], [26, 54], [3], [21, 15], [12, 13], [17, 20], [24, 1], [42], [27], [5], [5, 22], [1], [24], [56, 37], [32, 35], [57, 27], [48], [34], [34, 30], [41, 55], [3], [33, 31], [40, 49], [45], [51], [18, 43], [52, 38], [38], [40, 55], [28], [42], [31], [45, 46], [48], [], [39], [50, 55], [40, 55], [51, 53], [28], [7], [7], [28], [7], [3]], "fname": "quote_name", "n_num": 58}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 1, 5, 0, 0, 3, 0, 0, 0, 0, 0.05952380952380952, ["lea     rcx, [rdx+1]", "mov     [rdi+28h], rcx", "mov     byte ptr [rdx], 20h ; ' '"], ["lea~rcx,[rdx+0]", "mov~[rdi+0],rcx", "mov~<TAG>,<STR>"]], [0, 0, 5, 0, 0, 4, 0, 0, 2, -1, 0.26190476190476186, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rdx, [rdi+28h]", "cmp     rdx, [rdi+30h]", "jnb     short loc_5F90"], ["mov~rdi,<TAG>", "mov~rdx,[rdi+0]", "cmp~rdx,[rdi+0]", "jnb~FOO"]], [1, 0, 5, 2, 3, 14, 1, 3, 1, -1, 0.09523809523809523, ["xor     esi, esi; flags", "mov     rbp, name", "call    gnu_mbswidth", "mov     rsi, cs:stdout@@GLIBC_2_2_5; stream", "sub     ebx, eax", "mov     eax, 0", "cmovs   ebx, eax", "mov     rdi, name; s", "call    _fputs_unlocked", "mov     rdi, name; s", "movsxd  name, ebx", "call    _strlen", "add     rbp, rax", "nop     word ptr [rax+rax+00h]"], ["xor~esi,esi", "mov~rbp,name", "call~FOO", "mov~rsi,<TAG>", "sub~ebx,eax", "mov~eax,0", "cmovs~ebx,eax", "mov~rdi,name", "call~FOO", "mov~rdi,name", "movsxd~name,ebx", "call~FOO", "add~rbp,rax", "nop~[ord ptr [rax+0]"]], [1, 0, 7, 1, 0, 6, 1, 1, 0, 1, 0.0, ["push    rbp", "push    rbx", "mov     ebx, edx", "sub     rsp, 8", "test    name, name", "jz      loc_5FA0"], ["push~rbp", "push~rbx", "mov~ebx,edx", "sub~rsp,0", "test~name,name", "jz~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 2, -1, 0.0, ["mov     rax, cs:dired_pos", "lea     rax, [len+rax+1]", "mov     cs:dired_pos, rax", "add     rsp, 8", "pop     rbx", "pop     len", "retn"], ["mov~rax,<TAG>", "lea~rax,[len+0]", "mov~<TAG>,rax", "add~rsp,0", "pop~rbx", "pop~len", "retn"]], [1, 0, 1, 0, 1, 7, 1, 2, 1, 0, 0.023809523809523808, ["mov     rcx, id", "lea     id, aLu; \"%*lu \"", "mov     edi, 1", "xor     eax, eax", "movsxd  rbp, ebx", "call    ___printf_chk", "jmp     short loc_5F6C"], ["mov~rcx,id", "lea~id,<TAG>", "mov~edi,0", "xor~eax,eax", "movsxd~rbp,ebx", "call~FOO", "jmp~FOO"]], [2, 0, 5, 1, 0, 3, 0, 1, 4, -1, 0.19047619047619047, ["sub     ebx, 1", "cmp     ebx, 0FFFFFFFFh", "jnz     short loc_5F48"], ["sub~ebx,0", "cmp~ebx,0", "jnz~FOO"]], [0, 1, 5, 0, 1, 3, 0, 2, 3, -1, 0.05952380952380952, ["mov     esi, 20h ; ' '; int", "call    ___overflow", "jmp     short loc_5F64"], ["mov~esi,<STR>", "call~FOO", "jmp~FOO"]]], "func_feature": [5, 3, 9, 0, 8, 10, 3, 47, 0.08631, 3, 5], "succs": [[6], [0, 7], [1], [2, 5], [], [4], [1, 4], [6]], "fname": "format_user_or_group", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[1, 0, 4, 1, 0, 6, 1, 1, 0, 0, 0.0, ["push    rbx", "lea     rax, string; \"?\"", "mov     ebx, edi", "sub     rsp, 10h", "test    dl, dl", "jz      short loc_5FDD"], ["push~rbx", "lea~rax,<TAG>", "mov~ebx,edi", "sub~rsp,0", "test~dl,dl", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0.0, [], []], [1, 0, 1, 1, 0, 6, 0, 1, 0, -1, 0.25, ["add     rsp, 10h", "mov     edx, esi; width", "mov     rsi, u; id", "pop     u", "mov     rdi, rax; uid", "jmp     format_user_or_group"], ["add~rsp,0", "mov~edx,esi", "mov~rsi,u", "pop~u", "mov~rdi,rax", "jmp~FOO"]], [0, 0, 2, 0, 1, 4, 0, 2, 0, 0, 0.0, ["mov     [rsp+18h+width], esi", "call    getuser", "mov     esi, [rsp+18h+width]", "jmp     short loc_5FDD"], ["mov~[rsp+0],esi", "call~FOO", "mov~esi,[rsp+0]", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 1, 1, 0, 1, 0.08333333333333333, ["xor     eax, eax", "cmp     cs:numeric_ids, 0", "jz      short loc_5FF0"], ["xor~eax,eax", "cmp~<TAG>,0", "jz~FOO"]]], "func_feature": [1, 2, 5, 0, 5, 6, 2, 19, 0.06667, 2, 2], "succs": [[2, 4], [], [1], [2], [2, 3]], "fname": "format_user", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 10, 0, 0, 2, 0, 1, 0, 0, 0.08181818181818182, ["cmp     rcx, __value", "jz      loc_60BA"], ["cmp~rcx,__value", "jz~FOO"]], [1, 0, 11, 1, 0, 10, 1, 1, 0, 6, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rcx, [__o+18h]", "mov     rbx, [__o+10h]", "mov     rbp, rcx", "sub     rbp, rbx", "shr     ebp, 3", "test    ebp, ebp", "jz      loc_60AF"], ["push~r12", "push~rbp", "push~rbx", "mov~rcx,[__o+0]", "mov~rbx,[__o+0]", "mov~rbp,rcx", "sub~rbp,rbx", "shr~ebp,0", "test~ebp,ebp", "jz~FOO"]], [0, 0, 4, 0, 0, 4, 0, 0, 5, 1, 0.24545454545454545, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_60C3"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [2, 0, 6, 1, 1, 8, 1, 2, 4, 2, 0.2636363636363636, ["mov     rdx, [rbx]", "xor     eax, eax", "mov     rsi, rbp", "mov     edi, 1", "add     rbx, 8", "call    ___printf_chk", "cmp     rbx, r12", "jnz     short loc_6078"], ["mov~rdx,<TAG>", "xor~eax,eax", "mov~rsi,rbp", "mov~edi,0", "add~rbx,0", "call~FOO", "cmp~rbx,r12", "jnz~FOO"]], [0, 0, 6, 0, 1, 7, 0, 1, 3, 3, 0.2636363636363636, ["mov     rax, [__o1+18h]", "lea     r12, [__value+rbp*8]", "lea     rbp, aLu_0; \" %lu\"", "mov     [__o1+10h], rax", "mov     __o1, cs:stdout@@GLIBC_2_2_5; stream", "call    _fputs_unlocked", "nop     dword ptr [rax+00000000h]"], ["mov~rax,[__o1+0]", "lea~r12,<TAG>", "lea~rbp,<TAG>", "mov~[__o1+0],rax", "mov~__o1,<TAG>", "call~FOO", "nop~[word ptr [rax+0]"]], [1, 0, 1, 0, 0, 5, 0, 1, 6, 0, 0.07272727272727272, ["pop     rbx", "pop     rbp", "pop     r12", "mov     esi, 0Ah; int", "jmp     ___overflow"], ["pop~rbx", "pop~rbp", "pop~r12", "mov~esi,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 3, 0, 0, 6, -1, 0.06363636363636363, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0"]], [0, 0, 8, 3, 0, 14, 1, 1, 2, 4, 0.20909090909090908, ["movsxd  rax, dword ptr [__o1+30h]", "mov     rdx, rax", "add     rax, rcx", "mov     rcx, [__o1+20h]", "not     edx", "movsxd  rdx, edx", "and     rax, rdx", "mov     rdx, [__o1+8]", "mov     r8, rcx", "mov     [__o1+18h], rax", "sub     r8, rdx", "sub     rax, rdx", "cmp     rax, r8", "jg      short loc_60B4"], ["movsxd~rax,[word ptr [__o1+0]", "mov~rdx,rax", "add~rax,rcx", "mov~rcx,[__o1+0]", "not~edx", "movsxd~rdx,edx", "and~rax,rdx", "mov~rdx,[__o1+0]", "mov~r8,rcx", "mov~[__o1+0],rax", "sub~r8,rdx", "sub~rax,rdx", "cmp~rax,r8", "jg~FOO"]], [1, 0, 9, 0, 0, 2, 1, 1, 2, 5, 0.0, ["or      byte ptr [__o1+50h], 2", "jmp     loc_6026"], ["or~[yte ptr [__o1+0],0", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 3, 4, 0.0, ["mov     [__o1+18h], rcx", "jmp     short loc_6052"], ["mov~[__o1+0],rcx", "jmp~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 1, -1, 0.0, ["pop     rbx", "pop     rbp", "pop     r12", "retn"], ["pop~rbx", "pop~rbp", "pop~r12", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 7, -1, 0.0, [], []]], "func_feature": [2, 4, 9, 0, 12, 15, 2, 61, 0.1, 2, 5], "succs": [[8, 7], [0, 10], [5, 6], [2, 3], [3], [11], [10], [9, 4], [7], [4], [], []], "fname": "dired_dump_obstack", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     eax, cs:interrupt_signal", "test    eax, eax", "jnz     short locret_60F9"], ["mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 1, 1, 0, 3, 0, 0, 0, 1, 0.0, ["mov     eax, cs:stop_signal_count", "add     eax, 1", "mov     cs:stop_signal_count, eax"], ["mov~eax,<TAG>", "add~eax,0", "mov~<TAG>,eax"]]], "func_feature": [0, 1, 1, 0, 3, 3, 0, 7, 0.0, 2, 1], "succs": [[1, 2], [], [1]], "fname": "stophandler", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.125, ["mov     eax, cs:exit_status", "test    eax, eax", "jnz     short loc_6138"], ["mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [0, 0, 4, 0, 3, 17, 3, 4, 0, 2, 0.0, ["push    r12", "push    rbp", "mov     rbp, message", "push    rbx", "mov     ebx, edi", "mov     serious, file; arg", "call    quotearg_colon", "mov     r12, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "xor     edi, edi; status", "xor     eax, eax", "mov     rcx, r12", "mov     rdx, message; format", "call    _error", "test    bl, bl", "jz      short loc_6140"], ["push~r12", "push~rbp", "mov~rbp,message", "push~rbx", "mov~ebx,edi", "mov~serious,file", "call~FOO", "mov~r12,rax", "call~FOO", "mov~esi,<TAG>", "xor~edi,edi", "xor~eax,eax", "mov~rcx,r12", "mov~rdx,message", "call~FOO", "test~bl,bl", "jz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["pop     rbx", "pop     message", "pop     r12", "retn"], ["pop~rbx", "pop~message", "pop~r12", "retn"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, -1, 0.041666666666666664, ["mov     cs:exit_status, 2"], ["mov~<TAG>,0"]], [1, 0, 0, 0, 0, 5, 0, 0, 2, 0, 0.0, ["pop     rbx", "mov     cs:exit_status, 1", "pop     message", "pop     r12", "retn"], ["pop~rbx", "mov~<TAG>,0", "pop~message", "pop~r12", "retn"]]], "func_feature": [3, 4, 5, 0, 5, 5, 7, 30, 0.03333, 1, 0], "succs": [[2, 4], [0, 3], [], [2], []], "fname": "file_failure", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 7, 0, 0, 3, 0, 1, 0, 0, 0.19999999999999998, ["mov     rax, [a+68h]", "cmp     [r8+68h], rax", "jg      short loc_61D0"], ["mov~rax,[a+0]", "cmp~[r8+0],rax", "jg~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 1, 2, 0.14545454545454545, ["test    cl, cl", "jnz     short loc_61A0"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 8, 0, 0, 3, 1, 1, 2, 2, 0.02727272727272727, ["test    dl, dl", "mov     eax, 1", "jz      short loc_61A0"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [0, 0, 1, 0, 0, 3, 0, 1, 5, -1, 0.06363636363636363, ["mov     b, [a]; s2", "mov     a, [b]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 4, -1, 0.12727272727272726, ["mov     rax, [a+70h]", "sub     eax, [r8+70h]", "jnz     short locret_619E"], ["mov~rax,[a+0]", "sub~eax,[r8+0]", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 3, -1, 0.1909090909090909, ["jl      short loc_61C8"], ["jl~FOO"]], [4, 0, 11, 0, 0, 14, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "mov     r8, b", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_6191"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "mov~r8,b", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 10, 0, 0, 2, 1, 1, 1, 1, 0.00909090909090909, ["test    cl, cl", "jnz     short loc_61D0"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 6, -1, 0.0, [], []], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 5, 8, 0, 12, 15, 0, 36, 0.06364, 0, 1], "succs": [[9, 5], [0, 2], [0, 11], [10], [11, 3], [4, 7], [8, 1], [], [1, 9], [], [], []], "fname": "rev_strcmp_df_mtime", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 8, 0, 0, 2, 1, 1, 1, 0, 0.013888888888888888, ["test    cl, cl", "jnz     short loc_6240"], ["test~cl,cl", "jnz~FOO"]], [0, 0, 5, 0, 0, 3, 0, 1, 2, 0, 0.19444444444444442, ["mov     rax, [b+40h]", "cmp     [a+40h], rax", "jg      short loc_6240"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 4, 0, 0.08333333333333333, ["mov     b, [b]", "mov     a, [a]", "jmp     xstrcoll"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [4, 0, 9, 0, 0, 13, 2, 1, 0, 0, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_620E"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, 0, 0.15277777777777776, ["mov     eax, 1", "jl      short locret_621B"], ["mov~eax,0", "jl~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 1, 0, 0.16666666666666666, ["test    cl, cl", "jnz     short loc_6220"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 6, 0, 0, 3, 1, 1, 2, 0, 0.041666666666666664, ["test    dl, dl", "mov     eax, 1", "jz      short loc_6220"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 5, 7, 0, 10, 13, 0, 31, 0.06528, 0, 0], "succs": [[], [0, 7], [0, 6], [], [3], [1, 7], [9, 4], [8, 2], [9, 2], []], "fname": "xstrcoll_df_size", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 8, 0, 0, 2, 1, 1, 0, 0, 0.15555555555555556, ["test    cl, cl", "jnz     short loc_6290"], ["test~cl,cl", "jnz~FOO"]], [4, 0, 10, 0, 0, 13, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_627E"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 1, 1, 0.011111111111111112, ["test    cl, cl", "jnz     short loc_62C0"], ["test~cl,cl", "jnz~FOO"]], [0, 0, 1, 0, 0, 3, 0, 1, 4, -1, 0.06666666666666667, ["mov     b, [b]; s2", "mov     a, [a]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 3, -1, 0.16666666666666669, ["jl      short loc_62B0"], ["jl~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 5, 0, 0, 3, 0, 1, 2, 1, 0.2, ["mov     rax, [b+40h]", "cmp     [a+40h], rax", "jg      short loc_62C0"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [1, 0, 7, 0, 0, 3, 1, 1, 2, 2, 0.03333333333333333, ["test    dl, dl", "mov     eax, 1", "jz      short loc_6290"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 5, -1, 0.0, [], []]], "func_feature": [0, 5, 7, 0, 11, 13, 0, 32, 0.05758, 0, 0], "succs": [[6, 7], [0, 2], [0, 5], [10], [9, 3], [], [4, 5], [8, 6], [], [], []], "fname": "strcmp_df_size", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[1, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.15277777777777776, ["mov     eax, 1", "jl      short locret_630E"], ["mov~eax,0", "jl~FOO"]], [0, 0, 5, 0, 0, 3, 0, 1, 2, 1, 0.19444444444444442, ["mov     rax, [a+40h]", "cmp     [r8+40h], rax", "jg      short loc_6330"], ["mov~rax,[a+0]", "cmp~[r8+0],rax", "jg~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 1, 2, 0.16666666666666666, ["test    cl, cl", "jnz     short loc_6310"], ["test~cl,cl", "jnz~FOO"]], [4, 0, 9, 0, 0, 14, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "mov     r8, b", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_6301"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "mov~r8,b", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 1, 1, 0.013888888888888888, ["test    cl, cl", "jnz     short loc_6330"], ["test~cl,cl", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 5, -1, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 4, -1, 0.08333333333333333, ["mov     b, [a]", "mov     a, [b]", "jmp     xstrcoll"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [1, 0, 6, 0, 0, 3, 1, 1, 2, 2, 0.041666666666666664, ["test    dl, dl", "mov     eax, 1", "jz      short loc_6310"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]]], "func_feature": [0, 5, 7, 0, 10, 13, 0, 32, 0.06528, 0, 0], "succs": [[8, 6], [0, 9], [1, 7], [2, 4], [9, 2], [], [5], [8, 1], [], []], "fname": "rev_xstrcoll_df_size", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 3, 0, 0, 1, 0, 1, 3, -1, 0.16666666666666669, ["jl      short loc_63A0"], ["jl~FOO"]], [0, 0, 5, 0, 0, 3, 0, 1, 2, 1, 0.2, ["mov     rax, [a+40h]", "cmp     [r8+40h], rax", "jg      short loc_63B0"], ["mov~rax,[a+0]", "cmp~[r8+0],rax", "jg~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 1, 2, 0.15555555555555556, ["test    cl, cl", "jnz     short loc_6380"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 7, 0, 0, 3, 1, 1, 2, 2, 0.03333333333333333, ["test    dl, dl", "mov     eax, 1", "jz      short loc_6380"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [4, 0, 10, 0, 0, 14, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "mov     r8, b", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_6371"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "mov~r8,b", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 1, 1, 0.011111111111111112, ["test    cl, cl", "jnz     short loc_63B0"], ["test~cl,cl", "jnz~FOO"]], [0, 0, 1, 0, 0, 3, 0, 1, 4, -1, 0.06666666666666667, ["mov     b, [a]; s2", "mov     a, [b]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 5, -1, 0.0, [], []], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 5, 7, 0, 11, 13, 0, 33, 0.05758, 0, 0], "succs": [[], [0, 7], [8, 1], [2, 4], [2, 10], [3, 6], [8, 3], [9], [], [], []], "fname": "rev_strcmp_df_size", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 2, -1, 0.09523809523809523, ["mov     b, [b]", "mov     a, [a]", "jmp     xstrcoll"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 1, -1, 0.19047619047619047, ["test    cl, cl", "jnz     short loc_6400"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 3, 0, 0, 3, 1, 1, 2, -1, 0.07142857142857142, ["test    dl, dl", "mov     eax, 1", "jz      short loc_6400"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [4, 0, 7, 0, 0, 13, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_63EE"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 1, 1, 0.023809523809523808, ["test    cl, cl", "jnz     short loc_6410"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 5, 5, 0, 8, 9, 0, 26, 0.04762, 0, 0], "succs": [[], [0], [1, 3], [1, 7], [2, 5], [2, 6], [], []], "fname": "xstrcoll_df_name", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 2, -1, 0.09523809523809523, ["mov     b, [b]; s2", "mov     a, [a]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 1, -1, 0.19047619047619047, ["test    cl, cl", "jnz     short loc_6460"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 3, 0, 0, 3, 1, 1, 2, -1, 0.07142857142857142, ["test    dl, dl", "mov     eax, 1", "jz      short loc_6460"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [4, 0, 7, 0, 0, 13, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_644E"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 1, 1, 0.023809523809523808, ["test    cl, cl", "jnz     short loc_6470"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 5, 5, 0, 8, 9, 0, 26, 0.04762, 0, 0], "succs": [[], [0], [1, 3], [1, 7], [2, 5], [2, 6], [], []], "fname": "strcmp_df_name", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 2, -1, 0.09523809523809523, ["mov     b, [a]", "mov     a, [b]", "jmp     xstrcoll"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 1, -1, 0.19047619047619047, ["test    cl, cl", "jnz     short loc_64C0"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 3, 0, 0, 3, 1, 1, 2, -1, 0.07142857142857142, ["test    dl, dl", "mov     eax, 1", "jz      short loc_64C0"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [4, 0, 7, 0, 0, 14, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "mov     r8, b", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_64B1"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "mov~r8,b", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 1, 1, 0.023809523809523808, ["test    cl, cl", "jnz     short loc_64D0"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 5, 5, 0, 8, 9, 0, 27, 0.04762, 0, 0], "succs": [[], [0], [1, 3], [1, 7], [2, 5], [2, 6], [], []], "fname": "rev_xstrcoll_df_name", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.09523809523809523, ["mov     b, [a]; s2", "mov     a, [b]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 1, -1, 0.19047619047619047, ["test    cl, cl", "jnz     short loc_6520"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 3, 0, 0, 3, 1, 1, 2, -1, 0.07142857142857142, ["test    dl, dl", "mov     eax, 1", "jz      short loc_6520"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [4, 0, 7, 0, 0, 14, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "mov     r8, b", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_6511"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "mov~r8,b", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 1, 1, 0.023809523809523808, ["test    cl, cl", "jnz     short loc_6530"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 5, 5, 0, 8, 9, 0, 27, 0.04762, 0, 0], "succs": [[6], [0, 2], [0, 7], [1, 4], [1, 5], [], [], []], "fname": "rev_strcmp_df_name", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 1, 1, 0, 0, 3, 0, 1, 0, 0, 0.012987012987012988, ["cmp     esi, 0C000h", "setz    al", "jmp     short loc_65B8"], ["cmp~esi,<STR>", "setz~al", "jmp~FOO"]], [1, 1, 3, 0, 0, 3, 0, 1, 7, -1, 0.049783549783549784, ["cmp     esi, 1000h", "mov     eax, 7Ch ; '|'", "jz      short locret_6630"], ["cmp~esi,<STR>", "mov~eax,0", "jz~FOO"]], [1, 0, 14, 0, 0, 3, 1, 1, 3, 5, 0.1471861471861472, ["test    cl, cl", "mov     eax, 2Fh ; '/'", "jnz     short locret_6562"], ["test~cl,cl", "mov~eax,0", "jnz~FOO"]], [1, 0, 15, 0, 0, 3, 0, 1, 2, 6, 0.045454545454545456, ["cmp     eax, 4000h", "setz    cl", "jmp     short loc_657D"], ["cmp~eax,0", "setz~cl", "jmp~FOO"]], [2, 0, 15, 0, 0, 5, 1, 0, 2, 6, 0.047619047619047616, ["cmp     edx, 3", "setz    cl", "cmp     edx, 9", "setz    al", "or      ecx, eax"], ["cmp~edx,0", "setz~cl", "cmp~edx,0", "setz~al", "or~ecx,eax"]], [1, 0, 13, 0, 0, 3, 1, 1, 4, 4, 0.15584415584415584, ["xor     eax, eax", "cmp     cs:indicator_style_0, 1", "jz      short locret_6562"], ["xor~eax,eax", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 11, 0, 0, 2, 1, 1, 5, 3, 0.16666666666666666, ["test    dil, dil", "jnz     short loc_65D8"], ["test~dil,dil", "jnz~FOO"]], [3, 0, 0, 0, 0, 6, 2, 0, 3, -1, 0.0, ["and     esi, 49h", "cmp     esi, 1", "sbb     eax, eax", "not     eax", "and     eax, 2Ah", "retn"], ["and~esi,0", "cmp~esi,0", "sbb~eax,eax", "not~eax", "and~eax,0", "retn"]], [1, 0, 2, 0, 0, 3, 1, 1, 2, -1, 0.008658008658008658, ["xor     eax, eax", "cmp     cs:indicator_style_0, 3", "jz      loc_6608"], ["xor~eax,eax", "cmp~<TAG>,0", "jz~FOO"]], [2, 0, 5, 0, 0, 3, 0, 1, 6, 2, 0.07792207792207792, ["cmp     edx, 6", "mov     eax, 40h ; '@'", "jz      locret_6620"], ["cmp~edx,0", "mov~eax,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 7, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 7, -1, 0.0, ["rep retn"], ["retn"]], [3, 0, 5, 0, 0, 4, 1, 1, 6, -1, 0.07792207792207792, ["and     esi, 0F000h", "mov     eax, 40h ; '@'", "cmp     esi, 0A000h", "jz      short locret_6628"], ["and~esi,0", "mov~eax,0", "cmp~esi,0", "jz~FOO"]], [2, 0, 3, 0, 0, 3, 0, 1, 7, 1, 0.049783549783549784, ["cmp     edx, 1", "mov     eax, 7Ch ; '|'", "jz      locret_6638"], ["cmp~edx,0", "mov~eax,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 8, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 1, 0, 0, 2, 0, 0, 8, -1, 0.012987012987012988, ["cmp     edx, 7", "setz    al"], ["cmp~edx,0", "setz~al"]], [0, 0, 0, 0, 0, 1, 0, 0, 8, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 0, 0, 0, 3, 1, 0, 9, -1, 0.0, ["neg     eax", "and     eax, 3Dh", "retn"], ["neg~eax", "and~eax,0", "retn"]], [0, 0, 22, 0, 0, 2, 1, 1, 0, 8, 0.0, ["test    dil, dil", "jz      short loc_6568"], ["test~dil,dil", "jz~FOO"]], [2, 0, 18, 0, 0, 4, 1, 1, 1, 7, 0.023809523809523808, ["mov     eax, esi", "and     eax, 0F000h", "cmp     eax, 8000h", "jnz     short loc_65C0"], ["mov~eax,esi", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 17, 0, 0, 3, 1, 1, 1, 7, 0.01948051948051948, ["xor     eax, eax", "cmp     edx, 5", "jz      short locret_65D0"], ["xor~eax,eax", "cmp~edx,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 12, 13, 0, 23, 26, 2, 61, 0.03896, 1, 0], "succs": [[17], [0, 14], [5, 22], [2], [2], [22, 6], [9, 12], [], [22, 7], [10, 13], [], [], [1, 11], [16, 15], [], [17], [], [], [19, 21], [8, 3], [], [4, 20], []], "fname": "get_type_indicator", "n_num": 23}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[1, 0, 6, 1, 0, 2, 0, 0, 0, 0, 0.026190476190476195, ["movsxd  rax, cs:scontext_width", "add     rax, 1"], ["movsxd~rax,<TAG>", "add~rax,0"]], [1, 0, 8, 0, 0, 2, 0, 1, 3, 4, 0.03928571428571429, ["cmp     cs:print_scontext, 0", "jnz     short loc_6779"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 4, 5, 0.0642857142857143, ["cmp     cs:format_0, 4", "jz      short loc_67C0"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 5, 1, 0.09047619047619049, ["mov     rdx, [rsp+2C8h+var_20]", "xor     rdx, fs:28h", "mov     rax, rbx", "jnz     loc_67D2"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "mov~rax,rbx", "jnz~FOO"]], [0, 0, 4, 1, 1, 9, 2, 2, 4, 2, 0.1619047619047619, ["mov     rdx, cs:filename_quoting_options; options", "mov     rsi, [f+0]; name", "lea     rcx, [rsp+2C8h+name_width]; width", "xor     edi, edi; out", "call    quote_name", "mov     eax, cs:indicator_style_0", "add     len, [rsp+2C8h+name_width]", "test    eax, eax", "jz      short loc_66F2"], ["mov~rdx,<TAG>", "mov~rsi,[f+0]", "lea~rcx,[rsp+0]", "xor~edi,edi", "call~FOO", "mov~eax,<TAG>", "add~len,[rsp+0]", "test~eax,eax", "jz~FOO"]], [0, 0, 3, 1, 1, 8, 1, 1, 5, 2, 0.0, ["movzx   edi, byte ptr [f+0B0h]; stat_ok", "mov     edx, [f+0A0h]; type", "mov     esi, [f+28h]; mode", "call    get_type_indicator", "test    al, al", "setnz   al", "movzx   eax, al", "add     len, rax"], ["movzx~edi,[yte ptr [f+0]", "mov~edx,[f+0]", "mov~esi,[f+0]", "call~FOO", "test~al,al", "setnz~al", "movzx~eax,al", "add~len,rax"]], [0, 0, 5, 1, 0, 2, 0, 1, 5, 3, 0.03571428571428572, ["add     len, rax", "jmp     loc_66AC"], ["add~len,rax", "jmp~FOO"]], [1, 0, 6, 1, 1, 4, 0, 2, 5, 4, 0.01666666666666667, ["mov     rdi, [f+0A8h]; s", "call    _strlen", "add     rax, 1", "jmp     short loc_6784"], ["mov~rdi,[f+0]", "call~FOO", "add~rax,0", "jmp~FOO"]], [2, 0, 14, 1, 0, 4, 0, 1, 2, 5, 0.034523809523809526, ["movsxd  rbx, cs:inode_number_width", "add     rbx, 1", "cmp     cs:print_block_size, 0", "jz      loc_6790"], ["movsxd~rbx,<TAG>", "add~rbx,0", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 19, 0, 0, 2, 0, 1, 1, 6, 0.01904761904761905, ["cmp     cs:format_0, 4", "jz      loc_67A0"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 1, 0, 1, 0, 4, 0, 0, 6, -1, 0.0, ["add     rsp, 2B8h", "pop     rbx", "pop     f", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~f", "retn"]], [1, 0, 11, 1, 0, 2, 0, 0, 3, 5, 0.030952380952380953, ["movsxd  rax, cs:block_size_width", "add     rax, 1"], ["movsxd~rax,<TAG>", "add~rax,0"]], [1, 0, 13, 0, 0, 2, 0, 1, 3, 6, 0.026190476190476195, ["cmp     cs:format_0, 4", "jnz     loc_6691"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 4, 3, 0.029761904761904764, ["jmp     loc_66AC"], ["jmp~FOO"]], [0, 0, 10, 1, 0, 1, 0, 0, 4, 4, 0.07857142857142858, ["add     len, rax"], ["add~len,rax"]], [1, 1, 11, 1, 2, 10, 0, 3, 4, 5, 0.01666666666666667, ["mov     rdi, [f+50h]; n", "mov     r8, cs:output_block_size; to_block_size", "lea     rsi, [rsp+2C8h+buf]; buf", "mov     edx, cs:human_output_opts; opts", "mov     ecx, 200h; from_block_size", "call    human_readable", "mov     rdi, rax; s", "call    _strlen", "add     rax, 1", "jmp     loc_669C"], ["mov~rdi,[f+0]", "mov~r8,<TAG>", "lea~rsi,[rsp+0]", "mov~edx,<TAG>", "mov~ecx,<STR>", "call~FOO", "mov~rdi,rax", "call~FOO", "add~rax,0", "jmp~FOO"]], [0, 0, 15, 0, 0, 1, 1, 0, 1, 5, 0.026190476190476195, ["xor     ebx, ebx"], ["xor~ebx,ebx"]], [1, 1, 21, 1, 0, 9, 1, 1, 0, 6, 0.0, ["push    rbp", "push    rbx", "mov     rbp, f", "sub     rsp, 2B8h", "mov     rax, fs:28h", "mov     [rsp+2C8h+var_20], rax", "xor     eax, eax", "cmp     cs:print_inode, 0", "jz      loc_6720"], ["push~rbp", "push~rbx", "mov~rbp,f", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 3, 3, 0.18214285714285716, ["cmp     cs:print_scontext, 0", "jnz     loc_6770"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 2, 4, 0.10833333333333334, ["cmp     cs:print_block_size, 0", "jz      loc_669F"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 15, 0, 2, 7, 0, 3, 2, 5, 0.02023809523809524, ["mov     f, [f+18h]; i", "lea     rsi, [rsp+2C8h+buf]; buf", "call    umaxtostr", "mov     rdi, rax; s", "call    _strlen", "lea     rbx, [rax+1]", "jmp     loc_6722"], ["mov~f,[f+0]", "lea~rsi,[rsp+0]", "call~FOO", "mov~rdi,rax", "call~FOO", "lea~rbx,[rax+0]", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [8, 6, 23, 1, 22, 30, 6, 81, 0.04578, 12, 11], "succs": [[6], [0, 13], [0, 7], [10, 21], [3, 5], [3], [4], [6], [1, 11], [8, 20], [], [14], [11, 15], [4], [18], [14], [19], [16, 9], [2, 4], [18, 12], [19], []], "fname": "length_of_file_name_and_frills", "n_num": 22}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 22, 0, 0, 2, 1, 1, 0, 0, 0.22698412698412698, ["test    max_cols, max_cols", "jz      short loc_6959"], ["test~max_cols,max_cols", "jz~FOO"]], [0, 0, 36, 0, 0, 13, 0, 0, 0, 3, 0.0, ["mov     r9, cs:cwd_n_used", "mov     rcx, cs:max_idx", "push    r14", "push    r13", "push    r12", "push    rbp", "mov     r12d, edi", "cmp     r9, rcx", "push    rbx", "mov     rbx, rcx", "cmovbe  rbx, r9", "cmp     max_cols, cs:column_info_alloc_9289", "jbe     loc_6901"], ["mov~r9,<TAG>", "mov~rcx,<TAG>", "push~r14", "push~r13", "push~r12", "push~rbp", "mov~r12d,edi", "cmp~r9,rcx", "push~rbx", "mov~rbx,rcx", "cmovbe~rbx,r9", "cmp~max_cols,<TAG>", "jbe~FOO"]], [0, 0, 23, 0, 0, 2, 0, 0, 8, -1, 0.2007936507936508, ["mov     r9, cs:cwd_n_used", "mov     cs:column_info_alloc_9289, rbp"], ["mov~r9,<TAG>", "mov~<TAG>,rbp"]], [0, 0, 16, 0, 1, 7, 1, 2, 4, -1, 0.1595238095238095, ["mov     rax, cs:sorted_file", "mov     rdi, [rax+filesno*8]; f", "call    length_of_file_name_and_frills", "test    max_cols, max_cols", "mov     r10, rax", "mov     rdi, cs:cwd_n_used", "jz      loc_6A20"], ["mov~rax,<TAG>", "mov~rdi,<TAG>", "call~FOO", "test~max_cols,max_cols", "mov~r10,rax", "mov~rdi,<TAG>", "jz~FOO"]], [1, 0, 16, 1, 0, 3, 0, 0, 5, -1, 0.05952380952380952, ["add     filesno, 1", "cmp     filesno, rdi", "jb      loc_6968"], ["add~filesno,0", "cmp~filesno,rdi", "jb~FOO"]], [0, 0, 16, 0, 0, 2, 1, 0, 3, -1, 0.15079365079365079, ["xor     ebp, ebp", "nop     dword ptr [rax+00h]"], ["xor~ebp,ebp", "nop~[word ptr [rax+0]"]], [1, 0, 16, 0, 0, 3, 0, 1, 6, -1, 0.12857142857142856, ["cmp     byte ptr [rcx], 0", "lea     r8, [rsi+1]", "jz      short loc_69F5"], ["cmp~<TAG>,0", "lea~r8,[rsi+0]", "jz~FOO"]], [0, 0, 16, 0, 0, 6, 1, 1, 5, -1, 0.12222222222222222, ["mov     r14, cs:line_length", "mov     rcx, cs:column_info_0", "xor     esi, esi", "lea     r11, [name_length+2]", "lea     r13, [rdi-1]", "jmp     short loc_6A01"], ["mov~r14,<TAG>", "mov~rcx,<TAG>", "xor~esi,esi", "lea~r11,[name_length+0]", "lea~r13,[rdi-1]+0]", "jmp~FOO"]], [1, 0, 16, 1, 0, 4, 0, 1, 7, -1, 0.06190476190476191, ["add     rcx, 18h", "cmp     max_cols, r8", "mov     rsi, r8", "jz      short loc_6A20"], ["add~rcx,0", "cmp~max_cols,r8", "mov~rsi,r8", "jz~FOO"]], [0, 0, 16, 0, 0, 2, 1, 1, 7, -1, 0.08492063492063492, ["test    r12b, r12b", "jnz     short loc_69A8"], ["test~r12b,r12b", "jnz~FOO"]], [2, 0, 3, 1, 0, 3, 0, 1, 7, -1, 0.0, ["sub     rax, 18h", "cmp     byte ptr [rax+18h], 0", "jnz     short loc_6A64"], ["sub~rax,0", "cmp~[yte ptr [rax+0],0", "jnz~FOO"]], [2, 0, 3, 1, 0, 3, 0, 1, 6, -1, 0.026984126984126985, ["sub     cols, 1", "cmp     cols, 1", "jnz     short loc_6A50"], ["sub~cols,0", "cmp~cols,0", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 0, 3, -1, 0.11904761904761904, ["cmp     max_cols, 1", "jbe     short loc_6A64"], ["cmp~max_cols,0", "jbe~FOO"]], [0, 0, 17, 0, 0, 2, 1, 1, 2, -1, 0.24285714285714285, ["test    r9, r9", "jz      loc_6A2D"], ["test~r9,r9", "jz~FOO"]], [1, 0, 31, 1, 1, 6, 0, 2, 3, 2, 0.038492063492063494, ["lea     rbp, [max_cols+max_cols]", "lea     rsi, [rbp+max_cols+0]", "shl     rsi, 4; n", "call    xrealloc", "mov     cs:column_info_0, rax", "jmp     loc_6852"], ["lea~rbp,<TAG>", "lea~rsi,[rbp+0]", "shl~rsi,0", "call~FOO", "mov~<TAG>,rax", "jmp~FOO"]], [1, 0, 32, 1, 0, 4, 0, 0, 2, 1, 0.017063492063492062, ["mov     edx, 30h ; '0'", "mov     rax, rdx", "mul     max_cols", "jo      short loc_6A9B"], ["mov~edx,0", "mov~rax,rdx", "mul~,max_cols", "jo~FOO"]], [1, 0, 21, 0, 0, 5, 1, 0, 2, -1, 0.03333333333333333, ["mov     rdi, cs:column_info_0", "lea     r8, [max_cols+max_cols*2+3]", "xor     esi, esi", "mov     edx, 3", "nop     dword ptr [rax+00000000h]"], ["mov~rdi,<TAG>", "lea~r8,[max_cols+0]", "xor~esi,esi", "mov~edx,0", "nop~[word ptr [rax+0]"]], [0, 0, 16, 1, 0, 5, 1, 1, 8, -1, 0.025396825396825397, ["mov     rax, filesno", "xor     edx, edx", "div     r8", "mov     r9, rdx", "jmp     short loc_69C0"], ["mov~rax,filesno", "xor~edx,edx", "div~,r8", "mov~r9,rdx", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 32, 1, 0, 4, 0, 0, 2, 1, 0.017063492063492062, ["mov     edx, 18h", "mov     rax, rdx", "mul     rcx", "jo      loc_6A9B"], ["mov~edx,0", "mov~rax,rdx", "mul~,rcx", "jo~FOO"]], [1, 0, 30, 4, 0, 12, 1, 1, 4, 1, 0.12142857142857143, ["mov     rax, cs:column_info_alloc_9289", "mov     rdi, rbp", "sub     rdi, rax", "add     rax, 1", "add     rax, rbp", "mov     rcx, rdi", "mov     rsi, rax", "setb    al", "movzx   eax, al", "imul    rcx, rsi", "test    rax, rax", "jnz     loc_6A9B"], ["mov~rax,<TAG>", "mov~rdi,rbp", "sub~rdi,rax", "add~rax,0", "add~rax,rbp", "mov~rcx,rdi", "mov~rsi,rax", "setb~al", "movzx~eax,al", "imul~rcx,rsi", "test~rax,rax", "jnz~FOO"]], [0, 0, 29, 1, 0, 5, 1, 1, 5, 1, 0.1373015873015873, ["xor     edx, edx", "mov     rax, rcx", "div     rdi", "cmp     rsi, rax", "jnz     loc_6A9B"], ["xor~edx,edx", "mov~rax,rcx", "div~,rdi", "cmp~rsi,rax", "jnz~FOO"]], [2, 0, 28, 1, 0, 5, 0, 0, 6, 1, 0.15317460317460319, ["mov     edx, 8", "shr     rcx, 1", "mov     rax, rdx", "mul     rcx", "jo      loc_6A9B"], ["mov~edx,0", "shr~rcx,0", "mov~rax,rdx", "mul~,rcx", "jo~FOO"]], [1, 0, 35, 0, 0, 5, 0, 0, 1, 2, 0.009523809523809525, ["mov     rax, rcx", "mov     by_columns, cs:column_info_0; p", "shr     rax, 1", "cmp     max_cols, rax", "jb      loc_6A70"], ["mov~rax,rcx", "mov~by_columns,<TAG>", "shr~rax,0", "cmp~max_cols,rax", "jb~FOO"]], [2, 0, 21, 1, 0, 6, 0, 0, 3, -1, 0.03888888888888889, ["mov     rax, [rdi+rdx*8-8]", "add     rsi, 8", "mov     byte ptr [rdi+rdx*8-18h], 1", "mov     [rdi+rdx*8-10h], rdx", "lea     rcx, [rax+rsi]", "nop     word ptr [rax+rax+00000000h]"], ["mov~rax,[rdi+0]", "add~rsi,0", "mov~[yte ptr [rdi+0],0", "mov~[rdi+0],rdx", "lea~rcx,<TAG>", "nop~[ord ptr [rax+0]"]], [1, 0, 21, 1, 0, 3, 0, 1, 5, -1, 0.04365079365079365, ["add     rdx, 3", "cmp     r8, rdx", "jnz     short loc_6920"], ["add~rdx,0", "cmp~r8,rdx", "jnz~FOO"]], [0, 0, 26, 0, 1, 5, 0, 1, 7, -1, 0.16746031746031745, ["lea     rdi, ds:0[rcx*8]; n", "call    xmalloc", "mov     rdx, cs:column_info_alloc_9289", "cmp     rbp, rdx", "jbe     short loc_68F3"], ["lea~rdi,<TAG>", "call~FOO", "mov~rdx,<TAG>", "cmp~rbp,rdx", "jbe~FOO"]], [0, 0, 16, 2, 0, 8, 2, 0, 8, -1, 0.025396825396825397, ["lea     rax, [r13+r8+0]", "xor     edx, edx", "div     r8", "xor     edx, edx", "mov     r9, rax", "mov     rax, filesno", "div     r9", "mov     r9, rax"], ["lea~rax,[r13+0]", "xor~edx,edx", "div~,r8", "xor~edx,edx", "mov~r9,rax", "mov~rax,filesno", "div~,r9", "mov~r9,rax"]], [2, 0, 4, 1, 0, 5, 0, 1, 4, -1, 0.07380952380952381, ["mov     rdx, cs:column_info_0", "lea     rax, [max_cols+max_cols*2]", "shl     rax, 3", "cmp     byte ptr [rdx+rax-18h], 0", "jnz     short loc_6A64"], ["mov~rdx,<TAG>", "lea~rax,<TAG>", "shl~rax,0", "cmp~[yte ptr [rdx+0],0", "jnz~FOO"]], [1, 0, 31, 1, 1, 5, 0, 1, 3, 2, 0.038492063492063494, ["lea     rsi, [rcx+rcx*2]", "shl     rsi, 3; n", "call    xrealloc", "mov     rbp, cs:max_idx", "mov     cs:column_info_0, rax"], ["lea~rsi,<TAG>", "shl~rsi,0", "call~FOO", "mov~rbp,<TAG>", "mov~<TAG>,rax"]], [2, 0, 21, 1, 0, 4, 0, 1, 4, -1, 0.04126984126984127, ["mov     qword ptr [rax], 3", "add     rax, 8", "cmp     rcx, rax", "jnz     short loc_6940"], ["mov~<TAG>,0", "add~rax,0", "cmp~rcx,rax", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 5, -1, 0.050793650793650794, ["lea     rax, [rdx+rax-30h]", "jmp     short loc_6A5A"], ["lea~rax,[rdx+0]", "jmp~FOO"]], [0, 0, 16, 0, 0, 8, 0, 0, 9, -1, 0.051587301587301584, ["mov     rdx, [rcx+10h]", "cmp     idx, rsi", "mov     rax, name_length", "cmovnz  rax, r11", "lea     rsi, [rdx+idx*8]", "mov     rdx, [rsi]", "cmp     rdx, rax", "jnb     short loc_69F5"], ["mov~rdx,[rcx+0]", "cmp~idx,rsi", "mov~rax,name_length", "cmovnz~rax,r11", "lea~rsi,<TAG>", "mov~rdx,<TAG>", "cmp~rdx,rax", "jnb~FOO"]], [0, 0, 25, 0, 0, 6, 0, 0, 8, -1, 0.007936507936507936, ["mov     rcx, cs:column_info_0", "lea     rsi, [rdx+rdx*2]", "lea     rdx, ds:8[rdx*8]", "lea     rcx, [rcx+rsi*8+10h]", "lea     rsi, ds:8[rbp*8]", "nop     dword ptr [rax]"], ["mov~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdx,<TAG>", "lea~rcx,[rcx+0]", "lea~rsi,<TAG>", "nop~<TAG>"]], [0, 0, 0, 0, 0, 7, 0, 0, 4, -1, 0.0, ["mov     rax, cols", "pop     cols", "pop     rbp", "pop     by_columns", "pop     r13", "pop     r14", "retn"], ["mov~rax,cols", "pop~cols", "pop~rbp", "pop~by_columns", "pop~r13", "pop~r14", "retn"]], [2, 0, 25, 3, 0, 6, 0, 1, 9, -1, 0.01904761904761905, ["mov     [rcx], rax", "add     rax, rdx", "add     rdx, 8", "add     rcx, 18h", "cmp     rsi, rdx", "jnz     short loc_68E0"], ["mov~<TAG>,rax", "add~rax,rdx", "add~rdx,0", "add~rcx,0", "cmp~rsi,rdx", "jnz~FOO"]], [0, 0, 16, 2, 0, 8, 0, 0, 10, -1, 0.0, ["mov     idx, [rcx+8]", "sub     r9, rdx", "mov     rdx, r9", "add     rdx, rax", "mov     [rcx+8], rdx", "mov     [rsi], rax", "cmp     [rcx+8], r14", "setb    byte ptr [rcx]"], ["mov~idx,[rcx+0]", "sub~r9,rdx", "mov~rdx,r9", "add~rdx,rax", "mov~[rcx+0],rdx", "mov~<TAG>,rax", "cmp~[rcx+0],r14", "setb~<TAG>"]]], "func_feature": [5, 12, 23, 0, 37, 58, 2, 179, 0.07284, 7, 26], "succs": [[16, 13], [0, 23], [0], [4, 7], [3, 12], [3], [8, 9], [6], [4, 6], [17, 27], [34, 11], [10, 34], [34, 28], [12, 5], [20], [18, 14], [24], [32], [], [18, 29], [18, 21], [18, 22], [18, 26], [19, 15], [30], [24, 13], [33, 2], [32], [34, 31], [20], [25, 30], [11], [8, 36], [35], [], [2, 35], [8]], "fname": "calculate_columns", "n_num": 37}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 4, 0, 0, 4, 0, 0, 0, 0, 0.15000000000000002, ["mov     stat_ok, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     type, [rdi+28h]", "cmp     rdx, [rdi+30h]", "jnb     short loc_6AE0"], ["mov~stat_ok,<TAG>", "mov~type,[rdi+0]", "cmp~rdx,[rdi+0]", "jnb~FOO"]], [1, 0, 5, 1, 1, 5, 1, 2, 0, 2, 0.0, ["sub     rsp, 8", "movzx   edi, dil; stat_ok", "call    get_type_indicator", "test    al, al", "jz      short loc_6AD4"], ["sub~rsp,0", "movzx~edi,dil", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 2, 0, 1, 3, 0, 2, 2, 0, 0.07500000000000001, ["movzx   esi, al; int", "call    ___overflow", "jmp     short loc_6ACC"], ["movzx~esi,al", "call~FOO", "jmp~FOO"]], [0, 0, 2, 0, 0, 3, 0, 0, 2, -1, 0.07500000000000001, ["lea     rcx, [rdx+1]", "mov     [rdi+28h], rcx", "mov     [rdx], al"], ["lea~rcx,[rdx+0]", "mov~[rdi+0],rcx", "mov~<TAG>,al"]], [1, 0, 1, 1, 0, 1, 0, 0, 3, -1, 0.15000000000000002, ["add     cs:dired_pos, 1"], ["add~<TAG>,0"]], [1, 0, 0, 1, 0, 2, 0, 0, 1, -1, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [2, 1, 4, 0, 6, 7, 3, 18, 0.075, 2, 3], "succs": [[2, 3], [0, 5], [4], [4], [5], []], "fname": "print_type_indicator", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 3, 0, 1, 5, 1, 2, 0, 0, 0.10683760683760682, ["mov     rsi, rax; s2", "mov     rdi, rbp; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_6B98"], ["mov~rsi,rax", "mov~rdi,rbp", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 3, -1, 0.10683760683760682, ["test    rbp, rbp", "lea     rax, aReportBugsToS+16h; \"\"", "jnz     short loc_6B75"], ["test~rbp,rbp", "lea~rax,<TAG>", "jnz~FOO"]], [0, 0, 4, 0, 0, 3, 1, 0, 3, -1, 0.05341880341880341, ["lea     rdx, aReportBugsToS+16h; \"\"", "test    rbp, rbp", "cmovz   rbp, rdx"], ["lea~rdx,<TAG>", "test~rbp,rbp", "cmovz~rbp,rdx"]], [0, 0, 10, 0, 0, 2, 1, 1, 1, -1, 0.1282051282051282, ["test    cl, cl", "jnz     short loc_6B38"], ["test~cl,cl", "jnz~FOO"]], [4, 0, 13, 0, 0, 13, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_6B22"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [0, 0, 12, 0, 0, 2, 1, 1, 1, 1, 0.00641025641025641, ["test    cl, cl", "jnz     loc_6BB0"], ["test~cl,cl", "jnz~FOO"]], [2, 0, 7, 0, 2, 15, 1, 3, 2, -1, 0.1794871794871795, ["push    r12", "push    rbp", "push    rbx", "mov     r12, [a]", "mov     rbx, b", "mov     esi, 2Eh ; '.'; c", "mov     a, r12; s", "call    _strrchr", "mov     b, [b]", "mov     esi, 2Eh ; '.'; c", "mov     rbp, rax", "mov     rdi, rbx; s", "call    _strrchr", "test    rax, rax", "jz      short loc_6BA0"], ["push~r12", "push~rbp", "push~rbx", "mov~r12,<TAG>", "mov~rbx,b", "mov~esi,0", "mov~a,r12", "call~FOO", "mov~b,<TAG>", "mov~esi,0", "mov~rbp,rax", "mov~rdi,rbx", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 9, 0, 0, 3, 1, 1, 2, -1, 0.019230769230769232, ["test    dl, dl", "mov     eax, 1", "jz      short loc_6B38"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 5, -1, 0.0, ["pop     rbx", "pop     rbp", "pop     r12", "retn"], ["pop~rbx", "pop~rbp", "pop~r12", "retn"]], [0, 0, 2, 0, 0, 1, 0, 1, 4, -1, 0.027777777777777776, ["jmp     short loc_6B84"], ["jmp~FOO"]], [0, 0, 1, 0, 0, 6, 0, 1, 5, -1, 0.05769230769230769, ["mov     rsi, rbx; s2", "mov     rdi, r12; s1", "pop     rbx", "pop     rbp", "pop     r12", "jmp     _strcmp"], ["mov~rsi,rbx", "mov~rdi,r12", "pop~rbx", "pop~rbp", "pop~r12", "jmp~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 6, -1, 0.0, [], []]], "func_feature": [3, 9, 12, 0, 14, 17, 0, 60, 0.04899, 1, 0], "succs": [[8, 10], [0, 9], [0], [6, 7], [3, 5], [3, 12], [1, 2], [11, 6], [], [10], [13], [], [], []], "fname": "strcmp_df_extension", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 2, -1, 0.09523809523809523, ["mov     b, [a]; s2", "mov     a, [b]; s1", "jmp     _strverscmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 1, -1, 0.19047619047619047, ["test    cl, cl", "jnz     short loc_6C00"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 3, 0, 0, 3, 1, 1, 2, -1, 0.07142857142857142, ["test    dl, dl", "mov     eax, 1", "jz      short loc_6C00"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [4, 0, 7, 0, 0, 14, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "mov     r8, b", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 9", "setz    al", "cmp     edx, 3", "setz    dl", "or      dl, al", "jnz     short loc_6BF1"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "mov~r8,b", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 1, 1, 0.023809523809523808, ["test    cl, cl", "jnz     short loc_6C10"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 5, 5, 0, 8, 9, 0, 27, 0.04762, 0, 0], "succs": [[], [0], [1, 3], [1, 7], [2, 5], [2, 6], [], []], "fname": "rev_xstrcoll_df_version", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.09523809523809523, ["mov     b, [b]; s2", "mov     a, [a]; s1", "jmp     _strverscmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 1, -1, 0.19047619047619047, ["test    cl, cl", "jnz     short loc_6C60"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 3, 0, 0, 3, 1, 1, 2, -1, 0.07142857142857142, ["test    dl, dl", "mov     eax, 1", "jz      short loc_6C60"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [4, 0, 7, 0, 0, 13, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 9", "setz    al", "cmp     edx, 3", "setz    dl", "or      dl, al", "jnz     short loc_6C4E"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [0, 0, 6, 0, 0, 2, 1, 1, 1, 1, 0.023809523809523808, ["test    cl, cl", "jnz     short loc_6C70"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 5, 5, 0, 8, 9, 0, 26, 0.04762, 0, 0], "succs": [[4], [0, 2], [0, 7], [1, 5], [], [1, 6], [], []], "fname": "xstrcoll_df_version", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[1, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.0, ["cmp     qword ptr cs:unk_21A088, 0", "jz      short loc_6C98"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 0, -1, 0.08333333333333333, ["lea     rdi, unk_21A080", "jmp     short put_indicator"], ["lea~rdi,<TAG>", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0.0, [], []], [2, 0, 1, 2, 2, 8, 0, 3, 0, 0, 0.08333333333333333, ["lea     rdi, color_indicator; ind", "sub     rsp, 8", "call    put_indicator", "lea     rdi, stru_21A090; ind", "call    put_indicator", "lea     rdi, ind", "add     rsp, 8", "jmp     short put_indicator"], ["lea~rdi,<TAG>", "sub~rsp,0", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "add~rsp,0", "jmp~FOO"]]], "func_feature": [2, 0, 5, 0, 4, 4, 2, 12, 0.04167, 5, 2], "succs": [[1, 3], [2], [], [2]], "fname": "prep_non_filename_text", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[1, 0, 1, 0, 0, 6, 0, 1, 0, 0, 0.3333333333333333, ["mov     rdi, [ind+8]; ptr", "mov     rsi, [ind]; size", "mov     edx, 1; n", "pop     ind", "mov     rcx, cs:stdout@@GLIBC_2_2_5; stream", "jmp     _fwrite_unlocked"], ["mov~rdi,[ind+0]", "mov~rsi,<TAG>", "mov~edx,0", "pop~ind", "mov~rcx,<TAG>", "jmp~FOO"]], [1, 0, 2, 0, 1, 3, 0, 2, 1, 0, 0.0, ["mov     cs:used_color, 1", "call    prep_non_filename_text", "jmp     short loc_6CDD"], ["mov~<TAG>,0", "call~FOO", "jmp~FOO"]], [1, 0, 3, 0, 0, 4, 0, 1, 0, 1, 0.0, ["cmp     cs:used_color, 0", "push    rbx", "mov     rbx, ind", "jz      short loc_6D00"], ["cmp~<TAG>,0", "push~rbx", "mov~rbx,ind", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []]], "func_feature": [1, 0, 4, 0, 4, 4, 11, 13, 0.08333, 2, 0], "succs": [[3], [0], [0, 1], []], "fname": "put_indicator", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[1, 0, 33, 0, 0, 2, 0, 1, 0, 0, 0.012704174228675136, ["cmp     eax, 0A000h", "jz      loc_7028"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 37, 0, 0, 2, 0, 1, 4, 8, 0.02223230490018149, ["cmp     eax, 4000h", "jz      loc_70D0"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 11, 0, 0, 4, 1, 1, 4, 3, 0.11373260738052028, ["mov     eax, cs:interrupt_signal", "mov     edx, cs:stop_signal_count", "or      edx, eax", "jz      loc_6EB0"], ["mov~eax,<TAG>", "mov~edx,<TAG>", "or~edx,eax", "jz~FOO"]], [0, 0, 12, 0, 0, 2, 1, 1, 3, 2, 0.1560798548094374, ["test    r13d, r13d", "jnz     short loc_6DF7"], ["test~r13d,r13d", "jnz~FOO"]], [1, 0, 12, 1, 0, 4, 1, 1, 5, 2, 0.007259528130671507, ["mov     [rdx], rax", "add     qword ptr [__o+18h], 8", "test    r13d, r13d", "jz      short loc_6DAD"], ["mov~<TAG>,rax", "add~[word ptr [__o+0],0", "test~r13d,r13d", "jz~FOO"]], [1, 0, 13, 0, 1, 6, 0, 2, 5, 3, 0.0, ["mov     esi, 8; int", "mov     rdi, __o; struct obstack *", "call    __obstack_newchunk", "mov     rdx, [__o+18h]", "mov     rax, cs:dired_pos", "jmp     loc_6DEA"], ["mov~esi,0", "mov~rdi,__o", "call~FOO", "mov~rdx,[__o+0]", "mov~rax,<TAG>", "jmp~FOO"]], [0, 0, 14, 0, 0, 4, 0, 0, 4, 3, 0.024803387779794316, ["mov     rdx, [__o+18h]", "lea     rcx, [rdx+8]", "cmp     [__o+20h], rcx", "jb      loc_6FF0"], ["mov~rdx,[__o+0]", "lea~rcx,[rdx+0]", "cmp~[__o+0],rcx", "jb~FOO"]], [0, 0, 32, 2, 1, 7, 1, 2, 7, 7, 0.019963702359346643, ["mov     rsi, [rbp+8]; s2", "mov     rdi, r13", "sub     rdi, rdx", "add     rdi, p; s1", "call    _strncmp", "test    eax, eax", "jz      short loc_70A2"], ["mov~rsi,[rbp+0]", "mov~rdi,r13", "sub~rdi,rdx", "add~rdi,p", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 32, 0, 0, 3, 0, 0, 6, 8, 0.019963702359346643, ["mov     rdx, [rbp+0]; n", "cmp     r13, rdx", "jb      short loc_708F"], ["mov~rdx,[rbp+0]", "cmp~r13,rdx", "jb~FOO"]], [0, 0, 10, 0, 0, 2, 0, 1, 5, 7, 0.08711433756805809, ["mov     rbp, rsp", "jmp     short loc_6E71"], ["mov~rbp,rsp", "jmp~FOO"]], [0, 0, 10, 0, 2, 5, 0, 3, 7, 6, 0.0, ["lea     rdi, color_indicator; ind", "call    put_indicator", "lea     rdi, ind; ind", "call    put_indicator", "jmp     loc_6E10"], ["lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 6, 6, 0.07864488808227466, ["cmp     cs:used_color, 0", "jz      short loc_6E10"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 35, 0, 0, 2, 1, 1, 6, 8, 0.008771929824561405, ["and     esi, 49h", "jz      short loc_7050"], ["and~esi,0", "jz~FOO"]], [1, 0, 37, 0, 0, 2, 1, 1, 5, 8, 0.01058681185722928, ["test    esi, 400h", "jnz     short loc_7122"], ["test~esi,0", "jnz~FOO"]], [3, 1, 27, 1, 0, 6, 2, 1, 7, 7, 0.0, ["and     esi, 200h", "cmp     esi, 1", "sbb     rbp, rbp", "and     bpl, 40h", "add     rbp, 120h", "jmp     loc_6EEC"], ["and~esi,<STR>", "cmp~esi,0", "sbb~rbp,rbp", "and~bpl,0", "add~rbp,0", "jmp~FOO"]], [2, 0, 28, 0, 0, 3, 1, 1, 6, 7, 0.0024198427102238356, ["test    sil, 2", "mov     ebp, 130h", "jnz     loc_6EEC"], ["test~sil,0", "mov~ebp,0", "jnz~FOO"]], [0, 0, 32, 0, 0, 3, 1, 1, 7, 8, 0.002117362371445856, ["mov     rbp, [rbp+20h]", "test    rbp, rbp", "jnz     short loc_7070"], ["mov~rbp,[rbp+0]", "test~rbp,rbp", "jnz~FOO"]], [2, 0, 56, 0, 0, 3, 0, 1, 2, 7, 0.009981851179673321, ["cmp     qword ptr cs:unk_21A128, 0", "mov     ebp, 0C0h", "jnz     loc_6EEC"], ["cmp~<TAG>,0", "mov~ebp,0", "jnz~FOO"]], [1, 0, 57, 0, 0, 2, 0, 1, 1, 8, 0.010284331518451302, ["cmp     edx, 0FFFFFFFFh", "jz      loc_7010"], ["cmp~edx,0", "jz~FOO"]], [1, 2, 29, 0, 0, 5, 1, 1, 5, 7, 0.01648517846339988, ["mov     eax, esi", "mov     ebp, 140h", "and     eax, 202h", "cmp     eax, 202h", "jz      loc_6EEC"], ["mov~eax,esi", "mov~ebp,0", "and~eax,<STR>", "cmp~eax,<STR>", "jz~FOO"]], [0, 2, 29, 0, 0, 3, 0, 1, 7, 7, 0.00544464609800363, ["cmp     eax, 0C000h", "mov     ebp, 90h", "jz      loc_6EEC"], ["cmp~eax,<STR>", "mov~ebp,<STR>", "jz~FOO"]], [0, 2, 30, 0, 0, 3, 0, 1, 6, 7, 0.011343012704174229, ["cmp     eax, 1000h", "mov     ebp, 80h", "jz      loc_6EEC"], ["cmp~eax,<STR>", "mov~ebp,<STR>", "jz~FOO"]], [0, 0, 55, 0, 0, 1, 0, 1, 3, 10, 0.008469449485783424, ["jmp     loc_6EC9"], ["jmp~FOO"]], [1, 0, 16, 1, 1, 9, 1, 2, 3, 3, 0.05399274047186933, ["mov     rdx, cs:filename_quoting_options; options", "mov     rdi, cs:stdout@@GLIBC_2_2_5; out", "xor     ecx, ecx; width", "mov     rsi, p; name", "call    quote_name", "add     rax, cs:dired_pos", "cmp     cs:dired, 0", "mov     cs:dired_pos, rax", "jnz     short loc_6DD8"], ["mov~rdx,<TAG>", "mov~rdi,<TAG>", "xor~ecx,ecx", "mov~rsi,p", "call~FOO", "add~rax,<TAG>", "cmp~<TAG>,0", "mov~<TAG>,rax", "jnz~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 2, 4, 0.07819116757410768, ["cmp     cs:dired, 0", "jz      short loc_6D79"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 17, 1, 0, 3, 0, 0, 4, 4, 0.010284331518451302, ["mov     rdx, cs:dired_pos", "mov     [rax], rdx", "add     qword ptr [__o+18h], 8"], ["mov~rdx,<TAG>", "mov~<TAG>,rdx", "add~[word ptr [__o+0],0"]], [0, 1, 27, 0, 0, 2, 0, 1, 6, 7, 0.008166969147005446, ["mov     ebp, 110h", "jmp     loc_6EEC"], ["mov~ebp,<STR>", "jmp~FOO"]], [0, 0, 10, 0, 1, 4, 1, 2, 8, 4, 0.010738052026618271, ["xor     esi, esi; handler", "mov     edi, ebx; sig", "call    _signal", "jmp     short loc_6E4B"], ["xor~esi,esi", "mov~edi,ebx", "call~FOO", "jmp~FOO"]], [0, 0, 10, 0, 2, 10, 2, 3, 7, 5, 0.05142165759225651, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "call    _fflush_unlocked", "lea     rsi, caught_signals; set", "xor     edi, edi; how", "mov     rdx, rbp; oset", "call    _sigprocmask", "mov     ebx, cs:interrupt_signal", "mov     eax, cs:stop_signal_count", "test    eax, eax", "jz      short loc_6EA0"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~rdx,rbp", "call~FOO", "mov~ebx,<TAG>", "mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [0, 0, 13, 1, 1, 7, 1, 2, 2, 3, 0.14352692075015125, ["mov     rdx, cs:filename_quoting_options; options", "mov     rdi, cs:stdout@@GLIBC_2_2_5; out", "xor     ecx, ecx; width", "mov     rsi, p; name", "call    quote_name", "add     cs:dired_pos, rax", "jmp     loc_6DA8"], ["mov~rdx,<TAG>", "mov~rdi,<TAG>", "xor~ecx,ecx", "mov~rsi,p", "call~FOO", "add~<TAG>,rax", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 4, 1, 0.0338777979431337, ["mov     rax, [rsp+0B8h+var_30]", "xor     rax, fs:28h", "jnz     loc_712C"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 0, 23, 0, 3, 9, 1, 4, 5, 5, 0.05021173623714459, ["lea     rdi, color_indicator; ind", "mov     r13d, 1", "call    put_indicator", "mov     rdi, rbp; ind", "call    put_indicator", "lea     rdi, ind; ind", "call    put_indicator", "test    stack, stack", "jnz     loc_6D4F"], ["lea~rdi,<TAG>", "mov~r13d,0", "call~FOO", "mov~rdi,rbp", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "test~stack,stack", "jnz~FOO"]], [1, 0, 25, 0, 0, 3, 1, 1, 4, 5, 0.2425892316999395, ["xor     r13d, r13d", "cmp     qword ptr [rbp+8], 0", "jz      loc_6D46"], ["xor~r13d,r13d", "cmp~[word ptr [rbp+0],0", "jz~FOO"]], [1, 0, 28, 0, 0, 3, 1, 1, 6, 7, 0.0065033272837265585, ["test    edx, edx", "mov     ebp, 70h ; 'p'", "jnz     loc_6EEC"], ["test~edx,edx", "mov~ebp,0", "jnz~FOO"]], [1, 1, 28, 0, 0, 3, 0, 1, 8, 7, 0.0030248033877797948, ["cmp     eax, 6000h", "mov     ebp, 0A0h", "jz      loc_6EEC"], ["cmp~eax,<STR>", "mov~ebp,0", "jz~FOO"]], [0, 0, 14, 0, 0, 1, 0, 0, 6, 4, 0.002268602540834846, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 3, 0, 1, 2, 0, 2, 5, 2, 0.007259528130671507, ["call    prep_non_filename_text", "jmp     loc_6DAD"], ["call~FOO", "jmp~FOO"]], [1, 0, 10, 0, 2, 10, 2, 3, 9, 3, 0.01058681185722928, ["mov     edi, ebx; sig", "call    _raise", "xor     edx, edx; oset", "mov     rsi, rbp; set", "mov     edi, 2; how", "call    _sigprocmask", "mov     edx, cs:interrupt_signal", "mov     eax, cs:stop_signal_count", "or      edx, eax", "jz      short loc_6EB0"], ["mov~edi,ebx", "call~FOO", "xor~edx,edx", "mov~rsi,rbp", "mov~edi,0", "call~FOO", "mov~edx,<TAG>", "mov~eax,<TAG>", "or~edx,eax", "jz~FOO"]], [1, 0, 39, 0, 0, 2, 1, 1, 4, 8, 0.015275257108287962, ["test    esi, 800h", "jnz     short loc_7118"], ["test~esi,0", "jnz~FOO"]], [2, 0, 51, 0, 0, 4, 1, 1, 3, 9, 0.025710828796128255, ["mov     eax, esi", "and     eax, 0F000h", "cmp     eax, 8000h", "jz      loc_70B0"], ["mov~eax,esi", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [2, 0, 58, 1, 0, 13, 2, 1, 0, 5, 0.0, ["push    r13", "push    r12", "xor     r13d, r13d", "push    rbp", "push    rbx", "mov     r12, p", "mov     rbx, stack", "sub     rsp, 98h", "mov     rax, fs:28h", "mov     [rsp+0B8h+var_30], rax", "xor     eax, eax", "cmp     cs:print_with_color, 0", "jnz     loc_6EC0"], ["push~r13", "push~r12", "xor~r13d,r13d", "push~rbp", "push~rbx", "mov~r12,p", "mov~rbx,stack", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 10, 1, 0, 3, 0, 0, 8, 4, 0.010738052026618271, ["sub     eax, 1", "mov     ebx, 13h", "mov     cs:stop_signal_count, eax"], ["sub~eax,0", "mov~ebx,0", "mov~<TAG>,eax"]], [0, 0, 22, 0, 0, 2, 1, 1, 1, 4, 0.18632788868723535, ["test    stack, stack", "jz      loc_6F38"], ["test~stack,stack", "jz~FOO"]], [1, 0, 27, 0, 0, 2, 0, 1, 7, 7, 0.008166969147005446, ["mov     ebp, 0E0h", "jmp     loc_6EEC"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 54, 0, 0, 2, 1, 1, 2, 9, 0.04083484573502723, ["test    cl, cl", "jnz     loc_6F60"], ["test~cl,cl", "jnz~FOO"]], [2, 1, 27, 0, 0, 5, 0, 1, 9, 7, 0.0, ["cmp     eax, 2000h", "mov     ebp, 0B0h", "mov     eax, 0D0h", "cmovnz  rbp, rax", "jmp     loc_6EEC"], ["cmp~eax,0", "mov~ebp,0", "mov~eax,<STR>", "cmovnz~rbp,rax", "jmp~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 5, -1, 0.0, ["add     rsp, 98h", "pop     rbx", "pop     rbp", "pop     p", "pop     used_color_this_time", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~p", "pop~used_color_this_time", "retn"]], [2, 1, 27, 1, 0, 5, 1, 1, 7, 7, 0.0, ["cmp     qword ptr cs:unk_21A138, 1", "sbb     rbp, rbp", "and     rbp, 0FFFFFFFFFFFFFFA0h", "add     rbp, 0D0h", "jmp     loc_6EEC"], ["cmp~<TAG>,0", "sbb~rbp,rbp", "and~rbp,0", "add~rbp,<STR>", "jmp~FOO"]], [1, 0, 18, 0, 1, 5, 0, 2, 4, 5, 0.0, ["mov     esi, 8; int", "mov     rdi, __o; struct obstack *", "call    __obstack_newchunk", "mov     rax, [__o+18h]", "jmp     loc_6D6A"], ["mov~esi,0", "mov~rdi,__o", "call~FOO", "mov~rax,[__o+0]", "jmp~FOO"]], [0, 0, 19, 0, 0, 4, 0, 0, 3, 5, 0.02238354506957048, ["mov     rax, [__o+18h]", "lea     rdx, [rax+8]", "cmp     [__o+20h], rdx", "jb      loc_6FD0"], ["mov~rax,[__o+0]", "lea~rdx,[rax+0]", "cmp~[__o+0],rdx", "jb~FOO"]], [1, 0, 35, 0, 0, 5, 0, 1, 3, 8, 0.02843315184513007, ["lea     rax, filetype_indicator_9200", "mov     r8d, r8d", "movsxd  rbp, dword ptr [rax+type*4]", "cmp     ebp, 5", "jz      loc_7050"], ["lea~rax,<TAG>", "mov~r8d,r8d", "movsxd~rbp,<TAG>", "cmp~ebp,0", "jz~FOO"]], [0, 0, 33, 0, 1, 6, 1, 2, 4, 8, 0.018148820326678767, ["mov     p, r12; s", "call    _strlen", "mov     rbp, cs:color_ext_list", "mov     r13, rax", "test    rbp, rbp", "jz      short loc_7098"], ["mov~p,r12", "call~FOO", "mov~rbp,<TAG>", "mov~r13,rax", "test~rbp,rbp", "jz~FOO"]], [0, 1, 27, 0, 0, 2, 0, 1, 5, 7, 0.012250453720508168, ["mov     ebp, 100h", "jmp     loc_6EEC"], ["mov~ebp,<STR>", "jmp~FOO"]], [0, 0, 32, 0, 0, 1, 0, 0, 5, 9, 0.013309134906231096, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 27, 1, 0, 1, 0, 0, 4, 7, 0.024500907441016337, ["shl     rbp, 4"], ["shl~rbp,0"]], [0, 1, 27, 0, 0, 2, 0, 1, 5, 7, 0.017241379310344827, ["mov     ebp, 50h ; 'P'", "jmp     loc_6EEC"], ["mov~ebp,<STR>", "jmp~FOO"]], [0, 0, 26, 1, 0, 2, 0, 0, 3, 6, 0.21324863883847553, ["lea     rax, color_indicator", "add     rbp, rax"], ["lea~rax,<TAG>", "add~rbp,rax"]], [1, 0, 26, 1, 0, 2, 0, 1, 8, 6, 0.023593466424682397, ["add     rbp, 10h", "jmp     loc_6EF6"], ["add~rbp,0", "jmp~FOO"]]], "func_feature": [18, 30, 66, 1, 59, 92, 3, 222, 0.03392, 16, 14], "succs": [[34, 21], [0, 19], [9, 37], [2, 31], [2, 31], [4], [4, 5], [16, 58], [16, 7], [11], [28], [10, 28], [52, 44], [26, 12], [57], [57, 14], [56, 8], [57, 22], [17, 45], [57, 15], [57, 35], [57, 20], [45], [3, 6], [50, 23], [23], [57], [38], [42, 27], [3], [], [30, 47], [24, 36], [32, 43], [48, 57], [57, 46], [29], [31], [11, 37], [13, 53], [1, 39], [18, 43], [38], [24, 29], [57], [40, 51], [57], [], [57], [25], [49, 25], [52, 55], [56, 54], [57], [8], [57], [57], [33], [33]], "fname": "print_name_with_quoting", "n_num": 59}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[1, 0, 19, 0, 1, 6, 1, 2, 0, 0, 0.005263157894736842, ["mov     rdi, [rdi+18h]; i", "mov     rsi, rsp; buf", "call    umaxtostr", "xor     edx, edx", "cmp     cs:format_0, 4", "jz      short loc_7295"], ["mov~rdi,[rdi+0]", "mov~rsi,rsp", "call~FOO", "xor~edx,edx", "cmp~<TAG>,0", "jz~FOO"]], [2, 0, 20, 1, 0, 8, 1, 1, 0, 7, 0.0, ["push    rbx", "mov     rbx, f", "sub     rsp, 2A0h", "mov     rax, fs:28h", "mov     [rsp+2A8h+var_10], rax", "xor     eax, eax", "cmp     cs:print_inode, 0", "jnz     loc_7278"], ["push~rbx", "mov~rbx,f", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 5, 0, 0, 2, 0, 1, 4, 3, 0.17763157894736842, ["mov     esi, [f+28h]", "jmp     short loc_71D4"], ["mov~esi,[f+0]", "jmp~FOO"]], [1, 0, 8, 0, 0, 5, 0, 1, 3, 4, 0.25263157894736843, ["cmp     cs:color_symlink_as_referent, 0", "mov     r8d, [f+0A0h]; type", "movzx   ecx, byte ptr [f+0B0h]; stat_ok", "movzx   edx, byte ptr [f+0B1h]; linkok", "jz      short loc_7220"], ["cmp~<TAG>,0", "mov~r8d,[f+0]", "movzx~ecx,[yte ptr [f+0]", "movzx~edx,[yte ptr [f+0]", "jz~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 4, 4, 0.034210526315789476, ["test    dl, dl", "jz      short loc_7220"], ["test~dl,dl", "jz~FOO"]], [1, 0, 9, 0, 1, 4, 1, 1, 4, 5, 0.04736842105263158, ["lea     rsi, aS; \"%*s \"", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk"], ["lea~rsi,<TAG>", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 11, 0, 0, 4, 1, 1, 3, 6, 0.04736842105263158, ["xor     edx, edx", "cmp     cs:format_0, 4", "mov     rcx, [f+0A8h]", "jz      short loc_7199"], ["xor~edx,edx", "cmp~<TAG>,0", "mov~rcx,[f+0]", "jz~FOO"]], [0, 0, 10, 0, 0, 1, 0, 0, 4, 6, 0.0, ["mov     edx, cs:scontext_width"], ["mov~edx,<TAG>"]], [1, 0, 12, 0, 0, 2, 0, 1, 2, 5, 0.25263157894736843, ["cmp     cs:print_scontext, 0", "jz      short loc_71AC"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 17, 0, 1, 6, 1, 2, 2, 7, 0.08947368421052632, ["lea     rsi, aS; \"%*s \"", "mov     rcx, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_716B"], ["lea~rsi,<TAG>", "mov~rcx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 18, 0, 0, 1, 0, 0, 2, 8, 0.0, ["mov     edx, cs:inode_number_width"], ["mov~edx,<TAG>"]], [0, 0, 4, 0, 1, 6, 2, 2, 5, 2, 0.16842105263157894, ["mov     rdi, [f]; p", "xor     r9d, r9d; stack", "call    print_name_with_quoting", "mov     eax, cs:indicator_style_0", "test    eax, eax", "jz      short loc_71FE"], ["mov~rdi,<TAG>", "xor~r9d,r9d", "call~FOO", "mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 5, 3, 0.006578947368421052, ["mov     esi, [f+0A4h]; mode"], ["mov~esi,[f+0]"]], [1, 0, 13, 0, 1, 6, 1, 2, 3, 6, 0.06842105263157895, ["lea     rsi, aS; \"%*s \"", "mov     rcx, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_7178"], ["lea~rsi,<TAG>", "mov~rcx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 1, 15, 0, 1, 9, 1, 2, 2, 7, 0.02631578947368421, ["mov     edx, cs:human_output_opts; opts", "mov     rdi, [f+50h]; n", "mov     rsi, rsp; buf", "mov     r8, cs:output_block_size; to_block_size", "mov     ecx, 200h; from_block_size", "call    human_readable", "xor     edx, edx", "cmp     cs:format_0, 4", "jz      short loc_7257"], ["mov~edx,<TAG>", "mov~rdi,[f+0]", "mov~rsi,rsp", "mov~r8,<TAG>", "mov~ecx,<STR>", "call~FOO", "xor~edx,edx", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 14, 0, 0, 1, 0, 0, 3, 7, 0.0, ["mov     edx, cs:block_size_width"], ["mov~edx,<TAG>"]], [0, 0, 2, 0, 0, 3, 1, 1, 6, 1, 0.09473684210526316, ["mov     rax, [rsp+2A8h+var_10]", "xor     rax, fs:28h", "jnz     loc_72B0"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 0, 3, 0, 1, 4, 0, 1, 6, 2, 0.0, ["movzx   edi, byte ptr [f+0B0h]; stat_ok", "mov     edx, [f+0A0h]; type", "mov     esi, [f+28h]; mode", "call    print_type_indicator"], ["movzx~edi,[yte ptr [f+0]", "mov~edx,[f+0]", "mov~esi,[f+0]", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 7, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 1, 6, 0.16842105263157894, ["cmp     cs:print_block_size, 0", "jnz     loc_7228"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 0, 1, 0, 3, 0, 0, 7, -1, 0.0, ["add     rsp, 2A0h", "pop     f", "retn"], ["add~rsp,0", "pop~f", "retn"]]], "func_feature": [8, 11, 21, 1, 21, 29, 5, 77, 0.06855, 13, 2], "succs": [[9, 10], [0, 19], [11], [2, 4], [2, 12], [3], [5, 7], [5], [3, 6], [19], [9], [16, 17], [11], [8], [13, 15], [13], [18, 20], [16], [], [8, 14], []], "fname": "print_file_name_and_frills", "n_num": 21}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 78, 1, 1, 8, 2, 2, 0, 0, 0.02732673267326733, ["mov     r14d, cs:block_size_width", "xor     esi, esi; flags", "mov     rdi, blocks; string", "call    gnu_mbswidth", "sub     r14d, eax", "test    r14d, r14d", "mov     eax, r14d", "jle     loc_7938"], ["mov~r14d,<TAG>", "xor~esi,esi", "mov~rdi,blocks", "call~FOO", "sub~r14d,eax", "test~r14d,r14d", "mov~eax,r14d", "jle~FOO"]], [0, 1, 79, 0, 1, 8, 0, 2, 8, 21, 0.0, ["mov     rdi, [f+50h]; n", "mov     r8, cs:output_block_size; to_block_size", "lea     rsi, [rsp+12D8h+hbuf]; buf", "mov     edx, cs:human_output_opts; opts", "mov     ecx, 200h; from_block_size", "call    human_readable", "mov     r15, rax", "jmp     loc_73EB"], ["mov~rdi,[f+0]", "mov~r8,<TAG>", "lea~rsi,[rsp+0]", "mov~edx,<TAG>", "mov~ecx,<STR>", "call~FOO", "mov~r15,rax", "jmp~FOO"]], [0, 0, 80, 0, 0, 3, 1, 1, 7, 21, 0.015841584158415842, ["test    dl, dl", "lea     r15, string; \"?\"", "jnz     loc_7B40"], ["test~dl,dl", "lea~r15,<TAG>", "jnz~FOO"]], [0, 0, 20, 0, 1, 7, 1, 1, 16, 7, 0.04612211221122116, ["mov     rdi, [rsp+12D8h+when_timespec.tv_sec]; i", "lea     rsi, [rsp+12D8h+hbuf_0]; buf", "call    imaxtostr", "mov     r8d, cs:width_8944", "mov     rbp, rax", "test    r8d, r8d", "jns     loc_75AF"], ["mov~rdi,[rsp+0]", "lea~rsi,[rsp+0]", "call~FOO", "mov~r8d,<TAG>", "mov~rbp,rax", "test~r8d,r8d", "jns~FOO"]], [0, 0, 22, 0, 0, 2, 1, 1, 15, 8, 0.10229372937293738, ["test    dl, dl", "jz      loc_7598"], ["test~dl,dl", "jz~FOO"]], [1, 0, 12, 2, 1, 10, 0, 2, 18, 5, 0.10455445544554456, ["mov     rsi, cs:stdout@@GLIBC_2_2_5; stream", "mov     rdi, r12; s", "sub     p, r12", "call    _fputs_unlocked", "add     cs:dired_pos, rbp", "cmp     cs:color_symlink_as_referent, 0", "mov     r8d, [f+0A0h]; type", "movzx   ecx, byte ptr [f+0B0h]; stat_ok", "movzx   edx, byte ptr [f+0B1h]; linkok", "jz      loc_7750"], ["mov~rsi,<TAG>", "mov~rdi,r12", "sub~p,r12", "call~FOO", "add~<TAG>,rbp", "cmp~<TAG>,0", "mov~r8d,[f+0]", "movzx~ecx,[yte ptr [f+0]", "movzx~edx,[yte ptr [f+0]", "jz~FOO"]], [0, 1, 13, 0, 0, 4, 0, 1, 21, 6, 0.020594059405940595, ["mov     ecx, 20h ; ' '", "lea     rbp, [r13+1]", "mov     [r13+0], cx", "jmp     loc_75DC"], ["mov~ecx,<STR>", "lea~rbp,[r13+0]", "mov~[r13+0],cx", "jmp~FOO"]], [2, 0, 13, 0, 2, 10, 1, 2, 17, 6, 0.09009900990099011, ["lea     rcx, aS; \"%*s \"", "mov     r9, rbp", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     esi, 1", "mov     rdi, p", "xor     eax, eax", "call    ___sprintf_chk", "mov     rdi, p; s", "call    _strlen", "lea     rbp, [p+rax+0]"], ["lea~rcx,<TAG>", "mov~r9,rbp", "mov~rdx,0", "mov~esi,0", "mov~rdi,p", "xor~eax,eax", "call~FOO", "mov~rdi,p", "call~FOO", "lea~rbp,[p+0]"]], [0, 0, 60, 0, 1, 8, 0, 2, 14, 16, 0.0, ["mov     edi, esi; gid", "mov     [rsp+12D8h+var_12D0], rsi", "mov     dword ptr [rsp+12D8h+var_12D8], edx", "call    getgroup", "mov     rsi, [rsp+12D8h+var_12D0]", "mov     rdi, rax", "mov     edx, dword ptr [rsp+12D8h+var_12D8]", "jmp     short loc_7BCC"], ["mov~edi,esi", "mov~[rsp+0],rsi", "mov~<TAG>,edx", "call~FOO", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~edx,<TAG>", "jmp~FOO"]], [1, 0, 61, 0, 0, 3, 1, 1, 13, 16, 0.0038613861386138618, ["xor     edi, edi; name", "cmp     cs:numeric_ids, 0", "jz      short loc_7BFA"], ["xor~edi,edi", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 11, 0, 0, 2, 1, 1, 19, 5, 0.008811881188118813, ["test    dl, dl", "jz      loc_7750"], ["test~dl,dl", "jz~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 20, 4, 0.00044554455445544556, ["mov     esi, [f+0A4h]; mode"], ["mov~esi,[f+0]"]], [1, 0, 19, 0, 1, 5, 1, 2, 17, 8, 0.03910891089108911, ["lea     rdi, [rsp+12D8h+timer]; timer", "mov     [rsp+12D8h+timer], 0", "call    _localtime", "test    rax, rax", "jz      short loc_7A65"], ["lea~rdi,[rsp+0]", "mov~[rsp+0],0", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 20, 0, 0, 4, 1, 1, 16, 7, 0.08704620462046211, ["mov     r8d, cs:width_8944", "lea     rbp, string; \"?\"", "test    r8d, r8d", "js      loc_7A12"], ["mov~r8d,<TAG>", "lea~rbp,<TAG>", "test~r8d,r8d", "js~FOO"]], [1, 1, 77, 1, 0, 4, 0, 1, 10, 20, 0.009801980198019802, ["add     p, 1", "mov     byte ptr [p-1], 20h ; ' '", "cmp     p, rcx", "jnz     short loc_7420"], ["add~p,0", "mov~[yte ptr [p-1]+0],<STR>", "cmp~p,rcx", "jnz~FOO"]], [1, 0, 77, 1, 0, 5, 0, 0, 9, 21, 0.004554455445544555, ["sub     eax, 1", "mov     rdx, rax", "lea     rcx, [p+rax+1]", "mov     rax, p", "nop     dword ptr [p+00000000h]"], ["sub~eax,0", "mov~rdx,rax", "lea~rcx,[p+0]", "mov~rax,p", "nop~[word ptr [p+0]"]], [0, 0, 16, 0, 1, 7, 1, 2, 19, 8, 0.004752475247524753, ["xor     edx, edx; flags", "mov     rsi, rax; nbytes", "mov     rdi, r14; string", "call    mbsnwidth", "mov     r8d, eax", "mov     cs:width_8944, eax", "jmp     loc_7A5C"], ["xor~edx,edx", "mov~rsi,rax", "mov~rdi,r14", "call~FOO", "mov~r8d,eax", "mov~<TAG>,eax", "jmp~FOO"]], [1, 0, 18, 0, 1, 10, 3, 2, 18, 9, 0.023762376237623763, ["lea     r14, [rsp+12D8h+hbuf]", "mov     rdx, cs:long_time_format; format", "xor     r9d, r9d; ns", "xor     r8d, r8d; ut", "mov     rcx, rax; tp", "mov     esi, 3E9h; maxsize", "mov     rdi, r14; s", "call    nstrftime", "test    rax, rax", "jnz     loc_7C16"], ["lea~r14,[rsp+0]", "mov~rdx,<TAG>", "xor~r9d,r9d", "xor~r8d,r8d", "mov~rcx,rax", "mov~esi,0", "mov~rdi,r14", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 75, 0, 0, 2, 0, 0, 11, 19, 0.014851485148514853, ["movsxd  p, edx", "lea     rdx, [rbp+rax+1]"], ["movsxd~p,edx", "lea~rdx,[rbp+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 91, 0, 0, 2, 0, 1, 5, 21, 0.0015841584158415843, ["cmp     eax, 2", "jnz     loc_7C31"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 23, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 22, 1, 0.019405940594059406, ["mov     rax, [rsp+12D8h+var_40]", "xor     rax, fs:28h", "jnz     loc_7C36"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 0, 8, 0, 1, 6, 0, 2, 20, 3, 0.07287128712871288, ["mov     rdi, [f]; p", "lea     r9, dired_obstack; stack", "call    print_name_with_quoting", "mov     edx, [f+0A0h]; type", "cmp     edx, 6", "jz      loc_7800"], ["mov~rdi,<TAG>", "lea~r9,<TAG>", "call~FOO", "mov~edx,[f+0]", "cmp~edx,0", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 19, 4, 0.07975247524752475, ["mov     esi, [f+28h]", "jmp     loc_7625"], ["mov~esi,[f+0]", "jmp~FOO"]], [1, 0, 75, 1, 0, 6, 1, 1, 10, 18, 0.05287128712871288, ["add     blocks, 1", "movzx   eax, byte ptr [blocks-1]", "lea     rbp, [p+1]", "test    al, al", "mov     [p-1], al", "jnz     loc_7938"], ["add~blocks,0", "movzx~eax,[yte ptr [blocks-1]+0]", "lea~rbp,[p+0]", "test~al,al", "mov~[p-1]+0],al", "jnz~FOO"]], [0, 0, 75, 0, 0, 2, 0, 1, 9, 19, 0.025940594059405943, ["mov     rdx, p", "jmp     loc_7435"], ["mov~rdx,p", "jmp~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 21, 2, 0.023019801980198023, ["mov     eax, cs:indicator_style_0", "test    eax, eax", "jz      short loc_765C"], ["mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [0, 1, 72, 0, 0, 2, 0, 0, 11, 17, 0.05702970297029703, ["mov     byte ptr [rdx], 20h ; ' '", "movzx   edx, byte ptr [f+0B0h]"], ["mov~<TAG>,<STR>", "movzx~edx,[yte ptr [f+0]"]], [0, 0, 16, 0, 0, 1, 0, 0, 19, 8, 0.004752475247524753, ["mov     r8d, cs:width_8944"], ["mov~r8d,<TAG>"]], [0, 0, 3, 0, 1, 3, 0, 1, 22, 2, 0.0, ["movzx   edi, byte ptr [f+0B0h]; stat_ok", "mov     esi, [f+28h]; mode", "call    print_type_indicator"], ["movzx~edi,[yte ptr [f+0]", "mov~esi,[f+0]", "call~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 21, 2, 0.03222772277227723, ["cmp     qword ptr [f+8], 0", "jz      loc_765C"], ["cmp~[word ptr [f+0],0", "jz~FOO"]], [0, 0, 15, 0, 0, 2, 1, 0, 20, 7, 0.004455445544554456, ["test    r8d, r8d", "jns     loc_75AF"], ["test~r8d,r8d", "jns~FOO"]], [0, 0, 71, 0, 0, 3, 1, 1, 7, 16, 0.20386138613861388, ["test    dl, dl", "lea     rax, string; \"?\"", "jnz     loc_7920"], ["test~dl,dl", "lea~rax,<TAG>", "jnz~FOO"]], [1, 0, 81, 0, 0, 3, 0, 1, 6, 17, 0.15237623762376237, ["cmp     cs:print_block_size, 0", "movzx   edx, byte ptr [f+0B0h]", "jz      short loc_7457"], ["cmp~<TAG>,0", "movzx~edx,[yte ptr [f+0]", "jz~FOO"]], [4, 0, 4, 2, 2, 17, 2, 3, 22, 2, 0.009306930693069308, ["mov     rcx, cs:stdout@@GLIBC_2_2_5; stream", "lea     rdi, asc_1347F; \" -> \"", "mov     edx, 4; n", "mov     esi, 1; size", "call    _fwrite_unlocked", "movzx   edx, byte ptr [f+0B1h]", "movzx   ecx, byte ptr [f+0B0h]; stat_ok", "xor     r9d, r9d; stack", "mov     esi, [f+0A4h]; mode", "mov     rdi, [f+8]; p", "mov     r8d, [f+0A0h]; type", "add     cs:dired_pos, 4", "sub     edx, 1; linkok", "call    print_name_with_quoting", "mov     edx, cs:indicator_style_0", "test    edx, edx", "jz      loc_765C"], ["mov~rcx,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "mov~esi,0", "call~FOO", "movzx~edx,[yte ptr [f+0]", "movzx~ecx,[yte ptr [f+0]", "xor~r9d,r9d", "mov~esi,[f+0]", "mov~rdi,[f+0]", "mov~r8d,[f+0]", "add~<TAG>,0", "sub~edx,0", "call~FOO", "mov~edx,<TAG>", "test~edx,edx", "jz~FOO"]], [1, 0, 3, 0, 1, 5, 1, 2, 23, 2, 0.0, ["mov     esi, [f+0A4h]; mode", "xor     edx, edx; type", "mov     edi, 1; stat_ok", "call    print_type_indicator", "jmp     loc_765C"], ["mov~esi,[f+0]", "xor~edx,edx", "mov~edi,0", "call~FOO", "jmp~FOO"]], [1, 0, 14, 0, 0, 3, 1, 1, 18, 7, 0.0013861386138613863, ["mov     cs:width_8944, 0", "xor     r8d, r8d", "jmp     loc_75AF"], ["mov~<TAG>,0", "xor~r8d,r8d", "jmp~FOO"]], [1, 0, 62, 0, 0, 5, 0, 1, 12, 16, 0.011287128712871288, ["cmp     byte ptr [f+0B0h], 0", "mov     edx, cs:group_width; width", "lea     rdi, string; \"?\"", "mov     esi, [f+30h]; id", "jz      short loc_7BCC"], ["cmp~[yte ptr [f+0],0", "mov~edx,<TAG>", "lea~rdi,<TAG>", "mov~esi,[f+0]", "jz~FOO"]], [1, 0, 63, 0, 0, 2, 0, 1, 11, 15, 0.0401980198019802, ["cmp     cs:print_group, 0", "jnz     loc_7BA8"], ["cmp~<TAG>,0", "jnz~FOO"]], [3, 0, 68, 1, 1, 7, 0, 2, 9, 15, 0.0, ["mov     rcx, cs:stdout@@GLIBC_2_2_5; stream", "lea     rdi, asc_13472; \"  \"", "mov     edx, 2; n", "mov     esi, 1; size", "call    _fwrite_unlocked", "add     cs:dired_pos, 2", "jmp     loc_74AE"], ["mov~rcx,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "mov~esi,0", "call~FOO", "add~<TAG>,0", "jmp~FOO"]], [4, 0, 69, 2, 2, 17, 1, 3, 8, 15, 0.2117821782178218, ["sub     rsp, 8", "mov     r9d, cs:nlink_width", "lea     rcx, aSS; \"%s %*s \"", "push    rax", "mov     r8, r13", "mov     rdi, p", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     esi, 1", "xor     eax, eax", "call    ___sprintf_chk", "mov     rdi, p; s", "call    _strlen", "add     p, rax", "cmp     cs:dired, 0", "pop     r8", "pop     r9", "jnz     loc_78F0"], ["sub~rsp,0", "mov~r9d,<TAG>", "lea~rcx,<TAG>", "push~rax", "mov~r8,r13", "mov~rdi,p", "mov~rdx,0", "mov~esi,0", "xor~eax,eax", "call~FOO", "mov~rdi,p", "call~FOO", "add~p,rax", "cmp~<TAG>,0", "pop~r8", "pop~r9", "jnz~FOO"]], [0, 0, 35, 0, 1, 11, 0, 2, 17, 10, 0.058910891089108894, ["lea     rdi, current_time; ts", "mov     [rsp+12D8h+var_12D8], when_local", "call    gettime", "mov     rcx, cs:current_time.tv_sec", "mov     rsi, [rsp+12D8h+when_timespec.tv_sec]", "mov     rdi, cs:current_time.tv_nsec", "mov     r9, [rsp+12D8h+when_timespec.tv_nsec]", "mov     rax, [rsp+12D8h+var_12D8]", "lea     r8, [rcx-0F0C2ACh]", "cmp     r8, rsi", "jge     loc_77A8"], ["lea~rdi,<TAG>", "mov~<TAG>,when_local", "call~FOO", "mov~rcx,<TAG>", "mov~rsi,[rsp+0]", "mov~rdi,<TAG>", "mov~r9,[rsp+0]", "mov~rax,<TAG>", "lea~r8,[rcx-0F0C2ACh]+0]", "cmp~r8,rsi", "jge~FOO"]], [0, 0, 40, 0, 0, 4, 0, 1, 16, 11, 0.1011881188118812, ["mov     rcx, cs:current_time.tv_sec", "mov     rsi, [rsp+12D8h+when_timespec.tv_sec]", "cmp     rsi, rcx", "jg      loc_7970"], ["mov~rcx,<TAG>", "mov~rsi,[rsp+0]", "cmp~rsi,rcx", "jg~FOO"]], [0, 0, 37, 0, 0, 4, 0, 1, 18, 10, 0.012673267326732674, ["cmp     edi, r9d", "mov     r10d, edi", "mov     r8d, r9d", "js      short loc_7970"], ["cmp~edi,r9d", "mov~r10d,edi", "mov~r8d,r9d", "js~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 23, -1, 0.0, ["add     rsp, 12A8h", "pop     f", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~f", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 65, 2, 1, 7, 0, 2, 10, 16, 0.034653465346534656, ["mov     rsi, cs:stdout@@GLIBC_2_2_5; stream", "mov     rdi, r12; s", "sub     p, r12", "call    _fputs_unlocked", "add     cs:dired_pos, rbp", "cmp     cs:print_owner, 0", "jnz     loc_7BE0"], ["mov~rsi,<TAG>", "mov~rdi,r12", "sub~p,r12", "call~FOO", "add~<TAG>,rbp", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 67, 0, 0, 4, 2, 1, 9, 14, 0.21891089108910894, ["movzx   eax, cs:print_owner", "or      al, cs:print_group", "or      al, cs:print_author", "jnz     loc_7880"], ["movzx~eax,<TAG>", "or~al,<TAG>", "or~al,<TAG>", "jnz~FOO"]], [1, 0, 66, 0, 0, 2, 0, 1, 10, 13, 0.18514851485148517, ["cmp     cs:print_scontext, 0", "jnz     loc_7880"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 70, 0, 1, 4, 0, 2, 8, 16, 0.0, ["mov     rdi, [f+20h]; i", "lea     rsi, [rsp+12D8h+hbuf]; buf", "call    umaxtostr", "jmp     loc_7466"], ["mov~rdi,[f+0]", "lea~rsi,[rsp+0]", "call~FOO", "jmp~FOO"]], [0, 0, 64, 0, 1, 5, 0, 2, 11, 16, 0.0, ["movzx   edx, byte ptr [f+0B0h]; stat_ok", "mov     edi, [f+2Ch]; u", "mov     esi, cs:owner_width; width", "call    format_user", "jmp     loc_78A6"], ["movzx~edx,[yte ptr [f+0]", "mov~edi,[f+0]", "mov~esi,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 58, 0, 0, 2, 0, 1, 12, 14, 0.0505940594059406, ["cmp     cs:print_author, 0", "jnz     loc_7B88"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 59, 0, 1, 2, 0, 2, 13, 15, 0.017524752475247526, ["call    format_user_or_group", "jmp     loc_78B3"], ["call~FOO", "jmp~FOO"]], [4, 0, 99, 0, 0, 12, 0, 1, 1, 22, 0.004900990099009902, ["mov     eax, [rdi+0A0h]", "lea     rdx, filetype_letter; \"?pcdb-lswd\"", "cmp     cs:any_has_acl, 0", "lea     r13, [rsp+12D8h+modebuf]", "mov     r10d, 3F3Fh", "movzx   eax, byte ptr [rdx+rax]", "mov     [rsp+12D8h+modebuf], al", "mov     rax, 3F3F3F3F3F3F3F3Fh", "mov     qword ptr [rsp+12D8h+modebuf+1], rax", "mov     [r13+9], r10w", "mov     [rsp+12D8h+modebuf+0Bh], 0", "jz      loc_7312"], ["mov~eax,[rdi+0]", "lea~rdx,<TAG>", "cmp~<TAG>,0", "lea~r13,[rsp+0]", "mov~r10d,0", "movzx~eax,<TAG>", "mov~[rsp+0],al", "mov~rax,0", "mov~[word ptr [rsp+0],rax", "mov~[r13+0],r10w", "mov~[rsp+0],0", "jz~FOO"]], [2, 0, 101, 1, 0, 13, 1, 1, 0, 23, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, f", "sub     rsp, 12A8h", "mov     rax, fs:28h", "mov     [rsp+12D8h+var_40], rax", "xor     eax, eax", "cmp     byte ptr [f+0B0h], 0", "jz      loc_7688"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,f", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~[yte ptr [f+0],0", "jz~FOO"]], [1, 0, 56, 0, 0, 3, 0, 1, 13, 13, 0.05336633663366337, ["cmp     cs:print_scontext, 0", "mov     rbp, r12", "jz      loc_74D4"], ["cmp~<TAG>,0", "mov~rbp,r12", "jz~FOO"]], [0, 0, 57, 0, 1, 5, 0, 2, 13, 14, 0.0, ["movzx   edx, byte ptr [f+0B0h]; stat_ok", "mov     edi, [f+2Ch]; u", "mov     esi, cs:author_width; width", "call    format_user", "jmp     loc_78C0"], ["movzx~edx,[yte ptr [f+0]", "mov~edi,[f+0]", "mov~esi,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 97, 0, 0, 2, 0, 1, 2, 21, 0.01925742574257426, ["cmp     byte ptr [f+0B2h], 0", "jz      loc_7317"], ["cmp~[yte ptr [f+0],0", "jz~FOO"]], [1, 0, 99, 0, 1, 6, 0, 2, 1, 22, 0.004900990099009902, ["lea     r13, [rsp+12D8h+modebuf]", "lea     f, [f+10h]; statp", "mov     rsi, r13; str", "call    filemodestring", "cmp     cs:any_has_acl, 0", "jnz     loc_76CE"], ["lea~r13,[rsp+0]", "lea~f,[f+0]", "mov~rsi,r13", "call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 54, 0, 0, 2, 0, 1, 11, 12, 0.24594059405940596, ["cmp     byte ptr [f+0B0h], 0", "jz      loc_7740"], ["cmp~[yte ptr [f+0],0", "jz~FOO"]], [0, 0, 55, 0, 1, 5, 1, 2, 14, 13, 0.0, ["mov     rdi, [f+0A8h]; name", "mov     edx, cs:scontext_width; width", "xor     esi, esi; id", "call    format_user_or_group", "jmp     loc_74D4"], ["mov~rdi,[f+0]", "mov~edx,<TAG>", "xor~esi,esi", "call~FOO", "jmp~FOO"]], [2, 0, 95, 0, 0, 4, 0, 1, 3, 20, 0.01410891089108911, ["mov     eax, cs:time_type_0", "mov     [rsp+12D8h+modebuf+0Ah], 2Bh ; '+'", "cmp     eax, 1", "jnz     loc_7326"], ["mov~eax,<TAG>", "mov~[rsp+0],0", "cmp~eax,0", "jnz~FOO"]], [2, 0, 52, 0, 0, 4, 1, 1, 12, 11, 0.20940594059405943, ["mov     eax, [f+28h]", "and     eax, 0B000h", "cmp     eax, 2000h", "jz      loc_7A80"], ["mov~eax,[f+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 88, 0, 0, 6, 0, 1, 4, 19, 0.060990099009900996, ["cmp     cs:print_inode, 0", "mov     rax, [f+80h]", "mov     rdx, [f+78h]", "mov     [rsp+12D8h+when_timespec.tv_nsec], rax", "mov     [rsp+12D8h+when_timespec.tv_sec], rdx", "jnz     loc_7354"], ["cmp~<TAG>,0", "mov~rax,[f+0]", "mov~rdx,[f+0]", "mov~[rsp+0],rax", "mov~[rsp+0],rdx", "jnz~FOO"]], [1, 0, 95, 0, 0, 3, 0, 1, 3, 20, 0.03292079207920792, ["mov     eax, cs:time_type_0", "cmp     eax, 1", "jz      loc_76EF"], ["mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 96, 0, 0, 1, 0, 0, 2, 21, 0.009554455445544556, ["mov     [rsp+12D8h+modebuf+0Ah], 0"], ["mov~[rsp+0],0"]], [1, 0, 50, 0, 1, 7, 0, 1, 13, 13, 0.0006930693069306931, ["mov     rdi, [f+40h]; n", "mov     r8, cs:file_output_block_size; to_block_size", "lea     rsi, [rsp+12D8h+hbuf]; buf", "mov     edx, cs:human_output_opts; opts", "mov     ecx, 1; from_block_size", "call    human_readable", "mov     r14, rax"], ["mov~rdi,[f+0]", "mov~r8,<TAG>", "lea~rsi,[rsp+0]", "mov~edx,<TAG>", "mov~ecx,0", "call~FOO", "mov~r14,rax"]], [0, 0, 82, 0, 0, 3, 0, 1, 5, 18, 0.10554455445544556, ["lea     r12, [rsp+12D8h+buf]", "mov     rbp, p", "jmp     loc_73CC"], ["lea~r12,[rsp+0]", "mov~rbp,p", "jmp~FOO"]], [1, 0, 88, 0, 0, 2, 0, 1, 6, 19, 0.034851485148514855, ["cmp     cs:print_inode, 0", "jz      loc_7711"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 93, 0, 0, 1, 0, 0, 4, 21, 0.0034653465346534654, ["jb      loc_7728"], ["jb~FOO"]], [0, 0, 49, 1, 1, 7, 2, 2, 13, 12, 0.03821782178217822, ["mov     r13d, cs:file_size_width", "xor     esi, esi; flags", "mov     rdi, size; string", "call    gnu_mbswidth", "sub     r13d, eax", "test    r13d, r13d", "jle     short loc_7554"], ["mov~r13d,<TAG>", "xor~esi,esi", "mov~rdi,size", "call~FOO", "sub~r13d,eax", "test~r13d,r13d", "jle~FOO"]], [0, 0, 50, 0, 0, 2, 0, 1, 12, 13, 0.032574257425742575, ["lea     r14, string; \"?\"", "jmp     loc_7517"], ["lea~r14,<TAG>", "jmp~FOO"]], [6, 2, 43, 2, 3, 44, 7, 4, 13, 10, 0.20435643564356437, ["mov     edx, cs:major_device_number_width", "mov     eax, cs:minor_device_number_width", "lea     rsi, [rsp+12D8h+hbuf]; buf", "mov     r13d, cs:file_size_width", "lea     eax, [rdx+rax+2]", "sub     r13d, eax", "mov     rax, [f+38h]", "movzx   edx, al", "shr     rax, 0Ch", "mov     rdi, rax", "xor     dil, dil", "or      edi, edx; i", "call    umaxtostr", "mov     r15, rax", "mov     rax, [f+38h]", "lea     rsi, [rsp+12D8h+hbuf_0]; buf", "mov     r14d, cs:minor_device_number_width", "mov     rdi, rax", "shr     rax, 20h", "shr     rdi, 8", "mov     edx, edi", "mov     rdi, rax", "and     edx, 0FFFh", "and     edi, 0FFFFF000h", "or      edi, edx; i", "call    umaxtostr", "test    r13d, r13d", "mov     r8d, 0", "push    r15", "cmovns  r8d, r13d", "add     r8d, cs:major_device_number_width", "push    r14", "lea     rcx, unk_13475", "mov     r9, rax", "mov     esi, 1", "mov     rdi, p", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "xor     eax, eax", "call    ___sprintf_chk", "movsxd  rax, cs:file_size_width", "pop     rsi", "pop     rdi", "lea     blanks_width, [p+rax+1]", "jmp     loc_7571"], ["mov~edx,<TAG>", "mov~eax,<TAG>", "lea~rsi,[rsp+0]", "mov~r13d,<TAG>", "lea~eax,[rdx+0]", "sub~r13d,eax", "mov~rax,[f+0]", "movzx~edx,al", "shr~rax,0", "mov~rdi,rax", "xor~dil,dil", "or~edi,edx", "call~FOO", "mov~r15,rax", "mov~rax,[f+0]", "lea~rsi,[rsp+0]", "mov~r14d,<TAG>", "mov~rdi,rax", "shr~rax,<STR>", "shr~rdi,0", "mov~edx,edi", "mov~rdi,rax", "and~edx,<STR>", "and~edi,0", "or~edi,edx", "call~FOO", "test~r13d,r13d", "mov~r8d,0", "push~r15", "cmovns~r8d,r13d", "add~r8d,<TAG>", "push~r14", "lea~rcx,<TAG>", "mov~r9,rax", "mov~esi,0", "mov~rdi,p", "mov~rdx,0", "xor~eax,eax", "call~FOO", "movsxd~rax,<TAG>", "pop~rsi", "pop~rdi", "lea~blanks_width,[p+0]", "jmp~FOO"]], [0, 0, 89, 0, 0, 5, 0, 1, 5, 20, 0.009504950495049506, ["mov     rax, [f+70h]", "mov     rdx, [f+68h]", "mov     [rsp+12D8h+when_timespec.tv_nsec], rax", "mov     [rsp+12D8h+when_timespec.tv_sec], rdx", "jmp     loc_7347"], ["mov~rax,[f+0]", "mov~rdx,[f+0]", "mov~[rsp+0],rax", "mov~[rsp+0],rdx", "jmp~FOO"]], [0, 0, 48, 0, 0, 5, 0, 0, 14, 14, 0.0100990099009901, ["lea     edx, [pad-1]", "mov     rax, rdx", "lea     rcx, [p+rdx+1]", "mov     rdx, p", "nop"], ["lea~edx,[pad-1]+0]", "mov~rax,rdx", "lea~rcx,[p+0]", "mov~rdx,p", "nop"]], [0, 0, 89, 0, 0, 4, 0, 0, 6, 20, 0.008811881188118813, ["mov     rax, [f+60h]", "mov     rdx, [f+58h]", "mov     [rsp+12D8h+when_timespec.tv_nsec], rax", "mov     [rsp+12D8h+when_timespec.tv_sec], rdx"], ["mov~rax,[f+0]", "mov~rdx,[f+0]", "mov~[rsp+0],rax", "mov~[rsp+0],rdx"]], [0, 0, 39, 0, 0, 3, 0, 1, 17, 10, 0.03504950495049506, ["mov     rdi, cs:current_time.tv_nsec", "mov     r9, [rsp+12D8h+when_timespec.tv_nsec]; ns", "jge     loc_7940"], ["mov~rdi,<TAG>", "mov~r9,[rsp+0]", "jge~FOO"]], [1, 1, 48, 1, 0, 4, 0, 1, 15, 13, 0.009702970297029703, ["add     p, 1", "mov     byte ptr [p-1], 20h ; ' '", "cmp     p, rcx", "jnz     short loc_7540"], ["add~p,0", "mov~[yte ptr [p-1]+0],<STR>", "cmp~p,rcx", "jnz~FOO"]], [0, 0, 46, 0, 0, 2, 0, 0, 16, 12, 0.00910891089108911, ["cdqe", "lea     rbp, [rbp+rax+1]"], ["cdqe~", "lea~rbp,[rbp+0]"]], [1, 0, 29, 1, 0, 4, 1, 1, 19, 9, 0.009009900990099011, ["sub     rcx, 0F0C2ACh", "xor     edx, edx", "cmp     rcx, rsi", "jge     loc_77C0"], ["sub~rcx,0", "xor~edx,edx", "cmp~rcx,rsi", "jge~FOO"]], [0, 0, 86, 0, 0, 4, 1, 1, 5, 21, 0.005148514851485149, ["mov     rdi, [f+18h]; i", "lea     r9, string; \"?\"", "test    rdi, rdi", "jnz     loc_7B70"], ["mov~rdi,[f+0]", "lea~r9,<TAG>", "test~rdi,rdi", "jnz~FOO"]], [0, 0, 46, 0, 0, 2, 0, 1, 15, 12, 0.0, ["mov     rbp, p", "jmp     loc_7554"], ["mov~rbp,p", "jmp~FOO"]], [1, 0, 46, 1, 0, 6, 1, 1, 14, 11, 0.040594059405940595, ["add     size, 1", "movzx   eax, byte ptr [size-1]", "lea     r13, [p+1]", "test    al, al", "mov     [p-1], al", "jnz     loc_7760"], ["add~size,0", "movzx~eax,[yte ptr [size-1]+0]", "lea~r13,[p+0]", "test~al,al", "mov~[p-1]+0],al", "jnz~FOO"]], [1, 0, 28, 1, 0, 4, 0, 1, 20, 9, 0.0027722772277227726, ["mov     edx, r8d", "sub     edx, r10d", "shr     edx, 1Fh", "jmp     loc_77C0"], ["mov~edx,r8d", "sub~edx,r10d", "shr~edx,0", "jmp~FOO"]], [0, 0, 29, 0, 0, 3, 0, 1, 20, 10, 0.0005940594059405942, ["mov     r8d, r9d", "mov     r10d, edi", "jmp     short loc_795D"], ["mov~r8d,r9d", "mov~r10d,edi", "jmp~FOO"]], [0, 1, 43, 0, 0, 1, 0, 0, 15, 10, 0.03405940594059406, ["mov     byte ptr [rbp+0], 20h ; ' '"], ["mov~[yte ptr [rbp+0],<STR>"]], [0, 0, 85, 0, 1, 4, 0, 2, 6, 21, 0.0, ["lea     rsi, [rsp+12D8h+hbuf]; buf", "call    umaxtostr", "mov     r9, rax", "jmp     loc_7368"], ["lea~rsi,[rsp+0]", "call~FOO", "mov~r9,rax", "jmp~FOO"]], [0, 0, 41, 0, 0, 2, 1, 1, 15, 8, 0.1470132013201321, ["test    dl, dl", "jnz     loc_7770"], ["test~dl,dl", "jnz~FOO"]], [1, 0, 42, 0, 1, 6, 1, 2, 14, 9, 0.2411881188118812, ["lea     rdi, [rsp+12D8h+when_timespec]; timer", "call    _localtime", "test    when_local, when_local", "mov     byte ptr [p+0], 1", "movzx   edx, byte ptr [f+0B0h]", "jz      loc_79E8"], ["lea~rdi,[rsp+0]", "call~FOO", "test~when_local,when_local", "mov~[yte ptr [p+0],0", "movzx~edx,[yte ptr [f+0]", "jz~FOO"]], [1, 1, 84, 0, 1, 9, 1, 1, 6, 20, 0.019207920792079208, ["lea     r12, [rsp+12D8h+buf]", "mov     r8d, cs:inode_number_width", "lea     rcx, aS; \"%*s \"", "mov     edx, 0E3Bh", "mov     esi, 1", "xor     eax, eax", "mov     rdi, p", "mov     rbp, p", "call    ___sprintf_chk"], ["lea~r12,[rsp+0]", "mov~r8d,<TAG>", "lea~rcx,<TAG>", "mov~edx,<STR>", "mov~esi,0", "xor~eax,eax", "mov~rdi,p", "mov~rbp,p", "call~FOO"]], [1, 0, 35, 0, 0, 4, 0, 1, 18, 9, 0.013960396039603964, ["lea     r8, [rcx-0F0C2ACh]", "mov     edx, 1", "cmp     r8, rsi", "jl      short loc_77C0"], ["lea~r8,[rcx-0F0C2ACh]+0]", "mov~edx,0", "cmp~r8,rsi", "jl~FOO"]], [2, 0, 84, 1, 0, 7, 2, 1, 7, 19, 0.025940594059405943, ["mov     eax, [rbp+0]", "add     rbp, 4", "lea     edx, [rax-1010101h]", "not     eax", "and     edx, eax", "and     edx, 80808080h", "jz      short loc_7395"], ["mov~eax,[rbp+0]", "add~rbp,0", "lea~edx,[rax-1010101h]+0]", "not~eax", "and~edx,eax", "and~edx,0", "jz~FOO"]], [0, 0, 34, 0, 0, 3, 1, 1, 18, 9, 0.02554455445544552, ["xor     edx, edx", "cmp     rsi, six_months_ago", "jl      short loc_77C0"], ["xor~edx,edx", "cmp~rsi,six_months_ago", "jl~FOO"]], [0, 0, 33, 0, 0, 2, 0, 1, 19, 10, 0.007326732673267327, ["cmp     edi, r9d", "js      loc_79AC"], ["cmp~edi,r9d", "js~FOO"]], [1, 0, 31, 0, 0, 3, 0, 1, 18, 9, 0.0273267326732673, ["cmp     rsi, rcx", "mov     edx, 1", "jl      loc_77C0"], ["cmp~rsi,rcx", "mov~edx,0", "jl~FOO"]], [0, 0, 28, 0, 0, 1, 0, 0, 20, 9, 0.0013861386138613863, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 30, 0, 0, 2, 0, 1, 19, 9, 0.007227722772277228, ["mov     edx, 0", "jg      loc_77C0"], ["mov~edx,0", "jg~FOO"]], [3, 0, 82, 1, 0, 9, 1, 0, 8, 18, 0.032475247524752476, ["mov     eax, edx", "shr     eax, 10h", "test    edx, 8080h", "cmovz   edx, eax", "lea     rax, [rbp+2]", "cmovz   rbp, rax", "mov     eax, edx", "add     al, dl", "sbb     rbp, 3"], ["mov~eax,edx", "shr~eax,0", "test~edx,0", "cmovz~edx,eax", "lea~rax,[rbp+0]", "cmovz~rbp,rax", "mov~eax,edx", "add~al,dl", "sbb~rbp,0"]], [1, 0, 25, 0, 0, 2, 0, 1, 20, 7, 0.03405940594059406, ["cmp     byte ptr [p+0], 0", "jz      loc_77EA"], ["cmp~[yte ptr [p+0],0", "jz~FOO"]], [1, 0, 27, 0, 1, 9, 2, 2, 19, 8, 0.058712871287128716, ["lea     rcx, long_time_format", "xor     r8d, r8d; ut", "mov     esi, 3E9h; maxsize", "mov     rdi, p; s", "mov     recent, [rcx+recent*8]; format", "mov     rcx, rax; tp", "call    nstrftime", "test    s, s", "jz      loc_79D0"], ["lea~rcx,<TAG>", "xor~r8d,r8d", "mov~esi,0", "mov~rdi,p", "mov~recent,<TAG>", "mov~rcx,rax", "call~FOO", "test~s,s", "jz~FOO"]], [0, 0, 23, 0, 0, 2, 0, 0, 21, 9, 0.01504950495049505, ["movzx   edx, byte ptr [f+0B0h]", "nop     word ptr [rax+rax+00h]"], ["movzx~edx,[yte ptr [f+0]", "nop~[ord ptr [rax+0]"]], [0, 0, 14, 1, 0, 1, 0, 0, 20, 7, 0.012673267326732674, ["add     p, s"], ["add~p,s"]]], "func_feature": [37, 50, 115, 3, 102, 158, 1, 499, 0.04124, 40, 25], "succs": [[26, 15], [0], [0, 1], [12, 7], [3, 13], [24, 10], [5], [5], [52], [8, 52], [24, 11], [23], [17, 37], [12, 7], [18, 14], [14], [32], [16, 29], [25], [], [75, 19], [], [21, 45], [27, 31], [23], [26, 28], [25], [22, 30], [33], [32], [22], [35, 22], [37, 7], [41, 49], [33, 2], [36, 22], [22], [7], [9, 52], [51, 38], [47], [40, 47], [92, 94], [42, 76], [42, 79], [], [50, 39], [48, 46], [59, 46], [41], [39], [56, 55], [51], [57, 65], [58, 53], [59, 60], [55], [64, 61], [57, 65], [62, 71], [59], [69, 63], [72, 66], [80, 67], [69, 63], [64], [70], [34], [80, 67], [73, 20], [74, 82], [70], [88], [68], [77], [68], [90, 44], [77, 78], [82], [99, 83], [89, 86], [82], [81, 85], [99], [83], [88], [89], [43, 13], [4, 87], [91], [99, 92], [97, 91], [99, 93], [94, 95], [96, 99], [99], [99, 84], [34], [100, 6], [98, 101], [4], [6]], "fname": "print_long_format", "n_num": 102}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 10, 1, 0, 6, 2, 1, 0, 0, 0.014328808446455506, ["xor     edx, edx", "mov     rax, rbx", "div     r13", "test    rdx, rdx", "mov     rbp, rdx", "jz      short loc_7CD8"], ["xor~edx,edx", "mov~rax,rbx", "div~,r13", "test~rdx,rdx", "mov~rbp,rdx", "jz~FOO"]], [1, 0, 10, 0, 0, 4, 1, 1, 3, 5, 0.006787330316742082, ["xor     r15d, r15d", "mov     ebx, 1", "mov     rcx, [rsp+68h+var_60]", "jmp     short loc_7D32"], ["xor~r15d,r15d", "mov~ebx,0", "mov~rcx,[rsp+0]", "jmp~FOO"]], [1, 0, 10, 1, 2, 12, 0, 2, 6, 2, 0.014328808446455506, ["mov     rax, cs:sorted_file", "mov     r12, [rax+rbx*8]", "add     rbx, 1", "mov     rdi, r12; f", "call    print_file_name_and_frills", "mov     rdi, r12; f", "call    length_of_file_name_and_frills", "cmp     rbx, cs:cwd_n_used", "mov     rcx, rax", "mov     rax, [r14+10h]", "mov     r12, [rax+rbp*8]", "jnb     loc_8020"], ["mov~rax,<TAG>", "mov~r12,<TAG>", "add~rbx,0", "mov~rdi,r12", "call~FOO", "mov~rdi,r12", "call~FOO", "cmp~rbx,<TAG>", "mov~rcx,rax", "mov~rax,[r14+0]", "mov~r12,<TAG>", "jnb~FOO"]], [2, 0, 5, 2, 0, 4, 0, 1, 6, -1, 0.004147812971342383, ["add     cs:dired_pos, 1", "add     i, 1", "cmp     cs:cwd_n_used, i", "ja      short loc_7E40"], ["add~<TAG>,0", "add~i,0", "cmp~<TAG>,i", "ja~FOO"]], [1, 0, 5, 0, 1, 3, 0, 2, 5, -1, 0.001885369532428356, ["mov     esi, 0Ah; int", "call    ___overflow", "jmp     loc_7E70"], ["mov~esi,0", "call~FOO", "jmp~FOO"]], [1, 0, 5, 0, 0, 3, 0, 0, 5, -1, 0.001885369532428356, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0"]], [0, 0, 0, 0, 0, 0, 0, 0, 5, -1, 0.0, [], []], [2, 0, 1, 1, 0, 9, 0, 1, 4, 0, 0.009426847662141781, ["add     rsp, 38h", "mov     esi, 0Ah; int", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "jmp     ___overflow"], ["add~rsp,0", "mov~esi,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "jmp~FOO"]], [0, 0, 16, 0, 1, 7, 1, 1, 3, 3, 0.013574660633484163, ["mov     rax, cs:sorted_file", "xor     ebx, ebx", "mov     rbp, [rax]", "mov     rdi, rbp; f", "call    length_of_file_name_and_frills", "mov     r12, rax", "nop     dword ptr [rax]"], ["mov~rax,<TAG>", "xor~ebx,ebx", "mov~rbp,<TAG>", "mov~rdi,rbp", "call~FOO", "mov~r12,rax", "nop~<TAG>"]], [1, 0, 17, 0, 0, 2, 0, 1, 2, 2, 0.011312217194570135, ["cmp     cs:cwd_n_used, 0; jumptable 0000000000007C6F case 4", "jz      loc_8020"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 8, 1, 0, 4, 0, 1, 8, -1, 0.008295625942684766, ["add     [rsp+68h+var_40], 1", "mov     rax, [rsp+68h+var_40]", "cmp     [rsp+68h+var_50], rax", "jnz     loc_7F60"], ["add~[rsp+0],0", "mov~rax,[rsp+0]", "cmp~[rsp+0],rax", "jnz~FOO"]], [1, 0, 8, 0, 1, 3, 0, 2, 7, -1, 0.003393665158371041, ["mov     esi, 0Ah; int", "call    ___overflow", "jmp     loc_7FF8"], ["mov~esi,0", "call~FOO", "jmp~FOO"]], [1, 0, 8, 0, 0, 3, 0, 0, 7, -1, 0.003393665158371041, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0"]], [1, 0, 5, 0, 1, 3, 0, 2, 5, -1, 0.001885369532428356, ["mov     esi, 0Ah; int", "call    ___overflow", "jmp     loc_7EE0"], ["mov~esi,0", "call~FOO", "jmp~FOO"]], [0, 0, 5, 0, 1, 7, 0, 1, 4, -1, 0.007541478129713424, ["mov     rax, cs:sorted_file", "mov     rdi, [rax+i*8]; f", "call    print_file_name_and_frills", "mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_8080"], ["mov~rax,<TAG>", "mov~rdi,<TAG>", "call~FOO", "mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [0, 0, 16, 0, 0, 4, 0, 0, 10, 4, 0.032805429864253395, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_80D1"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [1, 0, 16, 0, 1, 3, 0, 2, 9, 5, 0.013574660633484163, ["mov     esi, 2Ch ; ','; int", "call    ___overflow", "jmp     loc_7DFE"], ["mov~esi,0", "call~FOO", "jmp~FOO"]], [1, 0, 16, 0, 0, 3, 0, 0, 9, 5, 0.013574660633484163, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 2Ch ; ','"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0"]], [0, 0, 5, 0, 1, 7, 0, 1, 4, -1, 0.007541478129713424, ["mov     rax, cs:sorted_file", "mov     rdi, [rax+i*8]; f", "call    print_long_format", "mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_8090"], ["mov~rax,<TAG>", "mov~rdi,<TAG>", "call~FOO", "mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 7, -1, 0.0, ["add     rsp, 38h", "pop     i", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~i", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 8, 0, 0, 4, 0, 0, 6, -1, 0.011689291101055807, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_80A0"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [1, 0, 8, 3, 2, 15, 0, 2, 5, -1, 0.016591251885369532, ["mov     rax, cs:sorted_file", "mov     rbx, [rax+r13]", "mov     rdi, rbx; f", "call    length_of_file_name_and_frills", "mov     rsi, [r15+10h]", "mov     [rsp+68h+var_58], rax", "mov     rdi, rbx; f", "mov     rax, [rsi+rbp]", "add     rbp, 8", "mov     [rsp+68h+var_60], rax", "call    print_file_name_and_frills", "add     r12, [rsp+68h+var_50]", "add     r13, [rsp+68h+var_48]", "cmp     r12, cs:cwd_n_used", "jb      short loc_7F78"], ["mov~rax,<TAG>", "mov~rbx,<TAG>", "mov~rdi,rbx", "call~FOO", "mov~rsi,[r15+0]", "mov~[rsp+0],rax", "mov~rdi,rbx", "mov~rax,<TAG>", "add~rbp,0", "mov~[rsp+0],rax", "call~FOO", "add~r12,[rsp+0]", "add~r13,[rsp+0]", "cmp~r12,<TAG>", "jb~FOO"]], [0, 0, 8, 0, 0, 5, 2, 1, 4, -1, 0.015082956259426848, ["mov     r12, [rsp+68h+var_40]", "xor     ebp, ebp", "xor     r14d, r14d", "lea     r13, ds:0[r12*8]", "jmp     short loc_7F94"], ["mov~r12,[rsp+0]", "xor~ebp,ebp", "xor~r14d,r14d", "lea~r13,<TAG>", "jmp~FOO"]], [0, 0, 8, 1, 1, 7, 0, 1, 6, -1, 0.0, ["mov     rbx, [rsp+68h+var_60]", "mov     rax, [rsp+68h+var_58]", "add     rbx, r14", "lea     rdi, [rax+r14]; from", "mov     rsi, rbx; to", "mov     r14, rbx", "call    indent"], ["mov~rbx,[rsp+0]", "mov~rax,[rsp+0]", "add~rbx,r14", "lea~rdi,<TAG>", "mov~rsi,rbx", "mov~r14,rbx", "call~FOO"]], [1, 0, 16, 1, 1, 5, 0, 1, 4, 2, 0.05995475113122172, ["mov     rdi, rbp; f", "add     rbx, 1", "call    print_file_name_and_frills", "cmp     rbx, cs:cwd_n_used", "jnb     loc_8020"], ["mov~rdi,rbp", "add~rbx,0", "call~FOO", "cmp~rbx,<TAG>", "jnb~FOO"]], [0, 0, 16, 0, 0, 4, 0, 1, 11, 3, 0.013574660633484163, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     [rax], r13b", "jmp     loc_7D88"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,r13b", "jmp~FOO"]], [0, 0, 16, 1, 0, 2, 0, 1, 6, 3, 0.001885369532428356, ["add     r12, rax", "jmp     loc_7D88"], ["add~r12,rax", "jmp~FOO"]], [0, 0, 16, 0, 1, 3, 0, 2, 11, 3, 0.013574660633484163, ["mov     esi, r14d; int", "call    ___overflow", "jmp     loc_7D88"], ["mov~esi,r14d", "call~FOO", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 38h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 7, 0, 0, 3, 1, 1, 2, -1, 0.0047762694821518355, ["xor     ebx, ebx; jumptable 0000000000007C6F case 0", "cmp     cs:cwd_n_used, 0", "jz      loc_800E"], ["xor~ebx,ebx", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 7, 0, 0, 3, 1, 1, 2, -1, 0.0047762694821518355, ["xor     ebx, ebx; jumptable 0000000000007C6F case 1", "cmp     cs:cwd_n_used, 0", "jz      loc_800E"], ["xor~ebx,ebx", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 9, 2, 1, 16, 3, 2, 2, -1, 0.006284565108094521, ["mov     edi, 1; jumptable 0000000000007C6F case 2", "xor     r14d, r14d", "call    calculate_columns", "lea     rdx, [rax+rax*2]", "mov     rcx, rax", "mov     rax, cs:column_info_0", "lea     r15, [rax+rdx*8-18h]", "mov     rax, cs:cwd_n_used", "xor     edx, edx", "div     rcx", "test    rdx, rdx", "setnz   r14b", "add     r14, rax", "mov     rax, r14", "mov     [rsp+68h+var_50], r14", "jz      loc_800E"], ["mov~edi,0", "xor~r14d,r14d", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~rax,<TAG>", "lea~r15,[rax+0]", "mov~rax,<TAG>", "xor~edx,edx", "div~,rcx", "test~rdx,rdx", "setnz~r14b", "add~r14,rax", "mov~rax,r14", "mov~[rsp+0],r14", "jz~FOO"]], [1, 0, 50, 2, 0, 12, 0, 1, 1, 3, 0.018853695324283562, ["push    r15", "push    r14", "lea     rdx, off_12E04", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 38h", "mov     eax, cs:format_0", "movsxd  rax, dword ptr [rdx+rax*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["push~r15", "push~r14", "lea~rdx,<TAG>", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~eax,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [0, 0, 5, 0, 0, 1, 0, 0, 3, -1, 0.005656108597285068, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 10, 1, 1, 6, 0, 2, 5, 3, 0.004901960784313725, ["add     r12, r15", "lea     rdi, [rcx+r15]; from", "mov     rsi, r12; to", "mov     r15, r12", "call    indent", "jmp     short loc_7CFB"], ["add~r12,r15", "lea~rdi,<TAG>", "mov~rsi,r12", "mov~r15,r12", "call~FOO", "jmp~FOO"]], [1, 0, 10, 0, 1, 4, 1, 2, 6, 3, 0.0013197586726998493, ["mov     esi, 0Ah; int", "xor     r15d, r15d", "call    ___overflow", "jmp     loc_7CFB"], ["mov~esi,0", "xor~r15d,r15d", "call~FOO", "jmp~FOO"]], [1, 0, 10, 0, 0, 4, 1, 0, 6, 3, 0.0013197586726998493, ["lea     rdx, [rax+1]", "xor     r15d, r15d", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah"], ["lea~rdx,[rax+0]", "xor~r15d,r15d", "mov~[rdi+0],rdx", "mov~<TAG>,0"]], [0, 0, 3, 0, 0, 4, 0, 0, 3, 1, 0.027149321266968326, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_80DE"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [1, 0, 11, 0, 3, 17, 1, 3, 2, 2, 0.006787330316742082, ["xor     edi, edi; jumptable 0000000000007C6F case 3", "call    calculate_columns", "lea     rdx, [rax+rax*2]", "mov     r13, rax", "mov     rax, cs:column_info_0", "lea     r14, [rax+rdx*8-18h]", "mov     rax, cs:sorted_file", "mov     rbx, [rax]", "mov     rdi, rbx; f", "call    length_of_file_name_and_frills", "mov     [rsp+68h+var_60], rax", "mov     rax, [r14+10h]", "mov     rdi, rbx; f", "mov     r12, [rax]", "call    print_file_name_and_frills", "cmp     cs:cwd_n_used, 1", "jbe     loc_8020"], ["xor~edi,edi", "call~FOO", "lea~rdx,<TAG>", "mov~r13,rax", "mov~rax,<TAG>", "lea~r14,[rax+0]", "mov~rax,<TAG>", "mov~rbx,<TAG>", "mov~rdi,rbx", "call~FOO", "mov~[rsp+0],rax", "mov~rax,[r14+0]", "mov~rdi,rbx", "mov~r12,<TAG>", "call~FOO", "cmp~<TAG>,0", "jbe~FOO"]], [0, 0, 16, 0, 1, 6, 1, 2, 5, 4, 0.04034690799396682, ["mov     rax, cs:sorted_file", "mov     rbp, [rax+rbx*8]", "mov     rdi, rbp; f", "call    length_of_file_name_and_frills", "test    rbx, rbx", "jz      loc_8050"], ["mov~rax,<TAG>", "mov~rbp,<TAG>", "mov~rdi,rbp", "call~FOO", "test~rbx,rbx", "jz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 3, -1, 0.005656108597285068, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 10, 0, 0, 4, 0, 0, 5, 4, 0.006033182503770739, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_80B0"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [1, 0, 52, 0, 0, 2, 0, 1, 0, 4, 0.0, ["cmp     cs:format_0, 4; switch 5 cases", "ja      locret_8078; jumptable 0000000000007C6F default case"], ["cmp~<TAG>,0", "ja~FOO"]], [0, 0, 16, 0, 0, 3, 0, 0, 6, 8, 0.032805429864253395, ["lea     r12, [rax+r12+2]", "cmp     r12, cs:line_length", "jb      loc_8060"], ["lea~r12,[rax+0]", "cmp~r12,<TAG>", "jb~FOO"]], [0, 0, 16, 0, 0, 4, 0, 0, 8, 6, 0.032805429864253395, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_80C2"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [2, 0, 0, 1, 0, 11, 0, 0, 4, -1, 0.0, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah", "add     rsp, 38h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 5, 1, 0, 3, 0, 1, 6, -1, 0.004147812971342383, ["add     i, 1", "cmp     cs:cwd_n_used, i", "ja      short loc_7EB0"], ["add~i,0", "cmp~<TAG>,i", "ja~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, -1, 0.0, ["rep retn; jumptable 0000000000007C6F default case"], ["retn"]], [2, 0, 8, 1, 0, 4, 0, 0, 3, -1, 0.007918552036199095, ["shl     rax, 3", "mov     [rsp+68h+var_40], 0", "mov     [rsp+68h+var_48], rax", "nop     word ptr [rax+rax+00000000h]"], ["shl~rax,0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "nop~[ord ptr [rax+0]"]], [2, 0, 16, 0, 0, 3, 0, 0, 7, 7, 0.013574660633484163, ["mov     r14d, 0Ah", "mov     r13d, 0Ah", "mov     r12, rax"], ["mov~r14d,0", "mov~r13d,0", "mov~r12,rax"]], [1, 0, 5, 0, 0, 3, 0, 0, 5, -1, 0.001885369532428356, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0"]], [1, 0, 0, 1, 0, 8, 0, 0, 7, -1, 0.0, ["add     rsp, 38h", "pop     i", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~i", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 2, 16, 0, 0, 3, 0, 1, 7, 7, 0.013574660633484163, ["mov     r14d, 20h ; ' '", "mov     r13d, 20h ; ' '", "jmp     loc_7DDE"], ["mov~r14d,<STR>", "mov~r13d,<STR>", "jmp~FOO"]]], "func_feature": [21, 15, 45, 5, 53, 73, 2, 274, 0.01024, 8, 23], "succs": [[41, 34], [0], [0, 37], [18, 19], [3], [3], [], [6], [24], [8, 37], [28, 22], [10], [10], [46], [50, 13], [25, 27], [15], [15], [4, 5], [], [11, 12], [20, 23], [21], [21], [37, 39], [24], [24], [24], [], [40, 28], [33, 28], [48, 28], [9, 38, 29, 30, 31], [14], [2], [2], [2], [45, 7], [1, 37], [26, 43], [18], [35, 36], [32, 47], [49, 52], [16, 17], [], [51, 14], [], [22], [44], [46], [], [44]], "fname": "print_current_files", "n_num": 53}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 7, 0, 0, 3, 0, 1, 0, 0, 0.19999999999999998, ["mov     rax, [a+58h]", "cmp     [r8+58h], rax", "jg      short loc_8170"], ["mov~rax,[a+0]", "cmp~[r8+0],rax", "jg~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 1, 2, 0.14545454545454545, ["test    cl, cl", "jnz     short loc_8140"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 8, 0, 0, 3, 1, 1, 2, 2, 0.02727272727272727, ["test    dl, dl", "mov     eax, 1", "jz      short loc_8140"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [0, 0, 1, 0, 0, 3, 0, 1, 5, -1, 0.06363636363636363, ["mov     b, [a]; s2", "mov     a, [b]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 4, -1, 0.12727272727272726, ["mov     rax, [a+60h]", "sub     eax, [r8+60h]", "jnz     short locret_813E"], ["mov~rax,[a+0]", "sub~eax,[r8+0]", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 3, -1, 0.1909090909090909, ["jl      short loc_8168"], ["jl~FOO"]], [4, 0, 11, 0, 0, 14, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "mov     r8, b", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_8131"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "mov~r8,b", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 10, 0, 0, 2, 1, 1, 1, 1, 0.00909090909090909, ["test    cl, cl", "jnz     short loc_8170"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 6, -1, 0.0, [], []], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 5, 8, 0, 12, 15, 0, 36, 0.06364, 0, 1], "succs": [[9, 5], [0, 2], [0, 11], [10], [11, 3], [4, 7], [8, 1], [], [1, 9], [], [], []], "fname": "rev_strcmp_df_atime", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.06363636363636363, ["mov     b, [a]; s2", "mov     a, [b]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 4, -1, 0.12727272727272726, ["mov     rax, [a+80h]", "sub     eax, [r8+80h]", "jnz     short locret_81BE"], ["mov~rax,[a+0]", "sub~eax,[r8+0]", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 10, 0, 0, 2, 1, 1, 1, 1, 0.00909090909090909, ["test    cl, cl", "jnz     short loc_8200"], ["test~cl,cl", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 2, 1, 0.19999999999999998, ["mov     rax, [a+78h]", "cmp     [r8+78h], rax", "jg      short loc_8200"], ["mov~rax,[a+0]", "cmp~[r8+0],rax", "jg~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 1, 2, 0.14545454545454545, ["test    cl, cl", "jnz     short loc_81C0"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 8, 0, 0, 3, 1, 1, 2, 2, 0.02727272727272727, ["test    dl, dl", "mov     eax, 1", "jz      short loc_81C0"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 3, -1, 0.1909090909090909, ["jl      short loc_81F0"], ["jl~FOO"]], [4, 0, 11, 0, 0, 14, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "mov     r8, b", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_81B1"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "mov~r8,b", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 6, -1, 0.0, [], []], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 5, 8, 0, 12, 15, 0, 36, 0.06364, 0, 1], "succs": [[10], [0, 11], [], [2, 5], [2, 7], [4, 6], [11, 4], [9, 1], [3, 5], [], [], []], "fname": "rev_strcmp_df_ctime", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 0, 4, 0, 0, 0, 0, 0.0, ["add     rsp, 28h", "pop     rbx", "pop     u", "retn"], ["add~rsp,0", "pop~rbx", "pop~u", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 3, 1, 0.21428571428571427, ["mov     rsi, [rsp+38h+var_20]", "xor     rsi, fs:28h", "jnz     short loc_82CC"], ["mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 3, 0, 1, 6, 2, 2, 2, 2, 0.10714285714285714, ["xor     esi, esi; flags", "call    gnu_mbswidth", "mov     edx, 0", "test    eax, eax", "cmovs   eax, edx", "jmp     short loc_828E"], ["xor~esi,esi", "call~FOO", "mov~edx,0", "test~eax,eax", "cmovs~eax,edx", "jmp~FOO"]], [0, 0, 7, 0, 1, 4, 1, 2, 1, 3, 0.07142857142857142, ["call    getuser", "test    rax, rax", "mov     rdi, rax; string", "jz      loc_8231"], ["call~FOO", "test~rax,rax", "mov~rdi,rax", "jz~FOO"]], [2, 0, 5, 1, 0, 7, 2, 1, 2, 3, 0.10714285714285714, ["mov     ecx, [rax]", "add     rax, 4", "lea     edx, [rcx-1010101h]", "not     ecx", "and     edx, ecx", "and     edx, 80808080h", "jz      short loc_8255"], ["mov~ecx,<TAG>", "add~rax,0", "lea~edx,[rcx-1010101h]+0]", "not~ecx", "and~edx,ecx", "and~edx,0", "jz~FOO"]], [2, 0, 5, 0, 1, 9, 1, 1, 1, 4, 0.07142857142857142, ["mov     rbx, rsp", "lea     rcx, aLu_0+1; \"%lu\"", "mov     r8d, ebp", "mov     edx, 15h", "mov     esi, 1", "mov     rdi, rbx; uid", "xor     eax, eax", "call    ___sprintf_chk", "mov     rax, rbx"], ["mov~rbx,rsp", "lea~rcx,<TAG>", "mov~r8d,ebp", "mov~edx,0", "mov~esi,0", "mov~rdi,rbx", "xor~eax,eax", "call~FOO", "mov~rax,rbx"]], [3, 0, 3, 2, 0, 10, 1, 0, 3, 2, 0.10714285714285714, ["mov     ecx, edx", "shr     ecx, 10h", "test    edx, 8080h", "cmovz   edx, ecx", "lea     rcx, [rax+2]", "mov     esi, edx", "cmovz   rax, rcx", "add     sil, dl", "sbb     rax, 3", "sub     eax, ebx"], ["mov~ecx,edx", "shr~ecx,0", "test~edx,0", "cmovz~edx,ecx", "lea~rcx,[rax+0]", "mov~esi,edx", "cmovz~rax,rcx", "add~sil,dl", "sbb~rax,0", "sub~eax,ebx"]], [2, 0, 8, 1, 0, 9, 1, 1, 0, 4, 0.0, ["push    rbp", "push    rbx", "mov     ebp, edi", "sub     rsp, 28h", "mov     rax, fs:28h", "mov     [rsp+38h+var_20], rax", "xor     eax, eax", "cmp     cs:numeric_ids, 0", "jz      short loc_82A8"], ["push~rbp", "push~rbx", "mov~ebp,edi", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~<TAG>,0", "jz~FOO"]]], "func_feature": [4, 9, 9, 1, 9, 11, 2, 53, 0.0754, 3, 5], "succs": [[], [0, 2], [], [1], [3, 6], [5, 7], [5], [1], [4, 6]], "fname": "format_user_width", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 100, 0, 0, 2, 1, 1, 0, 0, 0.051617944475087336, ["test    dl, dl", "jz      short loc_881A"], ["test~dl,dl", "jz~FOO"]], [0, 0, 103, 0, 0, 2, 0, 0, 9, -1, 0.02224673653245082, ["cmp     r9, rdi", "jnb     short loc_87FE"], ["cmp~r9,rdi", "jnb~FOO"]], [1, 0, 102, 0, 0, 2, 0, 1, 10, -1, 0.0018845375988233131, ["cmp     byte ptr [rdi-1], 2Fh ; '/'", "jz      short loc_87FE"], ["cmp~[yte ptr [rdi-1]+0],0", "jz~FOO"]], [0, 0, 108, 0, 0, 3, 1, 1, 7, -1, 0.018063982349696635, ["test    r10b, r10b", "mov     rax, absolute_name", "jz      loc_87FE"], ["test~r10b,r10b", "mov~rax,absolute_name", "jz~FOO"]], [1, 0, 101, 0, 0, 2, 0, 0, 11, -1, 0.0, ["mov     byte ptr [rax], 2Fh ; '/'", "lea     rax, [r8+2]"], ["mov~<TAG>,0", "lea~rax,[r8+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 1, 144, 1, 0, 6, 0, 0, 2, 1, 0.0002757859900717044, ["mov     edx, 170h", "mov     byte ptr [rbp+src], r8b", "mov     [rbp+dirname], dirname_0", "mov     rax, rdx", "mul     rsi", "jo      loc_8E00"], ["mov~edx,<STR>", "mov~[yte ptr [rbp+0],r8b", "mov~[rbp+0],dirname_0", "mov~rax,rdx", "mul~,rsi", "jo~FOO"]], [1, 0, 95, 0, 0, 2, 0, 0, 6, -1, 0.021603235888950176, ["cmp     ecx, 4", "jbe     short loc_8458"], ["cmp~ecx,0", "jbe~FOO"]], [1, 0, 96, 0, 0, 2, 0, 0, 5, -1, 0.1674327388613103, ["cmp     ecx, 3", "jb      short loc_8461"], ["cmp~ecx,0", "jb~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 8, -1, 0.01323772752344181, ["mov     name, [rbp+var_38]", "xor     name, fs:28h", "mov     rax, r13", "jnz     loc_8DFB"], ["mov~name,[rbp+0]", "xor~name,<TAG>", "mov~rax,r13", "jnz~FOO"]], [1, 0, 5, 0, 2, 11, 3, 3, 7, -1, 0.008963044677330391, ["lea     rsi, aCannotAccessS; \"cannot access %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rdx, absolute_name; file", "movzx   edi, r12b; serious", "mov     rsi, rax; message", "call    file_failure", "xor     r13d, r13d", "test    r12b, r12b", "jnz     loc_85F5"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rdx,absolute_name", "movzx~edi,r12b", "mov~rsi,rax", "call~FOO", "xor~r13d,r13d", "test~r12b,r12b", "jnz~FOO"]], [2, 0, 3, 0, 2, 10, 2, 3, 11, -1, 0.0006894649751792609, ["lea     rsi, aCannotAccessS; \"cannot access %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, absolute_name; file", "mov     rsi, rax; message", "mov     edi, 1; serious", "call    file_failure", "xor     r13d, r13d", "jmp     loc_85F5"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rdx,absolute_name", "mov~rsi,rax", "mov~edi,0", "call~FOO", "xor~r13d,r13d", "jmp~FOO"]], [1, 0, 3, 1, 1, 4, 0, 1, 7, -1, 0.01395017466446038, ["mov     rdi, name; string", "call    xstrdup", "add     cs:cwd_n_used, 1", "mov     [f], rax"], ["mov~rdi,name", "call~FOO", "add~<TAG>,0", "mov~<TAG>,rax"]], [1, 0, 86, 0, 0, 2, 0, 1, 7, -1, 0.004389593675307961, ["cmp     ecx, 5", "jnz     short loc_8461"], ["cmp~ecx,0", "jnz~FOO"]], [1, 0, 134, 0, 0, 3, 1, 1, 6, -1, 0.008288901146044005, ["xor     r13d, r13d", "cmp     cs:format_needs_type, 0", "jz      loc_85E2"], ["xor~r13d,r13d", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 136, 0, 0, 4, 1, 1, 5, -1, 0.009009009009009009, ["movzx   r10d, cs:print_inode", "test    r10b, r10b", "mov     edx, r10d", "jz      loc_8A01"], ["movzx~r10d,<TAG>", "test~r10b,r10b", "mov~edx,r10d", "jz~FOO"]], [0, 0, 135, 0, 0, 4, 1, 1, 6, -1, 0.0029876815591101304, ["movzx   r10d, cs:print_inode", "test    r10b, r10b", "mov     edx, r10d", "jnz     loc_8690"], ["movzx~r10d,<TAG>", "test~r10b,r10b", "mov~edx,r10d", "jnz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 1, 16, -1, 0.0014708586137157566, ["jmp     loc_85D3"], ["jmp~FOO"]], [1, 0, 23, 0, 0, 2, 0, 1, 15, -1, 0.0076760433903291046, ["cmp     cs:print_scontext, 0", "jnz     loc_85AD"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 133, 0, 0, 2, 0, 1, 7, -1, 0.012103940675369249, ["cmp     r14d, 6", "jz      loc_865E"], ["cmp~r14d,0", "jz~FOO"]], [2, 0, 99, 2, 0, 6, 1, 1, 10, -1, 0.0045045045045045045, ["add     rsi, 1", "add     rax, 1", "mov     [rax-1], dl", "movzx   edx, byte ptr [rsi]", "test    dl, dl", "jnz     short loc_8808"], ["add~rsi,0", "add~rax,0", "mov~[rax-1]+0],dl", "movzx~edx,<TAG>", "test~dl,dl", "jnz~FOO"]], [0, 0, 99, 0, 0, 2, 0, 0, 9, -1, 0.0020224305938591654, ["mov     rsi, name", "nop     dword ptr [rax]"], ["mov~rsi,name", "nop~<TAG>"]], [0, 0, 0, 0, 0, 8, 0, 0, 9, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     r13", "pop     r14", "pop     f", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~r13", "pop~r14", "pop~f", "pop~rbp", "retn"]], [1, 0, 48, 0, 0, 2, 0, 1, 11, -1, 0.01199669056811914, ["cmp     cs:immediate_dirs, 1", "jz      loc_8CB8"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 50, 0, 0, 2, 0, 1, 10, -1, 0.16023166023166024, ["cmp     eax, 4000h", "jz      loc_8BA8"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 84, 0, 1, 6, 1, 2, 8, -1, 0.038763253048967335, ["mov     rdx, r14; stat_buf", "mov     rsi, absolute_name; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jz      short loc_8475"], ["mov~rdx,r14", "mov~rsi,absolute_name", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 111, 0, 0, 4, 1, 1, 9, -1, 0.017841821413249987, ["movzx   esi, byte ptr [r9]", "mov     r13, name", "test    sil, sil", "jz      loc_840A"], ["movzx~esi,<TAG>", "mov~r13,name", "test~sil,sil", "jz~FOO"]], [0, 0, 85, 0, 0, 2, 0, 1, 9, -1, 0.014118710547281978, ["mov     r13, name", "jmp     loc_840A"], ["mov~r13,name", "jmp~FOO"]], [1, 0, 97, 0, 0, 2, 0, 1, 9, -1, 0.05906416620702335, ["mov     byte ptr [rax], 0", "jmp     loc_83FB"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 132, 0, 0, 2, 1, 1, 8, -1, 0.0035392535392535394, ["test    r14d, r14d", "jz      loc_865E"], ["test~r14d,r14d", "jz~FOO"]], [1, 0, 118, 0, 0, 2, 0, 1, 9, -1, 0.010916528773671632, ["cmp     r14d, 5", "jz      loc_8DB4"], ["cmp~r14d,0", "jz~FOO"]], [0, 0, 119, 0, 0, 1, 0, 1, 10, -1, 0.002367163081448796, ["jmp     loc_8A24"], ["jmp~FOO"]], [0, 0, 140, 0, 0, 3, 1, 1, 3, -1, 0.008963044677330391, ["movzx   eax, cs:format_needs_stat", "test    al, al", "jnz     loc_83D9"], ["movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [6, 0, 141, 3, 0, 16, 3, 1, 2, -1, 0.032404853833425264, ["imul    rsi, 0B8h", "xor     eax, eax", "lea     r15, [rdi+rsi]", "lea     rdi, [f+8]", "mov     rcx, f", "mov     qword ptr [f], 0", "mov     qword ptr [f+0B0h], 0", "and     rdi, 0FFFFFFFFFFFFFFF8h", "sub     rcx, rdi", "add     ecx, 0B8h", "shr     ecx, 3", "test    r12b, r12b", "rep stosq", "mov     [f+18h], inode", "mov     [f+0A0h], r14d", "jz      loc_8620"], ["imul~rsi,,0", "xor~eax,eax", "lea~r15,<TAG>", "lea~rdi,[f+0]", "mov~rcx,f", "mov~<TAG>,0", "mov~[word ptr [f+0],0", "and~rdi,0", "sub~rcx,rdi", "add~ecx,0", "shr~ecx,0", "test~r12b,r12b", "stosq~<TAG>,", "mov~[f+0],inode", "mov~[f+0],r14d", "jz~FOO"]], [1, 0, 139, 0, 0, 2, 0, 1, 4, -1, 0.010204081632653062, ["cmp     r14d, 3", "jz      loc_89E0"], ["cmp~r14d,0", "jz~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 9, -1, 0.0063430777716492, ["mov     eax, r10d", "xor     r13d, r13d", "jmp     loc_85DA"], ["mov~eax,r10d", "xor~r13d,r13d", "jmp~FOO"]], [1, 0, 121, 0, 0, 2, 0, 1, 8, -1, 0.007515168229453944, ["cmp     cs:format_needs_type, 0", "jz      loc_8A2E"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 116, 0, 0, 3, 0, 1, 11, -1, 0.0027578599007170436, ["cmp     cs:print_with_color, 0", "mov     [rbp+dirname], r9", "jz      loc_8A2E"], ["cmp~<TAG>,0", "mov~[rbp+0],r9", "jz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 1, 13, -1, 0.00036771465342893915, ["jmp     loc_8A2E"], ["jmp~FOO"]], [2, 0, 30, 1, 0, 7, 2, 1, 19, -1, 0.006251149108291966, ["mov     ecx, [rax]", "add     rax, 4", "lea     edx, [rcx-1010101h]", "not     ecx", "and     edx, ecx", "and     edx, 80808080h", "jz      short loc_8C22"], ["mov~ecx,<TAG>", "add~rax,0", "lea~edx,[rcx-1010101h]+0]", "not~ecx", "and~edx,ecx", "and~edx,0", "jz~FOO"]], [2, 0, 30, 0, 1, 8, 1, 1, 18, -1, 0.009836366979224123, ["lea     rcx, aLu_0+1; \"%lu\"", "mov     r8d, r14d", "mov     edx, 15h", "mov     esi, 1", "mov     rdi, r12", "xor     eax, eax", "call    ___sprintf_chk", "mov     rax, r12"], ["lea~rcx,<TAG>", "mov~r8d,r14d", "mov~edx,0", "mov~esi,0", "mov~rdi,r12", "xor~eax,eax", "call~FOO", "mov~rax,r12"]], [1, 0, 46, 0, 0, 1, 0, 0, 11, -1, 0.009376723662437948, ["mov     byte ptr [f+0B1h], 1"], ["mov~[yte ptr [f+0],0"]], [0, 0, 47, 0, 0, 1, 0, 1, 17, -1, 0.0008733223018937304, ["jmp     loc_870B"], ["jmp~FOO"]], [1, 0, 73, 0, 0, 2, 0, 1, 10, -1, 0.03856407427835999, ["cmp     cs:check_symlink_color, 0", "jnz     loc_8A66"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 5, 0, 2, 7, 0, 3, 11, -1, 0.006297113439970583, ["mov     rdi, [f+18h]; i", "lea     rsi, [rbp+buf]; buf", "call    umaxtostr", "mov     rdi, rax; s", "call    _strlen", "cmp     cs:inode_number_width, eax", "jge     loc_85E2"], ["mov~rdi,[f+0]", "lea~rsi,[rbp+0]", "call~FOO", "mov~rdi,rax", "call~FOO", "cmp~<TAG>,eax", "jge~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 10, -1, 0.028865600294171723, ["test    al, al", "jnz     loc_8828"], ["test~al,al", "jnz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 2, -1, 0.0, ["lea     command_line_arg, __PRETTY_FUNCTION___8520; \"gobble_file\"", "lea     type, file; \"ls.c\"", "lea     rdi, aCommandLineArg; \"! command_line_arg || inode == NOT_AN_I\"...", "mov     edx, 0A03h; line", "call    ___assert_fail"], ["lea~command_line_arg,<TAG>", "lea~type,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 147, 0, 0, 2, 1, 1, 1, 3, 4.5964331678617394e-05, ["test    r8b, r8b", "jz      loc_8D29"], ["test~r8b,r8b", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 8, -1, 0.0015398051112336826, ["jmp     loc_85E2"], ["jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 12, -1, 0.0, ["mov     cs:inode_number_width, eax", "jmp     loc_85E2"], ["mov~<TAG>,eax", "jmp~FOO"]], [3, 0, 28, 2, 0, 10, 1, 0, 20, -1, 0.002574002574002574, ["mov     ecx, edx", "shr     ecx, 10h", "test    edx, 8080h", "cmovz   edx, ecx", "lea     rcx, [rax+2]", "cmovz   rax, rcx", "mov     ecx, edx", "add     cl, dl", "sbb     rax, 3", "sub     eax, r12d"], ["mov~ecx,edx", "shr~ecx,0", "test~edx,0", "cmovz~edx,ecx", "lea~rcx,[rax+0]", "cmovz~rax,rcx", "mov~ecx,edx", "add~cl,dl", "sbb~rax,0", "sub~eax,r12d"]], [0, 0, 92, 0, 0, 2, 1, 1, 7, -1, 0.017075749218606363, ["test    r12b, r12b", "jnz     loc_8990"], ["test~r12b,r12b", "jnz~FOO"]], [1, 0, 132, 0, 0, 6, 2, 1, 6, -1, 0.010296010296010296, ["cmp     r14d, 6", "setz    al", "test    r14d, r14d", "setz    cl", "or      al, cl", "jz      short loc_8690"], ["cmp~r14d,0", "setz~al", "test~r14d,r14d", "setz~cl", "or~al,cl", "jz~FOO"]], [0, 0, 74, 0, 0, 3, 1, 1, 10, -1, 0.030750137892995036, ["mov     edi, cs:format_0", "test    edi, edi", "jnz     loc_86FE"], ["mov~edi,<TAG>", "test~edi,edi", "jnz~FOO"]], [2, 0, 75, 0, 0, 4, 1, 1, 9, -1, 0.10022522522522523, ["mov     eax, [f+28h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_8A58"], ["mov~eax,[f+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 27, 0, 0, 2, 0, 1, 20, -1, 0.012272476558190843, ["cmp     cs:group_width, eax", "jge     loc_8597"], ["cmp~<TAG>,eax", "jge~FOO"]], [1, 0, 28, 0, 1, 6, 2, 2, 19, -1, 0.012226512226512228, ["xor     esi, esi; flags", "call    gnu_mbswidth", "mov     edx, 0", "test    eax, eax", "cmovs   eax, edx", "jmp     loc_8C5B"], ["xor~esi,esi", "call~FOO", "mov~edx,0", "test~eax,eax", "cmovs~eax,edx", "jmp~FOO"]], [1, 0, 131, 0, 0, 3, 0, 1, 7, -1, 0.032282282282282276, ["mov     ecx, cs:dereference", "cmp     ecx, 5", "jz      loc_8728"], ["mov~ecx,<TAG>", "cmp~ecx,0", "jz~FOO"]], [0, 0, 26, 0, 0, 2, 0, 1, 21, -1, 0.0, ["mov     cs:group_width, eax", "jmp     loc_8597"], ["mov~<TAG>,eax", "jmp~FOO"]], [1, 0, 84, 0, 1, 6, 1, 2, 6, -1, 0.1626524483667341, ["mov     rdx, r14; stat_buf", "mov     rsi, absolute_name; filename", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jnz     short loc_841E"], ["mov~rdx,r14", "mov~rsi,absolute_name", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 88, 0, 0, 4, 1, 1, 10, -1, 0.0026659312373598087, ["mov     edx, [f+28h]", "and     edx, 0F000h", "cmp     edx, 4000h", "jnz     loc_8461"], ["mov~edx,[f+0]", "and~edx,0", "cmp~edx,0", "jnz~FOO"]], [1, 0, 86, 0, 1, 3, 0, 2, 10, -1, 0.002803824232395661, ["call    ___errno_location", "cmp     dword ptr [rax], 2", "jz      loc_8461"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 126, 0, 0, 2, 0, 1, 8, -1, 0.008503401360544218, ["cmp     cs:color_symlink_as_referent, 0", "jnz     loc_83DF"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 72, 0, 1, 7, 1, 2, 11, -1, 0.05993748850891708, ["mov     rsi, [f+40h]; size", "mov     rdi, absolute_name; file", "call    areadlink_with_size", "test    rax, rax", "mov     rcx, rax", "mov     [f+8], rax", "jz      loc_8D80"], ["mov~rsi,[f+0]", "mov~rdi,absolute_name", "call~FOO", "test~rax,rax", "mov~rcx,rax", "mov~[f+0],rax", "jz~FOO"]], [0, 0, 18, 0, 2, 7, 0, 3, 16, -1, 0.05561684133112705, ["mov     rdi, [f+20h]; i", "lea     rsi, [rbp+b]; buf", "call    umaxtostr", "mov     rdi, rax; s", "call    _strlen", "cmp     cs:nlink_width, eax", "jge     short loc_8886"], ["mov~rdi,[f+0]", "lea~rsi,[rbp+0]", "call~FOO", "mov~rdi,rax", "call~FOO", "cmp~<TAG>,eax", "jge~FOO"]], [0, 0, 19, 0, 0, 3, 1, 1, 15, -1, 0.08866519580805296, ["mov     eax, cs:format_0", "test    eax, eax", "jz      loc_8860"], ["mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [0, 0, 17, 0, 0, 1, 0, 0, 17, -1, 0.0, ["mov     cs:nlink_width, eax"], ["mov~<TAG>,eax"]], [1, 0, 125, 0, 0, 2, 0, 1, 9, -1, 0.0028497885640742784, ["cmp     cs:check_symlink_color, 0", "jnz     loc_83DF"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 69, 0, 0, 2, 0, 1, 12, -1, 0.04644695716124288, ["cmp     byte ptr [rcx], 2Fh ; '/'", "jz      loc_8CD0"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 71, 0, 2, 11, 2, 3, 12, -1, 0.011008457437028865, ["lea     rsi, aCannotReadSymb; \"cannot read symbolic link %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "movzx   edi, r12b; serious", "mov     rdx, absolute_name; file", "mov     rsi, rax; message", "call    file_failure", "mov     rcx, [f+8]", "test    rcx, rcx", "jnz     loc_8A82"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "movzx~edi,r12b", "mov~rdx,absolute_name", "mov~rsi,rax", "call~FOO", "mov~rcx,[f+0]", "test~rcx,rcx", "jnz~FOO"]], [1, 0, 81, 0, 0, 4, 1, 1, 7, -1, 0.20500091928663358, ["mov     r8d, cs:format_0", "mov     byte ptr [f+0B0h], 1", "test    r8d, r8d", "jnz     loc_86C0"], ["mov~r8d,<TAG>", "mov~[yte ptr [f+0],0", "test~r8d,r8d", "jnz~FOO"]], [0, 0, 84, 0, 0, 2, 1, 1, 9, -1, 0.010296010296010296, ["test    eax, eax", "jz      loc_8475"], ["test~eax,eax", "jz~FOO"]], [0, 0, 124, 0, 0, 2, 0, 0, 10, -1, 0.0027808420665563524, ["mov     edx, eax", "nop     dword ptr [rax+00000000h]"], ["mov~edx,eax", "nop~[word ptr [rax+0]"]], [3, 0, 109, 1, 2, 23, 2, 3, 6, -1, 0.024315131457988602, ["mov     rdi, name; s", "mov     [rbp+var_398], ecx", "mov     [rbp+var_391], sil", "mov     byte ptr [rbp+src], dl", "mov     [rbp+dirname], r9", "call    _strlen", "mov     r9, [rbp+dirname]", "mov     r13, rax", "mov     rdi, r9; s", "call    _strlen", "lea     rax, [r13+rax+20h]", "movzx   esi, [rbp+var_391]", "mov     r9, [rbp+dirname]", "movzx   edx, byte ptr [rbp+src]", "mov     ecx, [rbp+var_398]", "and     rax, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rax", "movzx   r10d, byte ptr [r9+1]", "lea     r8, [rsp+3A0h+var_391]", "and     r8, 0FFFFFFFFFFFFFFF0h", "cmp     sil, 2Eh ; '.'", "mov     r13, r8", "jz      loc_8A40"], ["mov~rdi,name", "mov~[rbp+0],ecx", "mov~[rbp+0],sil", "mov~[yte ptr [rbp+0],dl", "mov~[rbp+0],r9", "call~FOO", "mov~r9,[rbp+0]", "mov~r13,rax", "mov~rdi,r9", "call~FOO", "lea~rax,[r13+0]", "movzx~esi,[rbp+0]", "mov~r9,[rbp+0]", "movzx~edx,[yte ptr [rbp+0]", "mov~ecx,[rbp+0]", "and~rax,0", "sub~rsp,rax", "movzx~r10d,[yte ptr [r9+0]", "lea~r8,[rsp+0]", "and~r8,0", "cmp~sil,0", "mov~r13,r8", "jz~FOO"]], [0, 0, 123, 0, 0, 2, 1, 1, 7, -1, 0.015451676165961882, ["test    r8b, r8b", "jz      short loc_869D"], ["test~r8b,r8b", "jz~FOO"]], [2, 0, 16, 0, 0, 4, 1, 1, 17, -1, 0.045964331678617396, ["mov     eax, [f+28h]", "and     eax, 0B000h", "cmp     eax, 2000h", "jnz     loc_8950"], ["mov~eax,[f+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [0, 0, 122, 0, 0, 2, 1, 1, 8, -1, 0.012441012441012441, ["test    dl, dl", "jnz     loc_83D9"], ["test~dl,dl", "jnz~FOO"]], [0, 0, 40, 0, 0, 3, 1, 1, 14, -1, 0.08025372311086597, ["mov     edx, cs:format_0", "test    edx, edx", "jnz     loc_8CA0"], ["mov~edx,<TAG>", "test~edx,edx", "jnz~FOO"]], [1, 0, 68, 0, 1, 7, 1, 2, 13, -1, 0.003263467549181835, ["mov     esi, 2Fh ; '/'; c", "mov     rdi, absolute_name; s", "mov     [rbp+dirname], rcx", "call    _strrchr", "test    rax, rax", "mov     rcx, [rbp+dirname]", "jz      loc_8CD0"], ["mov~esi,0", "mov~rdi,absolute_name", "mov~[rbp+0],rcx", "call~FOO", "test~rax,rax", "mov~rcx,[rbp+0]", "jz~FOO"]], [0, 0, 120, 0, 0, 2, 1, 1, 9, -1, 0.007722007722007722, ["test    r14d, r14d", "jz      loc_83D9"], ["test~r14d,r14d", "jz~FOO"]], [0, 0, 90, 0, 0, 2, 1, 1, 9, -1, 0.006113256113256114, ["test    eax, eax", "js      loc_8CF0"], ["test~eax,eax", "js~FOO"]], [0, 0, 32, 0, 1, 5, 1, 2, 18, -1, 0.015811730097444382, ["mov     edi, r14d; gid", "call    getgroup", "test    rax, rax", "mov     rdi, rax; string", "jz      loc_8C01"], ["mov~edi,r14d", "call~FOO", "test~rax,rax", "mov~rdi,rax", "jz~FOO"]], [1, 0, 33, 0, 0, 3, 0, 1, 17, -1, 0.033783783783783786, ["cmp     cs:numeric_ids, 0", "mov     r14d, [f+30h]", "jz      loc_8D50"], ["cmp~<TAG>,0", "mov~r14d,[f+0]", "jz~FOO"]], [1, 0, 45, 0, 0, 2, 0, 1, 12, -1, 0.003102592388306674, ["mov     dword ptr [f+0A0h], 3", "jmp     loc_851C"], ["mov~[word ptr [f+0],0", "jmp~FOO"]], [0, 0, 47, 0, 0, 2, 1, 1, 12, -1, 0.004044861187718331, ["test    r12b, r12b", "jz      loc_8CB8"], ["test~r12b,r12b", "jz~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 8, -1, 0.10436201507630079, ["cmp     cs:print_scontext, 0", "jz      short loc_86EA"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 77, 0, 2, 14, 3, 2, 8, -1, 0.0988462952748667, ["call    ___errno_location", "mov     dword ptr [rax], 5Fh ; '_'", "mov     [rbp+dirname], rax", "lea     rax, UNKNOWN_SECURITY_CONTEXT; \"?\"", "mov     rsi, r14; sb", "mov     rdi, absolute_name; name", "mov     [f+0A8h], rax", "call    file_has_acl", "test    eax, eax", "setnle  dl", "or      cs:any_has_acl, dl", "test    eax, eax", "mov     [f+0B2h], dl", "jns     short loc_84F2"], ["call~FOO", "mov~<TAG>,0", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~rsi,r14", "mov~rdi,absolute_name", "mov~[f+0],rax", "call~FOO", "test~eax,eax", "setnle~dl", "or~<TAG>,dl", "test~eax,eax", "mov~[f+0],dl", "jns~FOO"]], [2, 2, 13, 0, 2, 16, 3, 3, 18, -1, 0.022798308512594227, ["mov     rax, [f+38h]", "lea     r12, [rbp+buf]", "mov     rsi, r12; buf", "mov     rdi, rax", "shr     rax, 20h", "shr     rdi, 8", "mov     edx, edi", "mov     rdi, rax", "and     edx, 0FFFh", "and     edi, 0FFFFF000h", "or      edi, edx; i", "call    umaxtostr", "mov     rdi, rax; s", "call    _strlen", "cmp     cs:major_device_number_width, eax", "jge     short loc_88E1"], ["mov~rax,[f+0]", "lea~r12,[rbp+0]", "mov~rsi,r12", "mov~rdi,rax", "shr~rax,<STR>", "shr~rdi,0", "mov~edx,edi", "mov~rdi,rax", "and~edx,<STR>", "and~edi,0", "or~edi,edx", "call~FOO", "mov~rdi,rax", "call~FOO", "cmp~<TAG>,eax", "jge~FOO"]], [0, 0, 12, 0, 0, 1, 0, 0, 19, -1, 0.0, ["mov     cs:major_device_number_width, eax"], ["mov~<TAG>,eax"]], [0, 0, 66, 0, 1, 5, 1, 2, 13, -1, 0.04265489979775694, ["mov     rdi, rcx; string", "call    xstrdup", "test    rax, rax", "mov     r14, rax", "jnz     loc_8B08"], ["mov~rdi,rcx", "call~FOO", "test~rax,rax", "mov~r14,rax", "jnz~FOO"]], [2, 0, 75, 0, 1, 5, 0, 1, 9, -1, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 5Fh ; '_'", "lea     rax, UNKNOWN_SECURITY_CONTEXT; \"?\"", "mov     byte ptr [f+0B2h], 0", "mov     [f+0A8h], rax"], ["call~FOO", "mov~<TAG>,0", "lea~rax,<TAG>", "mov~[yte ptr [f+0],0", "mov~[f+0],rax"]], [0, 0, 56, 0, 0, 2, 1, 1, 14, -1, 0.0253723110865968, ["xor     r14d, r14d", "jmp     loc_8B20"], ["xor~r14d,r14d", "jmp~FOO"]], [0, 0, 57, 0, 0, 1, 0, 1, 13, -1, 0.010456885456885457, ["jmp     loc_8CE4"], ["jmp~FOO"]], [0, 0, 76, 0, 2, 9, 2, 2, 9, -1, 0.0, ["mov     rdi, absolute_name; arg", "call    quotearg_colon", "mov     rcx, rax", "mov     rax, [rbp+dirname]", "lea     rdx, aInvalidTabSize+12h; format", "xor     edi, edi; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    _error"], ["mov~rdi,absolute_name", "call~FOO", "mov~rcx,rax", "mov~rax,[rbp+0]", "lea~rdx,<TAG>", "xor~edi,edi", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 16, -1, 0.028130170987313845, ["movzx   eax, cs:print_inode"], ["movzx~eax,<TAG>"]], [0, 0, 9, 0, 0, 4, 0, 1, 20, -1, 0.0016547159404302263, ["mov     eax, cs:major_device_number_width", "lea     eax, [rdx+rax+2]", "cmp     cs:file_size_width, eax", "jge     loc_85D3"], ["mov~eax,<TAG>", "lea~eax,[rdx+0]", "cmp~<TAG>,eax", "jge~FOO"]], [0, 0, 8, 0, 0, 2, 0, 1, 20, -1, 0.00036771465342893915, ["mov     cs:file_size_width, eax", "jmp     loc_85D3"], ["mov~<TAG>,eax", "jmp~FOO"]], [1, 0, 10, 0, 2, 11, 1, 3, 18, -1, 0.012502298216583932, ["mov     rdi, [f+40h]; n", "mov     r8, cs:file_output_block_size; to_block_size", "lea     rsi, [rbp+buf]; buf", "mov     edx, cs:human_output_opts; opts", "mov     ecx, 1; from_block_size", "call    human_readable", "xor     esi, esi; flags", "mov     rdi, rax; string", "call    gnu_mbswidth", "cmp     cs:file_size_width, eax", "jge     loc_85D3"], ["mov~rdi,[f+0]", "mov~r8,<TAG>", "lea~rsi,[rbp+0]", "mov~edx,<TAG>", "mov~ecx,0", "call~FOO", "xor~esi,esi", "mov~rdi,rax", "call~FOO", "cmp~<TAG>,eax", "jge~FOO"]], [2, 0, 74, 0, 0, 4, 1, 1, 9, -1, 0.10564901636330208, ["mov     eax, [f+28h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_8506"], ["mov~eax,[f+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [0, 0, 65, 1, 4, 19, 0, 4, 14, -1, 0.00020683949255377828, ["sub     rax, absolute_name", "mov     rdi, rcx; s", "mov     [rbp+src], rcx", "mov     r14, rax", "lea     rax, [rax+1]", "mov     [rbp+dirname], rax", "call    _strlen", "lea     rdi, [r14+rax+2]; n", "call    xmalloc", "mov     rdx, [rbp+dirname]; n", "mov     rsi, absolute_name; src", "mov     rdi, rax; dest", "mov     r14, rax", "call    _strncpy", "mov     rax, [rbp+dirname]", "mov     rcx, [rbp+src]", "lea     rdi, [r14+rax]; dest", "mov     rsi, rcx; src", "call    _strcpy"], ["sub~rax,absolute_name", "mov~rdi,rcx", "mov~[rbp+0],rcx", "mov~r14,rax", "lea~rax,[rax+0]", "mov~[rbp+0],rax", "call~FOO", "lea~rdi,[r14+0]", "call~FOO", "mov~rdx,[rbp+0]", "mov~rsi,absolute_name", "mov~rdi,rax", "mov~r14,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rcx,[rbp+0]", "lea~rdi,<TAG>", "mov~rsi,rcx", "call~FOO"]], [2, 0, 55, 0, 1, 6, 1, 2, 15, -1, 0.04977937120794264, ["mov     rdi, r14; ptr", "call    free", "mov     eax, [f+28h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_8506"], ["mov~rdi,r14", "call~FOO", "mov~eax,[f+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [1, 0, 11, 0, 2, 13, 2, 3, 19, -1, 0.012410369553226696, ["mov     len, [f+38h]", "mov     rsi, r12; buf", "movzx   edx, al", "shr     rax, 0Ch", "mov     rdi, rax", "xor     dil, dil", "or      edi, edx; i", "call    umaxtostr", "mov     rdi, rax; s", "call    _strlen", "mov     edx, cs:minor_device_number_width", "cmp     edx, eax", "jge     short loc_8916"], ["mov~len,[f+0]", "mov~rsi,r12", "movzx~edx,al", "shr~rax,0", "mov~rdi,rax", "xor~dil,dil", "or~edi,edx", "call~FOO", "mov~rdi,rax", "call~FOO", "mov~edx,<TAG>", "cmp~edx,eax", "jge~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 14, -1, 0.029784886927744073, ["cmp     cs:indicator_style_0, 1", "ja      short loc_8B50"], ["cmp~<TAG>,0", "ja~FOO"]], [1, 0, 45, 0, 0, 1, 0, 0, 11, -1, 0.14253539253539255, ["mov     dword ptr [f+0A0h], 5"], ["mov~[word ptr [f+0],0"]], [0, 0, 10, 0, 0, 2, 0, 0, 20, -1, 0.0, ["mov     cs:minor_device_number_width, eax", "mov     edx, eax"], ["mov~<TAG>,eax", "mov~edx,eax"]], [1, 0, 63, 0, 0, 2, 0, 1, 15, -1, 0.0034473248758963046, ["cmp     cs:check_symlink_color, 0", "jnz     short loc_8B50"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 56, 0, 0, 1, 0, 0, 16, -1, 0.001287001287001287, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [2, 0, 148, 1, 0, 20, 2, 1, 0, 3, 0.0, ["push    rbp", "mov     r9, dirname_0", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "mov     r14d, esi", "push    rbx", "mov     r13, inode", "mov     rbx, name", "mov     r12d, ecx", "sub     rsp, 378h", "mov     rax, fs:28h", "mov     [rbp+var_38], rax", "xor     eax, eax", "test    inode, inode", "setz    r8b", "cmp     cl, 1", "jnz     short loc_8327"], ["push~rbp", "mov~r9,dirname_0", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "mov~r14d,esi", "push~rbx", "mov~r13,inode", "mov~rbx,name", "mov~r12d,ecx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "test~inode,inode", "setz~r8b", "cmp~cl,0", "jnz~FOO"]], [1, 0, 45, 0, 0, 2, 0, 1, 12, -1, 0.02895752895752896, ["mov     dword ptr [f+0A0h], 6", "jmp     loc_851C"], ["mov~[word ptr [f+0],0", "jmp~FOO"]], [1, 0, 48, 0, 0, 2, 0, 1, 16, -1, 0.024223202794631367, ["cmp     cs:check_symlink_color, 0", "jnz     loc_8713"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 10, -1, 0.0014708586137157566, ["jmp     loc_8CFE"], ["jmp~FOO"]], [0, 0, 44, 0, 0, 4, 1, 1, 12, -1, 0.17949071520500093, ["mov     ecx, cs:format_0", "mov     absolute_name, [f+50h]", "test    ecx, ecx", "jz      short loc_8533"], ["mov~ecx,<TAG>", "mov~absolute_name,[f+0]", "test~ecx,ecx", "jz~FOO"]], [1, 0, 45, 0, 0, 2, 0, 1, 13, -1, 0.0010341974627688913, ["mov     dword ptr [f+0A0h], 9", "jmp     loc_851C"], ["mov~[word ptr [f+0],0", "jmp~FOO"]], [0, 0, 36, 0, 1, 4, 0, 2, 16, -1, 0.004688361831218974, ["mov     edi, [f+2Ch]; u", "call    format_user_width", "cmp     cs:owner_width, eax", "jge     loc_858A"], ["mov~edi,[f+0]", "call~FOO", "cmp~<TAG>,eax", "jge~FOO"]], [1, 0, 37, 0, 0, 2, 0, 1, 15, -1, 0.06513145798860084, ["cmp     cs:print_owner, 0", "jnz     loc_8C78"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 9, 0, 0, 1, 0, 1, 19, -1, 0.0057455414598271744, ["jmp     short loc_892C"], ["jmp~FOO"]], [1, 0, 43, 0, 0, 2, 0, 1, 13, -1, 0.08788380216951645, ["cmp     cs:print_block_size, 0", "jz      short loc_85A4"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 113, 0, 0, 4, 0, 1, 8, -1, 0.028329349757921188, ["movzx   edx, byte ptr [name]", "lea     type, [f+10h]", "cmp     dl, 2Fh ; '/'", "jz      loc_8DF3"], ["movzx~edx,<TAG>", "lea~type,[f+0]", "cmp~dl,0", "jz~FOO"]], [1, 0, 61, 0, 1, 6, 1, 2, 15, -1, 0.023901452472881043, ["lea     rdx, [rbp+linkstats]; stat_buf", "mov     rsi, r14; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jnz     short loc_8B20"], ["lea~rdx,[rbp+0]", "mov~rsi,r14", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 58, 0, 0, 4, 1, 1, 18, -1, 0.004918183489612061, ["mov     edx, eax", "and     edx, 0F000h", "cmp     edx, 4000h", "jz      short loc_8B20"], ["mov~edx,eax", "and~edx,0", "cmp~edx,0", "jz~FOO"]], [0, 0, 56, 0, 0, 2, 0, 1, 17, -1, 0.0064350064350064354, ["mov     [f+0A4h], eax", "jmp     loc_8B20"], ["mov~[f+0],eax", "jmp~FOO"]], [0, 0, 145, 0, 0, 4, 0, 1, 1, 2, 0.013329656186799044, ["mov     type, cs:cwd_n_used", "cmp     rsi, cs:cwd_n_alloc", "mov     name, cs:cwd_file; p", "jnz     short loc_838C"], ["mov~type,<TAG>", "cmp~rsi,<TAG>", "mov~name,<TAG>", "jnz~FOO"]], [0, 0, 107, 0, 0, 1, 0, 1, 8, -1, 0.0002757859900717044, ["jmp     loc_87C6"], ["jmp~FOO"]], [0, 0, 20, 0, 0, 2, 0, 1, 16, -1, 0.0, ["mov     cs:scontext_width, eax", "jmp     loc_85C5"], ["mov~<TAG>,eax", "jmp~FOO"]], [0, 0, 21, 0, 1, 4, 0, 2, 15, -1, 0.007630079058650488, ["mov     rdi, [f+0A8h]; s", "call    _strlen", "cmp     cs:scontext_width, eax", "jl      loc_8940"], ["mov~rdi,[f+0]", "call~FOO", "cmp~<TAG>,eax", "jl~FOO"]], [0, 0, 110, 0, 0, 1, 0, 0, 10, -1, 0.004090825519396948, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 1, 42, 0, 2, 12, 1, 3, 13, -1, 0.08558558558558559, ["mov     r8, cs:output_block_size; to_block_size", "mov     edx, cs:human_output_opts; opts", "lea     r12, [rbp+buf]", "mov     ecx, 200h; from_block_size", "mov     rdi, blocks; n", "mov     rsi, r12; buf", "call    human_readable", "xor     esi, esi; flags", "mov     rdi, rax; string", "call    gnu_mbswidth", "cmp     cs:block_size_width, eax", "jge     short loc_856F"], ["mov~r8,<TAG>", "mov~edx,<TAG>", "lea~r12,[rbp+0]", "mov~ecx,<STR>", "mov~rdi,blocks", "mov~rsi,r12", "call~FOO", "xor~esi,esi", "mov~rdi,rax", "call~FOO", "cmp~<TAG>,eax", "jge~FOO"]], [0, 0, 41, 0, 0, 1, 0, 0, 14, -1, 0.0, ["mov     cs:block_size_width, eax"], ["mov~<TAG>,eax"]], [0, 0, 35, 0, 0, 2, 0, 1, 17, -1, 0.0, ["mov     cs:owner_width, eax", "jmp     loc_858A"], ["mov~<TAG>,eax", "jmp~FOO"]], [1, 0, 60, 0, 0, 4, 1, 1, 16, -1, 0.014157014157014158, ["test    r12b, r12b", "mov     byte ptr [f+0B1h], 1", "mov     eax, [rbp+linkstats.st_mode]", "jz      short loc_8B98"], ["test~r12b,r12b", "mov~[yte ptr [f+0],0", "mov~eax,[rbp+0]", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 9, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 59, 0, 0, 3, 1, 1, 17, -1, 0.007170435741864313, ["mov     esi, cs:format_0", "test    esi, esi", "jz      short loc_8B98"], ["mov~esi,<TAG>", "test~esi,esi", "jz~FOO"]], [1, 0, 142, 1, 1, 8, 0, 1, 3, -1, 0.00652693509836367, ["mov     rsi, rax; n", "call    xrealloc", "shl     cs:cwd_n_alloc, 1", "movzx   r8d, byte ptr [rbp+src]", "mov     rdi, rax", "mov     rsi, cs:cwd_n_used", "mov     r9, [rbp+dirname]", "mov     cs:cwd_file, rax"], ["mov~rsi,rax", "call~FOO", "shl~<TAG>,0", "movzx~r8d,[yte ptr [rbp+0]", "mov~rdi,rax", "mov~rsi,<TAG>", "mov~r9,[rbp+0]", "mov~<TAG>,rax"]], [1, 0, 34, 0, 0, 2, 0, 1, 16, -1, 0.05589262732119875, ["cmp     cs:print_group, 0", "jnz     loc_8BF0"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 57, 0, 0, 1, 0, 0, 19, -1, 4.5964331678617394e-05, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [1, 0, 25, 0, 0, 2, 0, 1, 17, -1, 0.023211987497701782, ["cmp     cs:print_author, 0", "jnz     loc_8BD0"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 14, -1, 0.09960470674756389, ["cmp     cs:print_scontext, 0", "jz      short loc_85C5"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 24, 0, 1, 4, 0, 2, 18, -1, 0.005239933811362383, ["mov     edi, [f+2Ch]; u", "call    format_user_width", "cmp     cs:author_width, eax", "jge     loc_85A4"], ["mov~edi,[f+0]", "call~FOO", "cmp~<TAG>,eax", "jge~FOO"]], [0, 0, 23, 0, 0, 2, 0, 1, 19, -1, 0.0, ["mov     cs:author_width, eax", "jmp     loc_85A4"], ["mov~<TAG>,eax", "jmp~FOO"]], [2, 0, 91, 0, 1, 8, 0, 2, 8, -1, 0.013789299503585218, ["mov     rdx, r14; stat_buf", "mov     rsi, absolute_name; filename", "mov     edi, 1; ver", "mov     dword ptr [rbp+dirname], ecx", "call    ___xstat", "mov     ecx, dword ptr [rbp+dirname]", "cmp     ecx, 3", "jz      short loc_89CF"], ["mov~rdx,r14", "mov~rsi,absolute_name", "mov~edi,0", "mov~[word ptr [rbp+0],ecx", "call~FOO", "mov~ecx,[word ptr [rbp+0]", "cmp~ecx,0", "jz~FOO"]], [1, 0, 117, 0, 0, 2, 0, 1, 10, -1, 0.013329656186799044, ["cmp     cs:indicator_style_0, 3", "jz      loc_83D9"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 110, 0, 0, 3, 1, 1, 5, -1, 0.016133480419194705, ["movzx   esi, byte ptr [r9]", "test    sil, sil", "jnz     loc_8750"], ["movzx~esi,<TAG>", "test~sil,sil", "jnz~FOO"]], [0, 0, 106, 0, 0, 2, 0, 1, 7, -1, 0.013145798860084575, ["mov     rdi, r9", "jmp     short loc_87DB"], ["mov~rdi,r9", "jmp~FOO"]], [0, 0, 106, 0, 0, 3, 0, 0, 9, -1, 0.0, ["mov     esi, r10d", "movzx   r10d, byte ptr [rdi+1]", "mov     r8, rax"], ["mov~esi,r10d", "movzx~r10d,[yte ptr [rdi+0]", "mov~r8,rax"]], [1, 0, 106, 1, 0, 5, 1, 1, 8, -1, 0.021051663908806768, ["lea     rax, [r8+1]", "add     rdi, 1", "test    r10b, r10b", "mov     [rax-1], sil", "jnz     short loc_87D0"], ["lea~rax,[r8+0]", "add~rdi,0", "test~r10b,r10b", "mov~[rax-1]+0],sil", "jnz~FOO"]], [0, 0, 112, 0, 0, 1, 0, 0, 3, -1, 0.09455629098486243, ["mov     ecx, cs:dereference"], ["mov~ecx,<TAG>"]], [1, 0, 136, 0, 0, 2, 0, 1, 5, -1, 0.0068486854201139915, ["cmp     cs:print_with_color, 0", "jnz     loc_83D9"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 115, 0, 1, 5, 1, 2, 12, -1, 0.006113256113256114, ["mov     edi, 0Eh; type", "call    is_colored", "test    al, al", "mov     r9, [rbp+dirname]", "jnz     loc_83D9"], ["mov~edi,0", "call~FOO", "test~al,al", "mov~r9,[rbp+0]", "jnz~FOO"]], [1, 0, 111, 0, 0, 5, 0, 1, 4, -1, 0.1140221854507569, ["movzx   edx, byte ptr [name]", "lea     type, [f+10h]", "mov     r13, name", "cmp     dl, 2Fh ; '/'", "jz      short loc_83FB"], ["movzx~edx,<TAG>", "lea~type,[f+0]", "mov~r13,name", "cmp~dl,0", "jz~FOO"]]], "func_feature": [50, 78, 168, 2, 149, 242, 3, 598, 0.02528, 42, 15], "succs": [[28, 21], [0, 2], [0, 4], [0, 122], [0], [], [132, 5], [51, 13], [59, 7], [130, 22], [48, 9], [9], [9], [25, 59], [19, 12], [52, 14], [74, 14], [94], [17, 124], [57, 29], [28, 20], [20], [], [83, 84], [103, 23], [10, 70], [25, 125], [25], [8], [57, 30], [35, 140], [30], [145, 34], [32, 145], [146, 15], [45], [35, 79], [35, 147], [35], [50, 39], [39], [108], [41], [41, 63], [49, 12], [12, 44], [], [121, 46], [12], [12], [55], [59, 139], [57, 74], [43, 63], [24, 53], [58, 135], [55], [117, 62], [135], [10, 70], [59, 71], [11, 59], [67, 148], [68, 69], [66, 75], [64, 94], [75], [72, 148], [89, 78], [92, 68], [85, 86], [110, 70], [74], [3, 142], [36, 76], [97, 87], [145, 36], [18, 114], [89, 99], [145, 31], [60, 61], [40, 56], [40, 81], [111], [112, 83], [90, 98], [93, 54], [88, 101], [101], [91, 102], [98], [100], [91], [54], [45], [96, 94], [94], [115, 94], [24, 43], [102], [24, 109], [104, 95], [105, 118], [111], [95], [106, 118], [100], [121, 47], [111], [42, 108], [11], [116, 126], [111], [128, 133], [113, 133], [96], [136, 126], [26, 27], [129, 100], [100, 134], [100], [33, 6], [142], [65], [65, 123], [73], [77, 127], [77], [133], [120, 131], [], [120, 119], [33], [82, 135], [120], [136, 137], [65, 124], [136, 138], [136], [80, 71], [145, 37], [8, 73], [144], [144], [1, 143], [148], [16, 145], [145, 38], [8, 141]], "fname": "gobble_file", "n_num": 149}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 3, 1, 0, 3, 0, 1, 0, 0, 0.11904761904761904, ["mov     rax, [b+70h]", "sub     eax, [a+70h]", "jnz     short locret_8E35"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 1, -1, 0.11904761904761904, ["jl      short loc_8E30"], ["jl~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 7, 0, 0, 3, 0, 1, 0, 1, 0.0, ["mov     rax, [b+68h]", "cmp     [a+68h], rax", "jg      short loc_8E40"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 3, -1, 0.07142857142857142, ["mov     b, [b]; b", "mov     a, [a]; a", "jmp     xstrcoll"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, -1, 0.023809523809523808, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 4, 0, 8, 8, 0, 14, 0.04167, 0, 1], "succs": [[5, 7], [0, 6], [], [1, 2], [], [4], [7], []], "fname": "xstrcoll_mtime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 3, 1, 0, 3, 0, 1, 0, 0, 0.11904761904761904, ["mov     rax, [b+60h]", "sub     eax, [a+60h]", "jnz     short locret_8E75"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 1, -1, 0.11904761904761904, ["jl      short loc_8E70"], ["jl~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 7, 0, 0, 3, 0, 1, 0, 1, 0.0, ["mov     rax, [b+58h]", "cmp     [a+58h], rax", "jg      short loc_8E80"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 3, -1, 0.07142857142857142, ["mov     b, [b]; b", "mov     a, [a]; a", "jmp     xstrcoll"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, -1, 0.023809523809523808, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 4, 0, 8, 8, 0, 14, 0.04167, 0, 1], "succs": [[5, 7], [0, 6], [], [1, 2], [], [4], [7], []], "fname": "xstrcoll_atime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.023809523809523808, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 5, 0, 0, 1, 0, 1, 1, -1, 0.11904761904761904, ["jl      short loc_8EC0"], ["jl~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 3, 1, 0, 3, 0, 1, 2, -1, 0.11904761904761904, ["mov     rax, [b+80h]", "sub     eax, [a+80h]", "jnz     short locret_8EC5"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 3, -1, 0.07142857142857142, ["mov     b, [b]; b", "mov     a, [a]; a", "jmp     xstrcoll"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 7, 0, 0, 3, 0, 1, 0, 1, 0.0, ["mov     rax, [b+78h]", "cmp     [a+78h], rax", "jg      short loc_8ED0"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]]], "func_feature": [0, 0, 4, 0, 8, 8, 0, 14, 0.04167, 0, 1], "succs": [[2], [0, 3], [], [2, 5], [], [4], [], [1, 6]], "fname": "xstrcoll_ctime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.07142857142857142, ["mov     b, [a]; b", "mov     a, [b]; a", "jmp     xstrcoll"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 2, -1, 0.11904761904761904, ["mov     rax, [a+80h]", "sub     eax, [b+80h]", "jnz     short locret_8F15"], ["mov~rax,[a+0]", "sub~eax,[b+0]", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 7, 0, 0, 4, 0, 1, 0, 1, 0.0, ["mov     rax, [a+78h]", "cmp     [b+78h], rax", "mov     rdx, b", "jg      short loc_8F20"], ["mov~rax,[a+0]", "cmp~[b+0],rax", "mov~rdx,b", "jg~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []], [0, 0, 5, 0, 0, 1, 0, 1, 1, -1, 0.11904761904761904, ["jl      short loc_8F10"], ["jl~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, -1, 0.023809523809523808, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 4, 0, 8, 8, 0, 15, 0.04167, 0, 1], "succs": [[4], [0, 7], [], [2, 5], [], [1, 6], [7], []], "fname": "rev_xstrcoll_ctime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 7, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     rax, [a+68h]", "cmp     [b+68h], rax", "mov     rdx, b", "jg      short loc_8F60"], ["mov~rax,[a+0]", "cmp~[b+0],rax", "mov~rdx,b", "jg~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 2, 0, 0.11904761904761904, ["mov     rax, [a+70h]", "sub     eax, [b+70h]", "jnz     short locret_8F5D"], ["mov~rax,[a+0]", "sub~eax,[b+0]", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 1, 0, 0.11904761904761904, ["jl      short loc_8F58"], ["jl~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 3, 0, 0.07142857142857142, ["mov     b, [a]; b", "mov     a, [b]; a", "jmp     xstrcoll"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, 0, 0.023809523809523808, ["mov     eax, 1"], ["mov~eax,0"]]], "func_feature": [0, 0, 4, 0, 8, 8, 0, 15, 0.04167, 0, 1], "succs": [[], [0, 3], [5, 6], [2, 7], [], [4], [], [6]], "fname": "rev_xstrcoll_mtime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 7, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     rax, [a+58h]", "cmp     [b+58h], rax", "mov     rdx, b", "jg      short loc_8FA0"], ["mov~rax,[a+0]", "cmp~[b+0],rax", "mov~rdx,b", "jg~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 2, 0, 0.11904761904761904, ["mov     rax, [a+60h]", "sub     eax, [b+60h]", "jnz     short locret_8F9D"], ["mov~rax,[a+0]", "sub~eax,[b+0]", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 1, 0, 0.11904761904761904, ["jl      short loc_8F98"], ["jl~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 3, 0, 0.07142857142857142, ["mov     b, [a]; b", "mov     a, [b]; a", "jmp     xstrcoll"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, 0, 0.023809523809523808, ["mov     eax, 1"], ["mov~eax,0"]]], "func_feature": [0, 0, 4, 0, 8, 8, 0, 15, 0.04167, 0, 1], "succs": [[], [0, 3], [5, 6], [2, 7], [], [4], [], [6]], "fname": "rev_xstrcoll_atime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 3, 1, 0, 3, 0, 1, 0, 0, 0.11904761904761904, ["mov     rax, [b+60h]", "sub     eax, [a+60h]", "jnz     short locret_8FD5"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 1, -1, 0.11904761904761904, ["jl      short loc_8FD0"], ["jl~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 7, 0, 0, 3, 0, 1, 0, 1, 0.0, ["mov     rax, [b+58h]", "cmp     [a+58h], rax", "jg      short loc_8FE0"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [0, 0, 1, 0, 0, 3, 0, 1, 3, -1, 0.07142857142857142, ["mov     b, [b]; s2", "mov     a, [a]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, -1, 0.023809523809523808, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []]], "func_feature": [0, 0, 4, 0, 8, 8, 0, 14, 0.04167, 0, 1], "succs": [[4, 6], [0, 5], [], [1, 2], [7], [6], [], []], "fname": "strcmp_atime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 3, 1, 0, 3, 0, 1, 0, 0, 0.11904761904761904, ["mov     rax, [b+70h]", "sub     eax, [a+70h]", "jnz     short locret_9015"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 1, -1, 0.11904761904761904, ["jl      short loc_9010"], ["jl~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 7, 0, 0, 3, 0, 1, 0, 1, 0.0, ["mov     rax, [b+68h]", "cmp     [a+68h], rax", "jg      short loc_9020"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [0, 0, 1, 0, 0, 3, 0, 1, 3, -1, 0.07142857142857142, ["mov     b, [b]; s2", "mov     a, [a]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, -1, 0.023809523809523808, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []]], "func_feature": [0, 0, 4, 0, 8, 8, 0, 14, 0.04167, 0, 1], "succs": [[4, 6], [0, 5], [], [1, 2], [7], [6], [], []], "fname": "strcmp_mtime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 3, -1, 0.07142857142857142, ["mov     b, [a]; s2", "mov     a, [b]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 7, 0, 0, 4, 0, 1, 0, 1, 0.0, ["mov     rax, [a+68h]", "cmp     [b+68h], rax", "mov     rdx, b", "jg      short loc_9060"], ["mov~rax,[a+0]", "cmp~[b+0],rax", "mov~rdx,b", "jg~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 2, -1, 0.11904761904761904, ["mov     rax, [a+70h]", "sub     eax, [b+70h]", "jnz     short locret_905D"], ["mov~rax,[a+0]", "sub~eax,[b+0]", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 1, -1, 0.11904761904761904, ["jl      short loc_9058"], ["jl~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, -1, 0.023809523809523808, ["mov     eax, 1"], ["mov~eax,0"]]], "func_feature": [0, 0, 4, 0, 8, 8, 0, 15, 0.04167, 0, 1], "succs": [[], [0], [], [2, 5], [1, 6], [4, 7], [], [6]], "fname": "rev_strcmp_mtime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.023809523809523808, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 5, 0, 0, 1, 0, 1, 1, -1, 0.11904761904761904, ["jl      short loc_90A0"], ["jl~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 3, 1, 0, 3, 0, 1, 2, -1, 0.11904761904761904, ["mov     rax, [b+80h]", "sub     eax, [a+80h]", "jnz     short locret_90A5"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [0, 0, 1, 0, 0, 3, 0, 1, 3, -1, 0.07142857142857142, ["mov     b, [b]; s2", "mov     a, [a]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 7, 0, 0, 3, 0, 1, 0, 1, 0.0, ["mov     rax, [b+78h]", "cmp     [a+78h], rax", "jg      short loc_90B0"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []]], "func_feature": [0, 0, 4, 0, 8, 8, 0, 14, 0.04167, 0, 1], "succs": [[2], [0, 3], [], [2, 4], [7], [], [1, 5], []], "fname": "strcmp_ctime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.07142857142857142, ["mov     b, [a]; s2", "mov     a, [b]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 2, -1, 0.11904761904761904, ["mov     rax, [a+80h]", "sub     eax, [b+80h]", "jnz     short locret_90F5"], ["mov~rax,[a+0]", "sub~eax,[b+0]", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 7, 0, 0, 4, 0, 1, 0, 1, 0.0, ["mov     rax, [a+78h]", "cmp     [b+78h], rax", "mov     rdx, b", "jg      short loc_9100"], ["mov~rax,[a+0]", "cmp~[b+0],rax", "mov~rdx,b", "jg~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 1, -1, 0.11904761904761904, ["jl      short loc_90F0"], ["jl~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, -1, 0.023809523809523808, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []]], "func_feature": [0, 0, 4, 0, 8, 8, 0, 15, 0.04167, 0, 1], "succs": [[7], [0, 6], [], [2, 4], [1, 5], [6], [], []], "fname": "rev_strcmp_ctime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 3, -1, 0.07142857142857142, ["mov     b, [a]; s2", "mov     a, [b]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 7, 0, 0, 4, 0, 1, 0, 1, 0.0, ["mov     rax, [a+58h]", "cmp     [b+58h], rax", "mov     rdx, b", "jg      short loc_9140"], ["mov~rax,[a+0]", "cmp~[b+0],rax", "mov~rdx,b", "jg~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 2, -1, 0.11904761904761904, ["mov     rax, [a+60h]", "sub     eax, [b+60h]", "jnz     short locret_913D"], ["mov~rax,[a+0]", "sub~eax,[b+0]", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 1, -1, 0.11904761904761904, ["jl      short loc_9138"], ["jl~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, -1, 0.023809523809523808, ["mov     eax, 1"], ["mov~eax,0"]]], "func_feature": [0, 0, 4, 0, 8, 8, 0, 15, 0.04167, 0, 1], "succs": [[], [0], [], [2, 5], [1, 6], [4, 7], [], [6]], "fname": "rev_strcmp_atime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 9, 0, 0, 2, 1, 1, 0, 0, 0.14545454545454545, ["test    cl, cl", "jnz     short loc_9190"], ["test~cl,cl", "jnz~FOO"]], [4, 0, 11, 0, 0, 13, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_917E"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [0, 0, 10, 0, 0, 2, 1, 1, 1, 1, 0.00909090909090909, ["test    cl, cl", "jnz     short loc_91D0"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 5, 0, 0, 1, 0, 1, 3, -1, 0.1909090909090909, ["jl      short loc_91C0"], ["jl~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 6, -1, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 5, -1, 0.06363636363636363, ["mov     b, [b]", "mov     a, [a]", "jmp     xstrcoll"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 4, -1, 0.12727272727272726, ["mov     rax, [b+80h]", "sub     eax, [a+80h]", "jnz     short locret_918B"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [1, 0, 8, 0, 0, 3, 1, 1, 2, 2, 0.02727272727272727, ["test    dl, dl", "mov     eax, 1", "jz      short loc_9190"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 7, 0, 0, 3, 0, 1, 2, 1, 0.19999999999999998, ["mov     rax, [b+78h]", "cmp     [a+78h], rax", "jg      short loc_91D0"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]]], "func_feature": [0, 5, 8, 0, 12, 15, 0, 35, 0.06364, 0, 1], "succs": [[8, 10], [0, 2], [0, 11], [], [3, 7], [], [5], [9, 6], [9, 10], [], [11, 4], []], "fname": "xstrcoll_df_ctime", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.06363636363636363, ["mov     b, [b]", "mov     a, [a]", "jmp     xstrcoll"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 4, -1, 0.12727272727272726, ["mov     rax, [b+60h]", "sub     eax, [a+60h]", "jnz     short locret_921B"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 5, 0, 0, 1, 0, 1, 3, -1, 0.1909090909090909, ["jl      short loc_9240"], ["jl~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 6, -1, 0.0, [], []], [4, 0, 11, 0, 0, 13, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_920E"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 2, 1, 0.19999999999999998, ["mov     rax, [b+58h]", "cmp     [a+58h], rax", "jg      short loc_9250"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [0, 0, 10, 0, 0, 2, 1, 1, 1, 1, 0.00909090909090909, ["test    cl, cl", "jnz     short loc_9250"], ["test~cl,cl", "jnz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 1, 2, 0.14545454545454545, ["test    cl, cl", "jnz     short loc_9220"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 8, 0, 0, 3, 1, 1, 2, 2, 0.02727272727272727, ["test    dl, dl", "mov     eax, 1", "jz      short loc_9220"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 5, 8, 0, 12, 15, 0, 35, 0.06364, 0, 1], "succs": [[4], [0, 11], [], [1, 2], [], [8, 7], [10, 3], [8, 10], [9, 6], [11, 6], [], []], "fname": "xstrcoll_df_atime", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 5, -1, 0.06363636363636363, ["mov     b, [a]", "mov     a, [b]", "jmp     xstrcoll"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 2, 1, 0.19999999999999998, ["mov     rax, [a+68h]", "cmp     [r8+68h], rax", "jg      short loc_92D0"], ["mov~rax,[a+0]", "cmp~[r8+0],rax", "jg~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 1, 2, 0.14545454545454545, ["test    cl, cl", "jnz     short loc_92A0"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 8, 0, 0, 3, 1, 1, 2, 2, 0.02727272727272727, ["test    dl, dl", "mov     eax, 1", "jz      short loc_92A0"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 4, -1, 0.12727272727272726, ["mov     rax, [a+70h]", "sub     eax, [r8+70h]", "jnz     short locret_929E"], ["mov~rax,[a+0]", "sub~eax,[r8+0]", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 3, -1, 0.1909090909090909, ["jl      short loc_92C8"], ["jl~FOO"]], [4, 0, 11, 0, 0, 14, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "mov     r8, b", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_9291"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "mov~r8,b", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 10, 0, 0, 2, 1, 1, 1, 1, 0.00909090909090909, ["test    cl, cl", "jnz     short loc_92D0"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 5, 8, 0, 12, 15, 0, 36, 0.06364, 0, 1], "succs": [[], [0], [10, 6], [2, 4], [2, 11], [1, 11], [8, 5], [9, 3], [], [10, 3], [], []], "fname": "rev_xstrcoll_df_mtime", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 5, -1, 0.06363636363636363, ["mov     b, [a]", "mov     a, [b]", "jmp     xstrcoll"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 2, 1, 0.19999999999999998, ["mov     rax, [a+58h]", "cmp     [r8+58h], rax", "jg      short loc_9350"], ["mov~rax,[a+0]", "cmp~[r8+0],rax", "jg~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 1, 2, 0.14545454545454545, ["test    cl, cl", "jnz     short loc_9320"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 8, 0, 0, 3, 1, 1, 2, 2, 0.02727272727272727, ["test    dl, dl", "mov     eax, 1", "jz      short loc_9320"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 4, -1, 0.12727272727272726, ["mov     rax, [a+60h]", "sub     eax, [r8+60h]", "jnz     short locret_931E"], ["mov~rax,[a+0]", "sub~eax,[r8+0]", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 3, -1, 0.1909090909090909, ["jl      short loc_9348"], ["jl~FOO"]], [4, 0, 11, 0, 0, 14, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "mov     r8, b", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_9311"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "mov~r8,b", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 10, 0, 0, 2, 1, 1, 1, 1, 0.00909090909090909, ["test    cl, cl", "jnz     short loc_9350"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 5, 8, 0, 12, 15, 0, 36, 0.06364, 0, 1], "succs": [[], [0], [10, 6], [2, 4], [2, 11], [1, 11], [8, 5], [9, 3], [], [10, 3], [], []], "fname": "rev_xstrcoll_df_atime", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.06363636363636363, ["mov     b, [a]", "mov     a, [b]", "jmp     xstrcoll"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 4, -1, 0.12727272727272726, ["mov     rax, [a+80h]", "sub     eax, [r8+80h]", "jnz     short locret_939E"], ["mov~rax,[a+0]", "sub~eax,[r8+0]", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 10, 0, 0, 2, 1, 1, 1, 1, 0.00909090909090909, ["test    cl, cl", "jnz     short loc_93E0"], ["test~cl,cl", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 2, 1, 0.19999999999999998, ["mov     rax, [a+78h]", "cmp     [r8+78h], rax", "jg      short loc_93E0"], ["mov~rax,[a+0]", "cmp~[r8+0],rax", "jg~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 6, -1, 0.0, [], []], [0, 0, 9, 0, 0, 2, 1, 1, 1, 2, 0.14545454545454545, ["test    cl, cl", "jnz     short loc_93A0"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 8, 0, 0, 3, 1, 1, 2, 2, 0.02727272727272727, ["test    dl, dl", "mov     eax, 1", "jz      short loc_93A0"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 3, -1, 0.1909090909090909, ["jl      short loc_93D0"], ["jl~FOO"]], [4, 0, 11, 0, 0, 14, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "mov     r8, b", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_9391"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "mov~r8,b", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 5, 8, 0, 12, 15, 0, 36, 0.06364, 0, 1], "succs": [[5], [0, 11], [], [2, 6], [8, 2], [], [4, 7], [11, 4], [1, 10], [3, 6], [], []], "fname": "rev_xstrcoll_df_ctime", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 9, 0, 0, 2, 1, 1, 0, 0, 0.14545454545454545, ["test    cl, cl", "jnz     short loc_9430"], ["test~cl,cl", "jnz~FOO"]], [4, 0, 11, 0, 0, 13, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_941E"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [0, 0, 10, 0, 0, 2, 1, 1, 1, 1, 0.00909090909090909, ["test    cl, cl", "jnz     short loc_9460"], ["test~cl,cl", "jnz~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 4, -1, 0.12727272727272726, ["mov     rax, [b+70h]", "sub     eax, [a+70h]", "jnz     short locret_942B"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 3, -1, 0.1909090909090909, ["jl      short loc_9450"], ["jl~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 7, 0, 0, 3, 0, 1, 2, 1, 0.19999999999999998, ["mov     rax, [b+68h]", "cmp     [a+68h], rax", "jg      short loc_9460"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 6, -1, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 5, -1, 0.06363636363636363, ["mov     b, [b]", "mov     a, [a]", "jmp     xstrcoll"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [1, 0, 8, 0, 0, 3, 1, 1, 2, 2, 0.02727272727272727, ["test    dl, dl", "mov     eax, 1", "jz      short loc_9430"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]]], "func_feature": [0, 5, 8, 0, 12, 15, 0, 35, 0.06364, 0, 1], "succs": [[9, 6], [0, 2], [0, 5], [8, 10], [11, 3], [], [4, 5], [], [7], [10, 6], [], []], "fname": "xstrcoll_df_mtime", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 1, 0, 0, 6, 0, 1, 0, 0, 0.16666666666666666, ["pop     rbx", "mov     rsi, [b]; b", "mov     rdi, [a+0]; a", "pop     a", "pop     b", "jmp     xstrcoll"], ["pop~rbx", "mov~rsi,<TAG>", "mov~rdi,[a+0]", "pop~a", "pop~b", "jmp~FOO"]], [2, 0, 3, 0, 3, 22, 3, 4, 0, 1, 0.0, ["push    r12", "push    rbp", "mov     rbp, a", "push    rbx", "mov     a, [a]; s", "mov     r12, b", "mov     esi, 2Eh ; '.'; c", "call    _strrchr", "mov     rdi, [b]; s", "mov     esi, 2Eh ; '.'; c", "mov     rbx, rax", "call    _strrchr", "lea     rdx, aReportBugsToS+16h; \"\"", "test    rax, rax", "cmovz   rax, rdx", "test    rbx, rbx", "cmovz   rbx, rdx", "mov     rsi, rax; b", "mov     rdi, rbx; a", "call    xstrcoll", "test    eax, eax", "jnz     short loc_94D0"], ["push~r12", "push~rbp", "mov~rbp,a", "push~rbx", "mov~a,<TAG>", "mov~r12,b", "mov~esi,0", "call~FOO", "mov~rdi,<TAG>", "mov~esi,0", "mov~rbx,rax", "call~FOO", "lea~rdx,<TAG>", "test~rax,rax", "cmovz~rax,rdx", "test~rbx,rbx", "cmovz~rbx,rdx", "mov~rsi,rax", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 1, 0, 0.0, ["pop     rbx", "pop     a", "pop     b", "retn"], ["pop~rbx", "pop~a", "pop~b", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []]], "func_feature": [3, 3, 5, 0, 4, 3, 0, 32, 0.04167, 1, 0], "succs": [[3], [0, 2], [], []], "fname": "xstrcoll_extension", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 1, 0, 0, 6, 0, 1, 0, 0, 0.16666666666666666, ["pop     rbx", "mov     rsi, [a]; b", "mov     rdi, [b+0]; a", "pop     b", "pop     a", "jmp     xstrcoll"], ["pop~rbx", "mov~rsi,<TAG>", "mov~rdi,[b+0]", "pop~b", "pop~a", "jmp~FOO"]], [2, 0, 3, 0, 3, 22, 3, 4, 0, 1, 0.0, ["push    r12", "push    rbp", "mov     rbp, b", "push    rbx", "mov     r12, a", "mov     a, [rbp+0]; s", "mov     esi, 2Eh ; '.'; c", "call    _strrchr", "mov     rdi, [a]; s", "mov     esi, 2Eh ; '.'; c", "mov     rbx, rax", "call    _strrchr", "lea     rdx, aReportBugsToS+16h; \"\"", "test    rax, rax", "cmovz   rax, rdx", "test    rbx, rbx", "cmovz   rbx, rdx", "mov     rsi, rax; b", "mov     rdi, rbx; a", "call    xstrcoll", "test    eax, eax", "jnz     short loc_9540"], ["push~r12", "push~rbp", "mov~rbp,b", "push~rbx", "mov~r12,a", "mov~a,[rbp+0]", "mov~esi,0", "call~FOO", "mov~rdi,<TAG>", "mov~esi,0", "mov~rbx,rax", "call~FOO", "lea~rdx,<TAG>", "test~rax,rax", "cmovz~rax,rdx", "test~rbx,rbx", "cmovz~rbx,rdx", "mov~rsi,rax", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 1, 0, 0.0, ["pop     rbx", "pop     b", "pop     a", "retn"], ["pop~rbx", "pop~b", "pop~a", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []]], "func_feature": [3, 3, 5, 0, 4, 3, 0, 32, 0.04167, 1, 0], "succs": [[3], [0, 2], [], []], "fname": "rev_xstrcoll_extension", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 9, 0, 0, 2, 1, 1, 0, 0, 0.14545454545454545, ["test    cl, cl", "jnz     short loc_9590"], ["test~cl,cl", "jnz~FOO"]], [4, 0, 11, 0, 0, 13, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_957E"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [0, 0, 10, 0, 0, 2, 1, 1, 1, 1, 0.00909090909090909, ["test    cl, cl", "jnz     short loc_95C0"], ["test~cl,cl", "jnz~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 4, -1, 0.12727272727272726, ["mov     rax, [b+70h]", "sub     eax, [a+70h]", "jnz     short locret_958B"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 3, -1, 0.1909090909090909, ["jl      short loc_95B0"], ["jl~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 7, 0, 0, 3, 0, 1, 2, 1, 0.19999999999999998, ["mov     rax, [b+68h]", "cmp     [a+68h], rax", "jg      short loc_95C0"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [1, 0, 8, 0, 0, 3, 1, 1, 2, 2, 0.02727272727272727, ["test    dl, dl", "mov     eax, 1", "jz      short loc_9590"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 6, -1, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 5, -1, 0.06363636363636363, ["mov     b, [b]; s2", "mov     a, [a]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]]], "func_feature": [0, 5, 8, 0, 12, 15, 0, 35, 0.06364, 0, 1], "succs": [[6, 7], [0, 2], [0, 5], [8, 11], [9, 3], [], [4, 5], [8, 6], [], [], [], [10]], "fname": "strcmp_df_mtime", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 9, 0, 0, 2, 1, 1, 0, 0, 0.14545454545454545, ["test    cl, cl", "jnz     short loc_9610"], ["test~cl,cl", "jnz~FOO"]], [4, 0, 11, 0, 0, 13, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_95FE"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [0, 0, 10, 0, 0, 2, 1, 1, 1, 1, 0.00909090909090909, ["test    cl, cl", "jnz     short loc_9650"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 5, 0, 0, 1, 0, 1, 3, -1, 0.1909090909090909, ["jl      short loc_9640"], ["jl~FOO"]], [0, 0, 1, 0, 0, 3, 0, 1, 5, -1, 0.06363636363636363, ["mov     b, [b]; s2", "mov     a, [a]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 4, -1, 0.12727272727272726, ["mov     rax, [b+80h]", "sub     eax, [a+80h]", "jnz     short locret_960B"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [1, 0, 8, 0, 0, 3, 1, 1, 2, 2, 0.02727272727272727, ["test    dl, dl", "mov     eax, 1", "jz      short loc_9610"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 7, 0, 0, 3, 0, 1, 2, 1, 0.19999999999999998, ["mov     rax, [b+78h]", "cmp     [a+78h], rax", "jg      short loc_9650"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 6, -1, 0.0, [], []]], "func_feature": [0, 5, 8, 0, 12, 15, 0, 35, 0.06364, 0, 1], "succs": [[9, 7], [0, 2], [0, 10], [], [3, 6], [11], [8, 5], [8, 9], [], [10, 4], [], []], "fname": "strcmp_df_ctime", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.06363636363636363, ["mov     b, [b]; s2", "mov     a, [a]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 4, -1, 0.12727272727272726, ["mov     rax, [b+60h]", "sub     eax, [a+60h]", "jnz     short locret_969B"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 5, 0, 0, 1, 0, 1, 3, -1, 0.1909090909090909, ["jl      short loc_96C0"], ["jl~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 6, -1, 0.0, [], []], [4, 0, 11, 0, 0, 13, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_968E"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 2, 1, 0.19999999999999998, ["mov     rax, [b+58h]", "cmp     [a+58h], rax", "jg      short loc_96D0"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [0, 0, 10, 0, 0, 2, 1, 1, 1, 1, 0.00909090909090909, ["test    cl, cl", "jnz     short loc_96D0"], ["test~cl,cl", "jnz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 1, 2, 0.14545454545454545, ["test    cl, cl", "jnz     short loc_96A0"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 8, 0, 0, 3, 1, 1, 2, 2, 0.02727272727272727, ["test    dl, dl", "mov     eax, 1", "jz      short loc_96A0"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 5, 8, 0, 12, 15, 0, 35, 0.06364, 0, 1], "succs": [[4], [0, 11], [], [1, 2], [], [8, 7], [10, 3], [8, 10], [9, 6], [11, 6], [], []], "fname": "strcmp_df_atime", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 4, 0, 0, 3, 1, 1, 0, 0, 0.06666666666666667, ["test    rbx, rbx", "lea     rax, aReportBugsToS+16h; \"\"", "jz      short loc_972D"], ["test~rbx,rbx", "lea~rax,<TAG>", "jz~FOO"]], [2, 0, 6, 0, 2, 15, 1, 3, 0, 2, 0.0, ["push    r12", "push    rbp", "mov     r12, a", "push    rbx", "mov     rbp, [b]", "mov     esi, 2Eh ; '.'; c", "mov     a, rbp; s", "call    _strrchr", "mov     a, [a]", "mov     esi, 2Eh ; '.'; c", "mov     rbx, rax", "mov     rdi, r12; s", "call    _strrchr", "test    rax, rax", "jz      short loc_9740"], ["push~r12", "push~rbp", "mov~r12,a", "push~rbx", "mov~rbp,<TAG>", "mov~esi,0", "mov~a,rbp", "call~FOO", "mov~a,<TAG>", "mov~esi,0", "mov~rbx,rax", "mov~rdi,r12", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 1, 8, 2, 2, 1, 1, 0.06666666666666667, ["lea     rdx, aReportBugsToS+16h; \"\"", "test    rbx, rbx", "mov     rsi, rax; s2", "cmovz   rbx, rdx", "mov     rdi, rbx; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_975B"], ["lea~rdx,<TAG>", "test~rbx,rbx", "mov~rsi,rax", "cmovz~rbx,rdx", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 1, 0, 0, 6, 0, 1, 2, -1, 0.13333333333333333, ["pop     rbx", "mov     rsi, r12; s2", "mov     rdi, rbp; s1", "pop     rbp", "pop     r12", "jmp     _strcmp"], ["pop~rbx", "mov~rsi,r12", "mov~rdi,rbp", "pop~rbp", "pop~r12", "jmp~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 2, 1, 0.03333333333333333, ["mov     rsi, rax; s2", "mov     rdi, rbx; s1", "call    _strcmp", "test    eax, eax", "jz      short loc_972D"], ["mov~rsi,rax", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [0, 0, 0, 0, 0, 4, 0, 0, 2, 0, 0.0, ["pop     rbx", "pop     rbp", "pop     r12", "retn"], ["pop~rbx", "pop~rbp", "pop~r12", "retn"]]], "func_feature": [4, 5, 9, 0, 7, 9, 0, 41, 0.04286, 1, 0], "succs": [[3, 4], [0, 2], [3, 6], [5], [3, 6], [], []], "fname": "rev_strcmp_extension", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 4, 0, 0, 3, 1, 1, 0, 0, 0.06666666666666667, ["test    rbx, rbx", "lea     rax, aReportBugsToS+16h; \"\"", "jz      short loc_97AD"], ["test~rbx,rbx", "lea~rax,<TAG>", "jz~FOO"]], [2, 0, 6, 0, 2, 15, 1, 3, 0, 2, 0.0, ["push    r12", "push    rbp", "mov     r12, b", "push    rbx", "mov     rbp, [a]", "mov     esi, 2Eh ; '.'; c", "mov     a, rbp; s", "call    _strrchr", "mov     b, [b]", "mov     esi, 2Eh ; '.'; c", "mov     rbx, rax", "mov     rdi, r12; s", "call    _strrchr", "test    rax, rax", "jz      short loc_97C0"], ["push~r12", "push~rbp", "mov~r12,b", "push~rbx", "mov~rbp,<TAG>", "mov~esi,0", "mov~a,rbp", "call~FOO", "mov~b,<TAG>", "mov~esi,0", "mov~rbx,rax", "mov~rdi,r12", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 1, 8, 2, 2, 1, 1, 0.06666666666666667, ["lea     rdx, aReportBugsToS+16h; \"\"", "test    rbx, rbx", "mov     rsi, rax; s2", "cmovz   rbx, rdx", "mov     rdi, rbx; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_97DB"], ["lea~rdx,<TAG>", "test~rbx,rbx", "mov~rsi,rax", "cmovz~rbx,rdx", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 1, 0, 0, 6, 0, 1, 2, -1, 0.13333333333333333, ["pop     rbx", "mov     rsi, r12; s2", "mov     rdi, rbp; s1", "pop     rbp", "pop     r12", "jmp     _strcmp"], ["pop~rbx", "mov~rsi,r12", "mov~rdi,rbp", "pop~rbp", "pop~r12", "jmp~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 2, 1, 0.03333333333333333, ["mov     rsi, rax; s2", "mov     rdi, rbx; s1", "call    _strcmp", "test    eax, eax", "jz      short loc_97AD"], ["mov~rsi,rax", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [0, 0, 0, 0, 0, 4, 0, 0, 2, 0, 0.0, ["pop     rbx", "pop     rbp", "pop     r12", "retn"], ["pop~rbx", "pop~rbp", "pop~r12", "retn"]]], "func_feature": [4, 5, 9, 0, 7, 9, 0, 41, 0.04286, 1, 0], "succs": [[3, 4], [0, 2], [3, 6], [5], [3, 6], [], []], "fname": "strcmp_extension", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["pop     a", "pop     b", "pop     r12", "retn"], ["pop~a", "pop~b", "pop~r12", "retn"]], [2, 0, 3, 0, 3, 22, 3, 4, 2, -1, 0.16666666666666666, ["push    r12", "push    rbp", "mov     rbp, b", "push    rbx", "mov     rbx, a", "mov     a, [a]; s", "mov     esi, 2Eh ; '.'; c", "call    _strrchr", "mov     rdi, [b+0]; s", "mov     esi, 2Eh ; '.'; c", "mov     r12, rax", "call    _strrchr", "lea     rdx, aReportBugsToS+16h; \"\"", "test    rax, rax", "cmovz   rax, rdx", "test    r12, r12", "cmovz   r12, rdx", "mov     rsi, rax; b", "mov     rdi, r12; a", "call    xstrcoll", "test    eax, eax", "jnz     short loc_9880"], ["push~r12", "push~rbp", "mov~rbp,b", "push~rbx", "mov~rbx,a", "mov~a,<TAG>", "mov~esi,0", "call~FOO", "mov~rdi,[b+0]", "mov~esi,0", "mov~r12,rax", "call~FOO", "lea~rdx,<TAG>", "test~rax,rax", "cmovz~rax,rdx", "test~r12,r12", "cmovz~r12,rdx", "mov~rsi,rax", "mov~rdi,r12", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []], [0, 0, 1, 0, 0, 6, 0, 1, 3, -1, 0.06944444444444445, ["mov     rsi, [b+0]", "mov     rdi, [a]", "pop     a", "pop     b", "pop     r12", "jmp     xstrcoll"], ["mov~rsi,[b+0]", "mov~rdi,<TAG>", "pop~a", "pop~b", "pop~r12", "jmp~FOO"]], [4, 0, 9, 0, 0, 13, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_980E"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 1, -1, 0.16666666666666666, ["test    cl, cl", "jnz     short loc_9820"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 5, 0, 0, 3, 1, 1, 2, -1, 0.041666666666666664, ["test    dl, dl", "mov     eax, 1", "jz      short loc_9820"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 1, 1, 0.013888888888888888, ["test    cl, cl", "jnz     short loc_9888"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [3, 8, 9, 0, 10, 11, 0, 55, 0.04583, 1, 0], "succs": [[], [0, 3], [], [2], [5, 7], [1, 6], [1, 9], [8, 5], [], []], "fname": "xstrcoll_df_extension", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 6, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    cl, cl", "jnz     short loc_98D0"], ["test~cl,cl", "jnz~FOO"]], [4, 0, 9, 0, 0, 13, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_98BE"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 1, 1, 0.013888888888888888, ["test    cl, cl", "jnz     short loc_9938"], ["test~cl,cl", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []], [0, 0, 1, 0, 0, 6, 0, 1, 3, -1, 0.06944444444444445, ["mov     rsi, [a+0]", "mov     rdi, [b]", "pop     b", "pop     a", "pop     r12", "jmp     xstrcoll"], ["mov~rsi,[a+0]", "mov~rdi,<TAG>", "pop~b", "pop~a", "pop~r12", "jmp~FOO"]], [2, 0, 3, 0, 3, 22, 3, 4, 2, -1, 0.16666666666666666, ["push    r12", "push    rbp", "mov     rbp, a", "push    rbx", "mov     rbx, b", "mov     esi, 2Eh ; '.'; c", "mov     a, [b]; s", "call    _strrchr", "mov     rdi, [a+0]; s", "mov     esi, 2Eh ; '.'; c", "mov     r12, rax", "call    _strrchr", "lea     rdx, aReportBugsToS+16h; \"\"", "test    rax, rax", "cmovz   rax, rdx", "test    r12, r12", "cmovz   r12, rdx", "mov     rsi, rax; b", "mov     rdi, r12; a", "call    xstrcoll", "test    eax, eax", "jnz     short loc_9930"], ["push~r12", "push~rbp", "mov~rbp,a", "push~rbx", "mov~rbx,b", "mov~esi,0", "mov~a,<TAG>", "call~FOO", "mov~rdi,[a+0]", "mov~esi,0", "mov~r12,rax", "call~FOO", "lea~rdx,<TAG>", "test~rax,rax", "cmovz~rax,rdx", "test~r12,r12", "cmovz~r12,rdx", "mov~rsi,rax", "mov~rdi,r12", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 5, 0, 0, 3, 1, 1, 2, -1, 0.041666666666666664, ["test    dl, dl", "mov     eax, 1", "jz      short loc_98D0"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 4, 0, 0, 3, -1, 0.0, ["pop     b", "pop     a", "pop     r12", "retn"], ["pop~b", "pop~a", "pop~r12", "retn"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]]], "func_feature": [3, 8, 9, 0, 10, 11, 0, 55, 0.04583, 1, 0], "succs": [[5, 6], [0, 2], [0, 9], [], [3], [8, 4], [5, 7], [], [], []], "fname": "rev_xstrcoll_df_extension", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 4, 0, 0, 3, 1, 0, 0, 0, 0.05341880341880341, ["lea     rdx, aReportBugsToS+16h; \"\"", "test    rbp, rbp", "cmovz   rbp, rdx"], ["lea~rdx,<TAG>", "test~rbp,rbp", "cmovz~rbp,rdx"]], [2, 0, 7, 0, 2, 15, 1, 3, 2, -1, 0.1794871794871795, ["push    r12", "push    rbp", "push    rbx", "mov     r12, [b]", "mov     rbx, a", "mov     esi, 2Eh ; '.'; c", "mov     a, r12; s", "call    _strrchr", "mov     a, [a]", "mov     esi, 2Eh ; '.'; c", "mov     rbp, rax", "mov     rdi, rbx; s", "call    _strrchr", "test    rax, rax", "jz      short loc_99F0"], ["push~r12", "push~rbp", "push~rbx", "mov~r12,<TAG>", "mov~rbx,a", "mov~esi,0", "mov~a,r12", "call~FOO", "mov~a,<TAG>", "mov~esi,0", "mov~rbp,rax", "mov~rdi,rbx", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 12, 0, 0, 2, 1, 1, 1, 1, 0.00641025641025641, ["test    cl, cl", "jnz     loc_9A00"], ["test~cl,cl", "jnz~FOO"]], [4, 0, 13, 0, 0, 13, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_9972"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 5, -1, 0.0, ["pop     rbx", "pop     rbp", "pop     r12", "retn"], ["pop~rbx", "pop~rbp", "pop~r12", "retn"]], [0, 0, 3, 0, 1, 5, 1, 2, 4, -1, 0.10683760683760682, ["mov     rsi, rax; s2", "mov     rdi, rbp; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_99E8"], ["mov~rsi,rax", "mov~rdi,rbp", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 3, -1, 0.10683760683760682, ["test    rbp, rbp", "lea     rax, aReportBugsToS+16h; \"\"", "jnz     short loc_99C5"], ["test~rbp,rbp", "lea~rax,<TAG>", "jnz~FOO"]], [0, 0, 10, 0, 0, 2, 1, 1, 1, -1, 0.1282051282051282, ["test    cl, cl", "jnz     short loc_9988"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 9, 0, 0, 3, 1, 1, 2, -1, 0.019230769230769232, ["test    dl, dl", "mov     eax, 1", "jz      short loc_9988"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 6, -1, 0.0, [], []], [0, 0, 1, 0, 0, 6, 0, 1, 5, -1, 0.05769230769230769, ["mov     rsi, rbx; s2", "mov     rdi, r12; s1", "pop     rbx", "pop     rbp", "pop     r12", "jmp     _strcmp"], ["mov~rsi,rbx", "mov~rdi,r12", "pop~rbx", "pop~rbp", "pop~r12", "jmp~FOO"]], [0, 0, 2, 0, 0, 1, 0, 1, 4, -1, 0.027777777777777776, ["jmp     short loc_99D4"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [3, 9, 12, 0, 14, 17, 0, 60, 0.04899, 1, 0], "succs": [[6], [0, 7], [], [8, 2], [8, 3], [], [11, 5], [12, 6], [1, 9], [1, 13], [], [10], [11], []], "fname": "rev_strcmp_df_extension", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0.0, ["xor     eax, eax", "retn"], ["xor~eax,eax", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 1, 2, 0.0, 0, 0], "succs": [[]], "fname": "file_has_acl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[1, 0, 9, 0, 1, 6, 2, 2, 0, 0, 0.012096774193548387, ["call    ___ctype_b_loc", "mov     edx, [rsp+68h+flags]", "mov     rcx, [rax]", "xor     ebp, ebp", "and     edx, 2", "jmp     short loc_A0D0"], ["call~FOO", "mov~edx,[rsp+0]", "mov~rcx,<TAG>", "xor~ebp,ebp", "and~edx,0", "jmp~FOO"]], [0, 0, 10, 0, 0, 3, 1, 0, 1, 2, 0.008568548387096774, ["xor     ebp, ebp", "cmp     p, plimit", "jnb     short loc_A065"], ["xor~ebp,ebp", "cmp~p,plimit", "jnb~FOO"]], [2, 0, 32, 1, 1, 16, 1, 1, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "lea     r13, [string+nbytes]", "push    rbp", "push    rbx", "mov     rbx, string", "sub     rsp, 38h", "mov     rax, fs:28h", "mov     [rsp+68h+var_40], rax", "xor     eax, eax", "mov     [rsp+68h+flags], edx", "call    ___ctype_get_mb_cur_max", "cmp     rax, 1", "jbe     loc_A0A8"], ["push~r15", "push~r14", "push~r13", "push~r12", "lea~r13,<TAG>", "push~rbp", "push~rbx", "mov~rbx,string", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~[rsp+0],edx", "call~FOO", "cmp~rax,0", "jbe~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 38h", "pop     p", "pop     rbp", "pop     r12", "pop     plimit", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~p", "pop~rbp", "pop~r12", "pop~plimit", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.06048387096774194, ["mov     rsi, [rsp+68h+var_40]", "xor     rsi, fs:28h", "mov     eax, ebp", "jnz     short loc_A0F6"], ["mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "mov~eax,ebp", "jnz~FOO"]], [1, 0, 23, 1, 1, 9, 0, 2, 6, 5, 0.18951612903225806, ["mov     rdx, plimit", "mov     rcx, r12; p", "mov     rsi, p; s", "sub     rdx, p; n", "mov     rdi, r14; pwc", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     r15, rax", "jz      short loc_A050"], ["mov~rdx,plimit", "mov~rcx,r12", "mov~rsi,p", "sub~rdx,p", "mov~rdi,r14", "call~FOO", "cmp~rax,0", "mov~r15,rax", "jz~FOO"]], [1, 0, 23, 0, 0, 2, 0, 1, 5, 6, 0.14717741935483872, ["mov     qword ptr [r12], 0", "jmp     short loc_9FF1"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 23, 2, 1, 6, 1, 2, 9, 3, 0.061995967741935484, ["mov     rdi, r12; ps", "add     ebp, eax", "add     p, bytes", "call    _mbsinit", "test    eax, eax", "jnz     short loc_9FB2"], ["mov~rdi,r12", "add~ebp,eax", "add~p,bytes", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 24, 0, 0, 3, 1, 0, 1, 2, 0.02167338709677419, ["xor     ebp, ebp", "cmp     p, plimit", "jnb     loc_A065"], ["xor~ebp,ebp", "cmp~p,plimit", "jnb~FOO"]], [1, 0, 23, 0, 0, 2, 0, 1, 7, 4, 0.11743951612903225, ["cmp     bytes, 0FFFFFFFFFFFFFFFEh", "jz      short loc_A090"], ["cmp~bytes,0", "jz~FOO"]], [1, 0, 23, 0, 0, 2, 1, 1, 8, 3, 0.03679435483870968, ["test    byte ptr [rsp+68h+flags], 1", "jnz     short loc_A060"], ["test~[yte ptr [rsp+0],0", "jnz~FOO"]], [0, 0, 23, 0, 0, 3, 0, 1, 2, 6, 0.03931451612903226, ["lea     r12, [rsp+68h+mbstate]", "lea     r14, [rsp+68h+wc]", "jmp     short loc_9FBB"], ["lea~r12,[rsp+0]", "lea~r14,[rsp+0]", "jmp~FOO"]], [1, 0, 23, 0, 0, 2, 0, 1, 4, 4, 0.03629032258064516, ["cmp     al, 25h ; '%'", "jge     short loc_9FAB"], ["cmp~al,0", "jge~FOO"]], [1, 0, 23, 0, 0, 3, 0, 1, 3, 5, 0.19858870967741934, ["movzx   eax, byte ptr [p]", "cmp     al, 3Fh ; '?'", "jle     short loc_9FA0"], ["movzx~eax,<TAG>", "cmp~al,0", "jle~FOO"]], [1, 1, 23, 1, 0, 3, 0, 1, 5, 4, 0.012096774193548387, ["sub     eax, 20h ; ' '", "cmp     al, 3", "ja      short loc_9FD1"], ["sub~eax,<STR>", "cmp~al,0", "ja~FOO"]], [1, 0, 23, 0, 1, 7, 2, 1, 8, 4, 0.0625, ["mov     edi, [rsp+68h+wc]; c", "test    bytes, bytes", "mov     eax, 1", "cmovz   bytes, rax", "call    _wcwidth", "test    eax, eax", "jns     short loc_9FE0"], ["mov~edi,[rsp+0]", "test~bytes,bytes", "mov~eax,0", "cmovz~bytes,rax", "call~FOO", "test~eax,eax", "jns~FOO"]], [2, 0, 23, 2, 0, 2, 0, 0, 5, 3, 0.08618951612903225, ["add     p, 1", "add     ebp, 1"], ["add~p,0", "add~ebp,0"]], [1, 0, 23, 0, 0, 2, 0, 1, 5, 4, 0.02721774193548387, ["cmp     al, 5Fh ; '_'", "jle     short loc_9FAB"], ["cmp~al,0", "jle~FOO"]], [2, 0, 23, 1, 0, 3, 0, 0, 6, 4, 0.012096774193548387, ["sub     eax, 61h ; 'a'", "cmp     al, 1Dh", "jbe     short loc_9FAB"], ["sub~eax,0", "cmp~al,0", "jbe~FOO"]], [1, 0, 23, 0, 0, 2, 1, 1, 7, 4, 0.053931451612903226, ["test    byte ptr [rsp+68h+flags], 1", "jz      loc_9FAB"], ["test~[yte ptr [rsp+0],0", "jz~FOO"]], [1, 0, 9, 1, 0, 1, 0, 0, 4, 3, 0.007056451612903226, ["add     ebp, 1"], ["add~ebp,0"]], [2, 0, 9, 1, 0, 5, 1, 1, 3, 4, 0.029233870967741934, ["add     p, 1", "movzx   eax, byte ptr [p-1]", "movzx   eax, word ptr [rcx+rax*2]", "test    ah, 40h", "jnz     short loc_A0C8"], ["add~p,0", "movzx~eax,[yte ptr [p-1]+0]", "movzx~eax,<TAG>", "test~ah,0", "jnz~FOO"]], [1, 0, 23, 0, 0, 2, 1, 1, 9, 3, 0.02167338709677419, ["test    byte ptr [rsp+68h+flags], 2", "jnz     short loc_A060"], ["test~[yte ptr [rsp+0],0", "jnz~FOO"]], [0, 0, 23, 0, 0, 2, 0, 0, 6, 2, 0.1754032258064516, ["cmp     p, plimit", "jnb     loc_A065"], ["cmp~p,plimit", "jnb~FOO"]], [1, 0, 23, 1, 0, 3, 0, 1, 9, 3, 0.021169354838709676, ["add     ebp, 1", "mov     rbx, plimit", "jmp     loc_9FB2"], ["add~ebp,0", "mov~rbx,plimit", "jmp~FOO"]], [1, 0, 23, 0, 0, 2, 0, 1, 4, 5, 0.1441532258064516, ["cmp     al, 41h ; 'A'", "jl      short loc_9FD1"], ["cmp~al,0", "jl~FOO"]], [0, 0, 23, 0, 1, 6, 1, 2, 10, 4, 0.017137096774193547, ["mov     edi, [rsp+68h+wc]; wc", "call    _iswcntrl", "test    eax, eax", "setz    al", "movzx   eax, al", "jmp     short loc_9FE0"], ["mov~edi,[rsp+0]", "call~FOO", "test~eax,eax", "setz~al", "movzx~eax,al", "jmp~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 5, 2, 0.019153225806451613, ["cmp     plimit, p", "jz      short loc_A065"], ["cmp~plimit,p", "jz~FOO"]], [3, 0, 9, 1, 0, 5, 2, 1, 5, 3, 0.0030241935483870967, ["shr     ax, 1", "xor     eax, 1", "and     eax, 1", "add     ebp, eax", "jmp     short loc_A0CB"], ["shr~ax,0", "xor~eax,0", "and~eax,0", "add~ebp,eax", "jmp~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 8, 3, 0.012096774193548387, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 3, 0, 0, 1, 0, 0, 5, 2, 0.025201612903225805, ["mov     ebp, 0FFFFFFFFh"], ["mov~ebp,0"]], [0, 0, 9, 0, 0, 2, 1, 1, 4, 3, 0.016129032258064516, ["test    edx, edx", "jnz     loc_A060"], ["test~edx,edx", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [7, 17, 28, 1, 33, 52, 3, 121, 0.05077, 1, 13], "succs": [[21], [0, 4], [8, 1], [], [32, 3], [9, 19], [5], [5, 23], [11, 4], [10, 15], [24, 30], [13], [16, 14], [25, 12], [16, 6], [22, 7], [23], [16, 18], [16, 6], [16, 29], [27], [20, 31], [26, 30], [4, 13], [23], [17, 6], [7], [4, 21], [27], [30], [4], [28, 30], []], "fname": "mbsnwidth", "n_num": 33}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[2, 0, 1, 2, 1, 13, 0, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     ebp, esi", "mov     rbx, string", "sub     rsp, 8", "call    _strlen", "add     rsp, 8", "mov     edx, ebp", "mov     rdi, string", "pop     string", "pop     flags", "mov     rsi, rax", "jmp     mbsnwidth"], ["push~rbp", "push~rbx", "mov~ebp,esi", "mov~rbx,string", "sub~rsp,0", "call~FOO", "add~rsp,0", "mov~edx,ebp", "mov~rdi,string", "pop~string", "pop~flags", "mov~rsi,rax", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 0, 2, 0, 2, 1, 7, 13, 0.0, 0, 2], "succs": [[1], []], "fname": "gnu_mbswidth", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [2, 0, 3, 1, 1, 7, 2, 2, 0, 2, 0.0, ["sub     rsp, 8", "xor     esi, esi; locale", "call    _setlocale", "mov     rdx, rax", "mov     eax, 1", "test    p, p", "jz      short loc_AD75"], ["sub~rsp,0", "xor~esi,esi", "call~FOO", "mov~rdx,rax", "mov~eax,0", "test~p,p", "jz~FOO"]], [2, 0, 2, 0, 0, 9, 2, 1, 1, 1, 0.16666666666666666, ["lea     rdi, aC; \"C\"", "mov     ecx, 2", "mov     rsi, p", "repe cmpsb", "setnbe  cl", "sbb     cl, 0", "xor     eax, eax", "test    cl, cl", "jnz     short loc_AD80"], ["lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,p", "cmpsb~<TAG>,<TAG>", "setnbe~cl", "sbb~cl,0", "xor~eax,eax", "test~cl,cl", "jnz~FOO"]], [3, 0, 0, 1, 0, 10, 1, 0, 2, 0, 0.0, ["lea     rdi, aPosix; \"POSIX\"", "mov     ecx, 6", "mov     rsi, rdx", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "setnz   al", "add     rsp, 8", "retn"], ["lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,rdx", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "setnz~al", "add~rsp,0", "retn"]]], "func_feature": [1, 5, 3, 0, 4, 4, 2, 28, 0.04167, 2, 3], "succs": [[], [0, 2], [0, 3], []], "fname": "hard_locale", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 5, 0, 1, 4, 0, 1, 0, 0, 0.0, ["mov     r12, [pwent]", "mov     rdi, r12; s", "call    _strlen", "lea     rdi, [rax+11h]; n"], ["mov~r12,<TAG>", "mov~rdi,r12", "call~FOO", "lea~rdi,[rax+0]"]], [1, 0, 6, 0, 1, 6, 1, 2, 1, 3, 0.09090909090909091, ["mov     ebp, edi", "lea     r12, aReportBugsToS+16h; \"\"", "call    _getpwuid", "test    pwent, pwent", "mov     edi, 11h", "jz      short loc_CA64"], ["mov~ebp,edi", "lea~r12,<TAG>", "call~FOO", "test~pwent,pwent", "mov~edi,0", "jz~FOO"]], [0, 0, 10, 0, 0, 2, 0, 1, 1, 3, 0.045454545454545456, ["cmp     edi, [tail]", "jnz     short loc_CA34"], ["cmp~edi,<TAG>", "jnz~FOO"]], [0, 0, 11, 0, 0, 6, 1, 1, 0, 4, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, cs:user_alist", "test    tail, tail", "jz      short loc_CA3D"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,<TAG>", "test~tail,tail", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 2, 2, 0.05454545454545454, ["jmp     short loc_CA8C"], ["jmp~FOO"]], [0, 0, 4, 0, 2, 9, 0, 2, 2, 2, 0.09090909090909091, ["call    xmalloc", "lea     rdi, [rax+10h]; dest", "mov     [rax], ebp", "mov     rsi, name; src", "mov     tail, rax", "call    _strcpy", "mov     rax, cs:user_alist", "mov     cs:user_alist, match", "mov     [match+8], rax"], ["call~FOO", "lea~rdi,[rax+0]", "mov~<TAG>,ebp", "mov~rsi,name", "mov~tail,rax", "call~FOO", "mov~rax,<TAG>", "mov~<TAG>,match", "mov~[match+0],rax"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, -1, 0.04090909090909091, ["lea     rax, [match+10h]"], ["lea~rax,[match+0]"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, 1, 0.21818181818181817, ["cmp     byte ptr [match+10h], 0", "jz      short loc_CAA0"], ["cmp~[yte ptr [match+0],0", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 3, 2, 0.03636363636363636, ["cmp     [tail], edi", "jz      short loc_CA8C"], ["cmp~<TAG>,edi", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 2, 3, 0.07272727272727272, ["mov     tail, [tail+8]", "test    tail, tail", "jnz     short loc_CA30"], ["mov~tail,[tail+0]", "test~tail,tail", "jnz~FOO"]], [0, 0, 1, 0, 0, 2, 1, 1, 4, 0, 0.04090909090909091, ["xor     eax, eax", "jmp     short loc_CA96"], ["xor~eax,eax", "jmp~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 5, -1, 0.0, ["pop     match", "pop     rbp", "pop     r12", "retn"], ["pop~match", "pop~rbp", "pop~r12", "retn"]]], "func_feature": [4, 4, 12, 0, 12, 17, 2, 42, 0.05758, 2, 0], "succs": [[5], [0, 5], [9, 4], [1, 2], [7], [7], [11], [10, 6], [9, 7], [8, 1], [11], []], "fname": "getuser", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.03571428571428572, ["mov     rax, cs:nouser_alist", "mov     cs:nouser_alist, tail", "mov     [tail+8], rax", "xor     eax, eax", "jmp     loc_CAF2"], ["mov~rax,<TAG>", "mov~<TAG>,tail", "mov~[tail+0],rax", "xor~eax,eax", "jmp~FOO"]], [0, 0, 4, 0, 4, 13, 1, 5, 2, 0, 0.1523809523809524, ["mov     rdi, user; name", "call    _getpwnam", "mov     rdi, user; s", "mov     rbp, rax", "call    _strlen", "lea     rdi, [rax+11h]; n", "call    xmalloc", "lea     rdi, [rax+10h]; dest", "mov     rsi, user; src", "mov     tail, rax", "call    _strcpy", "test    pwent, pwent", "jz      short loc_CB8C"], ["mov~rdi,user", "call~FOO", "mov~rdi,user", "mov~rbp,rax", "call~FOO", "lea~rdi,[rax+0]", "call~FOO", "lea~rdi,[rax+0]", "mov~rsi,user", "mov~tail,rax", "call~FOO", "test~pwent,pwent", "jz~FOO"]], [0, 0, 15, 0, 0, 7, 1, 1, 0, 0, 0.0, ["push    r12", "push    rbp", "mov     r12, user", "push    rbx", "mov     rbx, cs:user_alist", "test    tail, tail", "jz      short loc_CB00"], ["push~r12", "push~rbp", "mov~r12,user", "push~rbx", "mov~rbx,<TAG>", "test~tail,tail", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 3, 0, 0.13333333333333336, ["cmp     [tail+10h], bpl", "jnz     short loc_CB18"], ["cmp~[tail+0],bpl", "jnz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 2, 0, 0.1142857142857143, ["movzx   ebp, byte ptr [user]", "jmp     short loc_CB21"], ["movzx~ebp,<TAG>", "jmp~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 4, 0, 0.0761904761904762, ["mov     tail, [tail+8]", "test    tail, tail", "jz      short loc_CB40"], ["mov~tail,[tail+0]", "test~tail,tail", "jz~FOO"]], [0, 0, 14, 0, 0, 2, 0, 1, 1, 0, 0.01666666666666667, ["movzx   ebp, byte ptr [user]", "jmp     short loc_CAD9"], ["movzx~ebp,<TAG>", "jmp~FOO"]], [0, 0, 2, 0, 0, 6, 0, 1, 3, 0, 0.030952380952380953, ["mov     eax, [pwent+10h]", "mov     [tail], eax", "mov     rax, cs:user_alist", "mov     cs:user_alist, tail", "mov     [tail+8], rax", "jmp     loc_CAEF"], ["mov~eax,[pwent+0]", "mov~<TAG>,eax", "mov~rax,<TAG>", "mov~<TAG>,tail", "mov~[tail+0],rax", "jmp~FOO"]], [0, 0, 10, 0, 0, 3, 1, 1, 1, 0, 0.2, ["mov     tail, cs:nouser_alist", "test    tail, tail", "jz      short loc_CB40"], ["mov~tail,<TAG>", "test~tail,tail", "jz~FOO"]], [0, 0, 14, 0, 0, 3, 1, 1, 3, 0, 0.13333333333333336, ["mov     tail, [tail+8]", "test    tail, tail", "jz      short loc_CB00"], ["mov~tail,[tail+0]", "test~tail,tail", "jz~FOO"]], [0, 0, 0, 0, 0, 5, 1, 0, 5, 0, 0.0, ["pop     tail", "xor     eax, eax", "pop     rbp", "pop     user", "retn"], ["pop~tail", "xor~eax,eax", "pop~rbp", "pop~user", "retn"]], [0, 0, 9, 0, 1, 5, 1, 2, 4, 0, 0.04285714285714286, ["lea     rdi, [tail+10h]; s1", "mov     rsi, user; s2", "call    _strcmp", "test    eax, eax", "jnz     short loc_CB18"], ["lea~rdi,[tail+0]", "mov~rsi,user", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 14, 0, 1, 5, 1, 2, 3, 0, 0.028571428571428574, ["lea     rdi, [tail+10h]; s1", "mov     rsi, user; s2", "call    _strcmp", "test    eax, eax", "jnz     short loc_CAD0"], ["lea~rdi,[tail+0]", "mov~rsi,user", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 14, 0, 0, 2, 0, 1, 2, 0, 0.08571428571428572, ["cmp     [tail+10h], bpl", "jnz     short loc_CAD0"], ["cmp~[tail+0],bpl", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, 0, 0.02142857142857143, ["mov     rax, tail"], ["mov~rax,tail"]], [0, 0, 0, 0, 0, 4, 0, 0, 4, 0, 0.0, ["pop     tail", "pop     rbp", "pop     user", "retn"], ["pop~tail", "pop~rbp", "pop~user", "retn"]]], "func_feature": [6, 9, 19, 0, 16, 23, 0, 68, 0.06696, 2, 0], "succs": [[15], [0, 7], [8, 6], [11, 5], [3], [1, 3], [13], [14], [1, 4], [8, 13], [], [10, 5], [9, 14], [9, 12], [15], []], "fname": "getuidbyname", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 5, 0, 1, 4, 0, 1, 0, 0, 0.0, ["mov     r12, [grent]", "mov     rdi, r12; s", "call    _strlen", "lea     rdi, [rax+11h]; n"], ["mov~r12,<TAG>", "mov~rdi,r12", "call~FOO", "lea~rdi,[rax+0]"]], [1, 0, 6, 0, 1, 6, 1, 2, 1, 3, 0.09090909090909091, ["mov     ebp, edi", "lea     r12, aReportBugsToS+16h; \"\"", "call    _getgrgid", "test    grent, grent", "mov     edi, 11h", "jz      short loc_CC04"], ["mov~ebp,edi", "lea~r12,<TAG>", "call~FOO", "test~grent,grent", "mov~edi,0", "jz~FOO"]], [0, 0, 10, 0, 0, 2, 0, 1, 1, 3, 0.045454545454545456, ["cmp     edi, [tail]", "jnz     short loc_CBD4"], ["cmp~edi,<TAG>", "jnz~FOO"]], [0, 0, 11, 0, 0, 6, 1, 1, 0, 4, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, cs:group_alist", "test    tail, tail", "jz      short loc_CBDD"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,<TAG>", "test~tail,tail", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 2, 2, 0.05454545454545454, ["jmp     short loc_CC2C"], ["jmp~FOO"]], [0, 0, 4, 0, 2, 9, 0, 2, 2, 2, 0.09090909090909091, ["call    xmalloc", "lea     rdi, [rax+10h]; dest", "mov     [rax], ebp", "mov     rsi, name; src", "mov     tail, rax", "call    _strcpy", "mov     rax, cs:group_alist", "mov     cs:group_alist, match", "mov     [match+8], rax"], ["call~FOO", "lea~rdi,[rax+0]", "mov~<TAG>,ebp", "mov~rsi,name", "mov~tail,rax", "call~FOO", "mov~rax,<TAG>", "mov~<TAG>,match", "mov~[match+0],rax"]], [0, 0, 1, 0, 0, 2, 1, 1, 4, 0, 0.04090909090909091, ["xor     eax, eax", "jmp     short loc_CC36"], ["xor~eax,eax", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, 1, 0.21818181818181817, ["cmp     byte ptr [match+10h], 0", "jz      short loc_CC40"], ["cmp~[yte ptr [match+0],0", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, -1, 0.04090909090909091, ["lea     rax, [match+10h]"], ["lea~rax,[match+0]"]], [0, 0, 9, 0, 0, 2, 0, 1, 3, 2, 0.03636363636363636, ["cmp     [tail], edi", "jz      short loc_CC2C"], ["cmp~<TAG>,edi", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 2, 3, 0.07272727272727272, ["mov     tail, [tail+8]", "test    tail, tail", "jnz     short loc_CBD0"], ["mov~tail,[tail+0]", "test~tail,tail", "jnz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 5, -1, 0.0, ["pop     match", "pop     rbp", "pop     r12", "retn"], ["pop~match", "pop~rbp", "pop~r12", "retn"]]], "func_feature": [4, 4, 12, 0, 12, 17, 2, 42, 0.05758, 2, 0], "succs": [[5], [0, 5], [10, 4], [1, 2], [7], [7], [11], [8, 6], [11], [10, 7], [9, 1], []], "fname": "getgroup", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.03571428571428572, ["mov     rax, cs:nogroup_alist", "mov     cs:nogroup_alist, tail", "mov     [tail+8], rax", "xor     eax, eax", "jmp     loc_CC92"], ["mov~rax,<TAG>", "mov~<TAG>,tail", "mov~[tail+0],rax", "xor~eax,eax", "jmp~FOO"]], [0, 0, 4, 0, 4, 13, 1, 5, 2, 0, 0.1523809523809524, ["mov     rdi, group; name", "call    _getgrnam", "mov     rdi, group; s", "mov     rbp, rax", "call    _strlen", "lea     rdi, [rax+11h]; n", "call    xmalloc", "lea     rdi, [rax+10h]; dest", "mov     rsi, group; src", "mov     tail, rax", "call    _strcpy", "test    grent, grent", "jz      short loc_CD2C"], ["mov~rdi,group", "call~FOO", "mov~rdi,group", "mov~rbp,rax", "call~FOO", "lea~rdi,[rax+0]", "call~FOO", "lea~rdi,[rax+0]", "mov~rsi,group", "mov~tail,rax", "call~FOO", "test~grent,grent", "jz~FOO"]], [0, 0, 15, 0, 0, 7, 1, 1, 0, 0, 0.0, ["push    r12", "push    rbp", "mov     r12, group", "push    rbx", "mov     rbx, cs:group_alist", "test    tail, tail", "jz      short loc_CCA0"], ["push~r12", "push~rbp", "mov~r12,group", "push~rbx", "mov~rbx,<TAG>", "test~tail,tail", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 3, 0, 0.13333333333333336, ["cmp     [tail+10h], bpl", "jnz     short loc_CCB8"], ["cmp~[tail+0],bpl", "jnz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 2, 0, 0.1142857142857143, ["movzx   ebp, byte ptr [group]", "jmp     short loc_CCC1"], ["movzx~ebp,<TAG>", "jmp~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 4, 0, 0.0761904761904762, ["mov     tail, [tail+8]", "test    tail, tail", "jz      short loc_CCE0"], ["mov~tail,[tail+0]", "test~tail,tail", "jz~FOO"]], [0, 0, 14, 0, 0, 2, 0, 1, 1, 0, 0.01666666666666667, ["movzx   ebp, byte ptr [group]", "jmp     short loc_CC79"], ["movzx~ebp,<TAG>", "jmp~FOO"]], [0, 0, 2, 0, 0, 6, 0, 1, 3, 0, 0.030952380952380953, ["mov     eax, [grent+10h]", "mov     [tail], eax", "mov     rax, cs:group_alist", "mov     cs:group_alist, tail", "mov     [tail+8], rax", "jmp     loc_CC8F"], ["mov~eax,[grent+0]", "mov~<TAG>,eax", "mov~rax,<TAG>", "mov~<TAG>,tail", "mov~[tail+0],rax", "jmp~FOO"]], [0, 0, 10, 0, 0, 3, 1, 1, 1, 0, 0.2, ["mov     tail, cs:nogroup_alist", "test    tail, tail", "jz      short loc_CCE0"], ["mov~tail,<TAG>", "test~tail,tail", "jz~FOO"]], [0, 0, 14, 0, 0, 3, 1, 1, 3, 0, 0.13333333333333336, ["mov     tail, [tail+8]", "test    tail, tail", "jz      short loc_CCA0"], ["mov~tail,[tail+0]", "test~tail,tail", "jz~FOO"]], [0, 0, 14, 0, 1, 5, 1, 2, 3, 0, 0.028571428571428574, ["lea     rdi, [tail+10h]; s1", "mov     rsi, group; s2", "call    _strcmp", "test    eax, eax", "jnz     short loc_CC70"], ["lea~rdi,[tail+0]", "mov~rsi,group", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 14, 0, 0, 2, 0, 1, 2, 0, 0.08571428571428572, ["cmp     [tail+10h], bpl", "jnz     short loc_CC70"], ["cmp~[tail+0],bpl", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, 0, 0.02142857142857143, ["mov     rax, tail"], ["mov~rax,tail"]], [0, 0, 0, 0, 0, 5, 1, 0, 5, 0, 0.0, ["pop     tail", "xor     eax, eax", "pop     rbp", "pop     group", "retn"], ["pop~tail", "xor~eax,eax", "pop~rbp", "pop~group", "retn"]], [0, 0, 9, 0, 1, 5, 1, 2, 4, 0, 0.04285714285714286, ["lea     rdi, [tail+10h]; s1", "mov     rsi, group; s2", "call    _strcmp", "test    eax, eax", "jnz     short loc_CCB8"], ["lea~rdi,[tail+0]", "mov~rsi,group", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 4, 0, 0.0, ["pop     tail", "pop     rbp", "pop     group", "retn"], ["pop~tail", "pop~rbp", "pop~group", "retn"]]], "func_feature": [6, 9, 19, 0, 16, 23, 0, 68, 0.06696, 2, 0], "succs": [[15], [0, 7], [8, 6], [5, 14], [3], [1, 3], [11], [12], [1, 4], [8, 11], [9, 12], [9, 10], [15], [], [13, 5], []], "fname": "getgidbyname", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[3, 0, 2, 5, 0, 12, 1, 1, 0, 0, 0.06666666666666667, ["mov     rax, i", "sub     p, 1", "mul     rsi", "shr     rdx, 3", "lea     rax, [rdx+rdx*4]", "add     rax, rax", "sub     i, rax", "add     edi, 30h ; '0'", "test    rdx, rdx", "mov     [p], dil", "mov     rdi, rdx", "jnz     short loc_CD80"], ["mov~rax,i", "sub~p,0", "mul~,rsi", "shr~rdx,0", "lea~rax,<TAG>", "add~rax,rax", "sub~i,rax", "add~edi,0", "test~rdx,rdx", "mov~<TAG>,dil", "mov~rdi,rdx", "jnz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 1, -1, 0.06666666666666667, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, -1, 0.0, ["mov     rax, p", "retn"], ["mov~rax,p", "retn"]], [2, 0, 0, 1, 0, 4, 0, 0, 2, 0, 0.0, ["sub     rcx, 2", "mov     byte ptr [rsi-1], 2Dh ; '-'", "mov     rax, p", "retn"], ["sub~rcx,0", "mov~[yte ptr [rsi-1]+0],0", "mov~rax,p", "retn"]], [2, 0, 3, 3, 0, 14, 1, 1, 1, 1, 0.1, ["mov     rax, i", "lea     rsi, [p-1]", "imul    r9", "mov     rax, i", "sar     rax, 3Fh", "sar     rdx, 2", "sub     rdx, rax", "lea     rax, [rdx+rdx*4]", "lea     eax, [r8+rax*2]", "sub     eax, edi", "test    rdx, rdx", "mov     i, rdx", "mov     [rcx-1], al", "jnz     short loc_CDB0"], ["mov~rax,i", "lea~rsi,[p-1]+0]", "imul~,r9", "mov~rax,i", "sar~rax,0", "sar~rdx,0", "sub~rdx,rax", "lea~rax,<TAG>", "lea~eax,<TAG>", "sub~eax,edi", "test~rdx,rdx", "mov~i,rdx", "mov~[rcx-1]+0],al", "jnz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 2, 2, 0.0, ["mov     rcx, p"], ["mov~rcx,p"]], [4, 0, 6, 0, 0, 7, 1, 1, 0, 2, 0.0, ["test    i, i", "lea     rcx, [buf+14h]", "mov     byte ptr [buf+14h], 0", "mov     r9, 6666666666666667h", "mov     buf, 0CCCCCCCCCCCCCCCDh", "mov     r8d, 30h ; '0'", "js      short loc_CDB3"], ["test~i,i", "lea~rcx,[buf+0]", "mov~[yte ptr [buf+0],0", "mov~r9,0", "mov~buf,0", "mov~r8d,0", "js~FOO"]]], "func_feature": [0, 3, 3, 0, 7, 8, 1, 41, 0.03333, 0, 9], "succs": [[0, 2], [0], [], [], [3, 5], [4], [1, 4]], "fname": "imaxtostr", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[2, 0, 16, 1, 2, 21, 0, 2, 0, 0, 0.030303030303030304, ["mov     b_0, [rsp+68h+blim]", "mov     r12, [rsp+68h+p_tt]", "mov     rcx, cmp; cmp", "mov     rsi, [rsp+68h+b]", "shr     r14, 2", "mov     rdx, r12; tmp", "lea     r15, [base+r14*8+0]", "sub     rsi, r14; n", "mov     [rsp+68h+var_48], r14", "mov     rbp, r14", "mov     rdi, r15; base", "call    mpsort_with_tmp", "mov     rsi, r14; n", "mov     rcx, cmp; cmp", "mov     rdx, r12; tmp", "mov     rdi, base; base", "call    mpsort_with_tmp", "mov     r14, [base+0]", "mov     r15, [r15]", "mov     [rsp+68h+t], 0", "nop     dword ptr [rax+00000000h]"], ["mov~b_0,<TAG>", "mov~r12,[rsp+0]", "mov~rcx,cmp", "mov~rsi,[rsp+0]", "shr~r14,0", "mov~rdx,r12", "lea~r15,[base+0]", "sub~rsi,r14", "mov~[rsp+0],r14", "mov~rbp,r14", "mov~rdi,r15", "call~FOO", "mov~rsi,r14", "mov~rcx,cmp", "mov~rdx,r12", "mov~rdi,base", "call~FOO", "mov~r14,[base+0]", "mov~r15,<TAG>", "mov~[rsp+0],0", "nop~[word ptr [rax+0]"]], [2, 0, 18, 1, 1, 15, 0, 2, 1, 4, 0.0367965367965368, ["mov     rax, [rsp+68h+blim]", "mov     r15, [rsp+68h+p_tt]", "mov     cmp, rax", "mov     n_0, rax", "mov     tmp_0, r15; tmp", "shr     rcx, 1", "lea     base, [base+rcx*8]; base", "sub     rsi, rcx; n", "mov     r14, rcx", "mov     [rsp+68h+b], rcx", "mov     b_0, cmp; cmp", "mov     [rsp+68h+var_40], rdi", "call    mpsort_with_tmp", "cmp     b_0, 1", "jnz     loc_CF40"], ["mov~rax,<TAG>", "mov~r15,[rsp+0]", "mov~cmp,rax", "mov~n_0,rax", "mov~tmp_0,r15", "shr~rcx,0", "lea~base,<TAG>", "sub~rsi,rcx", "mov~r14,rcx", "mov~[rsp+0],rcx", "mov~b_0,cmp", "mov~[rsp+0],rdi", "call~FOO", "cmp~b_0,0", "jnz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 1, -1, 0.006493506493506494, ["jnz     short loc_CE30"], ["jnz~FOO"]], [2, 0, 22, 1, 0, 13, 0, 1, 0, 5, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r13, base", "push    rbp", "push    rbx", "mov     rbx, cmp", "sub     rsp, 38h", "cmp     n_0, 2", "mov     [rsp+68h+blim], n_0", "mov     [rsp+68h+p_tt], tmp_0", "ja      short loc_CE40"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r13,base", "push~rbp", "push~rbx", "mov~rbx,cmp", "sub~rsp,0", "cmp~n_0,0", "mov~<TAG>,n_0", "mov~[rsp+0],tmp_0", "ja~FOO"]], [1, 0, 8, 0, 0, 6, 1, 0, 3, -1, 0.18831168831168832, ["mov     rax, [rsp+68h+var_40]", "mov     r15, [rsp+68h+b]", "xor     r12d, r12d", "mov     [rsp+68h+t], 0", "mov     rbp, [rax]", "nop     dword ptr [rax+rax+00h]"], ["mov~rax,[rsp+0]", "mov~r15,[rsp+0]", "xor~r12d,r12d", "mov~[rsp+0],0", "mov~rbp,<TAG>", "nop~[word ptr [rax+0]"]], [1, 0, 9, 2, 1, 10, 0, 2, 5, 0, 0.13636363636363635, ["mov     rax, [rsp+68h+t]", "mov     rdx, [rsp+68h+var_48]", "mov     rdi, r12; dest", "sub     rdx, rax", "lea     rsi, [base+rax*8+0]; src", "shl     rdx, 3; n", "call    _memcpy", "mov     rax, [rsp+68h+p_tt]", "mov     r14, [rax]", "jmp     loc_CE82"], ["mov~rax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rdi,r12", "sub~rdx,rax", "lea~rsi,[base+0]", "shl~rdx,0", "call~FOO", "mov~rax,[rsp+0]", "mov~r14,<TAG>", "jmp~FOO"]], [0, 0, 9, 0, 0, 2, 0, 0, 2, -1, 0.0367965367965368, ["mov     b_0, [base+0]", "mov     [r15], r14"], ["mov~b_0,[base+0]", "mov~<TAG>,r14"]], [1, 0, 16, 1, 0, 4, 0, 1, 4, 1, 0.1038961038961039, ["add     rbp, 1", "cmp     [rsp+68h+b], rbp", "mov     [r12-8], r15", "jz      short loc_CFFF"], ["add~rbp,0", "cmp~[rsp+0],rbp", "mov~[r12-8]+0],r15", "jz~FOO"]], [0, 0, 10, 0, 0, 3, 0, 0, 5, 1, 0.021645021645021644, ["mov     rax, [rsp+68h+b]", "mov     [rsp+68h+t], rbp", "mov     [rsp+68h+var_48], rax"], ["mov~rax,[rsp+0]", "mov~[rsp+0],rbp", "mov~[rsp+0],rax"]], [1, 0, 16, 1, 1, 6, 1, 2, 3, 2, 0.09307359307359307, ["mov     rsi, r15", "mov     rdi, r14", "add     r12, 8", "call    cmp", "test    eax, eax", "jle     short loc_CFCD"], ["mov~rsi,r15", "mov~rdi,r14", "add~r12,0", "call~cmp", "test~eax,eax", "jle~FOO"]], [0, 0, 16, 0, 0, 2, 0, 1, 5, 3, 0.010822510822510822, ["mov     r14, [base+rax*8+0]", "jmp     short loc_CF98"], ["mov~r14,[base+0]", "jmp~FOO"]], [0, 0, 1, 0, 0, 2, 0, 0, 3, -1, 0.0, ["mov     [base+0], p1", "mov     [base+8], p0"], ["mov~[base+0],p1", "mov~[base+0],p0"]], [0, 0, 2, 0, 1, 7, 1, 2, 2, -1, 0.004329004329004329, ["mov     r12, [base+8]", "mov     rbp, [base]", "mov     n_0, p1", "mov     base, p0", "call    cmp", "test    eax, eax", "jle     short loc_CE30"], ["mov~r12,[base+0]", "mov~rbp,<TAG>", "mov~n_0,p1", "mov~base,p0", "call~cmp", "test~eax,eax", "jle~FOO"]], [1, 0, 8, 1, 1, 6, 1, 2, 4, -1, 0.2012987012987013, ["mov     rsi, bb", "mov     rdi, p_tt_0", "add     i, 1", "call    cmp", "test    eax, eax", "jle     short loc_CED4"], ["mov~rsi,bb", "mov~rdi,p_tt_0", "add~i,0", "call~cmp", "test~eax,eax", "jle~FOO"]], [0, 0, 8, 0, 0, 3, 0, 1, 6, -1, 0.015151515151515152, ["mov     rdx, [rsp+68h+p_tt]", "mov     p_tt_0, [rdx+t_0*8]", "jmp     short loc_CEA0"], ["mov~rdx,[rsp+0]", "mov~p_tt_0,<TAG>", "jmp~FOO"]], [1, 0, 1, 2, 0, 15, 0, 1, 6, -1, 0.0367965367965368, ["mov     rax, [rsp+68h+t]", "lea     rdi, [base+r12*8+0]; dest", "mov     r12, [rsp+68h+b]", "mov     rcx, [rsp+68h+p_tt]", "add     rsp, 38h", "pop     cmp", "sub     r12, rax", "pop     bb", "lea     rdx, ds:0[r12*8]; n", "lea     rsi, [rcx+rax*8]; src", "pop     r12", "pop     base", "pop     p_tt_0", "pop     b_0", "jmp     _memcpy"], ["mov~rax,[rsp+0]", "lea~rdi,[base+0]", "mov~r12,[rsp+0]", "mov~rcx,[rsp+0]", "add~rsp,0", "pop~cmp", "sub~r12,rax", "pop~bb", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "pop~r12", "pop~base", "pop~p_tt_0", "pop~b_0", "jmp~FOO"]], [1, 0, 8, 1, 0, 4, 0, 1, 5, -1, 0.10173160173160173, ["add     b_0, 1", "cmp     [rsp+68h+blim], b_0", "mov     [base+r12*8-8], bb", "jz      short loc_CF00"], ["add~b_0,0", "cmp~<TAG>,b_0", "mov~[base+0],bb", "jz~FOO"]], [1, 0, 16, 1, 1, 7, 1, 2, 5, 2, 0.008658008658008658, ["mov     r15, [base+rbp*8+0]", "mov     rdi, r14", "add     r12, 8", "mov     rsi, r15", "call    cmp", "test    eax, eax", "jg      short loc_CFA8"], ["mov~r15,[base+0]", "mov~rdi,r14", "add~r12,0", "mov~rsi,r15", "call~cmp", "test~eax,eax", "jg~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 7, -1, 0.0, [], []], [1, 0, 8, 1, 1, 7, 1, 2, 6, -1, 0.008658008658008658, ["mov     bb, [base+b_0*8+0]", "mov     rdi, p_tt_0", "add     i, 1", "mov     rsi, bb", "call    cmp", "test    eax, eax", "jg      short loc_CEB0"], ["mov~bb,[base+0]", "mov~rdi,p_tt_0", "add~i,0", "mov~rsi,bb", "call~cmp", "test~eax,eax", "jg~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 2, -1, 0.0, ["add     rsp, 38h", "pop     cmp", "pop     rbp", "pop     r12", "pop     base", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~cmp", "pop~rbp", "pop~r12", "pop~base", "pop~r14", "pop~r15", "retn"]], [1, 0, 8, 1, 0, 5, 0, 1, 5, -1, 0.06926406926406926, ["add     [rsp+68h+t], 1", "mov     [base+r12*8-8], p_tt_0", "mov     rax, [rsp+68h+t]", "cmp     [rsp+68h+b], t_0", "jz      loc_CE30"], ["add~[rsp+0],0", "mov~[base+0],p_tt_0", "mov~rax,[rsp+0]", "cmp~[rsp+0],t_0", "jz~FOO"]], [1, 0, 16, 1, 0, 5, 0, 1, 4, 2, 0.032467532467532464, ["add     [rsp+68h+t], 1", "mov     [r12-8], r14", "mov     rax, [rsp+68h+t]", "cmp     [rsp+68h+var_48], rax", "jz      short loc_CFF0"], ["add~[rsp+0],0", "mov~[r12-8]+0],r14", "mov~rax,[rsp+0]", "cmp~[rsp+0],rax", "jz~FOO"]]], "func_feature": [9, 6, 25, 2, 23, 33, 4, 152, 0.04969, 0, 16], "succs": [[9], [0, 6], [12, 20], [1, 2], [13], [4], [4], [17, 5], [5], [22, 7], [9], [20], [11, 20], [16, 21], [13], [18], [19, 15], [22, 7], [], [16, 21], [], [20, 14], [8, 10]], "fname": "mpsort_with_tmp", "n_num": 23}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["lea     rax, [base+n*8]", "mov     rcx, cmp; cmp", "mov     cmp, rax; tmp", "jmp     mpsort_with_tmp"], ["lea~rax,<TAG>", "mov~rcx,cmp", "mov~cmp,rax", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 1, 4, 0.0, 0, 0], "succs": [[1], []], "fname": "mpsort", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 2, 0, 1, 4, 0, 1, 0, 0, 0.16666666666666666, ["mov     r12, src", "lea     rbx, [rdx-1]", "call    ___ctype_tolower_loc", "nop     dword ptr [rax+rax+00000000h]"], ["mov~r12,src", "lea~rbx,[rdx-1]+0]", "call~FOO", "nop~[word ptr [rax+0]"]], [0, 0, 3, 0, 0, 6, 1, 1, 0, 1, 0.0, ["test    rdx, rdx", "push    r12", "push    rbp", "mov     rbp, dest", "push    rbx", "jz      short loc_E2B9"], ["test~rdx,rdx", "push~r12", "push~rbp", "mov~rbp,dest", "push~rbx", "jz~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 1, 0, 0.0, ["mov     rax, dest", "pop     rbx", "pop     dest", "pop     r12", "retn"], ["mov~rax,dest", "pop~rbx", "pop~dest", "pop~r12", "retn"]], [2, 0, 2, 1, 0, 7, 0, 1, 2, 1, 0.16666666666666666, ["movzx   ecx, byte ptr [src+len]", "mov     rdx, [rax]", "mov     edx, [rdx+rcx*4]", "mov     [dest+len+0], dl", "sub     len, 1", "cmp     len, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_E2A0"], ["movzx~ecx,<TAG>", "mov~rdx,<TAG>", "mov~edx,<TAG>", "mov~[dest+0],dl", "sub~len,0", "cmp~len,0", "jnz~FOO"]]], "func_feature": [1, 1, 3, 0, 4, 5, 2, 22, 0.08333, 0, 1], "succs": [[3], [0, 2], [], [2, 3]], "fname": "memcpy_lowcase", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 2, 0, 1, 4, 0, 1, 0, 0, 0.16666666666666666, ["mov     r12, src", "lea     rbx, [rdx-1]", "call    ___ctype_toupper_loc", "nop     dword ptr [rax+rax+00000000h]"], ["mov~r12,src", "lea~rbx,[rdx-1]+0]", "call~FOO", "nop~[word ptr [rax+0]"]], [0, 0, 3, 0, 0, 6, 1, 1, 0, 1, 0.0, ["test    rdx, rdx", "push    r12", "push    rbp", "mov     rbp, dest", "push    rbx", "jz      short loc_E309"], ["test~rdx,rdx", "push~r12", "push~rbp", "mov~rbp,dest", "push~rbx", "jz~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 1, 0, 0.0, ["mov     rax, dest", "pop     rbx", "pop     dest", "pop     r12", "retn"], ["mov~rax,dest", "pop~rbx", "pop~dest", "pop~r12", "retn"]], [2, 0, 2, 1, 0, 7, 0, 1, 2, 1, 0.16666666666666666, ["movzx   ecx, byte ptr [src+len]", "mov     rdx, [rax]", "mov     edx, [rdx+rcx*4]", "mov     [dest+len+0], dl", "sub     len, 1", "cmp     len, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_E2F0"], ["movzx~ecx,<TAG>", "mov~rdx,<TAG>", "mov~edx,<TAG>", "mov~[dest+0],dl", "sub~len,0", "cmp~len,0", "jnz~FOO"]]], "func_feature": [1, 1, 3, 0, 4, 5, 5, 22, 0.08333, 0, 1], "succs": [[3], [0, 2], [], [2, 3]], "fname": "memcpy_uppcase", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[1, 0, 338, 0, 0, 8, 0, 1, 0, 0, 0.00569450837979302, ["movsxd  _delta, edx; n", "cmp     r11d, 30h ; '0'", "mov     [rsp+4F8h+var_499], r10b", "lea     r13, [rax+_delta]", "mov     [rsp+4F8h+digits], r9d", "mov     [rsp+4F8h+pad], r11d", "mov     [rsp+4F8h+padding], rcx", "jz      loc_FB87"], ["movsxd~_delta,edx", "cmp~r11d,0", "mov~[rsp+0],r10b", "lea~r13,<TAG>", "mov~[rsp+0],r9d", "mov~[rsp+0],r11d", "mov~[rsp+0],rcx", "jz~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 26, 23, 0.008524713143402723, ["test    edx, edx", "jle     short loc_F82E"], ["test~edx,edx", "jle~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 18, 21, 0.01320335987360695, ["test    ebx, ebx; jumptable 000000000000E5C4 cases 65,66,97", "jnz     short loc_E830; jumptable 000000000000E5C4 default case"], ["test~ebx,ebx", "jnz~FOO"]], [0, 0, 338, 1, 0, 5, 0, 1, 17, 3, 0.6626813632721259, ["lea     rdi, off_160BC", "movzx   eax, cl", "movsxd  rax, dword ptr [rdi+rax*4]", "add     rax, rdi", "jmp     rax; switch jump"], ["lea~rdi,<TAG>", "movzx~eax,cl", "movsxd~rax,<TAG>", "add~rax,rdi", "jmp~rax"]], [0, 0, 338, 0, 0, 2, 1, 0, 19, 20, 0.01309253860274272, ["test    r8b, r8b", "cmovnz  r10d, r8d"], ["test~r8b,r8b", "cmovnz~r10d,r8d"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 5, -1, 0.005813854363800658, ["mov     rsi, [rsp+4F8h+var_40]", "xor     rsi, fs:28h", "mov     rax, r15", "jnz     loc_FC03"], ["mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "mov~rax,r15", "jnz~FOO"]], [1, 0, 338, 0, 0, 7, 2, 1, 20, 19, 0.029083479674242428, ["mov     edx, 2520h", "mov     r12, r14", "xor     r8d, r8d", "mov     word ptr [rsp+4F8h+ufmt], dx", "xor     ebx, ebx", "mov     rax, [rsp+4F8h+u]", "jmp     loc_E70B"], ["mov~edx,0", "mov~r12,r14", "xor~r8d,r8d", "mov~[ord ptr [rsp+0],dx", "xor~ebx,ebx", "mov~rax,[rsp+0]", "jmp~FOO"]], [0, 0, 338, 0, 0, 3, 0, 1, 19, 20, 0.013101063315886133, ["mov     ecx, r12d", "mov     r10d, r8d", "jmp     loc_E80B"], ["mov~ecx,r12d", "mov~r10d,r8d", "jmp~FOO"]], [0, 1, 338, 0, 1, 8, 0, 1, 28, 23, 0.0014278894515199563, ["mov     rdi, [rsp+4F8h+dest]; s", "mov     esi, 20h ; ' '; c", "call    _memset", "movzx   r10d, [rsp+4F8h+var_499]", "mov     r9d, [rsp+4F8h+digits]", "mov     r11d, [rsp+4F8h+pad]", "mov     rcx, [rsp+4F8h+padding]", "mov     [rsp+4F8h+dest], r13"], ["mov~rdi,<TAG>", "mov~esi,<STR>", "call~FOO", "movzx~r10d,[rsp+0]", "mov~r9d,[rsp+0]", "mov~r11d,[rsp+0]", "mov~rcx,[rsp+0]", "mov~<TAG>,r13"]], [0, 0, 338, 0, 0, 2, 0, 0, 20, 24, 0.00025574139430208174, ["mov     r14, f", "nop     dword ptr [rax]"], ["mov~r14,f", "nop~<TAG>"]], [1, 0, 338, 1, 0, 4, 0, 1, 19, 22, 0.015139890542683238, ["mov     rdx, [rsp+4F8h+maxsize]", "sub     rdx, i", "cmp     al, 25h ; '%'", "jnz     loc_E82A"], ["mov~rdx,[rsp+0]", "sub~rdx,i", "cmp~al,0", "jnz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 0, 17, 23, 0.05639523980018072, ["lea     rax, [r14-1]; jumptable 000000000000E5C4 default case", "mov     r13d, 1"], ["lea~rax,[r14-1]+0]", "mov~r13d,0"]], [1, 0, 338, 0, 0, 2, 0, 1, 16, 4, 0.6830000170494263, ["cmp     cl, 7Ah ; 'z'; switch 123 cases", "ja      loc_E830; jumptable 000000000000E5C4 default case"], ["cmp~cl,0", "ja~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 18, 3, 0.0, ["cmp     ebx, 4Fh ; 'O'; jumptable 000000000000E5C4 cases 88,99,120", "jz      loc_E830; jumptable 000000000000E5C4 default case"], ["cmp~ebx,0", "jz~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 18, 22, 0.00284725418989651, ["test    ebx, ebx; jumptable 000000000000E5C4 case 70", "jnz     loc_E830; jumptable 000000000000E5C4 default case"], ["test~ebx,ebx", "jnz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 18, 24, 0.044754744002864305, ["cmp     ebx, 45h ; 'E'; jumptable 000000000000E5C4 cases 71,86,103", "jz      loc_E830; jumptable 000000000000E5C4 default case"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 18, 24, 0.00284725418989651, ["cmp     ebx, 45h ; 'E'; jumptable 000000000000E5C4 case 72", "jz      loc_E830; jumptable 000000000000E5C4 default case"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 18, 24, 0.00284725418989651, ["cmp     ebx, 45h ; 'E'; jumptable 000000000000E5C4 case 73", "jz      loc_E830; jumptable 000000000000E5C4 default case"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 19, 24, 0.005016793684892503, ["cmp     ebx, 4Fh ; 'O'", "jz      loc_E830; jumptable 000000000000E5C4 default case"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 18, 24, 0.00284725418989651, ["cmp     ebx, 45h ; 'E'; jumptable 000000000000E5C4 case 77", "jz      loc_E830; jumptable 000000000000E5C4 default case"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 18, 24, 0.019811433345267932, ["cmp     ebx, 45h ; 'E'; jumptable 000000000000E5C4 case 78", "jz      loc_E830; jumptable 000000000000E5C4 default case"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 18, 24, 0.0056433601009326035, ["cmp     ebx, 45h ; 'E'; jumptable 000000000000E5C4 case 107", "jz      loc_E830; jumptable 000000000000E5C4 default case"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 18, 24, 0.00284725418989651, ["cmp     ebx, 45h ; 'E'; jumptable 000000000000E5C4 case 87", "jz      loc_E830; jumptable 000000000000E5C4 default case"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 20, 21, 0.01705795099994885, ["cmp     al, 7Ah ; 'z'", "jnz     loc_E830; jumptable 000000000000E5C4 default case"], ["cmp~al,0", "jnz~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 18, 22, 0.00284725418989651, ["test    ebx, ebx; jumptable 000000000000E5C4 case 68", "jnz     loc_E830; jumptable 000000000000E5C4 default case"], ["test~ebx,ebx", "jnz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 18, 24, 0.00284725418989651, ["cmp     ebx, 45h ; 'E'; jumptable 000000000000E5C4 case 119", "jz      loc_E830; jumptable 000000000000E5C4 default case"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 18, 24, 0.0056433601009326035, ["cmp     ebx, 45h ; 'E'; jumptable 000000000000E5C4 case 101", "jz      loc_E830; jumptable 000000000000E5C4 default case"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 18, 24, 0.012483021612989418, ["cmp     ebx, 45h ; 'E'; jumptable 000000000000E5C4 case 106", "jz      loc_E830; jumptable 000000000000E5C4 default case"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 18, 24, 0.00284725418989651, ["cmp     ebx, 45h ; 'E'; jumptable 000000000000E5C4 case 100", "jz      loc_E830; jumptable 000000000000E5C4 default case"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 18, 24, 0.00284725418989651, ["cmp     ebx, 45h ; 'E'; jumptable 000000000000E5C4 case 85", "jz      loc_E830; jumptable 000000000000E5C4 default case"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 18, 24, 0.00284725418989651, ["cmp     ebx, 45h ; 'E'; jumptable 000000000000E5C4 case 83", "jz      loc_E830; jumptable 000000000000E5C4 default case"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 18, 22, 0.010434248887524934, ["cmp     ebx, 4Fh ; 'O'; jumptable 000000000000E5C4 case 67", "jz      loc_E830; jumptable 000000000000E5C4 default case"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 18, 24, 0.012483021612989418, ["cmp     ebx, 45h ; 'E'; jumptable 000000000000E5C4 case 109", "jz      loc_E830; jumptable 000000000000E5C4 default case"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 18, 24, 0.0056433601009326035, ["cmp     ebx, 45h ; 'E'; jumptable 000000000000E5C4 case 108", "jz      loc_E830; jumptable 000000000000E5C4 default case"], ["cmp~ebx,0", "jz~FOO"]], [0, 0, 338, 0, 0, 2, 0, 1, 19, 24, 0.00011082127086423541, ["mov     r10d, r8d", "jmp     loc_E830; jumptable 000000000000E5C4 default case"], ["mov~r10d,r8d", "jmp~FOO"]], [1, 0, 338, 0, 0, 5, 2, 1, 20, 22, 0.11966992310708745, ["test    ebp, ebp", "mov     r9d, 1", "cmovg   r9d, ebp", "test    rsi, rsi", "js      loc_F5B0"], ["test~ebp,ebp", "mov~r9d,0", "cmovg~r9d,ebp", "test~rsi,rsi", "js~FOO"]], [4, 0, 338, 7, 0, 21, 2, 1, 19, 23, 0.11965287368080063, ["mov     rax, t", "imul    r8", "mov     rax, t", "sar     rax, 3Fh", "sar     rdx, 2", "sub     rdx, rax", "mov     rax, rdx", "lea     rdx, [rdx+rdx*4]", "add     rdx, rdx", "sub     t, rdx", "mov     rdx, rcx", "mov     rcx, rax", "mov     eax, edi", "sub     eax, edx", "add     edx, 30h ; '0'", "test    rsi, rsi", "cmovs   edx, eax", "sub     bufp, 1", "test    t, t", "mov     [bufp], dl", "jnz     short loc_EFE8"], ["mov~rax,t", "imul~,r8", "mov~rax,t", "sar~rax,0", "sar~rdx,0", "sub~rdx,rax", "mov~rax,rdx", "lea~rdx,<TAG>", "add~rdx,rdx", "sub~t,rdx", "mov~rdx,rcx", "mov~rcx,rax", "mov~eax,edi", "sub~eax,edx", "add~edx,0", "test~rsi,rsi", "cmovs~edx,eax", "sub~bufp,0", "test~t,t", "mov~<TAG>,dl", "jnz~FOO"]], [1, 0, 338, 1, 0, 5, 0, 0, 26, 22, 0.014244795662625952, ["movzx   edi, byte ptr [rsp+4F8h+subfmt]", "mov     rax, [rsp+4F8h+dest]", "add     rax, 1", "mov     [rax-1], dil", "mov     [rsp+4F8h+dest], rax"], ["movzx~edi,[yte ptr [rsp+0]", "mov~rax,<TAG>", "add~rax,0", "mov~[rax-1]+0],dil", "mov~<TAG>,rax"]], [0, 0, 338, 0, 0, 2, 1, 1, 25, 23, 0.014159548531191925, ["test    r9d, r9d", "jnz     short loc_F82E"], ["test~r9d,r9d", "jnz~FOO"]], [1, 0, 338, 0, 1, 9, 0, 2, 28, 23, 0.0014278894515199563, ["mov     esi, 30h ; '0'; c", "mov     rdi, rax; s", "call    _memset", "mov     [rsp+4F8h+dest], r13", "mov     rcx, [rsp+4F8h+padding]", "mov     r11d, [rsp+4F8h+pad]", "mov     r9d, [rsp+4F8h+digits]", "movzx   r10d, [rsp+4F8h+var_499]", "jmp     loc_F82E"], ["mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~<TAG>,r13", "mov~rcx,[rsp+0]", "mov~r11d,[rsp+0]", "mov~r9d,[rsp+0]", "movzx~r10d,[rsp+0]", "jmp~FOO"]], [2, 0, 338, 1, 0, 5, 0, 1, 18, 22, 0.05641228922646753, ["mov     rbx, rax", "lea     rax, [rax-1]", "add     r13d, 1", "cmp     byte ptr [rax+1], 25h ; '%'", "jnz     short loc_E83A"], ["mov~rbx,rax", "lea~rax,[rax-1]+0]", "add~r13d,0", "cmp~[yte ptr [rax+0],0", "jnz~FOO"]], [0, 0, 338, 2, 0, 5, 0, 1, 25, 21, 0.027739416568632463, ["mov     rax, [rsp+4F8h+maxsize]", "add     i, r12", "mov     r12, r14", "sub     rax, i", "jmp     loc_F068"], ["mov~rax,[rsp+0]", "add~i,r12", "mov~r12,r14", "sub~rax,i", "jmp~FOO"]], [0, 0, 338, 0, 0, 3, 1, 1, 24, 22, 0.027620070584624828, ["mov     rax, [rsp+4F8h+dest]", "test    rax, rax", "jz      short loc_F843"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 338, 2, 0, 7, 0, 1, 21, 21, 0.08547729868889911, ["mov     rax, [rsp+4F8h+maxsize]", "lea     rcx, [r13+17h]", "mov     r12, r14", "sub     rcx, rbx", "sub     rax, i", "cmp     r11d, 2Dh ; '-'", "jz      short loc_F068"], ["mov~rax,[rsp+0]", "lea~rcx,[r13+0]", "mov~r12,r14", "sub~rcx,rbx", "sub~rax,i", "cmp~r11d,0", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 27, 22, 0.05041515353008371, ["cmp     byte ptr [rsp+4F8h+subfmt], 0", "jz      loc_F03C"], ["cmp~[yte ptr [rsp+0],0", "jz~FOO"]], [0, 0, 338, 1, 0, 3, 0, 0, 19, 21, 0.05642933865275433, ["mov     rdx, [rsp+4F8h+maxsize]", "mov     r12, r14", "sub     rdx, i"], ["mov~rdx,[rsp+0]", "mov~r12,r14", "sub~rdx,i"]], [0, 0, 338, 1, 0, 4, 1, 1, 22, 22, 0.020689478799038413, ["mov     r8d, r9d", "sub     r8d, ecx", "test    r8d, r8d", "jg      loc_FA48"], ["mov~r8d,r9d", "sub~r8d,ecx", "test~r8d,r8d", "jg~FOO"]], [0, 0, 338, 0, 0, 1, 0, 0, 23, 21, 0.0026852846401718583, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 338, 2, 0, 8, 0, 0, 20, 20, 0.0872930625884439, ["mov     esi, ebp", "mov     eax, 0", "sub     esi, r13d", "cmovns  eax, esi", "add     eax, r13d", "movsxd  width, eax", "cmp     rbp, rdx", "jnb     loc_E4E5"], ["mov~esi,ebp", "mov~eax,0", "sub~esi,r13d", "cmovns~eax,esi", "add~eax,r13d", "movsxd~width,eax", "cmp~rbp,rdx", "jnb~FOO"]], [1, 0, 338, 0, 0, 3, 0, 1, 20, 21, 0.01204541967162805, ["mov     r12, f", "mov     r13d, 1", "jmp     loc_E856"], ["mov~r12,f", "mov~r13d,0", "jmp~FOO"]], [1, 0, 338, 0, 0, 4, 0, 1, 19, 21, 0.013055598179121271, ["mov     r12, r14", "mov     modifier, r14", "mov     r13d, 1", "jmp     loc_E856"], ["mov~r12,r14", "mov~modifier,r14", "mov~r13d,0", "jmp~FOO"]], [1, 0, 338, 0, 1, 6, 0, 2, 27, 22, 0.0014278894515199563, ["mov     esi, 30h ; '0'; c", "mov     rdi, rax; s", "call    _memset", "mov     [rsp+4F8h+dest], rbp", "movzx   r10d, byte ptr [rsp+4F8h+subfmt]", "jmp     loc_F0C3"], ["mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~<TAG>,rbp", "movzx~r10d,[yte ptr [rsp+0]", "jmp~FOO"]], [1, 0, 338, 0, 0, 5, 0, 1, 26, 23, 0.00569450837979302, ["movsxd  rdx, ebp; n", "cmp     r11d, 30h ; '0'", "mov     byte ptr [rsp+4F8h+subfmt], r10b", "lea     rbp, [rax+rdx]", "jz      loc_F856"], ["movsxd~rdx,ebp", "cmp~r11d,0", "mov~[yte ptr [rsp+0],r10b", "lea~rbp,<TAG>", "jz~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 19, 21, 0.007425025147903773, ["xor     r9d, r9d", "jmp     loc_EB54"], ["xor~r9d,r9d", "jmp~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 18, 22, 0.010084735648645423, ["cmp     ebx, 45h ; 'E'; jumptable 000000000000E5C4 case 89", "jz      loc_F872"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 18, 22, 0.008682420336555675, ["cmp     ebx, 45h ; 'E'; jumptable 000000000000E5C4 case 121", "jz      loc_F872"], ["cmp~ebx,0", "jz~FOO"]], [0, 0, 338, 0, 0, 3, 1, 1, 21, 19, 0.0860314050432203, ["mov     rax, [rsp+4F8h+dest]", "test    rax, rax", "jz      short loc_E8C8"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 22, 22, 0.01976880977955092, ["test    esi, esi", "jle     short loc_E8AD"], ["test~esi,esi", "jle~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 29, 24, 0.0026170869350246365, ["mov     r8d, 2Bh ; '+'", "jmp     loc_F5C5"], ["mov~r8d,0", "jmp~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 28, 25, 0.00597582391352531, ["cmp     r11d, 2Dh ; '-'", "jz      loc_F87A"], ["cmp~r11d,0", "jz~FOO"]], [0, 0, 338, 0, 0, 2, 0, 1, 20, 18, 0.019586949232491657, ["mov     r12, r14", "jmp     loc_E550"], ["mov~r12,r14", "jmp~FOO"]], [0, 0, 338, 0, 0, 4, 1, 1, 19, 19, 0.06396660585704626, ["mov     rax, [rsp+4F8h+tp]", "mov     edi, [rax+20h]", "test    edi, edi", "js      loc_F885"], ["mov~rax,[rsp+0]", "mov~edi,[rax+0]", "test~edi,edi", "js~FOO"]], [0, 0, 338, 0, 0, 3, 1, 1, 23, 19, 0.20582067413431537, ["mov     rax, [rsp+4F8h+dest]", "test    rax, rax", "jz      short loc_F0DF"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 338, 2, 0, 8, 0, 0, 22, 20, 0.2070993811058258, ["sub     ebp, ecx", "mov     edx, 0", "movsxd  r13, ecx", "cmovns  edx, ebp", "add     ecx, edx", "movsxd  r14, ecx", "cmp     r14, rax", "jnb     loc_E4E5"], ["sub~ebp,ecx", "mov~edx,0", "movsxd~r13,ecx", "cmovns~edx,ebp", "add~ecx,edx", "movsxd~r14,ecx", "cmp~r14,rax", "jnb~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 24, 22, 0.022556390977443608, ["test    r9d, r9d", "jnz     short loc_F0C3"], ["test~r9d,r9d", "jnz~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 25, 22, 0.008524713143402723, ["test    ebp, ebp", "jle     short loc_F0C3"], ["test~ebp,ebp", "jle~FOO"]], [2, 0, 338, 2, 0, 8, 0, 0, 27, 23, 0.01705795099994885, ["mov     ecx, ebp", "sub     ecx, 1", "cmovns  edx, ecx", "mov     r12d, edx", "add     r12d, 1", "movsxd  r12, r12d", "cmp     r12, rax", "jnb     loc_E4E5"], ["mov~ecx,ebp", "sub~ecx,0", "cmovns~edx,ecx", "mov~r12d,edx", "add~r12d,0", "movsxd~r12,r12d", "cmp~r12,rax", "jnb~FOO"]], [1, 0, 338, 3, 0, 11, 1, 1, 26, 22, 0.03498116038395308, ["mov     eax, ebp", "add     i, padding_0", "xor     edx, edx", "sub     eax, r8d", "cmp     r8d, ebp", "cmovge  eax, edx", "mov     ebp, eax", "mov     width, [rsp+4F8h+maxsize]", "sub     rax, i", "cmp     byte ptr [rsp+4F8h+subfmt], 0", "jnz     loc_F88D"], ["mov~eax,ebp", "add~i,padding_0", "xor~edx,edx", "sub~eax,r8d", "cmp~r8d,ebp", "cmovge~eax,edx", "mov~ebp,eax", "mov~width,[rsp+0]", "sub~rax,i", "cmp~[yte ptr [rsp+0],0", "jnz~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 20, 20, 0.011346393193869026, ["test    ebp, ebp", "jle     short loc_F440"], ["test~ebp,ebp", "jle~FOO"]], [0, 0, 338, 0, 0, 3, 1, 1, 19, 19, 0.021688291022340423, ["mov     rax, [rsp+4F8h+dest]", "test    rax, rax", "jz      loc_E9B2"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 1, 338, 0, 1, 5, 0, 1, 24, 22, 0.0014278894515199563, ["mov     rdi, [rsp+4F8h+dest]; s", "mov     esi, 20h ; ' '; c", "call    _memset", "movzx   r10d, byte ptr [rsp+4F8h+subfmt]", "mov     [rsp+4F8h+dest], r14"], ["mov~rdi,<TAG>", "mov~esi,<STR>", "call~FOO", "movzx~r10d,[yte ptr [rsp+0]", "mov~<TAG>,r14"]], [1, 0, 338, 0, 0, 5, 0, 1, 23, 23, 0.00569450837979302, ["movsxd  rdx, esi; n", "cmp     r11d, 30h ; '0'", "mov     byte ptr [rsp+4F8h+subfmt], r10b", "lea     r14, [rax+rdx]", "jz      loc_F682"], ["movsxd~rdx,esi", "cmp~r11d,0", "mov~[yte ptr [rsp+0],r10b", "lea~r14,<TAG>", "jz~FOO"]], [0, 0, 338, 0, 0, 3, 1, 1, 28, 22, 0.016938605015941213, ["mov     rax, [rsp+4F8h+dest]", "test    rax, rax", "jz      short loc_F904"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 29, 23, 0.008516188430259322, ["test    r9d, r9d", "jnz     short loc_F8F0"], ["test~r9d,r9d", "jnz~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 30, 23, 0.00284725418989651, ["test    ecx, ecx", "jle     short loc_F8F0"], ["test~ecx,ecx", "jle~FOO"]], [0, 0, 338, 0, 0, 6, 1, 1, 23, 21, 0.01983700748469814, ["movsxd  r13, r13d", "test    r10b, r10b", "mov     rsi, rbx; src", "mov     rdx, r13; n", "mov     rdi, [rsp+4F8h+dest]; dest", "jz      short loc_E900"], ["movsxd~r13,r13d", "test~r10b,r10b", "mov~rsi,rbx", "mov~rdx,r13", "mov~rdi,<TAG>", "jz~FOO"]], [1, 0, 338, 0, 1, 6, 0, 2, 24, 22, 0.0014278894515199563, ["mov     esi, 30h ; '0'; c", "mov     rdi, rax; s", "call    _memset", "mov     [rsp+4F8h+dest], r14", "movzx   r10d, byte ptr [rsp+4F8h+subfmt]", "jmp     loc_E8AD"], ["mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~<TAG>,r14", "movzx~r10d,[yte ptr [rsp+0]", "jmp~FOO"]], [0, 1, 338, 0, 1, 5, 0, 1, 27, 22, 0.0014278894515199563, ["mov     rdi, [rsp+4F8h+dest]; s", "mov     esi, 20h ; ' '; c", "call    _memset", "movzx   r10d, byte ptr [rsp+4F8h+subfmt]", "mov     [rsp+4F8h+dest], rbp"], ["mov~rdi,<TAG>", "mov~esi,<STR>", "call~FOO", "movzx~r10d,[yte ptr [rsp+0]", "mov~<TAG>,rbp"]], [0, 0, 338, 1, 0, 1, 0, 0, 25, 19, 0.019888155763558554, ["add     [rsp+4F8h+dest], r13"], ["add~<TAG>,r13"]], [0, 0, 338, 0, 1, 2, 0, 2, 24, 20, 0.008499139003972516, ["call    _memcpy", "jmp     short loc_E8C4"], ["call~FOO", "jmp~FOO"]], [0, 0, 338, 0, 1, 1, 0, 1, 24, 20, 0.008499139003972516, ["call    memcpy_uppcase"], ["call~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 5, -1, 0.002881353042470121, ["cmp     [rsp+4F8h+maxsize], 0", "jz      loc_E4E8"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 4, -1, 0.0090745571411522, ["mov     rax, [rsp+4F8h+dest]", "test    rax, rax", "jz      loc_E4E8"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 338, 1, 0, 2, 0, 1, 22, 18, 0.12350604402161867, ["add     i, rbp", "jmp     loc_E550"], ["add~i,rbp", "jmp~FOO"]], [0, 0, 338, 0, 0, 3, 1, 1, 23, 19, 0.034260822123335546, ["mov     rax, [rsp+4F8h+dest]", "test    rax, rax", "jz      loc_E8C8"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 338, 1, 0, 2, 0, 1, 27, 19, 0.028302047636097043, ["add     [rsp+4F8h+dest], rbx", "jmp     loc_E8C8"], ["add~<TAG>,rbx", "jmp~FOO"]], [0, 0, 338, 0, 0, 5, 1, 1, 25, 21, 0.022641638108877635, ["test    r10b, r10b", "mov     rdx, _n; n", "mov     rsi, rbx; src", "mov     rdi, [rsp+4F8h+dest]; dest", "jz      loc_F678"], ["test~r10b,r10b", "mov~rdx,_n", "mov~rsi,rbx", "mov~rdi,<TAG>", "jz~FOO"]], [1, 0, 338, 1, 0, 2, 0, 1, 11, 21, 0.0014151023818048522, ["add     len, 1", "jmp     loc_E4BF"], ["add~len,0", "jmp~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 10, 22, 0.005703033092936422, ["cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      loc_E8D0"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 338, 0, 1, 1, 0, 1, 26, 20, 0.009901454316062264, ["call    memcpy_uppcase"], ["call~FOO"]], [0, 0, 338, 1, 0, 1, 0, 0, 27, 19, 0.022692786387738053, ["add     [rsp+4F8h+dest], _n"], ["add~<TAG>,_n"]], [0, 0, 338, 0, 1, 2, 0, 2, 26, 20, 0.009901454316062264, ["call    _memcpy", "jmp     loc_F0DB"], ["call~FOO", "jmp~FOO"]], [2, 0, 338, 0, 1, 22, 0, 1, 18, 24, 0.11963582425451383, ["mov     rax, [rsp+4F8h+tp]; jumptable 000000000000E5C4 case 115", "lea     rdi, [rsp+4F8h+ltm]; tp", "mov     byte ptr [rsp+4F8h+padding], r10b", "mov     dword ptr [rsp+4F8h+subfmt], r11d", "lea     r13, [rsp+4F8h+ubuf]", "movdqu  xmm0, xmmword ptr [rax]", "lea     modifier, [r13+17h]", "movaps  xmmword ptr [rsp+4F8h+ltm.tm_sec], xmm0", "movdqu  xmm0, xmmword ptr [rax+10h]", "movaps  xmmword ptr [rsp+4F8h+ltm.tm_mon], xmm0", "movdqu  xmm0, xmmword ptr [rax+20h]", "mov     rax, [rax+30h]", "movaps  xmmword ptr [rsp+4F8h+ltm.tm_isdst], xmm0", "mov     [rsp+4F8h+ltm.tm_zone], rax", "call    _mktime", "movzx   r10d, byte ptr [rsp+4F8h+padding]", "mov     r11d, dword ptr [rsp+4F8h+subfmt]", "mov     rsi, rax", "mov     rcx, t", "mov     r8, 6666666666666667h", "mov     edi, 30h ; '0'", "nop     word ptr [rax+rax+00h]"], ["mov~rax,[rsp+0]", "lea~rdi,[rsp+0]", "mov~[yte ptr [rsp+0],r10b", "mov~[word ptr [rsp+0],r11d", "lea~r13,[rsp+0]", "movdqu~xmm0,<TAG>", "lea~modifier,[r13+0]", "movaps~[mmword ptr [rsp+0],xmm0", "movdqu~xmm0,[mmword ptr [rax+0]", "movaps~[mmword ptr [rsp+0],xmm0", "movdqu~xmm0,[mmword ptr [rax+0]", "mov~rax,[rax+0]", "movaps~[mmword ptr [rsp+0],xmm0", "mov~[rsp+0],rax", "call~FOO", "movzx~r10d,[yte ptr [rsp+0]", "mov~r11d,[word ptr [rsp+0]", "mov~rsi,rax", "mov~rcx,t", "mov~r8,0", "mov~edi,0", "nop~[ord ptr [rax+0]"]], [0, 0, 338, 1, 0, 2, 0, 1, 24, 18, 0.20599116839718343, ["add     i, r14", "jmp     loc_E550"], ["add~i,r14", "jmp~FOO"]], [1, 0, 338, 0, 0, 4, 0, 1, 17, 7, 0.01261231309566433, ["mov     r12d, ebx", "mov     r14, rsi", "mov     ebp, 7FFFFFFFh", "jmp     loc_E59E"], ["mov~r12d,ebx", "mov~r14,rsi", "mov~ebp,0", "jmp~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 16, 8, 0.018311083832029052, ["cmp     eax, 9", "ja      loc_E8E0"], ["cmp~eax,0", "ja~FOO"]], [0, 0, 338, 0, 1, 2, 0, 2, 13, 20, 0.005677458953506214, ["call    _memcpy", "jmp     loc_E6A3"], ["call~FOO", "jmp~FOO"]], [1, 0, 338, 0, 0, 5, 0, 1, 12, 21, 0.014193647383765535, ["cmp     [rsp+4F8h+to_uppcase], 0", "mov     rdx, r12; n", "mov     rsi, r14; src", "mov     rdi, [rsp+4F8h+dest]; dest", "jz      loc_E8F0"], ["cmp~[rsp+0],0", "mov~rdx,r12", "mov~rsi,r14", "mov~rdi,<TAG>", "jz~FOO"]], [1, 0, 338, 0, 0, 6, 2, 1, 18, 22, 0.039136958041361906, ["mov     rdi, [rsp+4F8h+zone]; jumptable 000000000000E5C4 case 90", "test    r8b, r8b", "mov     eax, 0", "cmovnz  r10d, eax", "test    rdi, rdi", "jz      loc_F97A"], ["mov~rdi,[rsp+0]", "test~r8b,r8b", "mov~eax,0", "cmovnz~r10d,eax", "test~rdi,rdi", "jz~FOO"]], [1, 0, 338, 1, 0, 5, 0, 0, 30, 22, 0.008567336709119737, ["movzx   ecx, byte ptr [rsp+4F8h+subfmt]", "mov     rax, [rsp+4F8h+dest]", "add     rax, 1", "mov     [rax-1], cl", "mov     [rsp+4F8h+dest], rax"], ["movzx~ecx,[yte ptr [rsp+0]", "mov~rax,<TAG>", "add~rax,0", "mov~[rax-1]+0],cl", "mov~<TAG>,rax"]], [0, 1, 338, 1, 1, 12, 0, 1, 31, 23, 0.0, ["movsxd  _delta_1, ecx", "mov     esi, 20h ; ' '; c", "mov     rdi, rax; s", "mov     rdx, _delta_1; n", "mov     byte ptr [rsp+4F8h+digits], r10b", "mov     [rsp+4F8h+pad], r9d", "mov     [rsp+4F8h+padding], _delta_1", "call    _memset", "mov     rcx, [rsp+4F8h+padding]", "movzx   r10d, byte ptr [rsp+4F8h+digits]", "add     [rsp+4F8h+dest], rcx", "mov     r9d, [rsp+4F8h+pad]"], ["movsxd~_delta_1,ecx", "mov~esi,<STR>", "mov~rdi,rax", "mov~rdx,_delta_1", "mov~[yte ptr [rsp+0],r10b", "mov~[rsp+0],r9d", "mov~[rsp+0],_delta_1", "call~FOO", "mov~rcx,[rsp+0]", "movzx~r10d,[yte ptr [rsp+0]", "add~<TAG>,rcx", "mov~r9d,[rsp+0]"]], [0, 0, 338, 0, 1, 2, 0, 2, 27, 20, 0.0014278894515199563, ["call    memcpy_uppcase", "jmp     loc_E7F4"], ["call~FOO", "jmp~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 26, 21, 0.00569450837979302, ["test    r10b, r10b", "jnz     loc_E907"], ["test~r10b,r10b", "jnz~FOO"]], [0, 0, 338, 0, 0, 2, 0, 1, 21, 20, 0.016231053825038786, ["mov     r14, f", "jmp     do_z_conversion"], ["mov~r14,f", "jmp~FOO"]], [0, 0, 338, 0, 0, 1, 1, 0, 18, 20, 0.04484567427639395, ["xor     r9d, r9d; jumptable 000000000000E5C4 case 122"], ["xor~r9d,r9d"]], [1, 0, 338, 3, 0, 8, 0, 1, 29, 21, 0.01702385214737524, ["mov     rax, [rsp+4F8h+maxsize]", "lea     rcx, [r13+17h]", "add     i, r12", "mov     r11d, 5Fh ; '_'", "mov     r12, r14", "sub     rcx, rbx", "sub     rax, i", "jmp     loc_F068"], ["mov~rax,[rsp+0]", "lea~rcx,[r13+0]", "add~i,r12", "mov~r11d,0", "mov~r12,r14", "sub~rcx,rbx", "sub~rax,i", "jmp~FOO"]], [0, 0, 338, 1, 1, 9, 0, 1, 19, 21, 0.0181491142823044, ["mov     byte ptr [rsp+4F8h+pad], r10b", "mov     byte ptr [rsp+4F8h+padding], r8b", "mov     dword ptr [rsp+4F8h+subfmt], r11d", "call    _strlen", "movzx   r8d, byte ptr [rsp+4F8h+padding]", "movzx   r10d, byte ptr [rsp+4F8h+pad]", "movsxd  modifier, eax", "mov     r11d, dword ptr [rsp+4F8h+subfmt]", "sub     ebp, eax"], ["mov~[yte ptr [rsp+0],r10b", "mov~[yte ptr [rsp+0],r8b", "mov~[word ptr [rsp+0],r11d", "call~FOO", "movzx~r8d,[yte ptr [rsp+0]", "movzx~r10d,[yte ptr [rsp+0]", "movsxd~modifier,eax", "mov~r11d,[word ptr [rsp+0]", "sub~ebp,eax"]], [1, 0, 338, 0, 1, 7, 0, 2, 27, 22, 0.0014278894515199563, ["mov     esi, 30h ; '0'; c", "mov     rdi, rax; s", "call    _memset", "mov     [rsp+4F8h+dest], rbx", "movzx   r8d, byte ptr [rsp+4F8h+subfmt]", "movzx   r10d, byte ptr [rsp+4F8h+padding]", "jmp     loc_E7CF"], ["mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~<TAG>,rbx", "movzx~r8d,[yte ptr [rsp+0]", "movzx~r10d,[yte ptr [rsp+0]", "jmp~FOO"]], [1, 0, 338, 0, 0, 5, 0, 1, 26, 23, 0.00569450837979302, ["mov     r11d, [rsp+4F8h+pad]", "movsxd  _delta, edx; n", "lea     rbx, [rax+_delta]", "cmp     r11d, 30h ; '0'", "jz      loc_E911"], ["mov~r11d,[rsp+0]", "movsxd~_delta,edx", "lea~rbx,<TAG>", "cmp~r11d,0", "jz~FOO"]], [2, 0, 338, 0, 0, 4, 0, 1, 20, 24, 0.003614478372802755, ["mov     esi, [rsp+4F8h+number_value]", "mov     ebp, 9", "mov     r9d, 9", "jmp     do_number"], ["mov~esi,[rsp+0]", "mov~ebp,0", "mov~r9d,0", "jmp~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 19, 25, 0.01780812575656829, ["cmp     ebp, 0FFFFFFFFh", "jz      loc_F924"], ["cmp~ebp,0", "jz~FOO"]], [0, 0, 338, 0, 0, 4, 2, 1, 18, 21, 0.01605061406350348, ["test    r8b, r8b; jumptable 000000000000E5C4 cases 98,104", "cmovz   r8d, r10d", "test    ebx, ebx", "jnz     loc_F93B"], ["test~r8b,r8b", "cmovz~r8d,r10d", "test~ebx,ebx", "jnz~FOO"]], [0, 0, 338, 0, 0, 2, 0, 0, 19, 21, 0.0027449576321756774, ["lea     rax, aYMD_0; \"%Y-%m-%d\"", "mov     [rsp+4F8h+subfmt], rax"], ["lea~rax,<TAG>", "mov~[rsp+0],rax"]], [1, 0, 338, 2, 0, 9, 1, 0, 20, 20, 0.03918810632022232, ["test    ebp, ebp", "mov     r12d, 0", "mov     rax, [rsp+4F8h+maxsize]", "cmovns  r12d, ebp", "add     r12d, ebx", "movsxd  r12, r12d", "sub     rax, i", "cmp     r12, rax", "jnb     loc_E4E5"], ["test~ebp,ebp", "mov~r12d,0", "mov~rax,[rsp+0]", "cmovns~r12d,ebp", "add~r12d,ebx", "movsxd~r12,r12d", "sub~rax,i", "cmp~r12,rax", "jnb~FOO"]], [0, 0, 338, 0, 0, 4, 1, 1, 19, 21, 0.0181491142823044, ["lea     rax, aReportBugsToS+16h; \"\"", "xor     ebx, ebx", "mov     [rsp+4F8h+zone], rax", "jmp     loc_F12B"], ["lea~rax,<TAG>", "xor~ebx,ebx", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 338, 1, 0, 4, 1, 1, 18, 21, 0.03556936559084787, ["mov     rdx, [rsp+4F8h+maxsize]; jumptable 000000000000E5C4 case 37", "sub     rdx, i", "test    ebx, ebx", "jnz     loc_F943"], ["mov~rdx,[rsp+0]", "sub~rdx,i", "test~ebx,ebx", "jnz~FOO"]], [1, 0, 338, 0, 0, 1, 0, 0, 23, 24, 0.0045351473922902496, ["shr     r8d, 1Fh"], ["shr~r8d,0"]], [1, 0, 338, 0, 0, 2, 0, 1, 22, 25, 0.020800300069902647, ["cmp     colons, 2", "jz      loc_F954"], ["cmp~colons,0", "jz~FOO"]], [0, 0, 338, 0, 0, 3, 1, 1, 21, 19, 0.03906876033621468, ["mov     rax, [rsp+4F8h+dest]", "test    rax, rax", "jz      loc_E9B2"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 22, 22, 0.025361021601623103, ["test    ebp, ebp", "jle     short loc_F198"], ["test~ebp,ebp", "jle~FOO"]], [1, 0, 338, 0, 0, 6, 0, 1, 23, 23, 0.00569450837979302, ["movsxd  rdx, ebp; n", "cmp     r11d, 30h ; '0'", "mov     byte ptr [rsp+4F8h+padding], r10b", "lea     r13, [rax+rdx]", "mov     byte ptr [rsp+4F8h+subfmt], r8b", "jz      loc_FB39"], ["movsxd~rdx,ebp", "cmp~r11d,0", "mov~[yte ptr [rsp+0],r10b", "lea~r13,<TAG>", "mov~[yte ptr [rsp+0],r8b", "jz~FOO"]], [5, 0, 338, 4, 0, 8, 0, 1, 24, 23, 0.008192249330810019, ["imul    edi, 64h", "mov     byte ptr [rsp+4F8h+subfmt], 1", "mov     r9d, 9", "imul    esi, 2710h", "add     esi, edi", "mov     edi, 14h", "add     esi, eax", "jmp     do_number_body"], ["imul~edi,,0", "mov~[yte ptr [rsp+0],0", "mov~r9d,0", "imul~esi,,0", "add~esi,edi", "mov~edi,0", "add~esi,eax", "jmp~FOO"]], [1, 0, 338, 0, 0, 3, 1, 1, 24, 24, 0.006504356128416279, ["shr     r8d, 1Fh", "test    eax, eax", "jnz     tz_hh_mm_ss"], ["shr~r8d,0", "test~eax,eax", "jnz~FOO"]], [0, 1, 338, 0, 1, 6, 0, 1, 24, 22, 0.0014278894515199563, ["mov     rdi, [rsp+4F8h+dest]; s", "mov     esi, 20h ; ' '; c", "call    _memset", "movzx   r10d, byte ptr [rsp+4F8h+padding]", "movzx   r8d, byte ptr [rsp+4F8h+subfmt]", "mov     [rsp+4F8h+dest], r13"], ["mov~rdi,<TAG>", "mov~esi,<STR>", "call~FOO", "movzx~r10d,[yte ptr [rsp+0]", "movzx~r8d,[yte ptr [rsp+0]", "mov~<TAG>,r13"]], [3, 0, 338, 1, 0, 4, 1, 1, 20, 26, 0.01858387465261794, ["sub     esi, 1", "mov     eax, 16Dh", "test    sil, 3", "jnz     short loc_F9DE"], ["sub~esi,0", "mov~eax,0", "test~sil,0", "jnz~FOO"]], [5, 1, 338, 6, 0, 28, 2, 1, 19, 27, 0.04282815883245528, ["mov     rdx, [rsp+4F8h+tp]", "mov     edi, [rdx+14h]", "mov     r9d, [rdx+1Ch]", "mov     eax, edi", "mov     r8d, r9d", "sar     eax, 1Fh", "and     eax, 190h", "lea     esi, [rdi+rax-64h]", "mov     eax, [rdx+18h]", "mov     edx, 92492493h", "sub     r8d, eax", "mov     dword ptr [rsp+4F8h+subfmt], eax", "add     r8d, 17Eh", "mov     eax, r8d", "imul    edx", "lea     eax, [rdx+r8]", "mov     edx, r8d", "sar     edx, 1Fh", "sar     eax, 2", "sub     eax, edx", "lea     edx, ds:0[rax*8]", "sub     edx, eax", "mov     eax, edx", "mov     edx, r9d", "sub     edx, r8d", "lea     r8d, [rdx+rax+3]", "test    r8d, r8d", "js      loc_F98D"], ["mov~rdx,[rsp+0]", "mov~edi,[rdx+0]", "mov~r9d,[rdx+0]", "mov~eax,edi", "mov~r8d,r9d", "sar~eax,0", "and~eax,<STR>", "lea~esi,[rdi+0]", "mov~eax,[rdx+0]", "mov~edx,0", "sub~r8d,eax", "mov~[word ptr [rsp+0],eax", "add~r8d,0", "mov~eax,r8d", "imul~,edx", "lea~eax,<TAG>", "mov~edx,r8d", "sar~edx,0", "sar~eax,0", "sub~eax,edx", "lea~edx,<TAG>", "sub~edx,eax", "mov~eax,edx", "mov~edx,r9d", "sub~edx,r8d", "lea~r8d,[rdx+0]", "test~r8d,r8d", "js~FOO"]], [3, 0, 338, 4, 1, 24, 1, 1, 19, 20, 0.03358736978500673, ["mov     dword ptr [rsp+4F8h+padding], r11d", "sub     rsp, 8", "movzx   ebx, r10b", "mov     eax, [rsp+500h+number_value]", "xor     esi, esi; s", "mov     rdx, 0FFFFFFFFFFFFFFFFh; maxsize", "mov     edi, ebx; upcase", "push    rax; ns", "mov     r9d, [rsp+508h+ut]; ut", "mov     r8, [rsp+508h+tp]; tp", "mov     rcx, [rsp+508h+subfmt]; format", "call    strftime_case_", "pop     r12", "mov     r13, rax", "mov     r12d, 0", "pop     len", "sub     ebp, r13d", "mov     r10, [rsp+4F8h+maxsize]", "cmovns  r12d, ebp", "add     r12d, r13d", "movsxd  r12, r12d", "sub     r10, i", "cmp     r12, r10", "jnb     loc_E4E5"], ["mov~[word ptr [rsp+0],r11d", "sub~rsp,0", "movzx~ebx,r10b", "mov~eax,[rsp+0]", "xor~esi,esi", "mov~rdx,0", "mov~edi,ebx", "push~rax", "mov~r9d,[rsp+0]", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "call~FOO", "pop~r12", "mov~r13,rax", "mov~r12d,0", "pop~len", "sub~ebp,r13d", "mov~r10,[rsp+0]", "cmovns~r12d,ebp", "add~r12d,r13d", "movsxd~r12,r12d", "sub~r10,i", "cmp~r12,r10", "jnb~FOO"]], [0, 0, 338, 0, 0, 3, 0, 1, 19, 21, 0.0027449576321756774, ["lea     rax, aMDY; \"%m/%d/%y\"", "mov     [rsp+4F8h+subfmt], rax", "jmp     subformat"], ["lea~rax,<TAG>", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 338, 0, 0, 3, 0, 1, 18, 21, 0.00973096005319421, ["lea     rax, aMDHM+6; jumptable 000000000000E5C4 case 82", "mov     [rsp+4F8h+subfmt], rax", "jmp     subformat"], ["lea~rax,<TAG>", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 338, 0, 0, 3, 0, 1, 18, 21, 0.00973096005319421, ["lea     rax, aHMS; jumptable 000000000000E5C4 case 84", "mov     [rsp+4F8h+subfmt], rax", "jmp     subformat"], ["lea~rax,<TAG>", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 338, 0, 0, 5, 1, 1, 23, 21, 0.025429219306770327, ["test    r8b, r8b", "mov     rdx, rbx; len", "mov     rsi, [rsp+4F8h+zone]; src", "mov     rdi, [rsp+4F8h+dest]; dest", "jnz     loc_FAE5"], ["test~r8b,r8b", "mov~rdx,rbx", "mov~rsi,[rsp+0]", "mov~rdi,<TAG>", "jnz~FOO"]], [1, 0, 338, 0, 1, 7, 0, 2, 24, 22, 0.0014278894515199563, ["mov     esi, 30h ; '0'; c", "mov     rdi, rax; s", "call    _memset", "mov     [rsp+4F8h+dest], r13", "movzx   r8d, byte ptr [rsp+4F8h+subfmt]", "movzx   r10d, byte ptr [rsp+4F8h+padding]", "jmp     loc_F198"], ["mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~<TAG>,r13", "movzx~r8d,[yte ptr [rsp+0]", "movzx~r10d,[yte ptr [rsp+0]", "jmp~FOO"]], [0, 0, 338, 0, 0, 3, 1, 1, 20, 19, 0.03336572724327826, ["mov     rax, [rsp+4F8h+dest]", "test    rax, rax", "jnz     loc_F69E"], ["mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 24, 21, 0.00569450837979302, ["test    r10b, r10b", "jz      loc_FADB"], ["test~r10b,r10b", "jz~FOO"]], [0, 0, 338, 0, 1, 1, 0, 1, 25, 20, 0.0014278894515199563, ["call    memcpy_uppcase"], ["call~FOO"]], [0, 0, 338, 1, 0, 3, 0, 1, 20, 18, 0.14745480481248474, ["add     i, r12", "mov     r12, r14", "jmp     loc_E550"], ["add~i,r12", "mov~r12,r14", "jmp~FOO"]], [0, 0, 338, 0, 0, 3, 1, 1, 20, 19, 0.019623889656113072, ["mov     rax, [rsp+4F8h+dest]", "test    rax, rax", "jz      loc_E9B2"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 338, 1, 0, 5, 0, 1, 22, 19, 0.011414590899016247, ["mov     rax, [rsp+4F8h+dest]", "mov     [rax], cl", "add     rax, 1", "mov     [rsp+4F8h+dest], p", "jmp     loc_E9B2"], ["mov~rax,<TAG>", "mov~<TAG>,cl", "add~rax,0", "mov~<TAG>,p", "jmp~FOO"]], [0, 0, 338, 1, 0, 2, 0, 1, 25, 19, 0.025514466438204354, ["add     [rsp+4F8h+dest], rbx", "jmp     loc_E9B2"], ["add~<TAG>,rbx", "jmp~FOO"]], [0, 0, 338, 0, 0, 3, 1, 1, 19, 19, 0.021688291022340423, ["mov     rax, [rsp+4F8h+dest]", "test    rax, rax", "jz      loc_E9B2"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [2, 0, 338, 1, 0, 5, 0, 1, 21, 19, 0.011414590899016247, ["mov     rax, [rsp+4F8h+dest]", "mov     byte ptr [rax], 9", "add     rax, 1", "mov     [rsp+4F8h+dest], p", "jmp     loc_E9B2"], ["mov~rax,<TAG>", "mov~<TAG>,0", "add~rax,0", "mov~<TAG>,p", "jmp~FOO"]], [2, 0, 338, 1, 0, 5, 0, 1, 21, 19, 0.011414590899016247, ["mov     rax, [rsp+4F8h+dest]", "mov     byte ptr [rax], 0Ah", "add     rax, 1", "mov     [rsp+4F8h+dest], p", "jmp     loc_E9B2"], ["mov~rax,<TAG>", "mov~<TAG>,0", "add~rax,0", "mov~<TAG>,p", "jmp~FOO"]], [1, 0, 338, 2, 1, 17, 0, 2, 22, 19, 0.011414590899016247, ["sub     rsp, 8", "movsxd  _n, r13d", "mov     rdx, r10; maxsize", "mov     eax, [rsp+500h+number_value]", "mov     edi, ebx; upcase", "push    rax; ns", "mov     rbp, [rsp+508h+dest]", "mov     r9d, [rsp+508h+ut]; ut", "mov     r8, [rsp+508h+tp]; tp", "mov     rcx, [rsp+508h+subfmt]; format", "mov     rsi, rbp; s", "add     rbp, _n", "call    strftime_case_", "mov     [rsp+508h+dest], rbp", "pop     r10", "pop     r11", "jmp     loc_E9B2"], ["sub~rsp,0", "movsxd~_n,r13d", "mov~rdx,r10", "mov~eax,[rsp+0]", "mov~edi,ebx", "push~rax", "mov~rbp,[rsp+0]", "mov~r9d,[rsp+0]", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "mov~rsi,rbp", "add~rbp,_n", "call~FOO", "mov~[rsp+0],rbp", "pop~r10", "pop~r11", "jmp~FOO"]], [0, 0, 338, 0, 1, 2, 0, 2, 25, 20, 0.0014278894515199563, ["call    _memcpy", "jmp     loc_F1BB"], ["call~FOO", "jmp~FOO"]], [0, 0, 338, 0, 1, 2, 0, 2, 24, 20, 0.0168959814502242, ["call    memcpy_lowcase", "jmp     loc_F1BB"], ["call~FOO", "jmp~FOO"]], [2, 1, 338, 3, 0, 8, 0, 0, 22, 26, 0.0, ["mov     eax, r8d", "sar     eax, 7", "sub     eax, r13d", "imul    eax, 190h", "cmp     esi, eax", "setz    al", "movzx   eax, al", "add     eax, 16Dh"], ["mov~eax,r8d", "sar~eax,0", "sub~eax,r13d", "imul~eax,,<STR>", "cmp~esi,eax", "setz~al", "movzx~eax,al", "add~eax,0"]], [5, 0, 338, 3, 0, 12, 0, 1, 21, 26, 0.00284725418989651, ["mov     r8d, 51EB851Fh", "mov     eax, esi", "mov     r13d, esi", "imul    r8d", "sar     r13d, 1Fh", "mov     eax, 16Eh", "mov     r8d, edx", "sar     edx, 5", "sub     edx, r13d", "imul    edx, 64h", "cmp     esi, edx", "jnz     short loc_F9DE"], ["mov~r8d,0", "mov~eax,esi", "mov~r13d,esi", "imul~,r8d", "sar~r13d,0", "mov~eax,0", "mov~r8d,edx", "sar~edx,0", "sub~edx,r13d", "imul~edx,,0", "cmp~esi,edx", "jnz~FOO"]], [1, 0, 338, 0, 1, 5, 0, 2, 22, 20, 0.0014278894515199563, ["mov     esi, 30h ; '0'; c", "mov     rdi, rax; s", "call    _memset", "mov     [rsp+4F8h+dest], rbx", "jmp     loc_F440"], ["mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~<TAG>,rbx", "jmp~FOO"]], [0, 1, 338, 0, 1, 4, 0, 1, 22, 20, 0.0014278894515199563, ["mov     rdi, [rsp+4F8h+dest]; s", "mov     esi, 20h ; ' '; c", "call    _memset", "mov     [rsp+4F8h+dest], rbx"], ["mov~rdi,<TAG>", "mov~esi,<STR>", "call~FOO", "mov~<TAG>,rbx"]], [0, 0, 338, 0, 0, 3, 0, 1, 19, 25, 0.003614478372802755, ["mov     rax, [rsp+4F8h+tp]", "mov     esi, [rax+0Ch]", "jmp     do_number_spacepad"], ["mov~rax,[rsp+0]", "mov~esi,[rax+0]", "jmp~FOO"]], [3, 0, 338, 3, 0, 9, 0, 0, 18, 20, 0.022165674958370973, ["sub     ebp, 1; jumptable 000000000000E5C4 case 116", "mov     r12d, 0", "mov     rax, [rsp+4F8h+maxsize]", "cmovns  r12d, ebp", "add     r12d, 1", "movsxd  r12, r12d", "sub     rax, i", "cmp     r12, rax", "jnb     loc_E4E5"], ["sub~ebp,0", "mov~r12d,0", "mov~rax,[rsp+0]", "cmovns~r12d,ebp", "add~r12d,0", "movsxd~r12,r12d", "sub~rax,i", "cmp~r12,rax", "jnb~FOO"]], [5, 0, 338, 7, 0, 18, 0, 1, 21, 25, 0.018635022931478354, ["add     r9d, eax", "mov     edx, 92492493h", "mov     r13d, 0FFFFFFFFh", "mov     esi, r9d", "sub     esi, dword ptr [rsp+4F8h+subfmt]", "add     esi, 17Eh", "mov     eax, esi", "sub     r9d, esi", "imul    edx", "lea     eax, [rdx+rsi]", "mov     edx, esi", "sar     edx, 1Fh", "sar     eax, 2", "sub     eax, edx", "lea     edx, ds:0[rax*8]", "sub     edx, eax", "lea     esi, [r9+rdx+3]", "jmp     loc_EAC4"], ["add~r9d,eax", "mov~edx,0", "mov~r13d,0", "mov~esi,r9d", "sub~esi,[word ptr [rsp+0]", "add~esi,0", "mov~eax,esi", "sub~r9d,esi", "imul~,edx", "lea~eax,<TAG>", "mov~edx,esi", "sar~edx,0", "sar~eax,0", "sub~eax,edx", "lea~edx,<TAG>", "sub~edx,eax", "lea~esi,[r9+0]", "jmp~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 20, 20, 0.011346393193869026, ["test    ebp, ebp", "jle     short loc_F24F"], ["test~ebp,ebp", "jle~FOO"]], [2, 0, 338, 0, 0, 3, 1, 1, 20, 26, 0.02140555470308424, ["test    sil, 3", "mov     eax, 16Dh", "jnz     short loc_EA7D"], ["test~sil,0", "mov~eax,0", "jnz~FOO"]], [1, 0, 338, 0, 0, 4, 0, 1, 21, 21, 0.00569450837979302, ["movsxd  rdx, ebp; n", "cmp     r11d, 30h ; '0'", "lea     modifier, [rax+rdx]", "jz      loc_FB5B"], ["movsxd~rdx,ebp", "cmp~r11d,0", "lea~modifier,<TAG>", "jz~FOO"]], [3, 0, 338, 1, 0, 9, 1, 1, 23, 23, 0.031524389204303276, ["mov     eax, 0FFFFF894h", "lea     esi, [rdi+year_adjust+76Ch]", "mov     byte ptr [rsp+4F8h+subfmt], 0", "sub     eax, r13d", "mov     r9d, 4", "cmp     edi, eax", "setl    r8b", "xor     edi, edi", "jmp     do_number_body"], ["mov~eax,0", "lea~esi,[rdi+0]", "mov~[yte ptr [rsp+0],0", "sub~eax,r13d", "mov~r9d,0", "cmp~edi,eax", "setl~r8b", "xor~edi,edi", "jmp~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 22, 24, 0.04299865309532334, ["cmp     cl, 47h ; 'G'", "jz      loc_FA20"], ["cmp~cl,0", "jz~FOO"]], [0, 1, 338, 0, 1, 4, 0, 1, 22, 20, 0.0014278894515199563, ["mov     rdi, [rsp+4F8h+dest]; s", "mov     esi, 20h ; ' '; c", "call    _memset", "mov     [rsp+4F8h+dest], rbx"], ["mov~rdi,<TAG>", "mov~esi,<STR>", "call~FOO", "mov~<TAG>,rbx"]], [1, 0, 338, 0, 0, 2, 0, 1, 23, 25, 0.015165464682113446, ["cmp     r11d, 5Fh ; '_'", "jz      loc_F72A"], ["cmp~r11d,0", "jz~FOO"]], [0, 0, 338, 0, 0, 3, 0, 0, 24, 24, 0.011968697253337424, ["movsxd  rdx, r9d", "cmp     rdx, rax", "jnb     loc_E4E5"], ["movsxd~rdx,r9d", "cmp~rdx,rax", "jnb~FOO"]], [5, 0, 338, 3, 0, 13, 0, 1, 21, 26, 0.00284725418989651, ["mov     r13d, 51EB851Fh", "mov     eax, esi", "imul    r13d", "mov     eax, esi", "sar     eax, 1Fh", "mov     dword ptr [rsp+4F8h+padding], eax", "mov     r13d, edx", "sar     edx, 5", "sub     edx, eax", "mov     eax, 16Eh", "imul    edx, 64h", "cmp     esi, edx", "jnz     short loc_EA7D"], ["mov~r13d,0", "mov~eax,esi", "imul~,r13d", "mov~eax,esi", "sar~eax,0", "mov~[word ptr [rsp+0],eax", "mov~r13d,edx", "sar~edx,0", "sub~edx,eax", "mov~eax,0", "imul~edx,,0", "cmp~esi,edx", "jnz~FOO"]], [1, 0, 338, 0, 1, 5, 0, 2, 22, 20, 0.0014278894515199563, ["mov     esi, 30h ; '0'; c", "mov     rdi, rax; s", "call    _memset", "mov     [rsp+4F8h+dest], rbx", "jmp     loc_F24F"], ["mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~<TAG>,rbx", "jmp~FOO"]], [0, 0, 338, 0, 0, 2, 0, 1, 25, 23, 0.011900499548190203, ["movsxd  r13, r8d", "jmp     loc_F554"], ["movsxd~r13,r8d", "jmp~FOO"]], [2, 1, 338, 3, 0, 8, 0, 0, 22, 26, 0.0, ["sar     r13d, 7", "mov     eax, r13d", "sub     eax, dword ptr [rsp+4F8h+padding]", "imul    eax, 190h", "cmp     esi, eax", "setz    al", "movzx   eax, al", "add     eax, 16Dh"], ["sar~r13d,0", "mov~eax,r13d", "sub~eax,[word ptr [rsp+0]", "imul~eax,,<STR>", "cmp~esi,eax", "setz~al", "movzx~eax,al", "add~eax,0"]], [1, 0, 338, 0, 0, 5, 2, 1, 20, 20, 0.004778101716877227, ["mov     eax, 2520h", "xor     r8d, r8d", "xor     r9d, r9d", "mov     word ptr [rsp+4F8h+ufmt], ax", "jmp     loc_EB64"], ["mov~eax,0", "xor~r8d,r8d", "xor~r9d,r9d", "mov~[ord ptr [rsp+0],ax", "jmp~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 19, 21, 0.01029785347723049, ["cmp     ebx, 45h ; 'E'", "jz      loc_FA66"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 338, 0, 1, 6, 0, 2, 23, 20, 0.0014278894515199563, ["mov     esi, 30h ; '0'; c", "mov     rdi, rax; s", "call    _memset", "mov     [rsp+4F8h+dest], rbp", "mov     r10, [rsp+4F8h+padding]", "jmp     loc_F6D4"], ["mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~<TAG>,rbp", "mov~r10,[rsp+0]", "jmp~FOO"]], [1, 0, 338, 0, 0, 6, 0, 1, 22, 21, 0.00569450837979302, ["mov     r11d, dword ptr [rsp+4F8h+padding]", "movsxd  rdx, ebp; n", "mov     [rsp+4F8h+padding], r10", "lea     _delta, [rax+rdx]", "cmp     r11d, 30h ; '0'", "jz      loc_FA7E"], ["mov~r11d,[word ptr [rsp+0]", "movsxd~rdx,ebp", "mov~[rsp+0],r10", "lea~_delta,<TAG>", "cmp~r11d,0", "jz~FOO"]], [5, 0, 338, 5, 0, 18, 0, 1, 18, 24, 0.012039736529532469, ["mov     rax, [rsp+4F8h+tp]; jumptable 000000000000E5C4 case 117", "mov     edx, 92492493h", "mov     r9d, 1", "mov     eax, [rax+18h]", "lea     esi, [rax+6]", "mov     dword ptr [rsp+4F8h+subfmt], eax", "mov     eax, esi", "imul    edx", "lea     eax, [rdx+rsi]", "mov     edx, esi", "sar     edx, 1Fh", "sar     eax, 2", "sub     eax, edx", "lea     edx, ds:0[rax*8]", "sub     edx, eax", "sub     esi, edx", "add     esi, 1", "jmp     do_number"], ["mov~rax,[rsp+0]", "mov~edx,0", "mov~r9d,0", "mov~eax,[rax+0]", "lea~esi,[rax+0]", "mov~[word ptr [rsp+0],eax", "mov~eax,esi", "imul~,edx", "lea~eax,<TAG>", "mov~edx,esi", "sar~edx,0", "sar~eax,0", "sub~eax,edx", "lea~edx,<TAG>", "sub~edx,eax", "sub~esi,edx", "add~esi,0", "jmp~FOO"]], [5, 0, 338, 3, 0, 11, 0, 1, 24, 24, 0.0014747753738086713, ["mov     eax, esi", "mov     edx, 92492493h", "mov     r9d, 2", "imul    edx", "lea     eax, [rdx+days]", "sar     esi, 1Fh", "sar     eax, 2", "sub     eax, esi", "mov     esi, eax", "add     esi, 1", "jmp     do_number"], ["mov~eax,esi", "mov~edx,0", "mov~r9d,0", "imul~,edx", "lea~eax,<TAG>", "sar~esi,0", "sar~eax,0", "sub~eax,esi", "mov~esi,eax", "add~esi,0", "jmp~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 23, 25, 0.00863553441426696, ["cmp     cl, 67h ; 'g'", "jnz     loc_FA99"], ["cmp~cl,0", "jnz~FOO"]], [5, 0, 338, 7, 0, 19, 1, 0, 21, 25, 0.021456702981944655, ["sub     r9d, eax", "mov     edx, 92492493h", "mov     r13d, 1", "mov     esi, r9d", "sub     esi, dword ptr [rsp+4F8h+subfmt]", "add     esi, 17Eh", "mov     eax, esi", "sub     r9d, esi", "imul    edx", "lea     eax, [rdx+rsi]", "mov     edx, esi", "sar     edx, 1Fh", "sar     eax, 2", "sub     eax, edx", "lea     edx, ds:0[rax*8]", "sub     edx, eax", "lea     esi, [r9+rdx+3]", "test    esi, esi", "jns     short loc_EAC4"], ["sub~r9d,eax", "mov~edx,0", "mov~r13d,0", "mov~esi,r9d", "sub~esi,[word ptr [rsp+0]", "add~esi,0", "mov~eax,esi", "sub~r9d,esi", "imul~,edx", "lea~eax,<TAG>", "mov~edx,esi", "sar~edx,0", "sar~eax,0", "sub~eax,edx", "lea~edx,<TAG>", "sub~edx,eax", "lea~esi,[r9+0]", "test~esi,esi", "jns~FOO"]], [1, 0, 338, 0, 0, 1, 0, 0, 21, 24, 0.007629618263345438, ["shr     r8d, 1Fh"], ["shr~r8d,0"]], [10, 0, 338, 10, 0, 31, 0, 1, 20, 25, 0.04154092714780148, ["mov     r8, [rax+28h]", "mov     edx, 91A2B3C5h", "mov     edi, 88888889h", "mov     eax, r8d", "mov     r13d, r8d", "imul    edx", "mov     eax, r8d", "sar     r13d, 1Fh", "lea     esi, [rdx+diff]", "imul    edi", "sar     esi, 0Bh", "sub     esi, r13d", "lea     ecx, [rdx+diff]", "sar     ecx, 5", "sub     ecx, r13d", "mov     eax, ecx", "imul    edi", "mov     eax, ecx", "sar     eax, 1Fh", "lea     edi, [rdx+rcx]", "sar     edi, 5", "sub     edi, eax", "mov     eax, ecx", "imul    edi, 3Ch", "imul    ecx, 3Ch", "sub     eax, edi", "mov     edi, eax", "mov     eax, r8d", "sub     eax, ecx", "cmp     colons, 1", "jz      loc_FABD"], ["mov~r8,[rax+0]", "mov~edx,0", "mov~edi,0", "mov~eax,r8d", "mov~r13d,r8d", "imul~,edx", "mov~eax,r8d", "sar~r13d,0", "lea~esi,<TAG>", "imul~,edi", "sar~esi,0", "sub~esi,r13d", "lea~ecx,<TAG>", "sar~ecx,0", "sub~ecx,r13d", "mov~eax,ecx", "imul~,edi", "mov~eax,ecx", "sar~eax,0", "lea~edi,<TAG>", "sar~edi,0", "sub~edi,eax", "mov~eax,ecx", "imul~edi,,0", "imul~ecx,,0", "sub~eax,edi", "mov~edi,eax", "mov~eax,r8d", "sub~eax,ecx", "cmp~colons,0", "jz~FOO"]], [0, 0, 338, 0, 0, 2, 1, 0, 22, 25, 0.0, ["mov     esi, r8d", "xor     r13d, r13d"], ["mov~esi,r8d", "xor~r13d,r13d"]], [4, 0, 338, 1, 0, 9, 1, 1, 19, 23, 0.011383333617490452, ["mov     rax, [rsp+4F8h+tp]", "mov     byte ptr [rsp+4F8h+subfmt], 0", "mov     r9d, 3", "mov     esi, [rax+1Ch]", "cmp     esi, 0FFFFFFFFh", "setl    r8b", "add     esi, 1", "xor     edi, edi", "jmp     do_number_body"], ["mov~rax,[rsp+0]", "mov~[yte ptr [rsp+0],0", "mov~r9d,0", "mov~esi,[rax+0]", "cmp~esi,0", "setl~r8b", "add~esi,0", "xor~edi,edi", "jmp~FOO"]], [4, 0, 338, 2, 0, 6, 0, 1, 22, 23, 0.009117180706869213, ["imul    esi, 64h", "mov     byte ptr [rsp+4F8h+subfmt], 1", "mov     r9d, 6", "add     esi, edi", "mov     edi, 4", "jmp     do_number_body"], ["imul~esi,,0", "mov~[yte ptr [rsp+0],0", "mov~r9d,0", "add~esi,edi", "mov~edi,0", "jmp~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 25, 24, 0.002881353042470121, ["test    edi, edi", "jnz     tz_hh_mm"], ["test~edi,edi", "jnz~FOO"]], [1, 0, 338, 0, 0, 4, 0, 1, 19, 24, 0.0007927983223364534, ["mov     rax, [rsp+4F8h+tp]", "mov     r9d, 2", "mov     esi, [rax+0Ch]", "jmp     do_number"], ["mov~rax,[rsp+0]", "mov~r9d,0", "mov~esi,[rax+0]", "jmp~FOO"]], [1, 0, 338, 0, 0, 1, 0, 0, 29, 25, 0.0005200075017475662, ["mov     byte ptr [rsp+4F8h+subfmt], 2Bh ; '+'"], ["mov~[yte ptr [rsp+0],0"]], [1, 0, 338, 0, 0, 2, 0, 0, 19, 23, 0.005677458953506214, ["lea     rcx, [r14+2]", "mov     r9d, 1"], ["lea~rcx,[r14+0]", "mov~r9d,0"]], [0, 1, 338, 0, 0, 4, 0, 1, 18, 23, 0.016972703868514825, ["movzx   eax, byte ptr [r14+1]; jumptable 000000000000E5C4 case 58", "lea     rdx, [r14+1]", "cmp     al, 3Ah ; ':'", "jz      loc_FAEF"], ["movzx~eax,[yte ptr [r14+0]", "lea~rdx,[r14+0]", "cmp~al,<STR>", "jz~FOO"]], [2, 1, 338, 2, 0, 6, 0, 1, 20, 22, 0.008567336709119737, ["mov     rdx, rcx", "add     rcx, 1", "movzx   eax, byte ptr [rcx-1]", "add     colons, 1", "cmp     al, 3Ah ; ':'", "jnz     loc_EE47"], ["mov~rdx,rcx", "add~rcx,0", "movzx~eax,[yte ptr [rcx-1]+0]", "add~colons,0", "cmp~al,<STR>", "jnz~FOO"]], [0, 0, 338, 0, 0, 1, 0, 1, 21, 23, 0.0, ["jmp     short loc_FAF9"], ["jmp~FOO"]], [8, 0, 338, 9, 0, 24, 0, 0, 24, 24, 0.004322029563705181, ["mov     esi, 51EB851Fh", "mov     eax, edi", "mov     ecx, edi", "imul    esi", "mov     r9d, 2", "mov     eax, edx", "mov     edx, edi", "sar     edx, 1Fh", "sar     eax, 5", "sub     eax, edx", "imul    eax, 64h", "sub     ecx, eax", "add     ecx, r13d", "mov     eax, ecx", "imul    esi", "mov     eax, ecx", "sar     eax, 1Fh", "mov     esi, edx", "sar     esi, 5", "sub     esi, eax", "imul    esi, 64h", "sub     ecx, esi", "mov     esi, ecx", "jns     short do_number"], ["mov~esi,0", "mov~eax,edi", "mov~ecx,edi", "imul~,esi", "mov~r9d,0", "mov~eax,edx", "mov~edx,edi", "sar~edx,0", "sar~eax,0", "sub~eax,edx", "imul~eax,,0", "sub~ecx,eax", "add~ecx,r13d", "mov~eax,ecx", "imul~,esi", "mov~eax,ecx", "sar~eax,0", "mov~esi,edx", "sar~esi,0", "sub~esi,eax", "imul~esi,,0", "sub~ecx,esi", "mov~esi,ecx", "jns~FOO"]], [0, 0, 338, 0, 0, 3, 0, 1, 24, 23, 0.004083337595689905, ["movzx   eax, byte ptr [r14]", "mov     modifier, r14", "jmp     bad_format"], ["movzx~eax,<TAG>", "mov~modifier,r14", "jmp~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 23, 24, 0.01342642320085929, ["cmp     colons, 3", "jnz     loc_FB12"], ["cmp~colons,0", "jnz~FOO"]], [1, 0, 338, 0, 0, 4, 0, 1, 19, 24, 0.0007927983223364534, ["mov     rax, [rsp+4F8h+tp]", "mov     r9d, 1", "mov     esi, [rax+18h]", "jmp     do_number"], ["mov~rax,[rsp+0]", "mov~r9d,0", "mov~esi,[rax+0]", "jmp~FOO"]], [2, 0, 338, 2, 0, 8, 0, 0, 25, 24, 0.0, ["mov     eax, 0FFFFF894h", "mov     edx, ecx", "add     esi, 64h ; 'd'", "sub     eax, r13d", "neg     edx", "cmp     edi, eax", "cmovl   esi, edx", "nop     dword ptr [rax+rax+00000000h]"], ["mov~eax,0", "mov~edx,ecx", "add~esi,0", "sub~eax,r13d", "neg~edx", "cmp~edi,eax", "cmovl~esi,edx", "nop~[word ptr [rax+0]"]], [5, 0, 338, 4, 0, 13, 0, 1, 19, 24, 0.0007927983223364534, ["mov     rax, [rsp+4F8h+tp]", "mov     edx, 92492493h", "mov     r9d, 2", "mov     ecx, [rax+1Ch]", "sub     ecx, [rax+18h]", "add     ecx, 7", "mov     eax, ecx", "imul    edx", "lea     esi, [rdx+rcx]", "sar     ecx, 1Fh", "sar     esi, 2", "sub     esi, ecx", "jmp     do_number"], ["mov~rax,[rsp+0]", "mov~edx,0", "mov~r9d,0", "mov~ecx,[rax+0]", "sub~ecx,[rax+0]", "add~ecx,0", "mov~eax,ecx", "imul~,edx", "lea~esi,<TAG>", "sar~ecx,0", "sar~esi,0", "sub~esi,ecx", "jmp~FOO"]], [4, 0, 338, 2, 0, 7, 1, 1, 22, 23, 0.007433549861047176, ["imul    esi, 64h", "shr     r8d, 1Fh", "mov     byte ptr [rsp+4F8h+subfmt], 1", "mov     r9d, 5", "add     esi, edi", "xor     edi, edi", "jmp     do_number_body"], ["imul~esi,,0", "shr~r8d,0", "mov~[yte ptr [rsp+0],0", "mov~r9d,0", "add~esi,edi", "xor~edi,edi", "jmp~FOO"]], [0, 0, 338, 0, 0, 1, 0, 0, 21, 24, 0.03107257940770293, ["jb      loc_FB1E"], ["jb~FOO"]], [2, 0, 338, 0, 0, 5, 1, 0, 19, 23, 0.09963116407799479, ["mov     eax, esi", "xor     edi, edi", "mov     byte ptr [rsp+4F8h+subfmt], 0", "shr     eax, 1Fh", "mov     r8d, eax"], ["mov~eax,esi", "xor~edi,edi", "mov~[yte ptr [rsp+0],0", "shr~eax,0", "mov~r8d,eax"]], [1, 0, 338, 0, 0, 4, 0, 1, 19, 24, 0.0007927983223364534, ["mov     rax, [rsp+4F8h+tp]", "mov     r9d, 2", "mov     esi, [rax+8]", "jmp     short do_number"], ["mov~rax,[rsp+0]", "mov~r9d,0", "mov~esi,[rax+0]", "jmp~FOO"]], [1, 0, 338, 0, 0, 3, 0, 1, 19, 24, 0.0007927983223364534, ["mov     esi, [rsp+4F8h+hour12]", "mov     r9d, 2", "jmp     short do_number"], ["mov~esi,[rsp+0]", "mov~r9d,0", "jmp~FOO"]], [1, 0, 338, 0, 0, 4, 0, 1, 19, 24, 0.0007927983223364534, ["mov     rax, [rsp+4F8h+tp]", "mov     r9d, 2", "mov     esi, [rax+4]", "jmp     do_number"], ["mov~rax,[rsp+0]", "mov~r9d,0", "mov~esi,[rax+0]", "jmp~FOO"]], [0, 0, 338, 0, 0, 2, 0, 1, 22, 24, 0.01142311561215965, ["mov     r9d, ebp", "jmp     do_number"], ["mov~r9d,ebp", "jmp~FOO"]], [2, 0, 338, 0, 0, 3, 0, 1, 20, 24, 0.016606141203348506, ["cmp     r11d, 30h ; '0'", "mov     r9d, 2", "jz      do_number"], ["cmp~r11d,0", "mov~r9d,0", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 21, 24, 0.00284725418989651, ["cmp     r11d, 2Dh ; '-'", "jz      do_number"], ["cmp~r11d,0", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 22, 24, 0.0, ["mov     r11d, 5Fh ; '_'", "jmp     do_number"], ["mov~r11d,0", "jmp~FOO"]], [6, 0, 338, 6, 0, 26, 0, 1, 19, 24, 0.0007927983223364534, ["mov     rdi, [rsp+4F8h+tp]", "mov     ecx, 92492493h", "mov     r9d, 2", "mov     eax, [rdi+18h]", "lea     esi, [rax+6]", "mov     dword ptr [rsp+4F8h+subfmt], eax", "mov     eax, esi", "imul    ecx", "lea     eax, [rdx+rsi]", "mov     edx, esi", "sar     edx, 1Fh", "sar     eax, 2", "sub     eax, edx", "lea     edx, ds:0[rax*8]", "sub     edx, eax", "mov     eax, edx", "mov     edx, [rdi+1Ch]", "sub     eax, esi", "lea     edi, [rax+rdx+7]", "mov     eax, edi", "imul    ecx", "lea     esi, [rdx+rdi]", "sar     edi, 1Fh", "sar     esi, 2", "sub     esi, edi", "jmp     do_number"], ["mov~rdi,[rsp+0]", "mov~ecx,0", "mov~r9d,0", "mov~eax,[rdi+0]", "lea~esi,[rax+0]", "mov~[word ptr [rsp+0],eax", "mov~eax,esi", "imul~,ecx", "lea~eax,<TAG>", "mov~edx,esi", "sar~edx,0", "sar~eax,0", "sub~eax,edx", "lea~edx,<TAG>", "sub~edx,eax", "mov~eax,edx", "mov~edx,[rdi+0]", "sub~eax,esi", "lea~edi,[rax+0]", "mov~eax,edi", "imul~,ecx", "lea~esi,<TAG>", "sar~edi,0", "sar~esi,0", "sub~esi,edi", "jmp~FOO"]], [5, 0, 338, 4, 0, 16, 0, 0, 19, 24, 0.0035036571019385196, ["mov     rax, [rsp+4F8h+tp]", "mov     edx, 51EB851Fh", "mov     r9d, 2", "mov     ecx, [rax+14h]", "mov     eax, ecx", "imul    edx", "mov     eax, ecx", "sar     eax, 1Fh", "mov     esi, edx", "sar     esi, 5", "sub     esi, eax", "mov     eax, ecx", "imul    esi, 64h", "sub     eax, esi", "mov     esi, eax", "jns     do_number"], ["mov~rax,[rsp+0]", "mov~edx,0", "mov~r9d,0", "mov~ecx,[rax+0]", "mov~eax,ecx", "imul~,edx", "mov~eax,ecx", "sar~eax,0", "mov~esi,edx", "sar~esi,0", "sub~esi,eax", "mov~eax,ecx", "imul~esi,,0", "sub~eax,esi", "mov~esi,eax", "jns~FOO"]], [2, 0, 338, 1, 0, 5, 0, 1, 20, 24, 0.0, ["neg     eax", "add     esi, 64h ; 'd'", "cmp     ecx, 0FFFFF893h", "cmovle  esi, eax", "jmp     do_number"], ["neg~eax", "add~esi,0", "cmp~ecx,0", "cmovle~esi,eax", "jmp~FOO"]], [1, 0, 338, 0, 0, 4, 0, 1, 19, 24, 0.0007927983223364534, ["mov     rax, [rsp+4F8h+tp]", "mov     r9d, 2", "mov     esi, [rax]", "jmp     do_number"], ["mov~rax,[rsp+0]", "mov~r9d,0", "mov~esi,<TAG>", "jmp~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 20, 22, 0.20021993759909978, ["cmp     ebx, 4Fh ; 'O'", "jnz     loc_EBE4"], ["cmp~ebx,0", "jnz~FOO"]], [2, 0, 338, 0, 0, 3, 0, 1, 26, 23, 0.0014278894515199563, ["mov     byte ptr [rsp+4F8h+subfmt], 1", "mov     r9d, 3", "jmp     do_number_body"], ["mov~[yte ptr [rsp+0],0", "mov~r9d,0", "jmp~FOO"]], [4, 0, 338, 1, 0, 9, 1, 1, 19, 23, 0.011383333617490452, ["mov     rax, [rsp+4F8h+tp]", "mov     byte ptr [rsp+4F8h+subfmt], 0", "mov     r9d, 2", "mov     esi, [rax+10h]", "cmp     esi, 0FFFFFFFFh", "setl    r8b", "add     esi, 1", "xor     edi, edi", "jmp     do_number_body"], ["mov~rax,[rsp+0]", "mov~[yte ptr [rsp+0],0", "mov~r9d,0", "mov~esi,[rax+0]", "cmp~esi,0", "setl~r8b", "add~esi,0", "xor~edi,edi", "jmp~FOO"]], [0, 0, 338, 0, 0, 3, 1, 1, 21, 21, 0.12596116140691865, ["test    r8b, r8b", "mov     ecx, r12d", "jnz     loc_EC48"], ["test~r8b,r8b", "mov~ecx,r12d", "jnz~FOO"]], [1, 0, 338, 0, 0, 3, 1, 0, 20, 20, 0.13426423200859292, ["mov     esi, 2520h", "xor     r8d, r8d", "mov     word ptr [rsp+4F8h+ufmt], si"], ["mov~esi,0", "xor~r8d,r8d", "mov~[ord ptr [rsp+0],si"]], [1, 1, 343, 1, 0, 22, 1, 1, 0, 20, 0.0, ["push    r15", "push    r14", "mov     r14, format", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 4C8h", "mov     rax, [tp_0+30h]", "mov     [rsp+4F8h+dest], s", "mov     esi, [tp_0+8]", "mov     format, fs:28h", "mov     [rsp+4F8h+var_40], format", "xor     ecx, ecx", "mov     [rsp+4F8h+maxsize], maxsize_0", "mov     [rsp+4F8h+tp], tp_0", "cmp     esi, 0Ch", "mov     [rsp+4F8h+ut], r9d", "mov     [rsp+4F8h+to_uppcase], dil", "mov     [rsp+4F8h+hour12], esi", "mov     [rsp+4F8h+zone], rax", "jle     loc_E5D0"], ["push~r15", "push~r14", "mov~r14,format", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,[tp_0+0]", "mov~<TAG>,s", "mov~esi,[tp_0+0]", "mov~format,<TAG>", "mov~[rsp+0],format", "xor~ecx,ecx", "mov~[rsp+0],maxsize_0", "mov~[rsp+0],tp_0", "cmp~esi,0", "mov~[rsp+0],r9d", "mov~[rsp+0],dil", "mov~[rsp+0],esi", "mov~[rsp+0],rax", "jle~FOO"]], [1, 0, 338, 1, 0, 6, 0, 1, 21, 19, 0.14538045794759005, ["mov     rax, [rsp+4F8h+var_4D0]", "mov     [rsp+4F8h+ufmt+2], bl", "mov     r12, r14", "mov     ebx, r9d", "add     rax, 3", "jmp     loc_E70B"], ["mov~rax,[rsp+0]", "mov~[rsp+0],bl", "mov~r12,r14", "mov~ebx,r9d", "add~rax,0", "jmp~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 20, 0, 0.0005754181371796839, ["xor     r9d, r9d", "jmp     loc_EB64"], ["xor~r9d,r9d", "jmp~FOO"]], [1, 0, 341, 1, 0, 2, 0, 0, 1, 19, 0.0014534635909501646, ["sub     esi, 0Ch", "mov     [rsp+4F8h+hour12], esi"], ["sub~esi,0", "mov~[rsp+0],esi"]], [1, 0, 338, 0, 0, 4, 0, 1, 21, 21, 0.00569450837979302, ["movsxd  rdx, ebp; n", "cmp     r11d, 30h ; '0'", "lea     modifier, [rax+rdx]", "jz      loc_FB71"], ["movsxd~rdx,ebp", "cmp~r11d,0", "lea~modifier,<TAG>", "jz~FOO"]], [0, 0, 340, 0, 0, 3, 1, 1, 2, 18, 0.008695207406270779, ["movzx   eax, byte ptr [format]", "test    al, al", "jz      loc_F715"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 341, 0, 0, 6, 1, 1, 1, 19, 0.0014534635909501646, ["mov     edi, [rsp+4F8h+hour12]", "mov     eax, 0Ch", "test    edi, edi", "cmovnz  eax, edi", "mov     [rsp+4F8h+hour12], eax", "jmp     loc_E380"], ["mov~edi,[rsp+0]", "mov~eax,0", "test~edi,edi", "cmovnz~eax,edi", "mov~[rsp+0],eax", "jmp~FOO"]], [2, 0, 338, 0, 1, 13, 1, 2, 21, 18, 0.21166010263754623, ["mov     [rax], cl", "lea     r13, [rsp+4F8h+ubuf]", "mov     rcx, [rsp+4F8h+tp]; tp", "mov     rdx, [rsp+4F8h+var_4D0]; format", "mov     byte ptr [rax+1], 0", "mov     esi, 400h; maxsize", "mov     rdi, r13; s", "mov     byte ptr [rsp+4F8h+padding], r10b", "mov     byte ptr [rsp+4F8h+subfmt], r8b", "mov     [rsp+4F8h+pad], r11d", "call    _strftime", "test    len, len", "jz      loc_E550"], ["mov~<TAG>,cl", "lea~r13,[rsp+0]", "mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~[yte ptr [rax+0],0", "mov~esi,0", "mov~rdi,r13", "mov~[yte ptr [rsp+0],r10b", "mov~[yte ptr [rsp+0],r8b", "mov~[rsp+0],r11d", "call~FOO", "test~len,len", "jz~FOO"]], [0, 0, 338, 0, 0, 2, 0, 0, 20, 19, 0.03143345893077356, ["mov     rax, [rsp+4F8h+u]", "mov     r12, r14"], ["mov~rax,[rsp+0]", "mov~r12,r14"]], [7, 0, 338, 5, 0, 24, 2, 1, 20, 30, 0.0026810222836001567, ["mov     rax, [rsp+4F8h+tp]", "mov     edx, 51EB851Fh", "mov     r9d, 2", "mov     ecx, [rax+14h]", "mov     eax, ecx", "mov     edi, ecx", "imul    edx", "mov     eax, edx", "mov     edx, ecx", "sar     edx, 1Fh", "sar     eax, 5", "sub     eax, edx", "lea     esi, [rax+13h]", "imul    eax, 64h", "sub     edi, eax", "mov     eax, edi", "shr     eax, 1Fh", "test    esi, esi", "setnle  dl", "and     eax, edx", "cmp     ecx, 0FFFFF894h", "setl    r8b", "sub     esi, eax", "jmp     loc_EBDD"], ["mov~rax,[rsp+0]", "mov~edx,0", "mov~r9d,0", "mov~ecx,[rax+0]", "mov~eax,ecx", "mov~edi,ecx", "imul~,edx", "mov~eax,edx", "mov~edx,ecx", "sar~edx,0", "sar~eax,0", "sub~eax,edx", "lea~esi,[rax+0]", "imul~eax,,0", "sub~edi,eax", "mov~eax,edi", "shr~eax,0", "test~esi,esi", "setnle~dl", "and~eax,edx", "cmp~ecx,0", "setl~r8b", "sub~esi,eax", "jmp~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 4, 16, 0.758563074352548, ["cmp     al, 3Fh ; '?'", "jg      short loc_E430"], ["cmp~al,0", "jg~FOO"]], [0, 0, 338, 0, 0, 4, 1, 1, 9, 17, 0.7560354969055291, ["movzx   eax, byte ptr [f+1]", "lea     r14, [f+1]", "test    al, al", "jnz     loc_E3B2"], ["movzx~eax,[yte ptr [f+0]", "lea~r14,[f+0]", "test~al,al", "jnz~FOO"]], [1, 0, 338, 0, 0, 6, 1, 0, 3, 17, 0.011320819054438817, ["lea     rdi, [rsp+4F8h+ufmt]", "lea     rsi, [rsp+4F8h+ufmt+2]", "mov     [rsp+4F8h+format_end], 0", "xor     r15d, r15d", "mov     [rsp+4F8h+var_4D0], rdi", "mov     [rsp+4F8h+u], rsi"], ["lea~rdi,[rsp+0]", "lea~rsi,[rsp+0]", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],rdi", "mov~[rsp+0],rsi"]], [1, 0, 338, 0, 0, 2, 0, 1, 5, 15, 0.7012002796105911, ["cmp     al, 26h ; '&'", "jge     loc_E528"], ["cmp~al,0", "jge~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 6, 14, 0.6890184645286686, ["cmp     al, 23h ; '#'", "jle     loc_E518"], ["cmp~al,0", "jle~FOO"]], [1, 0, 338, 0, 1, 6, 0, 2, 23, 20, 0.0014278894515199563, ["mov     esi, 30h ; '0'; c", "mov     rdi, rax; s", "call    _memset", "movzx   ecx, byte ptr [r14]", "mov     [rsp+4F8h+dest], rbx", "jmp     loc_EEB8"], ["mov~esi,0", "mov~rdi,rax", "call~FOO", "movzx~ecx,<TAG>", "mov~<TAG>,rbx", "jmp~FOO"]], [1, 0, 338, 0, 0, 4, 0, 1, 22, 21, 0.00569450837979302, ["movsxd  rdx, ebp; n", "cmp     r11d, 30h ; '0'", "lea     rbx, [rax+rdx]", "jz      loc_FBB2"], ["movsxd~rdx,ebp", "cmp~r11d,0", "lea~rbx,<TAG>", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 7, 13, 0.6831875607385811, ["cmp     al, 25h ; '%'", "jnz     short loc_E448"], ["cmp~al,0", "jnz~FOO"]], [0, 0, 338, 0, 0, 3, 2, 0, 8, 12, 0.6825737813922561, ["movzx   r10d, [rsp+4F8h+to_uppcase]", "xor     r8d, r8d", "xor     r11d, r11d"], ["movzx~r10d,[rsp+0]", "xor~r8d,r8d", "xor~r11d,r11d"]], [3, 0, 338, 1, 0, 6, 0, 0, 20, 30, 0.0026810222836001567, ["mov     rax, [rsp+4F8h+tp]", "mov     r9d, 4", "mov     esi, [rax+14h]", "cmp     esi, 0FFFFF894h", "setl    r8b", "add     esi, 76Ch"], ["mov~rax,[rsp+0]", "mov~r9d,0", "mov~esi,[rax+0]", "cmp~esi,0", "setl~r8b", "add~esi,0"]], [1, 0, 338, 0, 0, 2, 0, 1, 23, 25, 0.0603805431947215, ["cmp     r11d, 5Fh ; '_'", "jz      loc_F72F"], ["cmp~r11d,0", "jz~FOO"]], [0, 0, 338, 3, 0, 8, 1, 1, 22, 24, 0.09092459038753345, ["lea     rcx, [r13+17h]", "lea     r8d, [digits_0-1]", "mov     rax, [rsp+4F8h+maxsize]", "sub     rcx, rbx", "sub     r8d, ecx", "sub     rax, i", "test    r8d, r8d", "jle     loc_F7B1"], ["lea~rcx,[r13+0]", "lea~r8d,[digits_0-1]+0]", "mov~rax,[rsp+0]", "sub~rcx,rbx", "sub~r8d,ecx", "sub~rax,i", "test~r8d,r8d", "jle~FOO"]], [0, 0, 338, 0, 0, 2, 0, 1, 19, 25, 0.003614478372802755, ["mov     esi, [rsp+4F8h+hour12]", "jmp     do_number_spacepad"], ["mov~esi,[rsp+0]", "jmp~FOO"]], [2, 0, 338, 1, 0, 6, 0, 1, 9, 11, 0.6914224336351081, ["add     r14, 1", "movsx   ebx, byte ptr [f]", "cmp     bl, 30h ; '0'", "mov     ecx, ebx", "mov     r12d, ebx", "jz      short loc_E421"], ["add~r14,0", "movsx~ebx,<TAG>", "cmp~bl,0", "mov~ecx,ebx", "mov~r12d,ebx", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 12, 12, 4.6885922288714986e-05, ["mov     r8d, 1", "jmp     short loc_E3D6"], ["mov~r8d,0", "jmp~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 12, 12, 4.6885922288714986e-05, ["mov     r10d, 1", "jmp     short loc_E3D6"], ["mov~r10d,0", "jmp~FOO"]], [0, 0, 338, 0, 0, 2, 0, 1, 10, 12, 0.00011934598400763814, ["mov     r11d, ebx", "jmp     short loc_E3D6"], ["mov~r11d,ebx", "jmp~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 21, 28, 0.08254479736756858, ["test    r8b, r8b", "jnz     short loc_EC48"], ["test~r8b,r8b", "jnz~FOO"]], [1, 0, 338, 0, 0, 2, 1, 0, 21, 29, 0.008251922322813837, ["xor     edi, edi", "mov     byte ptr [rsp+4F8h+subfmt], 0"], ["xor~edi,edi", "mov~[yte ptr [rsp+0],0"]], [0, 0, 338, 0, 0, 1, 0, 1, 10, 10, 0.6886263277240721, ["jg      short loc_E400"], ["jg~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 11, 9, 0.34289379912365947, ["cmp     bl, 23h ; '#'", "jnz     short loc_E418"], ["cmp~bl,0", "jnz~FOO"]], [1, 0, 338, 0, 1, 9, 0, 2, 30, 24, 0.0014278894515199563, ["mov     esi, 30h ; '0'; c", "mov     rdi, rax; s", "call    _memset", "mov     [rsp+4F8h+dest], rbp", "mov     rcx, [rsp+4F8h+padding]", "mov     r11d, [rsp+4F8h+pad]", "mov     r9d, [rsp+4F8h+digits]", "movzx   r10d, [rsp+4F8h+var_499]", "jmp     loc_F53C"], ["mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~<TAG>,rbp", "mov~rcx,[rsp+0]", "mov~r11d,[rsp+0]", "mov~r9d,[rsp+0]", "movzx~r10d,[rsp+0]", "jmp~FOO"]], [1, 0, 338, 0, 0, 8, 0, 1, 29, 25, 0.00569450837979302, ["movsxd  rdx, ebp; n", "cmp     r11d, 30h ; '0'", "mov     [rsp+4F8h+var_499], r10b", "lea     _delta, [rax+rdx]", "mov     [rsp+4F8h+digits], r9d", "mov     [rsp+4F8h+pad], r11d", "mov     [rsp+4F8h+padding], rcx", "jz      loc_FBCC"], ["movsxd~rdx,ebp", "cmp~r11d,0", "mov~[rsp+0],r10b", "lea~_delta,<TAG>", "mov~[rsp+0],r9d", "mov~[rsp+0],r11d", "mov~[rsp+0],rcx", "jz~FOO"]], [1, 0, 338, 0, 0, 4, 0, 1, 22, 27, 0.08459072852198524, ["lea     r13, [rsp+4F8h+ubuf]", "mov     r12d, 0CCCCCCCDh", "lea     modifier, [r13+17h]", "jmp     short loc_EC2C"], ["lea~r13,[rsp+0]", "mov~r12d,0", "lea~modifier,[r13+0]", "jmp~FOO"]], [0, 0, 338, 0, 0, 2, 0, 1, 22, 28, 0.0006137793463249961, ["neg     esi", "jmp     short loc_EBE9"], ["neg~esi", "jmp~FOO"]], [0, 0, 338, 0, 0, 2, 0, 1, 21, 25, 0.005668934240362812, ["mov     esi, [rsp+4F8h+number_value]", "jmp     loc_ECA7"], ["mov~esi,[rsp+0]", "jmp~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 20, 26, 0.011354917907012428, ["cmp     ebp, 8", "jg      loc_FBF7"], ["cmp~ebp,0", "jg~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 11, 9, 0.34289379912365947, ["cmp     bl, 5Eh ; '^'", "jnz     loc_E588"], ["cmp~bl,0", "jnz~FOO"]], [1, 1, 338, 1, 0, 2, 0, 0, 24, 25, 0.04091436073176138, ["mov     byte ptr [rbx-1], 3Ah ; ':'", "sub     rbx, 2"], ["mov~[yte ptr [rbx-1]+0],<STR>", "sub~rbx,0"]], [1, 0, 338, 0, 0, 3, 1, 1, 23, 26, 0.08466745094027586, ["test    dil, 1", "lea     rcx, [bufp-1]", "jnz     short loc_EC00"], ["test~dil,0", "lea~rcx,[bufp-1]+0]", "jnz~FOO"]], [3, 0, 338, 3, 0, 9, 0, 0, 18, 20, 0.022165674958370973, ["sub     ebp, 1; jumptable 000000000000E5C4 case 110", "mov     r12d, 0", "mov     rax, [rsp+4F8h+maxsize]", "cmovns  r12d, ebp", "add     r12d, 1", "movsxd  r12, r12d", "sub     rax, i", "cmp     r12, rax", "jnb     loc_E4E5"], ["sub~ebp,0", "mov~r12d,0", "mov~rax,[rsp+0]", "cmovns~r12d,ebp", "add~r12d,0", "movsxd~r12,r12d", "sub~rax,i", "cmp~r12,rax", "jnb~FOO"]], [1, 0, 338, 0, 0, 4, 1, 1, 19, 1, 0.0348476065447064, ["mov     r9d, 2520h", "test    ebx, ebx", "mov     word ptr [rsp+4F8h+ufmt], r9w", "jnz     loc_FC08"], ["mov~r9d,0", "test~ebx,ebx", "mov~[ord ptr [rsp+0],r9w", "jnz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 12, 8, 0.34000818372461766, ["cmp     bl, 2Dh ; '-'", "jnz     loc_E591"], ["cmp~bl,0", "jnz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 12, 8, 0.34000818372461766, ["cmp     bl, 5Fh ; '_'", "jz      loc_E421"], ["cmp~bl,0", "jz~FOO"]], [3, 0, 338, 4, 0, 13, 1, 1, 25, 24, 0.08471859921913627, ["mov     eax, esi", "sar     edi, 1", "mul     r12d", "shr     edx, 3", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     esi, eax", "mov     eax, edi", "add     esi, 30h ; '0'", "or      eax, edx", "mov     [rcx-1], sil", "mov     esi, edx", "jz      do_number_sign_and_padding"], ["mov~eax,esi", "sar~edi,0", "mul~,r12d", "shr~edx,0", "lea~eax,<TAG>", "add~eax,eax", "sub~esi,eax", "mov~eax,edi", "add~esi,0", "or~eax,edx", "mov~[rcx-1]+0],sil", "mov~esi,edx", "jz~FOO"]], [0, 0, 338, 0, 0, 4, 0, 1, 24, 25, 0.04091436073176138, ["mov     rax, rcx", "mov     rcx, bufp", "mov     bufp, rax", "jmp     short loc_EC08"], ["mov~rax,rcx", "mov~rcx,bufp", "mov~bufp,rax", "jmp~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 5, 22, 0.05452406526520382, ["cmp     al, 41h ; 'A'", "jl      short loc_E448"], ["cmp~al,0", "jl~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 6, 21, 0.0055495882563551735, ["cmp     al, 5Fh ; '_'", "jle     loc_E528"], ["cmp~al,0", "jle~FOO"]], [1, 0, 338, 0, 0, 3, 0, 0, 7, 21, 0.00015344483658124902, ["lea     edx, [rax-61h]", "cmp     dl, 1Dh", "jbe     loc_E528"], ["lea~edx,[rax-61h]+0]", "cmp~dl,0", "jbe~FOO"]], [1, 0, 338, 0, 0, 4, 0, 1, 6, 23, 0.04738035565103234, ["cmp     [rsp+4F8h+format_end], 0", "mov     rax, qword ptr cs:mbstate_zero.__count", "mov     qword ptr [rsp+4F8h+mbstate.__count], rax", "jz      loc_E6B8"], ["cmp~[rsp+0],0", "mov~rax,<TAG>", "mov~[word ptr [rsp+0],rax", "jz~FOO"]], [1, 0, 338, 0, 0, 3, 0, 1, 8, 21, 0.00015344483658124902, ["lea     edx, [rax-8]", "cmp     dl, 5", "ja      loc_E448"], ["lea~edx,[rax-8]+0]", "cmp~dl,0", "ja~FOO"]], [0, 0, 338, 0, 0, 4, 1, 1, 26, 23, 0.08467597565341926, ["cmp     r9d, ebp", "cmovl   r9d, ebp", "test    r8b, r8b", "jnz     loc_F5B0"], ["cmp~r9d,ebp", "cmovl~r9d,ebp", "test~r8b,r8b", "jnz~FOO"]], [0, 0, 338, 1, 0, 5, 1, 1, 7, 22, 0.04741445450360595, ["mov     r13, [rsp+4F8h+format_end]", "xor     ebx, ebx", "lea     r12, [rsp+4F8h+mbstate]", "sub     r13, r14", "jmp     short loc_E4A3"], ["mov~r13,[rsp+0]", "xor~ebx,ebx", "lea~r12,[rsp+0]", "sub~r13,r14", "jmp~FOO"]], [0, 0, 338, 0, 1, 5, 0, 2, 7, 23, 0.0, ["mov     rdi, r14; s", "call    _strlen", "lea     rax, [r14+rax+1]", "mov     [rsp+4F8h+format_end], rax", "jmp     loc_E463"], ["mov~rdi,r14", "call~FOO", "lea~rax,[r14+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 9, 22, 0.011371967333299234, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_E6D0"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 338, 1, 1, 9, 2, 2, 8, 21, 0.04750822634818338, ["lea     rbp, [r14+len]", "mov     rdx, fsize", "xor     edi, edi; pwc", "sub     rdx, len; n", "mov     rcx, r12; p", "mov     rsi, rbp; s", "call    _mbrtowc", "test    rax, rax", "jnz     short loc_E480"], ["lea~rbp,<TAG>", "mov~rdx,fsize", "xor~edi,edi", "sub~rdx,len", "mov~rcx,r12", "mov~rsi,rbp", "call~FOO", "test~rax,rax", "jnz~FOO"]], [1, 0, 338, 0, 0, 3, 0, 0, 21, 26, 0.00284725418989651, ["mov     esi, [rsp+4F8h+number_value]", "mov     ecx, ebp", "mov     edi, 66666667h"], ["mov~esi,[rsp+0]", "mov~ecx,ebp", "mov~edi,0"]], [3, 0, 338, 0, 0, 4, 0, 1, 21, 24, 0.11008814553390278, ["cmp     r11d, 2Dh ; '-'", "mov     byte ptr [rsp+4F8h+subfmt], 2Dh ; '-'", "mov     r8d, 2Dh ; '-'", "jnz     loc_F482"], ["cmp~r11d,0", "mov~[yte ptr [rsp+0],0", "mov~r8d,0", "jnz~FOO"]], [0, 0, 338, 1, 1, 5, 1, 2, 11, 21, 0.001449201234378463, ["mov     rdi, r12; ps", "add     len, rax", "call    _mbsinit", "test    eax, eax", "jnz     short loc_E4BF"], ["mov~rdi,r12", "add~len,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [4, 0, 338, 3, 0, 9, 0, 1, 22, 25, 0.002864303616183315, ["mov     eax, esi", "add     ecx, 1", "sar     esi, 1Fh", "imul    edi", "sar     edx, 2", "sub     edx, esi", "cmp     ecx, 9", "mov     esi, edx", "jnz     short loc_EC91"], ["mov~eax,esi", "add~ecx,0", "sar~esi,0", "imul~,edi", "sar~edx,0", "sub~edx,esi", "cmp~ecx,0", "mov~esi,edx", "jnz~FOO"]], [1, 0, 338, 0, 0, 1, 0, 0, 18, 4, 0.004249569501986258, ["mov     eax, 1; jumptable 000000000000E5C4 case 80"], ["mov~eax,0"]], [0, 0, 338, 0, 0, 3, 0, 0, 24, 24, 0.02575742076279133, ["movsxd  rdx, r9d", "cmp     rdx, rax", "jnb     loc_E4E5"], ["movsxd~rdx,r9d", "cmp~rdx,rax", "jnb~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 19, 3, 0.01138901675958604, ["test    r8b, r8b", "jnz     loc_F71D"], ["test~r8b,r8b", "jnz~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 18, 4, 0.004249569501986258, ["xor     eax, eax; jumptable 000000000000E5C4 case 112", "jmp     loc_ECB4"], ["xor~eax,eax", "jmp~FOO"]], [1, 0, 338, 0, 0, 3, 0, 1, 20, 2, 0.004275143641416466, ["mov     r8d, eax", "mov     ecx, 70h ; 'p'", "jmp     underlying_strftime"], ["mov~r8d,eax", "mov~ecx,0", "jmp~FOO"]], [3, 0, 338, 2, 0, 7, 0, 0, 25, 23, 0.02572332191021772, ["sub     ebp, 1", "mov     edx, 0", "cmovns  edx, ebp", "add     edx, 1", "movsxd  rdx, edx", "cmp     rdx, rax", "jnb     loc_E4E5"], ["sub~ebp,0", "mov~edx,0", "cmovns~edx,ebp", "add~edx,0", "movsxd~rdx,edx", "cmp~rdx,rax", "jnb~FOO"]], [0, 0, 338, 0, 0, 2, 0, 0, 19, 25, 0.003614478372802755, ["mov     rax, [rsp+4F8h+tp]", "mov     esi, [rax+8]"], ["mov~rax,[rsp+0]", "mov~esi,[rax+0]"]], [2, 0, 338, 2, 0, 11, 1, 0, 9, 20, 0.04753380048761359, ["mov     eax, ebx", "mov     ebp, 0", "mov     rdx, [rsp+4F8h+maxsize]", "xor     eax, 0FFFFFFFFh", "movsxd  r12, ebx", "cmovns  ebp, eax", "add     ebp, ebx", "sub     rdx, i", "movsxd  rbp, ebp", "cmp     rbp, rdx", "jb      loc_E668"], ["mov~eax,ebx", "mov~ebp,0", "mov~rdx,[rsp+0]", "xor~eax,0", "movsxd~r12,ebx", "cmovns~ebp,eax", "add~ebp,ebx", "sub~rdx,i", "movsxd~rbp,ebp", "cmp~rbp,rdx", "jb~FOO"]], [0, 0, 338, 1, 1, 4, 0, 2, 10, 21, 0.0028302047636097043, ["mov     rdi, rbp; s", "call    _strlen", "add     len, rax", "jmp     loc_E4BF"], ["mov~rdi,rbp", "call~FOO", "add~len,rax", "jmp~FOO"]], [0, 0, 338, 1, 0, 6, 1, 1, 26, 22, 0.025706272483930915, ["mov     rax, [rsp+4F8h+dest]", "add     i, rdx", "movsxd  r13, r8d", "mov     r12, r14", "test    rax, rax", "jz      loc_F59D"], ["mov~rax,<TAG>", "add~i,rdx", "movsxd~r13,r8d", "mov~r12,r14", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 1, 0, 7, -1, 0.00528958450548139, ["xor     r15d, r15d"], ["xor~r15d,r15d"]], [1, 0, 338, 1, 0, 4, 0, 0, 6, 20, 0.023050824339760967, ["mov     rdx, [rsp+4F8h+maxsize]", "sub     rdx, i", "cmp     rdx, 1", "jbe     short loc_E4E5"], ["mov~rdx,[rsp+0]", "sub~rdx,i", "cmp~rdx,0", "jbe~FOO"]], [1, 0, 338, 3, 0, 11, 0, 0, 22, 20, 0.03585920583772356, ["lea     r14d, [len-1]", "mov     edx, ebp", "mov     eax, 0", "sub     edx, r14d", "cmovns  eax, edx", "add     eax, r14d", "movsxd  width, eax", "mov     rax, [rsp+4F8h+maxsize]", "sub     rax, i", "cmp     rbp, rax", "jnb     loc_E4E5"], ["lea~r14d,[len-1]+0]", "mov~edx,ebp", "mov~eax,0", "sub~edx,r14d", "cmovns~eax,edx", "add~eax,r14d", "movsxd~width,eax", "mov~rax,[rsp+0]", "sub~rax,i", "cmp~rbp,rax", "jnb~FOO"]], [2, 0, 338, 2, 0, 7, 0, 0, 19, 20, 0.019675037934973487, ["sub     ebp, 1", "cmovns  ebx, ebp", "mov     r12d, ebx", "add     r12d, 1", "movsxd  r12, r12d", "cmp     r12, rdx", "jnb     loc_E4E5"], ["sub~ebp,0", "cmovns~ebx,ebp", "mov~r12d,ebx", "add~r12d,0", "movsxd~r12,r12d", "cmp~r12,rdx", "jnb~FOO"]], [3, 0, 338, 3, 0, 10, 0, 0, 22, 23, 0.025207576765041855, ["mov     ecx, ebp", "mov     r12d, 0", "mov     rax, [rsp+4F8h+maxsize]", "sub     ecx, 1", "cmovns  r12d, ecx", "add     r12d, 1", "sub     rax, i", "movsxd  r12, r12d", "cmp     r12, rax", "jnb     loc_E4E5"], ["mov~ecx,ebp", "mov~r12d,0", "mov~rax,[rsp+0]", "sub~ecx,0", "cmovns~r12d,ecx", "add~r12d,0", "sub~rax,i", "movsxd~r12,r12d", "cmp~r12,rax", "jnb~FOO"]], [0, 0, 338, 0, 0, 3, 0, 0, 24, 24, 0.03501525923652669, ["movsxd  r12, r8d", "cmp     r12, rax", "jnb     loc_E4E5"], ["movsxd~r12,r8d", "cmp~r12,rax", "jnb~FOO"]], [3, 0, 338, 2, 0, 8, 0, 0, 23, 23, 0.027705317716058855, ["mov     edx, ebp", "mov     r12d, 0", "sub     edx, 1", "cmovns  r12d, edx", "add     r12d, 1", "movsxd  r12, r12d", "cmp     r12, rax", "jnb     loc_E4E5"], ["mov~edx,ebp", "mov~r12d,0", "sub~edx,0", "cmovns~r12d,edx", "add~r12d,0", "movsxd~r12,r12d", "cmp~r12,rax", "jnb~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 27, 24, 0.014295943941486368, ["test    r9d, r9d", "jnz     short loc_F53C"], ["test~r9d,r9d", "jnz~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 28, 24, 0.008524713143402723, ["test    ebp, ebp", "jle     short loc_F53C"], ["test~ebp,ebp", "jle~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 6, -1, 0.0, ["mov     byte ptr [rax], 0", "jmp     loc_E4E8"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 6, -1, 0.0, ["add     rsp, 4C8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 1, 338, 0, 0, 2, 0, 1, 7, 21, 0.002992174313334356, ["cmp     al, 20h ; ' '", "jge     short loc_E528"], ["cmp~al,<STR>", "jge~FOO"]], [0, 1, 338, 0, 1, 8, 0, 1, 30, 24, 0.0014278894515199563, ["mov     rdi, [rsp+4F8h+dest]; s", "mov     esi, 20h ; ' '; c", "call    _memset", "movzx   r10d, [rsp+4F8h+var_499]", "mov     r9d, [rsp+4F8h+digits]", "mov     r11d, [rsp+4F8h+pad]", "mov     rcx, [rsp+4F8h+padding]", "mov     [rsp+4F8h+dest], rbp"], ["mov~rdi,<TAG>", "mov~esi,<STR>", "call~FOO", "movzx~r10d,[rsp+0]", "mov~r9d,[rsp+0]", "mov~r11d,[rsp+0]", "mov~rcx,[rsp+0]", "mov~<TAG>,rbp"]], [0, 0, 338, 0, 0, 3, 1, 1, 7, 19, 0.02196818577054882, ["mov     rsi, [rsp+4F8h+dest]", "test    rsi, rsi", "jz      short loc_E549"], ["mov~rsi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [1, 0, 338, 1, 0, 3, 0, 0, 8, 19, 0.0, ["mov     [rsi], al", "add     rsi, 1", "mov     [rsp+4F8h+dest], p"], ["mov~<TAG>,al", "add~rsi,0", "mov~<TAG>,p"]], [1, 0, 338, 1, 0, 2, 0, 0, 8, 18, 0.022002284623122433, ["add     i, 1", "mov     r12, r14"], ["add~i,0", "mov~r12,r14"]], [1, 0, 338, 1, 0, 6, 0, 0, 28, 23, 0.014381191072920395, ["movzx   esi, byte ptr [rsp+4F8h+subfmt]", "mov     rax, [rsp+4F8h+dest]", "mov     r12, r14", "add     rax, 1", "mov     [rax-1], sil", "mov     [rsp+4F8h+dest], rax"], ["movzx~esi,[yte ptr [rsp+0]", "mov~rax,<TAG>", "mov~r12,r14", "add~rax,0", "mov~[rax-1]+0],sil", "mov~<TAG>,rax"]], [0, 0, 338, 0, 0, 3, 1, 1, 26, 22, 0.029171568376724123, ["mov     r14, [rsp+4F8h+dest]", "test    r14, r14", "jz      short loc_F59D"], ["mov~r14,<TAG>", "test~r14,r14", "jz~FOO"]], [0, 0, 338, 1, 0, 3, 0, 1, 11, 18, 0.04729510851959831, ["add     i, rbp", "lea     r12, [r14+_n-1]", "jmp     loc_E550"], ["add~i,rbp", "lea~r12,[r14+0]", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 3, -1, 0.00020459311544166538, ["xor     r15d, r15d", "jmp     loc_E563"], ["xor~r15d,r15d", "jmp~FOO"]], [1, 0, 338, 1, 1, 14, 0, 1, 27, 22, 0.0, ["mov     rdx, r13; n", "mov     esi, 30h ; '0'; c", "mov     rdi, r14; s", "mov     byte ptr [rsp+4F8h+digits], r10b", "mov     [rsp+4F8h+pad], r9d", "mov     dword ptr [rsp+4F8h+padding], r11d", "mov     [rsp+4F8h+subfmt], rcx", "call    _memset", "movzx   r10d, byte ptr [rsp+4F8h+digits]", "mov     r9d, [rsp+4F8h+pad]", "add     rax, r13", "mov     r11d, dword ptr [rsp+4F8h+padding]", "mov     rcx, [rsp+4F8h+subfmt]", "mov     [rsp+4F8h+dest], rax"], ["mov~rdx,r13", "mov~esi,0", "mov~rdi,r14", "mov~[yte ptr [rsp+0],r10b", "mov~[rsp+0],r9d", "mov~[word ptr [rsp+0],r11d", "mov~[rsp+0],rcx", "call~FOO", "movzx~r10d,[yte ptr [rsp+0]", "mov~r9d,[rsp+0]", "add~rax,r13", "mov~r11d,[word ptr [rsp+0]", "mov~rcx,[rsp+0]", "mov~<TAG>,rax"]], [2, 0, 338, 0, 0, 4, 0, 0, 13, 7, 0.6827442756551242, ["lea     eax, [rbx-30h]", "mov     ebp, 0FFFFFFFFh", "cmp     eax, 9", "jbe     short loc_E600"], ["lea~eax,[rbx-30h]+0]", "mov~ebp,0", "cmp~eax,0", "jbe~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 14, 6, 0.682931819344279, ["cmp     cl, 45h ; 'E'", "jz      short loc_E5F0"], ["cmp~cl,0", "jz~FOO"]], [0, 0, 338, 0, 0, 2, 0, 1, 19, 7, 0.009816207184628237, ["mov     r12d, ebx", "jmp     loc_E59E"], ["mov~r12d,ebx", "jmp~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 15, 6, 0.00284725418989651, ["cmp     cl, 4Fh ; 'O'", "jz      short loc_E5F0"], ["cmp~cl,0", "jz~FOO"]], [0, 0, 338, 0, 0, 1, 1, 0, 16, 5, 0.0014278894515199563, ["xor     ebx, ebx"], ["xor~ebx,ebx"]], [0, 0, 338, 2, 0, 5, 1, 1, 27, 21, 0.040633045198029086, ["mov     rax, [rsp+4F8h+maxsize]", "add     r15, r13", "xor     ebp, ebp", "sub     rax, i", "jmp     loc_F068"], ["mov~rax,[rsp+0]", "add~r15,r13", "xor~ebp,ebp", "sub~rax,i", "jmp~FOO"]], [1, 0, 338, 1, 0, 4, 0, 1, 15, 5, 0.6786822498422928, ["movsx   r12d, byte ptr [r14+1]", "add     r14, 1", "mov     ecx, r12d", "jmp     short loc_E5AA"], ["movsx~r12d,[yte ptr [r14+0]", "add~r14,0", "mov~ecx,r12d", "jmp~FOO"]], [0, 0, 338, 0, 0, 3, 1, 1, 23, 22, 0.02466199512386408, ["mov     rax, [rsp+4F8h+dest]", "test    rax, rax", "jz      short loc_F64E"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 24, 23, 0.008516188430259322, ["test    r9d, r9d", "jnz     short loc_F63F"], ["test~r9d,r9d", "jnz~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 25, 23, 0.00284725418989651, ["test    ecx, ecx", "jle     short loc_F63F"], ["test~ecx,ecx", "jle~FOO"]], [0, 0, 338, 0, 0, 1, 1, 0, 14, 10, 0.025147903773038036, ["xor     ebp, ebp"], ["xor~ebp,ebp"]], [1, 0, 338, 0, 0, 6, 0, 1, 15, 9, 0.025386595741053314, ["movsx   ebx, byte ptr [r14+1]", "cmp     ebp, 0CCCCCCCh", "lea     rsi, [r14+1]", "mov     ecx, ebx", "lea     eax, [rbx-30h]", "jg      short loc_E645"], ["movsx~ebx,[yte ptr [r14+0]", "cmp~ebp,0", "lea~rsi,[r14+0]", "mov~ecx,ebx", "lea~eax,[rbx-30h]+0]", "jg~FOO"]], [1, 0, 338, 0, 0, 2, 0, 0, 18, 8, 0.010020800300069903, ["cmp     eax, 9", "jbe     short loc_E602"], ["cmp~eax,0", "jbe~FOO"]], [0, 0, 338, 0, 0, 2, 0, 1, 16, 10, 0.008494876647400815, ["movsx   edx, byte ptr [r14]", "jz      short loc_E640"], ["movsx~edx,<TAG>", "jz~FOO"]], [0, 0, 338, 0, 0, 3, 0, 0, 17, 9, 0.004270881284844765, ["lea     edi, [width+width*4+0]", "mov     r14, rsi", "lea     ebp, [rdx+rdi*2-30h]"], ["lea~edi,[width+0]", "mov~r14,rsi", "lea~ebp,[rdx+0]"]], [1, 0, 338, 0, 0, 2, 0, 1, 17, 9, 0.0014278894515199563, ["cmp     dl, 37h ; '7'", "jle     short loc_E61E"], ["cmp~dl,0", "jle~FOO"]], [2, 0, 338, 1, 0, 6, 0, 1, 17, 9, 0.002860041259611614, ["movsx   ebx, byte ptr [r14+2]", "mov     ebp, 7FFFFFFFh", "add     r14, 2", "mov     ecx, ebx", "lea     eax, [rbx-30h]", "jmp     short loc_E629"], ["movsx~ebx,[yte ptr [r14+0]", "mov~ebp,0", "add~r14,0", "mov~ecx,ebx", "lea~eax,[rbx-30h]+0]", "jmp~FOO"]], [1, 0, 338, 3, 0, 8, 0, 1, 24, 21, 0.024747242255298108, ["mov     rax, [rsp+4F8h+maxsize]", "lea     rcx, [r13+17h]", "add     i, r12", "mov     r11d, 2Dh ; '-'", "mov     r12, r14", "sub     rcx, rbx", "sub     rax, i", "jmp     loc_F068"], ["mov~rax,[rsp+0]", "lea~rcx,[r13+0]", "add~i,r12", "mov~r11d,0", "mov~r12,r14", "sub~rcx,rbx", "sub~rax,i", "jmp~FOO"]], [1, 0, 338, 1, 0, 5, 0, 1, 27, 21, 0.015084479907251121, ["lea     rcx, [r13+17h]", "mov     padding_0, r14", "mov     r11d, 5Fh ; '_'", "sub     rcx, rbx", "jmp     loc_F068"], ["lea~rcx,[r13+0]", "mov~padding_0,r14", "mov~r11d,0", "sub~rcx,rbx", "jmp~FOO"]], [0, 1, 338, 1, 1, 14, 0, 1, 26, 23, 0.0, ["movsxd  _delta_0, ecx", "mov     esi, 20h ; ' '; c", "mov     rdi, rax; s", "mov     rdx, _delta_0; n", "mov     byte ptr [rsp+4F8h+digits], r8b", "mov     byte ptr [rsp+4F8h+pad], r10b", "mov     dword ptr [rsp+4F8h+padding], r9d", "mov     [rsp+4F8h+subfmt], _delta_0", "call    _memset", "mov     rcx, [rsp+4F8h+subfmt]", "movzx   r8d, byte ptr [rsp+4F8h+digits]", "add     [rsp+4F8h+dest], rcx", "movzx   r10d, byte ptr [rsp+4F8h+pad]", "mov     r9d, dword ptr [rsp+4F8h+padding]"], ["movsxd~_delta_0,ecx", "mov~esi,<STR>", "mov~rdi,rax", "mov~rdx,_delta_0", "mov~[yte ptr [rsp+0],r8b", "mov~[yte ptr [rsp+0],r10b", "mov~[word ptr [rsp+0],r9d", "mov~[rsp+0],_delta_0", "call~FOO", "mov~rcx,[rsp+0]", "movzx~r8d,[yte ptr [rsp+0]", "add~<TAG>,rcx", "movzx~r10d,[yte ptr [rsp+0]", "mov~r9d,[word ptr [rsp+0]"]], [1, 0, 338, 0, 0, 1, 0, 0, 19, 22, 0.008456515438255503, ["mov     r9d, 1"], ["mov~r9d,0"]], [1, 0, 338, 1, 0, 4, 0, 0, 25, 22, 0.008567336709119737, ["mov     rax, [rsp+4F8h+dest]", "mov     [rax], r8b", "add     rax, 1", "mov     [rsp+4F8h+dest], p"], ["mov~rax,<TAG>", "mov~<TAG>,r8b", "add~rax,0", "mov~<TAG>,p"]], [0, 0, 338, 0, 0, 3, 1, 1, 10, 19, 0.04717576253559067, ["mov     rdi, [rsp+4F8h+dest]; s", "test    rdi, rdi", "jz      short loc_E6A7"], ["mov~rdi,<TAG>", "test~rdi,rdi", "jz~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 11, 22, 0.014159548531191925, ["test    eax, eax", "jle     short loc_E689"], ["test~eax,eax", "jle~FOO"]], [0, 1, 338, 1, 1, 5, 0, 1, 12, 22, 0.0, ["movsxd  fsize, eax", "mov     esi, 20h ; ' '; c", "mov     rdx, r13; n", "call    _memset", "add     [rsp+4F8h+dest], r13"], ["movsxd~fsize,eax", "mov~esi,<STR>", "mov~rdx,r13", "call~FOO", "add~<TAG>,r13"]], [0, 0, 338, 0, 0, 2, 1, 1, 21, 20, 0.011346393193869026, ["test    ebp, ebp", "jle     short loc_EEB8"], ["test~ebp,ebp", "jle~FOO"]], [0, 0, 338, 0, 1, 1, 0, 1, 13, 20, 0.005677458953506214, ["call    memcpy_uppcase"], ["call~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 21, 20, 0.011346393193869026, ["test    ebp, ebp", "jle     short loc_F6D4"], ["test~ebp,ebp", "jle~FOO"]], [0, 0, 338, 1, 0, 1, 0, 0, 14, 19, 0.014244795662625952, ["add     [rsp+4F8h+dest], r12"], ["add~<TAG>,r12"]], [0, 0, 338, 0, 1, 2, 0, 2, 26, 20, 0.01968356264811689, ["call    memcpy_lowcase", "jmp     loc_E7F4"], ["call~FOO", "jmp~FOO"]], [0, 0, 338, 0, 0, 6, 1, 1, 25, 21, 0.028216800504663016, ["movsxd  rbx, r14d", "test    r8b, r8b", "lea     rsi, [r13+1]; src", "mov     rdx, rbx; len", "mov     rdi, [rsp+4F8h+dest]; dest", "jnz     loc_F66E"], ["movsxd~rbx,r14d", "test~r8b,r8b", "lea~rsi,[r13+0]", "mov~rdx,rbx", "mov~rdi,<TAG>", "jnz~FOO"]], [0, 1, 338, 0, 1, 5, 0, 1, 23, 20, 0.0014278894515199563, ["mov     rdi, [rsp+4F8h+dest]; s", "mov     esi, 20h ; ' '; c", "call    _memset", "movzx   ecx, byte ptr [r14]", "mov     [rsp+4F8h+dest], rbx"], ["mov~rdi,<TAG>", "mov~esi,<STR>", "call~FOO", "movzx~ecx,<TAG>", "mov~<TAG>,rbx"]], [0, 1, 338, 0, 1, 5, 0, 1, 23, 20, 0.0014278894515199563, ["mov     rdi, [rsp+4F8h+dest]; s", "mov     esi, 20h ; ' '; c", "call    _memset", "mov     r10, [rsp+4F8h+padding]", "mov     [rsp+4F8h+dest], rbp"], ["mov~rdi,<TAG>", "mov~esi,<STR>", "call~FOO", "mov~r10,[rsp+0]", "mov~<TAG>,rbp"]], [0, 0, 338, 0, 0, 1, 1, 0, 18, 2, 0.02053461317693326, ["xor     r8d, r8d; jumptable 000000000000E5C4 case 114"], ["xor~r8d,r8d"]], [1, 0, 338, 0, 0, 3, 1, 1, 20, 2, 0.004275143641416466, ["mov     ecx, 70h ; 'p'", "xor     r10d, r10d", "jmp     underlying_strftime"], ["mov~ecx,0", "xor~r10d,r10d", "jmp~FOO"]], [1, 0, 338, 0, 0, 1, 0, 0, 24, 25, 0.0003580379520229144, ["mov     byte ptr [rsp+4F8h+subfmt], 0"], ["mov~[yte ptr [rsp+0],0"]], [0, 0, 338, 0, 0, 2, 0, 0, 18, 23, 0.00816667519137981, ["movzx   eax, byte ptr [r14-1]; jumptable 000000000000E5C4 case 0", "lea     modifier, [r14-1]"], ["movzx~eax,[yte ptr [r14-1]+0]", "lea~modifier,[r14-1]+0]"]], [0, 0, 338, 0, 0, 4, 1, 1, 24, 22, 0.02813155337322899, ["test    ebx, ebx", "movzx   r8d, byte ptr [rsp+4F8h+subfmt]", "movzx   r10d, byte ptr [rsp+4F8h+padding]", "jnz     short loc_E7CF"], ["test~ebx,ebx", "movzx~r8d,[yte ptr [rsp+0]", "movzx~r10d,[yte ptr [rsp+0]", "jnz~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 25, 22, 0.008524713143402723, ["test    edx, edx", "jle     short loc_E7CF"], ["test~edx,edx", "jle~FOO"]], [0, 1, 338, 0, 1, 8, 0, 1, 27, 22, 0.0014278894515199563, ["mov     rdi, [rsp+4F8h+dest]; s", "mov     esi, 20h ; ' '; c", "mov     byte ptr [rsp+4F8h+padding], r10b", "mov     byte ptr [rsp+4F8h+subfmt], r8b", "call    _memset", "movzx   r10d, byte ptr [rsp+4F8h+padding]", "movzx   r8d, byte ptr [rsp+4F8h+subfmt]", "mov     [rsp+4F8h+dest], rbx"], ["mov~rdi,<TAG>", "mov~esi,<STR>", "mov~[yte ptr [rsp+0],r10b", "mov~[yte ptr [rsp+0],r8b", "call~FOO", "movzx~r10d,[yte ptr [rsp+0]", "movzx~r8d,[yte ptr [rsp+0]", "mov~<TAG>,rbx"]], [0, 0, 338, 0, 0, 3, 1, 1, 25, 23, 0.03494706153137947, ["mov     rax, [rsp+4F8h+dest]", "test    rax, rax", "jz      short loc_F777"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 1, 338, 1, 1, 11, 0, 1, 26, 23, 0.0, ["mov     rdx, r12; n", "mov     esi, 20h ; ' '; c", "mov     rdi, rax; s", "mov     byte ptr [rsp+4F8h+digits], r10b", "mov     [rsp+4F8h+pad], r9d", "mov     dword ptr [rsp+4F8h+padding], r8d", "call    _memset", "add     [rsp+4F8h+dest], r12", "movzx   r10d, byte ptr [rsp+4F8h+digits]", "mov     r9d, [rsp+4F8h+pad]", "mov     r8d, dword ptr [rsp+4F8h+padding]"], ["mov~rdx,r12", "mov~esi,<STR>", "mov~rdi,rax", "mov~[yte ptr [rsp+0],r10b", "mov~[rsp+0],r9d", "mov~[word ptr [rsp+0],r8d", "call~FOO", "add~<TAG>,r12", "movzx~r10d,[yte ptr [rsp+0]", "mov~r9d,[rsp+0]", "mov~r8d,[word ptr [rsp+0]"]], [0, 0, 338, 0, 1, 1, 0, 1, 27, 20, 0.0014278894515199563, ["call    _memcpy"], ["call~FOO"]]], "func_feature": [47, 115, 299, 2, 344, 557, 3, 1591, 0.05044, 8, 208], "succs": [[40, 9], [0, 38], [12, 4], [129, 2, 23, 12, 130, 270, 15, 16, 17, 18, 20, 21, 22, 151, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 169, 182, 55, 56, 334, 337, 14, 93, 99, 273, 105, 112, 116, 250], [7], [], [290, 5], [217], [7], [38], [12], [10, 50], [41], [3, 12], [12, 334], [113, 12], [12, 126], [194, 12], [195, 12], [12, 229], [196, 12], [12, 111], [276, 12], [201, 12], [104, 12], [128, 12], [188, 12], [12, 150], [176, 12], [179, 12], [12, 190], [204, 12], [12, 166], [12, 207], [232, 12], [12], [267, 44], [36, 37], [42], [1, 38], [38], [41, 46], [64], [42, 39], [64, 47], [60, 44], [49], [48, 159], [64], [280, 57], [49], [49], [87], [52, 78], [209], [19, 54], [202, 54], [58, 84], [72, 76], [284], [59, 180], [221], [61, 174], [65, 94], [280, 63], [66, 87], [53, 87], [280, 73], [67, 319], [214, 142], [136, 69], [76], [77, 71], [74, 106], [75, 100], [100, 101], [80, 81], [76], [87], [84], [79], [79], [289, 6], [82, 6], [221], [338, 84], [84], [90, 92], [277], [88, 268], [91], [94], [91], [37], [221], [302], [317, 95], [329], [97, 327], [115, 107], [106], [100], [86], [102, 343], [62], [62], [64], [114], [331], [340, 108], [193], [246, 110], [8, 35], [127], [280, 119], [114], [283, 51], [122], [187, 117], [120, 136], [121, 131], [132, 124], [205], [122, 178], [131], [152, 147], [154, 125], [280, 133], [127], [127], [127], [145, 134], [131], [136, 328], [144, 135], [139], [221], [136, 326], [136], [136], [136, 153], [136], [136], [136], [139], [139], [152], [152, 146], [142], [142], [198], [280, 140], [157], [155, 141], [161, 172], [162, 158], [205], [171, 156], [141], [160, 336], [280, 163], [172, 164], [141], [297], [172], [211], [219, 165], [143], [333, 167], [193], [193], [185, 170], [157, 175], [177], [192, 173], [157], [205], [205], [177, 206], [193], [231], [183], [321, 181], [184, 24], [183], [193, 189], [11], [186, 123], [193], [193], [193], [205], [118, 191], [205], [193], [193], [193], [193], [193, 199], [200, 193], [193], [193], [193, 203], [193], [193], [208, 237], [205], [205], [209, 244], [211], [216, 213], [217], [211], [215], [148, 149], [299, 222], [215], [282, 221], [217], [238], [256, 223], [83, 220], [220], [224, 281], [291, 227], [138], [225, 332], [259, 228], [233], [238], [285, 271], [286, 230], [198], [236, 239], [233], [233], [233], [243, 244], [237], [240, 247], [234, 252], [296], [241, 292], [249], [243], [197], [266, 245], [235, 253], [254], [248, 255], [280, 70], [218, 212], [236, 301], [236, 301], [249, 261], [254], [257, 259], [281, 258], [281, 259], [262, 263], [281, 259], [267, 45], [265], [262], [89, 278], [264, 277], [269], [284, 231], [265, 277], [269, 197], [272], [280, 275], [274, 335], [272], [251], [280, 279], [198], [280, 323], [277], [306, 287], [6], [280, 293], [280, 85], [280, 137], [280, 308], [280, 341], [280, 43], [288, 296], [296, 242], [6], [], [281, 260], [296], [294, 295], [295], [221], [297], [306, 300], [221], [83], [306], [302, 311], [304, 307], [302], [305, 307], [13], [64], [13], [309, 318], [322, 310], [320, 322], [312], [96, 314], [312, 303], [315, 316], [313], [96, 315], [313], [64], [64], [322], [24], [318], [298, 324], [98, 325], [98], [226, 138], [329], [168, 143], [298], [86], [330, 103], [138], [143], [251], [251], [285], [11], [339, 331], [331, 109], [331], [68, 342], [68], [86]], "fname": "strftime_case_", "n_num": 344}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[2, 0, 0, 2, 1, 11, 1, 1, 0, 0, 0.0, ["sub     rsp, 10h", "push    ns; ns", "mov     r9d, r8d; ut", "mov     ut, tp; tp", "mov     tp, format; format", "mov     format, maxsize; maxsize", "mov     maxsize, s; s", "xor     edi, edi; upcase", "call    strftime_case_", "add     rsp, 18h", "retn"], ["sub~rsp,0", "push~ns", "mov~r9d,r8d", "mov~ut,tp", "mov~tp,format", "mov~format,maxsize", "mov~maxsize,s", "xor~edi,edi", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 1, 1, 0, 1, 0, 2, 11, 0.0, 0, 2], "succs": [[]], "fname": "nstrftime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O0_ls.ida", "features": [[0, 0, 4, 0, 0, 3, 1, 1, 0, 0, 0.17777777777777778, ["test    r10d, r10d", "movsxd  rax, r10d", "js      short loc_FF32"], ["test~r10d,r10d", "movsxd~rax,r10d", "js~FOO"]], [0, 0, 5, 0, 0, 2, 0, 1, 2, 2, 0.022222222222222223, ["lea     opt_idx, aInvalidSuffixI; \"invalid suffix in %s%s argument `%s'\"", "jmp     short loc_FEDC"], ["lea~opt_idx,<TAG>", "jmp~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 1, 2, 0.061111111111111116, ["cmp     edi, 4", "lea     opt_idx, aInvalidSSArgum; \"invalid %s%s argument `%s'\"", "jz      short loc_FEDC"], ["cmp~edi,0", "lea~opt_idx,<TAG>", "jz~FOO"]], [1, 0, 5, 1, 0, 3, 0, 1, 2, 2, 0.03888888888888889, ["sub     edi, 1", "lea     opt_idx, aSSArgumentSToo; \"%s%s argument `%s' too large\"", "jnz     short loc_FF16"], ["sub~edi,0", "lea~opt_idx,<TAG>", "jnz~FOO"]], [2, 0, 10, 1, 0, 13, 1, 1, 0, 3, 0.0, ["push    r13", "push    r12", "mov     r10d, esi", "push    rbp", "push    rbx", "mov     r12, arg", "sub     rsp, 18h", "mov     rax, fs:28h", "mov     [rsp+38h+var_30], rax", "xor     eax, eax", "cmp     edi, 3", "mov     ebp, cs:exit_failure", "ja      short loc_FF24"], ["push~r13", "push~r12", "mov~r10d,esi", "push~rbp", "push~rbx", "mov~r12,arg", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~edi,0", "mov~ebp,<TAG>", "ja~FOO"]], [1, 0, 2, 1, 0, 6, 0, 1, 3, 0, 0.044444444444444446, ["lea     rbx, off_162E0", "mov     [rsp+38h+var_32], dl", "mov     [rsp+38h+var_31], 0", "lea     r13, [rsp+38h+var_32]", "sub     rbx, rax", "jmp     short loc_FEF3"], ["lea~rbx,<TAG>", "mov~[rsp+0],dl", "mov~[rsp+0],0", "lea~r13,[rsp+0]", "sub~rbx,rax", "jmp~FOO"]], [1, 0, 7, 0, 0, 2, 0, 0, 1, 3, 0.02777777777777778, ["cmp     edi, 2", "jnb     short loc_FF1B"], ["cmp~edi,0", "jnb~FOO"]], [1, 0, 2, 1, 0, 3, 0, 0, 3, -1, 0.044444444444444446, ["shl     rax, 5", "lea     rbx, off_162E0", "mov     r13, [long_options+rax]"], ["shl~rax,0", "lea~rbx,<TAG>", "mov~r13,<TAG>"]], [0, 0, 1, 0, 0, 1, 0, 1, 2, -1, 0.016666666666666666, ["jmp     short loc_FF16"], ["jmp~FOO"]], [1, 0, 1, 0, 2, 11, 3, 2, 4, -1, 0.044444444444444446, ["mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r9, arg", "mov     rdx, rax; format", "mov     r8, r13", "mov     rcx, rbx", "xor     esi, esi; errnum", "mov     edi, ebp; status", "xor     eax, eax", "call    _error"], ["mov~edx,0", "xor~edi,edi", "call~FOO", "mov~r9,arg", "mov~rdx,rax", "mov~r8,r13", "mov~rcx,rbx", "xor~esi,esi", "mov~edi,ebp", "xor~eax,eax", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [3, 5, 10, 3, 11, 15, 1, 48, 0.04343, 6, 4], "succs": [[5, 7], [0], [0, 8], [0, 10], [2, 6], [9], [1, 3], [9], [10], [10], []], "fname": "xstrtol_fatal", "n_num": 11}
